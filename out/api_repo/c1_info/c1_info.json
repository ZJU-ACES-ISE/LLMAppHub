[
  {
    "full_name": "suvansh/CeLLM",
    "name": "CeLLM",
    "description": "applying LLM prompting to spreadsheets",
    "html_url": [
      "https://github.com/suvansh/CeLLM/blob/7426a24ab86efbd664899b07bb6ef3bfb110edfb/consts.gs",
      "https://github.com/suvansh/CeLLM/blob/7426a24ab86efbd664899b07bb6ef3bfb110edfb/all.gs",
      "https://github.com/suvansh/CeLLM/blob/7426a24ab86efbd664899b07bb6ef3bfb110edfb/consts.gs",
      "https://github.com/suvansh/CeLLM/blob/7426a24ab86efbd664899b07bb6ef3bfb110edfb/all.gs",
      "https://github.com/suvansh/CeLLM/blob/7426a24ab86efbd664899b07bb6ef3bfb110edfb/consts.gs"
    ],
    "model": [
      "claude",
      "gemini",
      "openai"
    ],
    "language": [
      "JavaScript",
      "javascript"
    ],
    "fork": false,
    "loc": 114,
    "stars": 22
  },
  {
    "full_name": "godwinjs/GymBuddy",
    "name": "GymBuddy",
    "description": "Gym Assistant chatbot built with GoogleAI, Superbase and langchainJS",
    "html_url": [
      "https://github.com/godwinjs/GymBuddy/blob/5a9c50171292cef35dd16b104b26b7a0e6236a28/setupProxy.js",
      "https://github.com/godwinjs/GymBuddy/blob/5a9c50171292cef35dd16b104b26b7a0e6236a28/main.js",
      "https://github.com/godwinjs/GymBuddy/blob/5a9c50171292cef35dd16b104b26b7a0e6236a28/setupProxy.js"
    ],
    "model": [
      "claude",
      "gemini"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 3066,
    "stars": 3
  },
  {
    "full_name": "tikserziku/dev-guides-new",
    "name": "dev-guides-new",
    "description": "AI Project Generator using Claude API",
    "html_url": [
      "https://github.com/tikserziku/dev-guides-new/blob/4a667898ca99b997440ee2a2d004b59b2bf6cd9d/src/config/production.js",
      "https://github.com/tikserziku/dev-guides-new/blob/4a667898ca99b997440ee2a2d004b59b2bf6cd9d/src/config/development.js",
      "https://github.com/tikserziku/dev-guides-new/blob/4a667898ca99b997440ee2a2d004b59b2bf6cd9d/src/config/index.js",
      "https://github.com/tikserziku/dev-guides-new/blob/4a667898ca99b997440ee2a2d004b59b2bf6cd9d/services/claude.js",
      "https://github.com/tikserziku/dev-guides-new/blob/4a667898ca99b997440ee2a2d004b59b2bf6cd9d/src/config/production.js",
      "https://github.com/tikserziku/dev-guides-new/blob/4a667898ca99b997440ee2a2d004b59b2bf6cd9d/src/config/development.js",
      "https://github.com/tikserziku/dev-guides-new/blob/4a667898ca99b997440ee2a2d004b59b2bf6cd9d/src/config/index.js"
    ],
    "model": [
      "claude",
      "gemini"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 3896,
    "stars": 0
  },
  {
    "full_name": "yongli233/llm-reverse-proxy",
    "name": "llm-reverse-proxy",
    "description": "Basic OpenAI/Anthropic 2-in-1 reverse proxy",
    "html_url": [
      "https://github.com/yongli233/llm-reverse-proxy/blob/10a64c098821a74f9ad31bac6264e4bc82fd6d9e/src/controllers/postComplete.js",
      "https://github.com/yongli233/llm-reverse-proxy/blob/10a64c098821a74f9ad31bac6264e4bc82fd6d9e/src/controllers/postComplete.js"
    ],
    "model": [
      "claude",
      "gemini"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 1723,
    "stars": 1
  },
  {
    "full_name": "iguatemigarin/web-client-anthropic-llm",
    "name": "web-client-anthropic-llm",
    "description": null,
    "html_url": [
      "https://github.com/iguatemigarin/web-client-anthropic-llm/blob/eaa10c138eefe2f18b02bff2bd34178ec936325a/src/apiWorker.js"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 20363,
    "stars": 0
  },
  {
    "full_name": "yutamatsuura/ai-chat-interface",
    "name": "ai-chat-interface",
    "description": "AI-powered chat interface using Claude API",
    "html_url": [
      "https://github.com/yutamatsuura/ai-chat-interface/blob/70bf1bc0d05f4860dcdcf8d9da836976993c5996/server/index.js",
      "https://github.com/yutamatsuura/ai-chat-interface/blob/70bf1bc0d05f4860dcdcf8d9da836976993c5996/server/index.js"
    ],
    "model": [
      "claude",
      "gemini"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 21373,
    "stars": 0
  },
  {
    "full_name": "GuyMitchy/planai",
    "name": "planai",
    "description": "Agent-Zero using instructions from claude to build Planai",
    "html_url": [
      "https://github.com/GuyMitchy/planai/blob/8942525fc6078fe5e3f6f0464fcafbe3fec56903/backend/apiService.js",
      "https://github.com/GuyMitchy/planai/blob/8942525fc6078fe5e3f6f0464fcafbe3fec56903/backend/apiService.js"
    ],
    "model": [
      "claude",
      "gemini"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 17759,
    "stars": 0
  },
  {
    "full_name": "alexandurrr/NextJS-AI-Toolkit",
    "name": "NextJS-AI-Toolkit",
    "description": "Using Next.JS to explore all the OpenAI, and Claude Capabilities",
    "html_url": [
      "https://github.com/alexandurrr/NextJS-AI-Toolkit/blob/4dbdae019d10c88e0e51e0f670fc61687aeb512a/app/api/generate-fact/route.js",
      "https://github.com/alexandurrr/NextJS-AI-Toolkit/blob/4dbdae019d10c88e0e51e0f670fc61687aeb512a/app/api/generate-fact/route.js"
    ],
    "model": [
      "claude",
      "gemini"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 7375,
    "stars": 1
  },
  {
    "full_name": "ezetech/anthropic-gui",
    "name": "anthropic-gui",
    "description": "A user-friendly, feature-rich UI enhancing interaction with Anthropic's Claude AI, enabling model selection, chat saving, and improved prompt editing.",
    "html_url": [
      "https://github.com/ezetech/anthropic-gui/blob/af3cb850a288f91707903be250f51a6b77ac4ce6/public/electron.js",
      "https://github.com/ezetech/anthropic-gui/blob/af3cb850a288f91707903be250f51a6b77ac4ce6/public/electron.js"
    ],
    "model": [
      "claude",
      "gemini"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 5888,
    "stars": 113
  },
  {
    "full_name": "RylandAdams/AutoTaskGenerator",
    "name": "AutoTaskGenerator",
    "description": "Fireflies -> Claude -> Click-up, Automates reviewing a meeting summary and passes it to Claude to parse out the tasks then filters and assigns in Clickup.",
    "html_url": [
      "https://github.com/RylandAdams/AutoTaskGenerator/blob/fe1ac1c0b78fc58151dc26575896b0a941a9a3a6/autotaskgenerator/server/server.js",
      "https://github.com/RylandAdams/AutoTaskGenerator/blob/fe1ac1c0b78fc58151dc26575896b0a941a9a3a6/autotaskgenerator/server/server.js"
    ],
    "model": [
      "claude",
      "gemini"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 36946,
    "stars": 1
  },
  {
    "full_name": "VedaVerse-opensource/chatsphere",
    "name": "chatsphere",
    "description": "Your all-in-one open source AI assistant hub: Access cutting-edge language models through a single platform. Store conversations locally for easy reference, use your own API keys, and enjoy complete privacy . Streamline your AI interactions while maintaining full control and eliminating multiple subscriptions",
    "html_url": [
      "https://github.com/VedaVerse-opensource/chatsphere/blob/7da92a81dce8a9c077303001ce3395e0240ad96c/app/api/claude/route.js",
      "https://github.com/VedaVerse-opensource/chatsphere/blob/7da92a81dce8a9c077303001ce3395e0240ad96c/app/api/claude/route.js"
    ],
    "model": [
      "claude",
      "gemini"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 7798,
    "stars": 7
  },
  {
    "full_name": "snakeying/GPT-Telegram-Bot",
    "name": "GPT-Telegram-Bot",
    "description": "Your own GPT Telegram Bot on Vercel",
    "html_url": [
      "https://github.com/snakeying/GPT-Telegram-Bot/blob/7e1bfa2b109f0353ec20163f7fa4a1f0af810b2d/src/config.js",
      "https://github.com/snakeying/GPT-Telegram-Bot/blob/7e1bfa2b109f0353ec20163f7fa4a1f0af810b2d/src/config.js"
    ],
    "model": [
      "claude",
      "openai"
    ],
    "language": [
      "JavaScript",
      "javascript"
    ],
    "fork": false,
    "loc": 2698,
    "stars": 47
  },
  {
    "full_name": "mloef/ducky-poc",
    "name": "ducky-poc",
    "description": "Three experiments with talking to ChatGPT.  First, based off a talk-to-chatgpt chrome extension. Second, a standalone js page based on the extension. Finally,  a simple python script that runs Silero TTS locally, calls Claude instant for a response, then streams audio from Elevenlabs.",
    "html_url": [
      "https://github.com/mloef/ducky-poc/blob/b033aebfe00d8fb40f84f294d0bae9caf63781de/simple_chat/backend/server.js"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 2369,
    "stars": 0
  },
  {
    "full_name": "Ficlu/ModelrRevolver",
    "name": "ModelrRevolver",
    "description": "LLM API GUI, basic CRUD app in Node and React.",
    "html_url": [
      "https://github.com/Ficlu/ModelrRevolver/blob/9d664fa1af6b11d6b79ccb93473d109d3623a2f9/src/components/chat.js",
      "https://github.com/Ficlu/ModelrRevolver/blob/9d664fa1af6b11d6b79ccb93473d109d3623a2f9/src/server.js",
      "https://github.com/Ficlu/ModelrRevolver/blob/9d664fa1af6b11d6b79ccb93473d109d3623a2f9/src/server.js"
    ],
    "model": [
      "claude",
      "gemini"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 9895,
    "stars": 0
  },
  {
    "full_name": "libaxuan/ChatGPT-Next-Web-3",
    "name": "ChatGPT-Next-Web-3",
    "description": "Next-V3",
    "html_url": [
      "https://github.com/libaxuan/ChatGPT-Next-Web-3/blob/c390b789b2df4d1151e2a93afcf2bba7e016b761/next.config.mjs"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 32686,
    "stars": 0
  },
  {
    "full_name": "SuiYunsy/NextWeb",
    "name": "NextWeb",
    "description": "原项目：https://github.com/ChatGPTNextWeb/ChatGPT-Next-Web",
    "html_url": [
      "https://github.com/SuiYunsy/NextWeb/blob/f251648db10da01ababecd787a7eab29fa203f8e/next.config.mjs"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 25147,
    "stars": 15
  },
  {
    "full_name": "zhou-jian-qq/chatgpt-next-web-langchain",
    "name": "chatgpt-next-web-langchain",
    "description": null,
    "html_url": [
      "https://github.com/zhou-jian-qq/chatgpt-next-web-langchain/blob/1f7cf8ac293dc9a0d8706db2fb18ed1bbf60a199/next.config.mjs"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 46750,
    "stars": 0
  },
  {
    "full_name": "ice-lemon/ChatGPT-Next-Web-LangChain-aixtoolbox",
    "name": "ChatGPT-Next-Web-LangChain-aixtoolbox",
    "description": null,
    "html_url": [
      "https://github.com/ice-lemon/ChatGPT-Next-Web-LangChain-aixtoolbox/blob/498890519e55ab394e373fadf2916c84a934e98b/next.config.mjs"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 51729,
    "stars": 0
  },
  {
    "full_name": "lifenglsf/self_chatgpt-next-web",
    "name": "self_chatgpt-next-web",
    "description": "自用，基于v2版本修改",
    "html_url": [
      "https://github.com/lifenglsf/self_chatgpt-next-web/blob/c5d567430a84b06331b2b077c710903136e4c00e/next.config.mjs"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 26850,
    "stars": 0
  },
  {
    "full_name": "SillyTavern/SillyTavern",
    "name": "SillyTavern",
    "description": "LLM Frontend for Power Users.",
    "html_url": [
      "https://github.com/SillyTavern/SillyTavern/blob/6033c38b199737bf1ba85e0d17c013ef8747a7b0/src/endpoints/anthropic.js",
      "https://github.com/SillyTavern/SillyTavern/blob/6033c38b199737bf1ba85e0d17c013ef8747a7b0/src/endpoints/anthropic.js",
      "https://github.com/SillyTavern/SillyTavern/blob/6033c38b199737bf1ba85e0d17c013ef8747a7b0/src/endpoints/backends/chat-completions.js"
    ],
    "model": [
      "claude",
      "gemini",
      "openai"
    ],
    "language": [
      "JavaScript",
      "javascript"
    ],
    "fork": false,
    "loc": 177452,
    "stars": 15226
  },
  {
    "full_name": "locmaymo/SillyTavern-huggingface",
    "name": "SillyTavern-huggingface",
    "description": null,
    "html_url": [
      "https://github.com/locmaymo/SillyTavern-huggingface/blob/334fb92ac060e474a9248a4d92a14d21c557beb1/src/endpoints/anthropic.js",
      "https://github.com/locmaymo/SillyTavern-huggingface/blob/334fb92ac060e474a9248a4d92a14d21c557beb1/public/scripts/openai.js",
      "https://github.com/locmaymo/SillyTavern-huggingface/blob/334fb92ac060e474a9248a4d92a14d21c557beb1/src/endpoints/anthropic.js",
      "https://github.com/locmaymo/SillyTavern-huggingface/blob/334fb92ac060e474a9248a4d92a14d21c557beb1/src/endpoints/backends/chat-completions.js",
      "https://github.com/locmaymo/SillyTavern-huggingface/blob/334fb92ac060e474a9248a4d92a14d21c557beb1/src/openai-vectors.js",
      "https://github.com/locmaymo/SillyTavern-huggingface/blob/334fb92ac060e474a9248a4d92a14d21c557beb1/src/endpoints/backends/chat-completions.js"
    ],
    "model": [
      "claude",
      "gemini",
      "openai"
    ],
    "language": [
      "JavaScript",
      "javascript"
    ],
    "fork": false,
    "loc": 183062,
    "stars": 2
  },
  {
    "full_name": "gisderdube/auto-commit",
    "name": "auto-commit",
    "description": "automatically create a commit message, commit & push using Anthropic API",
    "html_url": [
      "https://github.com/gisderdube/auto-commit/blob/c6cf062bb1983d2a61909d9e1676dbd2fb933108/main.js"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 228,
    "stars": 1
  },
  {
    "full_name": "utkarsh-umang/LLM-Extensions-sheets",
    "name": "LLM-Extensions-sheets",
    "description": "Scripts that can be added as Extensions on Google Sheets to make LLM calls",
    "html_url": [
      "https://github.com/utkarsh-umang/LLM-Extensions-sheets/blob/750db5329cf77c55c191a60adf233ab6cf694e14/scripts/claude.gs",
      "https://github.com/utkarsh-umang/LLM-Extensions-sheets/blob/750db5329cf77c55c191a60adf233ab6cf694e14/scripts/open-ai.gs"
    ],
    "model": [
      "claude",
      "openai"
    ],
    "language": [
      "JavaScript",
      "javascript"
    ],
    "fork": false,
    "loc": 126,
    "stars": 0
  },
  {
    "full_name": "sandeep20162017/LawAIExpert",
    "name": "LawAIExpert",
    "description": "AI Law expert. LLM model fine tuned for law. Contact Sandeep.Kanao@gmail.com",
    "html_url": [
      "https://github.com/sandeep20162017/LawAIExpert/blob/e9fd6c3fd6555de367cf62b4bd47e5b12008a134/next.config.mjs"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 28395,
    "stars": 0
  },
  {
    "full_name": "eainarafatasif/ChatGPT-Next-Web-main",
    "name": "ChatGPT-Next-Web-main",
    "description": "A cross-platform ChatGPT/Gemini UI (Web / PWA / Linux / Win / MacOS)",
    "html_url": [
      "https://github.com/eainarafatasif/ChatGPT-Next-Web-main/blob/f5129cfcd14abde39ddccf0dc1ef2d6ad1316a62/next.config.mjs"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 35318,
    "stars": 0
  },
  {
    "full_name": "ZhangYichi-ZYc/ChatGPT",
    "name": "ChatGPT",
    "description": "Forked from Yidadaa/ChatGPT-Next-Web",
    "html_url": [
      "https://github.com/ZhangYichi-ZYc/ChatGPT/blob/79ff0787bcba517c5be0c2f7a5d520f6dd568562/next.config.mjs"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 45650,
    "stars": 0
  },
  {
    "full_name": "Definetelynotbranon/Anthropic_API_Checker",
    "name": "Anthropic_API_Checker",
    "description": "Simple script that allows you to check if your Anthropic API keys outputs.",
    "html_url": [
      "https://github.com/Definetelynotbranon/Anthropic_API_Checker/blob/03e407e12d802bd811f11e304094c62b7a68da3f/Claudecheck.js"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 79,
    "stars": 2
  },
  {
    "full_name": "kaiban-ai/kaiban-llm-proxy",
    "name": "kaiban-llm-proxy",
    "description": "Kaiban LLM Proxy provides a proxy implementation for multiple Large Language Model (LLM) providers, including OpenAI, Anthropic, Google Gemini, and Mistral. This proxy allows developers to securely route API requests from the frontend while keeping API keys hidden from client-side code.",
    "html_url": [
      "https://github.com/kaiban-ai/kaiban-llm-proxy/blob/0fd4ebc44acf38c05b33a7930e7e6b1446c63587/app/llm/anthropic/v1/messages/route.js",
      "https://github.com/kaiban-ai/kaiban-llm-proxy/blob/0fd4ebc44acf38c05b33a7930e7e6b1446c63587/app/llm/openai/chat/completions/route.js"
    ],
    "model": [
      "claude",
      "openai"
    ],
    "language": [
      "JavaScript",
      "javascript"
    ],
    "fork": false,
    "loc": 5857,
    "stars": 4
  },
  {
    "full_name": "themaximalist/llm.js",
    "name": "llm.js",
    "description": "Simple LLM library for JavaScript",
    "html_url": [
      "https://github.com/themaximalist/llm.js/blob/0b12de11722349e77cd4636dd5d4db13f685f50d/src/anthropic.js"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 23284,
    "stars": 72
  },
  {
    "full_name": "semajyllek/capture_claude_context",
    "name": "capture_claude_context",
    "description": null,
    "html_url": [
      "https://github.com/semajyllek/capture_claude_context/blob/d882de5fb9ab6b27e3f6abe2e1b8a74de1eb7003/background.js"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 637,
    "stars": 0
  },
  {
    "full_name": "andemengo/Alfred",
    "name": "Alfred",
    "description": "Alfred supercharges your GitHub workflow by auto-generating awesome PR descriptions using AI",
    "html_url": [
      "https://github.com/andemengo/Alfred/blob/a7b2391401746381ee50b0d6d8ba3ffdb81a94cc/background.js"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 900,
    "stars": 0
  },
  {
    "full_name": "huhuhang/bob-plugin-cloudflare",
    "name": "bob-plugin-cloudflare",
    "description": "Azure OpenAI + Cloudflare AI Gateway 进行翻译或润色",
    "html_url": [
      "https://github.com/huhuhang/bob-plugin-cloudflare/blob/bfefe804bec6a9380413b1bd1a56d905680177f2/claude-translate.bobplugin/main.js",
      "https://github.com/huhuhang/bob-plugin-cloudflare/blob/bfefe804bec6a9380413b1bd1a56d905680177f2/claude-translate.bobplugin/main.js"
    ],
    "model": [
      "claude",
      "gemini"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 341,
    "stars": 6
  },
  {
    "full_name": "ToGe3688/ioBroker.ai-toolbox",
    "name": "ioBroker.ai-toolbox",
    "description": "The ioBroker AI Toolbox Adapter is a powerful integration that enables users to create and manage custom AI tools based on LLMs within their ioBroker smart home environment. This adapter supports multiple providers of Large Language Models (LLMs) and a flexible framework for AI-based automation and interaction.",
    "html_url": [
      "https://github.com/ToGe3688/ioBroker.ai-toolbox/blob/4b5328ffd1b36ac0b564a96a0df552a97c700d49/lib/anthropic-ai-provider.js",
      "https://github.com/ToGe3688/ioBroker.ai-toolbox/blob/4b5328ffd1b36ac0b564a96a0df552a97c700d49/lib/openai-ai-provider.js"
    ],
    "model": [
      "claude",
      "openai"
    ],
    "language": [
      "JavaScript",
      "javascript"
    ],
    "fork": false,
    "loc": 12654,
    "stars": 5
  },
  {
    "full_name": "jamesloper/poon-llm",
    "name": "poon-llm",
    "description": "Connect to and stream from any OpenAI/Anthropic API",
    "html_url": [
      "https://github.com/jamesloper/poon-llm/blob/dfd61ad533e79ae55fdfd8ce0768149df775dc15/index.js"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 348,
    "stars": 0
  },
  {
    "full_name": "ikechan8370/chatgpt-plugin",
    "name": "chatgpt-plugin",
    "description": "云崽系机器人的智能聊天插件",
    "html_url": [
      "https://github.com/ikechan8370/chatgpt-plugin/blob/5f6c4e5abb5ff22851577bf789b6046e42e6e36d/client/ClaudeAPIClient.js",
      "https://github.com/ikechan8370/chatgpt-plugin/blob/5f6c4e5abb5ff22851577bf789b6046e42e6e36d/client/ClaudeAPIClient.js",
      "https://github.com/ikechan8370/chatgpt-plugin/blob/5f6c4e5abb5ff22851577bf789b6046e42e6e36d/utils/config.js",
      "https://github.com/ikechan8370/chatgpt-plugin/blob/5f6c4e5abb5ff22851577bf789b6046e42e6e36d/utils/openai/chatgpt-api.js"
    ],
    "model": [
      "claude",
      "gemini",
      "openai"
    ],
    "language": [
      "JavaScript",
      "javascript"
    ],
    "fork": false,
    "loc": 397922,
    "stars": 1058
  },
  {
    "full_name": "orefalo/LLM_Superset.popclipext",
    "name": "LLM_Superset.popclipext",
    "description": null,
    "html_url": [
      "https://github.com/orefalo/LLM_Superset.popclipext/blob/86b7daf00702a2d12988eedf07dba938034a2480/llm-superset.js"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 280,
    "stars": 29
  },
  {
    "full_name": "pacnpal/Claude-code-review",
    "name": "Claude-code-review",
    "description": "GitHub Action for code review using Claude",
    "html_url": [
      "https://github.com/pacnpal/Claude-code-review/blob/a5a4083f00d5aac29eb0bfafe521c6ce4015f457/action.js",
      "https://github.com/pacnpal/Claude-code-review/blob/a5a4083f00d5aac29eb0bfafe521c6ce4015f457/action.js"
    ],
    "model": [
      "claude",
      "gemini"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 26406,
    "stars": 1
  },
  {
    "full_name": "pollinations/pollinations",
    "name": "pollinations",
    "description": "Free Open-Source Image and Text Generation",
    "html_url": [
      "https://github.com/pollinations/pollinations/blob/61e1a730bc0393ba91e024d96e0eb64bbf5e5ecb/text.pollinations.ai/generateTextClaude.js"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 196975,
    "stars": 2132
  },
  {
    "full_name": "IlyaGusev/saiga_bot",
    "name": "saiga_bot",
    "description": "Telegram bot for different language models. Supports system prompts and images",
    "html_url": [
      "https://github.com/IlyaGusev/saiga_bot/blob/60e1347051d0fe322f20858f0eb91d80c9d22fec/scripts/anthropic2openai.js"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 3511,
    "stars": 58
  },
  {
    "full_name": "arihaniyer9/Healthcare-Chatbot-using-LLM",
    "name": "Healthcare-Chatbot-using-LLM",
    "description": null,
    "html_url": [
      "https://github.com/arihaniyer9/Healthcare-Chatbot-using-LLM/blob/1821df7d23fa6e138665f1c58eead253dc3df12a/src/Chat.jsx"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 32231,
    "stars": 0
  },
  {
    "full_name": "BoundaryML/baml",
    "name": "baml",
    "description": "BAML is a language that helps you get structured data from LLMs, with the best DX possible. Works with all languages. Check out the promptfiddle.com playground",
    "html_url": [
      "https://github.com/BoundaryML/baml/blob/e9b4cb05194a09476b954cfa54e365ea461b1642/typescript/fiddle-proxy/server.js"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 413275,
    "stars": 3993
  },
  {
    "full_name": "padolsey/xmllm",
    "name": "xmllm",
    "description": "Simple structured data from any LLM",
    "html_url": [
      "https://github.com/padolsey/xmllm/blob/b2b80b7ac3768aced09492c01446c70a46e1869f/src/PROVIDERS.mjs",
      "https://github.com/padolsey/xmllm/blob/b2b80b7ac3768aced09492c01446c70a46e1869f/tests/Provider.test.mjs",
      "https://github.com/padolsey/xmllm/blob/b2b80b7ac3768aced09492c01446c70a46e1869f/src/PROVIDERS.mjs"
    ],
    "model": [
      "claude",
      "gemini",
      "openai"
    ],
    "language": [
      "JavaScript",
      "javascript"
    ],
    "fork": false,
    "loc": 65330,
    "stars": 41
  },
  {
    "full_name": "j0n0m3/TokenTalk",
    "name": "TokenTalk",
    "description": "Scalable chat app with Claude AI integration, token tracking, syntax highlighting, and Azure Blob Storage for persistent chat history.",
    "html_url": [
      "https://github.com/j0n0m3/TokenTalk/blob/aba47f5dc4f5a0dd99a918d9ab57a3e7a9359d01/server/app.js"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 21250,
    "stars": 0
  },
  {
    "full_name": "briancsparks/js-llm-cli",
    "name": "js-llm-cli",
    "description": null,
    "html_url": [
      "https://github.com/briancsparks/js-llm-cli/blob/9d9df41c6aa347f1aceacfb8a23ee00bc7c5eac7/src/claudeClient.js"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "sh2/extension-summarize-translate-claude",
    "name": "extension-summarize-translate-claude",
    "description": "Chrome extension to summarize and translate web pages. Uses Claude as the backend.",
    "html_url": [
      "https://github.com/sh2/extension-summarize-translate-claude/blob/6d9483ea4ce171d1066dc586e6298c7b301a5051/extension/service-worker.js",
      "https://github.com/sh2/extension-summarize-translate-claude/blob/6d9483ea4ce171d1066dc586e6298c7b301a5051/extension/service-worker.js"
    ],
    "model": [
      "claude",
      "gemini"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 4535,
    "stars": 12
  },
  {
    "full_name": "richardhyy/ice-vscode",
    "name": "ice-vscode",
    "description": "ICE (Integrated Conversational Environment) is a VSCode extension that allows users to chat with and customize language models (LLMs) within their coding environment, manage chat histories, fork conversations, and create custom LLM integrations using JavaScript. Docs: https://ice.leaforest.cc/",
    "html_url": [
      "https://github.com/richardhyy/ice-vscode/blob/39629cc2d87de6957af2c5d495a48d70fdef3d59/providers/Claude/main.js",
      "https://github.com/richardhyy/ice-vscode/blob/39629cc2d87de6957af2c5d495a48d70fdef3d59/providers/Claude/main.js",
      "https://github.com/richardhyy/ice-vscode/blob/39629cc2d87de6957af2c5d495a48d70fdef3d59/providers/OpenAI_Compatible/main.js"
    ],
    "model": [
      "claude",
      "gemini",
      "openai"
    ],
    "language": [
      "JavaScript",
      "javascript"
    ],
    "fork": false,
    "loc": 6781,
    "stars": 6
  },
  {
    "full_name": "tg1482/surf-sage",
    "name": "surf-sage",
    "description": "A chrome extension to chat with any webpage using OpenAI, Claude, or Ollama",
    "html_url": [
      "https://github.com/tg1482/surf-sage/blob/b6b319f8f919829539f17a001eca3be5592e61f9/background.js",
      "https://github.com/tg1482/surf-sage/blob/b6b319f8f919829539f17a001eca3be5592e61f9/background.js"
    ],
    "model": [
      "claude",
      "gemini"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 4134,
    "stars": 3
  },
  {
    "full_name": "cescanue/Claude-interface",
    "name": "Claude-interface",
    "description": "A powerful and elegant web interface for Claude AI that combines enterprise-grade functionality with seamless user experience. Built to maximize the potential of Claude's API while ensuring security and efficiency.",
    "html_url": [
      "https://github.com/cescanue/Claude-interface/blob/1dabf41257882c9ef4d9236aead36442c56549c3/node/src/server.js",
      "https://github.com/cescanue/Claude-interface/blob/1dabf41257882c9ef4d9236aead36442c56549c3/node/src/server.js"
    ],
    "model": [
      "claude",
      "gemini"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 511608,
    "stars": 3
  },
  {
    "full_name": "harperreed/firebase-openai-proxy",
    "name": "firebase-openai-proxy",
    "description": "A simple firebase app that acts as an openai api proxy. Tracks usage, and costs. ",
    "html_url": [
      "https://github.com/harperreed/firebase-openai-proxy/blob/14e7a935835602fea9be98c67f20f2cdf2df19a4/functions/index.js",
      "https://github.com/harperreed/firebase-openai-proxy/blob/14e7a935835602fea9be98c67f20f2cdf2df19a4/functions/index.js",
      "https://github.com/harperreed/firebase-openai-proxy/blob/14e7a935835602fea9be98c67f20f2cdf2df19a4/functions/index.js"
    ],
    "model": [
      "claude",
      "gemini",
      "openai"
    ],
    "language": [
      "JavaScript",
      "javascript"
    ],
    "fork": false,
    "loc": 10798,
    "stars": 1
  },
  {
    "full_name": "stoerr/chatGPTtools",
    "name": "chatGPTtools",
    "description": "Many command line tools, bookmarklets and apps for productivity using the OpenAI chat completion API that models ChatGPT",
    "html_url": [
      "https://github.com/stoerr/chatGPTtools/blob/780c6ed276434a002ad18db2400f794eb592f2de/bin/claude",
      "https://github.com/stoerr/chatGPTtools/blob/780c6ed276434a002ad18db2400f794eb592f2de/bin/claude",
      "https://github.com/stoerr/chatGPTtools/blob/780c6ed276434a002ad18db2400f794eb592f2de/js/hpschatgpt.js",
      "https://github.com/stoerr/chatGPTtools/blob/780c6ed276434a002ad18db2400f794eb592f2de/docs/ChatGptBookmarklet-V1GPT/ChatGPTBookmarklet.js",
      "https://github.com/stoerr/chatGPTtools/blob/780c6ed276434a002ad18db2400f794eb592f2de/docs/dictation/dictation.js"
    ],
    "model": [
      "claude",
      "gemini",
      "openai"
    ],
    "language": [
      "JavaScript",
      "javascript"
    ],
    "fork": false,
    "loc": 10211,
    "stars": 22
  },
  {
    "full_name": "clasen/ModelMix",
    "name": "ModelMix",
    "description": "🧬 ModelMix - Unified API for Diverse AI Language Models.",
    "html_url": [
      "https://github.com/clasen/ModelMix/blob/08dffef1c526395f0eae819880925fa898428f08/index.js"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 3902,
    "stars": 2
  },
  {
    "full_name": "LostAbaddon/Agentverse",
    "name": "Agentverse",
    "description": "A multi-agent AI tool based on Claude",
    "html_url": [
      "https://github.com/LostAbaddon/Agentverse/blob/285b4fd5ebe08589024e31ec19025b005e823446/ai/agent/claude.js",
      "https://github.com/LostAbaddon/Agentverse/blob/285b4fd5ebe08589024e31ec19025b005e823446/ai/agent/claude.js"
    ],
    "model": [
      "claude",
      "gemini"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 14999,
    "stars": 15
  },
  {
    "full_name": "Zaki-1052/GPTPortal",
    "name": "GPTPortal",
    "description": "A feature-rich portal to chat with GPT-4, Claude, Gemini, Mistral, & OpenAI Assistant APIs via a lightweight Node.js web app; supports customizable multimodality for voice, images, & files.",
    "html_url": [
      "https://github.com/Zaki-1052/GPTPortal/blob/dbd854ab62e2357b5e4765c44e5d37bf8438c8bf/server.js",
      "https://github.com/Zaki-1052/GPTPortal/blob/dbd854ab62e2357b5e4765c44e5d37bf8438c8bf/server.js"
    ],
    "model": [
      "claude",
      "gemini"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 272334,
    "stars": 380
  },
  {
    "full_name": "Inc44/CoFlu",
    "name": "CoFlu",
    "description": "CoFlu is a comprehensive text manipulation and comparison tool that allows users to compare two pieces of text, generate text using various AI models, and view differences in both single- and double-column formats. It also includes features for text transformation, audio transcription, and image handling.",
    "html_url": [
      "https://github.com/Inc44/CoFlu/blob/8d777f5361775901a895e177162d9a0f88c2c120/script.js",
      "https://github.com/Inc44/CoFlu/blob/9ae6481f431e741509a9b81f6304ee0144029b5f/script.js",
      "https://github.com/Inc44/CoFlu/blob/ce51da2c11ca97f4b3831ac40fef357adb523b32/script.js"
    ],
    "model": [
      "claude",
      "gemini",
      "openai"
    ],
    "language": [
      "JavaScript",
      "javascript"
    ],
    "fork": false,
    "loc": 6508,
    "stars": 5
  },
  {
    "full_name": "EliasPereirah/OrionChat",
    "name": "OrionChat",
    "description": "Orion is a web-based chat interface that simplifies interactions with multiple AI model providers. ",
    "html_url": [
      "https://github.com/EliasPereirah/OrionChat/blob/7898a07190e3eb2401177d7752925e0f9733d40e/js/script.js"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 12365,
    "stars": 2
  },
  {
    "full_name": "aseichter2007/ClipboardConqueror",
    "name": "ClipboardConqueror",
    "description": "Clipboard Conqueror is a novel copy and paste copilot alternative designed to bring your very own LLM AI assistant to any text field.  ",
    "html_url": [
      "https://github.com/aseichter2007/ClipboardConqueror/blob/2fa32109ab9a484e66396af0b550b023dee4d7ae/setup.js",
      "https://github.com/aseichter2007/ClipboardConqueror/blob/4aee4a8303d8e9cc526416c0235d14f40276c595/setup.js",
      "https://github.com/aseichter2007/ClipboardConqueror/blob/2fa32109ab9a484e66396af0b550b023dee4d7ae/setup.js"
    ],
    "model": [
      "claude",
      "gemini",
      "openai"
    ],
    "language": [
      "JavaScript",
      "javascript"
    ],
    "fork": false,
    "loc": 8826,
    "stars": 406
  },
  {
    "full_name": "SimonPhoenix96/spectral-scribe",
    "name": "spectral-scribe",
    "description": "This Chrome extension provides a powerful suite of AI-driven text analysis tools, leveraging Akash Network powered Llama 3.1 or Anthropics Claude models . It offers various functionalities for processing and analyzing text from YouTube video transcripts, user input and more.",
    "html_url": [
      "https://github.com/SimonPhoenix96/spectral-scribe/blob/da31d87e5bac718f527bedd80d6dd25943bafe1e/popup.js"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 3370,
    "stars": 0
  },
  {
    "full_name": "sschepis/ai-assistant",
    "name": "ai-assistant",
    "description": "Another AI assistant, this one using Claude 3",
    "html_url": [
      "https://github.com/sschepis/ai-assistant/blob/0fec8cd45b90fda99eb6515b515db3734068f227/cli.js"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 9329,
    "stars": 0
  },
  {
    "full_name": "19h/chatbot",
    "name": "chatbot",
    "description": "Telegram bot powered by Claude and .... GPT4 aka EvilCorp SecondPilot",
    "html_url": [
      "https://github.com/19h/chatbot/blob/c9f5e7fc62e5d7415dac9d58c4374e6f27645679/app.js"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 2759,
    "stars": 0
  },
  {
    "full_name": "CaSkade-Automation/LLM4Cap",
    "name": "LLM4Cap",
    "description": "Method for the automated generation of capability ontologies with LLMs and the verification of the results. ",
    "html_url": [
      "https://github.com/CaSkade-Automation/LLM4Cap/blob/e4057bd2a4dc8a7583d07e13357d1c4f95cfb2f0/lib/src/main/java/clients/gpt/GptClient.java",
      "https://github.com/CaSkade-Automation/LLM4Cap/blob/e4057bd2a4dc8a7583d07e13357d1c4f95cfb2f0/lib/src/main/java/clients/gpt/GptClient.java"
    ],
    "model": [
      "claude",
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 2834,
    "stars": 4
  },
  {
    "full_name": "vacuityv/ai-java-sdk",
    "name": "ai-java-sdk",
    "description": "java sdk for ai apis. Support claude ai and google gemini and part of openai (chatgpt). 支持chatgpt/gemini/claude的java sdk。",
    "html_url": [
      "https://github.com/vacuityv/ai-java-sdk/blob/487fb1a2cd0e0af6961450f764ca97adaa275f61/src/main/java/me/vacuity/ai/sdk/claude/ClaudeClient.java",
      "https://github.com/vacuityv/ai-java-sdk/blob/487fb1a2cd0e0af6961450f764ca97adaa275f61/src/main/java/me/vacuity/ai/sdk/openai/OpenaiClient.java"
    ],
    "model": [
      "claude",
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 6732,
    "stars": 42
  },
  {
    "full_name": "rcprcp/ReformatKnowledgeBase",
    "name": "ReformatKnowledgeBase",
    "description": "Reformat Zendesk KB articles using LocalAI or Claude.ai",
    "html_url": [
      "https://github.com/rcprcp/ReformatKnowledgeBase/blob/e3c970908d16d72612fb359a267cd99f1326355b/src/main/java/com/cottagecoders/ReformatKnowledgeBase.java"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 379,
    "stars": 0
  },
  {
    "full_name": "langchain4j/langchain4j",
    "name": "langchain4j",
    "description": "Java version of LangChain",
    "html_url": [
      "https://github.com/langchain4j/langchain4j/blob/e62db38df052702b4ab3170a3c0b214e4dab2075/langchain4j-anthropic/src/main/java/dev/langchain4j/model/anthropic/AnthropicChatModel.java",
      "https://github.com/langchain4j/langchain4j/blob/e62db38df052702b4ab3170a3c0b214e4dab2075/langchain4j-anthropic/src/main/java/dev/langchain4j/model/anthropic/AnthropicStreamingChatModel.java",
      "https://github.com/langchain4j/langchain4j/blob/e62db38df052702b4ab3170a3c0b214e4dab2075/langchain4j-anthropic/src/test/java/dev/langchain4j/model/anthropic/AnthropicChatModelIT.java",
      "https://github.com/langchain4j/langchain4j/blob/e62db38df052702b4ab3170a3c0b214e4dab2075/langchain4j-google-ai-gemini/src/main/java/dev/langchain4j/model/googleai/GeminiService.java",
      "https://github.com/langchain4j/langchain4j/blob/f8cb39550c496b335e048250c2e18edbfe3ce65f/langchain4j-azure-open-ai/src/main/java/dev/langchain4j/model/azure/AzureOpenAiLanguageModel.java",
      "https://github.com/langchain4j/langchain4j/blob/f8cb39550c496b335e048250c2e18edbfe3ce65f/langchain4j-open-ai/src/main/java/dev/langchain4j/model/openai/InternalOpenAiHelper.java"
    ],
    "model": [
      "claude",
      "gemini",
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 197203,
    "stars": 7960
  },
  {
    "full_name": "andrekramer/py-multi-llm",
    "name": "py-multi-llm",
    "description": "Python3 Query multiple LLMs and compare results to suppress  model errors.",
    "html_url": [
      "https://github.com/andrekramer/py-multi-llm/blob/22339a981f270d771ec80894d2b9085de6081556/claud.py",
      "https://github.com/andrekramer/py-multi-llm/blob/5fa37233f687e5babac5995ae1c764900ace5828/gemini.py",
      "https://github.com/andrekramer/py-multi-llm/blob/db2985460deca5d07459441482addfe32eced479/openai.py"
    ],
    "model": [
      "claude",
      "gemini",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2158,
    "stars": 0
  },
  {
    "full_name": "trypromptly/LLMStack",
    "name": "LLMStack",
    "description": "No-code multi-agent framework to build LLM Agents, workflows and applications with your data",
    "html_url": [
      "https://github.com/trypromptly/LLMStack/blob/701348426fadd0536de8b72536216a9c0365f25b/llmstack/processors/providers/anthropic/__init__.py",
      "https://github.com/trypromptly/LLMStack/blob/701348426fadd0536de8b72536216a9c0365f25b/llmstack/common/blocks/llm/openai.py",
      "https://github.com/trypromptly/LLMStack/blob/701348426fadd0536de8b72536216a9c0365f25b/llmstack/apps/runner/agent_controller.py"
    ],
    "model": [
      "claude",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 169947,
    "stars": 1961
  },
  {
    "full_name": "hunarbatra/claude-proxy-flask",
    "name": "claude-proxy-flask",
    "description": "Reverse CORS proxy to access claude via API",
    "html_url": [
      "https://github.com/hunarbatra/claude-proxy-flask/blob/03d0afdd2631d87a2687e6bba144b503f89e9434/api/index.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 56,
    "stars": 1
  },
  {
    "full_name": "mori-mmmm/Seni",
    "name": "Seni",
    "description": "Self-implementig and Self-improving GPT/CLAUDE based Discord Chatbot",
    "html_url": [
      "https://github.com/mori-mmmm/Seni/blob/a43d829d1ca829ef3cf06e703d6418a6369e70fe/ko/claude_util.py",
      "https://github.com/mori-mmmm/Seni/blob/a43d829d1ca829ef3cf06e703d6418a6369e70fe/en/claude_util.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 545,
    "stars": 3
  },
  {
    "full_name": "crypticpy/AgenticClaude",
    "name": "AgenticClaude",
    "description": "An Agent Framework for Claude",
    "html_url": [
      "https://github.com/crypticpy/AgenticClaude/blob/5af9300f3a780030279af926b517f24bb0818171/dependencies.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 465,
    "stars": 1
  },
  {
    "full_name": "PirateforFreedom/TypeAgent",
    "name": "TypeAgent",
    "description": "Luann allows you to create a LLM agent,which has complete memory module (long-term memory, short-term memory) and knowledge module（Various knowledge bases）,eventually become an agent with both EQ and IQ",
    "html_url": [
      "https://github.com/PirateforFreedom/TypeAgent/blob/90d7beb4227ab1da70e7a7dcf707559f7d2461f1/luann/local_llm/constants.py",
      "https://github.com/PirateforFreedom/TypeAgent/blob/90d7beb4227ab1da70e7a7dcf707559f7d2461f1/luann/llm_api/anthropic.py",
      "https://github.com/PirateforFreedom/TypeAgent/blob/90d7beb4227ab1da70e7a7dcf707559f7d2461f1/luann/cli/cli_config.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 30818,
    "stars": 21
  },
  {
    "full_name": "nasir19noor/python-claude",
    "name": "python-claude",
    "description": null,
    "html_url": [
      "https://github.com/nasir19noor/python-claude/blob/637fd2fdbb4ddde2fa16ab45e4d7d14fe5cedcff/app.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 130,
    "stars": 0
  },
  {
    "full_name": "gabacode/yt-tldr",
    "name": "yt-tldr",
    "description": "Summarize YouTube Videos with LLMs",
    "html_url": [
      "https://github.com/gabacode/yt-tldr/blob/9bab816b14a99eed320621442976b740bb63bb74/clients/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 492,
    "stars": 1
  },
  {
    "full_name": "sauravpanda/leanllm",
    "name": "leanllm",
    "description": "A lean and efficient LLM inference router for your applications",
    "html_url": [
      "https://github.com/sauravpanda/leanllm/blob/409c89f553a915639c4d016161eb7861952af3a7/leanllm/config/config.py",
      "https://github.com/sauravpanda/leanllm/blob/409c89f553a915639c4d016161eb7861952af3a7/leanllm/config/config.py"
    ],
    "model": [
      "claude",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1662,
    "stars": 0
  },
  {
    "full_name": "dimagi/open-chat-studio",
    "name": "open-chat-studio",
    "description": "A web based platform for building Chatbots backed by Large Language Models",
    "html_url": [
      "https://github.com/dimagi/open-chat-studio/blob/3794fafbe2773edd41a53af248f2581478240452/apps/service_providers/tests/test_llm_service.py",
      "https://github.com/dimagi/open-chat-studio/blob/3794fafbe2773edd41a53af248f2581478240452/apps/service_providers/tests/test_llm_service.py",
      "https://github.com/dimagi/open-chat-studio/blob/3794fafbe2773edd41a53af248f2581478240452/apps/service_providers/speech_service.py"
    ],
    "model": [
      "claude",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 93994,
    "stars": 23
  },
  {
    "full_name": "nrimsky/LM-exp",
    "name": "LM-exp",
    "description": "LLM experiments done during SERI MATS - focusing on activation steering / interpreting activation spaces",
    "html_url": [
      "https://github.com/nrimsky/LM-exp/blob/31b858d3a302cd307e326b116933c86784a7e961/sycophancy/lib/generate_data/generate_claude.py",
      "https://github.com/nrimsky/LM-exp/blob/31b858d3a302cd307e326b116933c86784a7e961/data_generation/generate_sycophancy_dataset.py",
      "https://github.com/nrimsky/LM-exp/blob/31b858d3a302cd307e326b116933c86784a7e961/sycophancy/lib/evals/eval_sycophancy_claude.py",
      "https://github.com/nrimsky/LM-exp/blob/31b858d3a302cd307e326b116933c86784a7e961/sycophancy/lib/evals/eval_tqa_claude.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 155072,
    "stars": 94
  },
  {
    "full_name": "JFrieden/llm-adversarial-evaluation",
    "name": "llm-adversarial-evaluation",
    "description": null,
    "html_url": [
      "https://github.com/JFrieden/llm-adversarial-evaluation/blob/399e4f006c1339aa56de3b4d682245e4842f80f4/Claude%20Simple%20Interface.py",
      "https://github.com/JFrieden/llm-adversarial-evaluation/blob/399e4f006c1339aa56de3b4d682245e4842f80f4/Claude%20Campaign.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 766,
    "stars": 0
  },
  {
    "full_name": "jgravelle/AutoGroq",
    "name": "AutoGroq",
    "description": "AutoGroq is a groundbreaking tool that revolutionizes the way users interact with Autogen™ and other AI assistants. By dynamically generating tailored teams of AI agents based on your project requirements, AutoGroq eliminates the need for manual configuration and allows you to tackle any question, problem, or project with ease and efficiency.",
    "html_url": [
      "https://github.com/jgravelle/AutoGroq/blob/ecf1639865edbe8e68e163ac72e779cea833a273/AutoGroq/llm_providers/anthropic_provider.py",
      "https://github.com/jgravelle/AutoGroq/blob/ecf1639865edbe8e68e163ac72e779cea833a273/AutoGroq/configs/config.py",
      "https://github.com/jgravelle/AutoGroq/blob/29338dde21fc16a61f2eb0180b1babc549e1aa14/AutoGroq/configs/config.py"
    ],
    "model": [
      "claude",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 8065,
    "stars": 1446
  },
  {
    "full_name": "AzothCorp/AnthropologAI",
    "name": "AnthropologAI",
    "description": "quick gradio chat interface for Anthropic AI's API for Claude, including 100k",
    "html_url": [
      "https://github.com/AzothCorp/AnthropologAI/blob/e05fca6edffd0da36be09a8a28de10cb187bcf87/main.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 50,
    "stars": 14
  },
  {
    "full_name": "Blackhole0909/AutoGenAgen",
    "name": "AutoGenAgen",
    "description": null,
    "html_url": [
      "https://github.com/Blackhole0909/AutoGenAgen/blob/8cdaab12e3e0be9f02d22083af90e0d9c2e35e06/AutoGroq/llm_providers/anthropic_provider.py",
      "https://github.com/Blackhole0909/AutoGenAgen/blob/8cdaab12e3e0be9f02d22083af90e0d9c2e35e06/AutoGroq/configs/config.py",
      "https://github.com/Blackhole0909/AutoGenAgen/blob/8cdaab12e3e0be9f02d22083af90e0d9c2e35e06/AutoGroq/configs/config.py"
    ],
    "model": [
      "claude",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 8066,
    "stars": 0
  },
  {
    "full_name": "RobBlackwell/golem",
    "name": "golem",
    "description": "Golem provides a consistent command line interface to a variety of Large Language Model APIs. Golem is primarily used for batch-mode LLM benchmarking.",
    "html_url": [
      "https://github.com/RobBlackwell/golem/blob/92410fc439ab4dbcf206ca37d460a2db25b02cfd/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1349,
    "stars": 1
  },
  {
    "full_name": "jtsang4/claude-to-chatgpt",
    "name": "claude-to-chatgpt",
    "description": "This project converts the API of Anthropic's Claude model to the OpenAI Chat API format.",
    "html_url": [
      "https://github.com/jtsang4/claude-to-chatgpt/blob/e7dcee758b509b2beb44034357862cdf1f6446c6/claude_to_chatgpt/app.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1055,
    "stars": 1294
  },
  {
    "full_name": "just-record/langchain_practice",
    "name": "langchain_practice",
    "description": "langchain_practice",
    "html_url": [
      "https://github.com/just-record/langchain_practice/blob/19dd8d49a150cfc3ef04b2dca35830dc6ef16578/01.v0.3/01.tutorials/01.get_started/01.chatmodels_prompts/03.using_language_models_anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 11471,
    "stars": 1
  },
  {
    "full_name": "FSoft-AI4Code/HyperAgent",
    "name": "HyperAgent",
    "description": "Generalist Software Agents to Solve Soware Engineering Tasks",
    "html_url": [
      "https://github.com/FSoft-AI4Code/HyperAgent/blob/c3092f2601ab3bf7f890fac2cd5b1290d3f59256/scripts/run_defects4j_fl.py",
      "https://github.com/FSoft-AI4Code/HyperAgent/blob/c3092f2601ab3bf7f890fac2cd5b1290d3f59256/scripts/run_defects4j_apr.py",
      "https://github.com/FSoft-AI4Code/HyperAgent/blob/c3092f2601ab3bf7f890fac2cd5b1290d3f59256/src/hyperagent/build.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 22628,
    "stars": 211
  },
  {
    "full_name": "marhar/llmuri",
    "name": "llmuri",
    "description": "URI support for LLMs",
    "html_url": [
      "https://github.com/marhar/llmuri/blob/3e30df6736b8379abaf4b8c40df3571182db19b9/llmuri/llmuri.py",
      "https://github.com/marhar/llmuri/blob/3e30df6736b8379abaf4b8c40df3571182db19b9/llmuri/llmuri.py",
      "https://github.com/marhar/llmuri/blob/3e30df6736b8379abaf4b8c40df3571182db19b9/tests/test_llmuri.py"
    ],
    "model": [
      "claude",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 503,
    "stars": 0
  },
  {
    "full_name": "nickspeelman/claude_meets_gpt",
    "name": "claude_meets_gpt",
    "description": null,
    "html_url": [
      "https://github.com/nickspeelman/claude_meets_gpt/blob/658ce669f6ca7d78050125bfced3024561ed72f1/claude.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 11310,
    "stars": 2
  },
  {
    "full_name": "johnnygreco/lmao",
    "name": "lmao",
    "description": "🙊 LMFAO: Language Model Adapter Objects",
    "html_url": [
      "https://github.com/johnnygreco/lmao/blob/41dce8e10e9871a522f1642dc0ea808b2e933462/src/lmao/clients/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 966,
    "stars": 0
  },
  {
    "full_name": "jgravelle/Groqqle",
    "name": "Groqqle",
    "description": "Groqqle is a powerful web search and content summarization tool built with Python, leveraging Groq's LLM API for advanced natural language processing. It offers customizable web and news searches, image analysis, and adaptive content summaries, making it ideal for researchers, developers, and anyone seeking enhanced information retrieval.",
    "html_url": [
      "https://github.com/jgravelle/Groqqle/blob/cf55b8639ec9e689185d2205047f9bea5efac258/providers/anthropic_provider.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 6090,
    "stars": 143
  },
  {
    "full_name": "josefkerner/llm_education",
    "name": "llm_education",
    "description": "Education about LLM and NLP possibilites",
    "html_url": [
      "https://github.com/josefkerner/llm_education/blob/0c74c5072969f7b4a8bec038c9c11a99ca5f4af5/model/anthropic/llm_model.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 13901,
    "stars": 0
  },
  {
    "full_name": "Wesius/LLM-Based-Story-Extender",
    "name": "LLM-Based-Story-Extender",
    "description": "Uses LLMs to read and store information about a story, then, reference and use that information when generating future chapters.",
    "html_url": [
      "https://github.com/Wesius/LLM-Based-Story-Extender/blob/d70516fce1b675ae6510f9654e43115c0c706228/anthropic_api.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1197,
    "stars": 0
  },
  {
    "full_name": "danielgross/python-llm-archive",
    "name": "python-llm-archive",
    "description": null,
    "html_url": [
      "https://github.com/danielgross/python-llm-archive/blob/63522fa90bb840d4ac7029f96a0a8322d89df519/llm/api/anthropicapi.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 102549,
    "stars": 41
  },
  {
    "full_name": "jplhughes/evals_template",
    "name": "evals_template",
    "description": "Template for any evals project using LLM apis",
    "html_url": [
      "https://github.com/jplhughes/evals_template/blob/ad76a0fdf3e2095db71bae63f7410a3f7287a736/evals/apis/usage/usage_anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1982,
    "stars": 7
  },
  {
    "full_name": "marcasty/infinity-llm",
    "name": "infinity-llm",
    "description": "use any LLM API with this lightweight wrapper",
    "html_url": [
      "https://github.com/marcasty/infinity-llm/blob/2c256d6b30899eb6a037aa02d47360c227b2e482/infinity_llm/pipeline/api_requests.py",
      "https://github.com/marcasty/infinity-llm/blob/2c256d6b30899eb6a037aa02d47360c227b2e482/infinity_llm/utils%20copy.py",
      "https://github.com/marcasty/infinity-llm/blob/2c256d6b30899eb6a037aa02d47360c227b2e482/infinity_llm/client_factory.py"
    ],
    "model": [
      "claude",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2415,
    "stars": 0
  },
  {
    "full_name": "shamalgithub/asyncllm",
    "name": "asyncllm",
    "description": "A asynchronous wrapper for popular LLM API's ",
    "html_url": [
      "https://github.com/shamalgithub/asyncllm/blob/f2b8960cf1f5768982391bd33bc3fcf75248c4c6/src/providers/anthropic_provider.py",
      "https://github.com/shamalgithub/asyncllm/blob/f2b8960cf1f5768982391bd33bc3fcf75248c4c6/src/providers/openai_provider.py"
    ],
    "model": [
      "claude",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 508,
    "stars": 3
  },
  {
    "full_name": "094459/ragna-bedrock",
    "name": "ragna-bedrock",
    "description": "An example of how to integrate Amazon Bedrock into the open source RAG orchestration tool, Ragna",
    "html_url": [
      "https://github.com/094459/ragna-bedrock/blob/be539fabeee454fadacd0d82e437a117aabfad36/ragna/assistants/_anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4855,
    "stars": 0
  },
  {
    "full_name": "Avidity-Dev/paper_qa",
    "name": "paper_qa",
    "description": "Implementation of paper-qa's RAG system for research paper chat",
    "html_url": [
      "https://github.com/Avidity-Dev/paper_qa/blob/c7616b5f397e4be4e88e697161b0d24d99dd1842/tests/test_queriers.py",
      "https://github.com/Avidity-Dev/paper_qa/blob/c7616b5f397e4be4e88e697161b0d24d99dd1842/tests/test_processors.py",
      "https://github.com/Avidity-Dev/paper_qa/blob/c7616b5f397e4be4e88e697161b0d24d99dd1842/tests/conftest.py",
      "https://github.com/Avidity-Dev/paper_qa/blob/c7616b5f397e4be4e88e697161b0d24d99dd1842/src/process/processors.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "felixbinder/introspection_self_prediction",
    "name": "introspection_self_prediction",
    "description": "Code for experiments on self-prediction as a way to measure introspection in LLMs",
    "html_url": [
      "https://github.com/felixbinder/introspection_self_prediction/blob/421fa65667aeb7954efea66d032e6ca94beefb37/evals/apis/usage/usage_anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 804647,
    "stars": 13
  },
  {
    "full_name": "vatsalsaglani/claudetools",
    "name": "claudetools",
    "description": "Claudetools is a Python library that enables function calling with the Claude 3 family of language models from Anthropic.",
    "html_url": [
      "https://github.com/vatsalsaglani/claudetools/blob/d556c67cb9ca7031afab4f07566b0ddd0078670c/claudetools/completion/async_complete.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 863,
    "stars": 39
  },
  {
    "full_name": "llm-council/llm-council",
    "name": "llm-council",
    "description": "LLMs sitting on a council together to decide, by consensus, who among them is the best.",
    "html_url": [
      "https://github.com/llm-council/llm-council/blob/ab3b47fd04d20a48cb5b451551d43cb2077eaa89/llm_council/processors/services/anthropic_service.py",
      "https://github.com/llm-council/llm-council/blob/ab3b47fd04d20a48cb5b451551d43cb2077eaa89/llm_council/processors/services/openai_service.py"
    ],
    "model": [
      "claude",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 311671,
    "stars": 15
  },
  {
    "full_name": "onehumanbeing/LLMpad",
    "name": "LLMpad",
    "description": null,
    "html_url": [
      "https://github.com/onehumanbeing/LLMpad/blob/abd25ed4354e03c099b27818c45a5c7201ecdb4f/streamlit_app.py",
      "https://github.com/onehumanbeing/LLMpad/blob/abd25ed4354e03c099b27818c45a5c7201ecdb4f/streamlit_app.py"
    ],
    "model": [
      "claude",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 94,
    "stars": 3
  },
  {
    "full_name": "ORESoftware/llms",
    "name": "llms",
    "description": "LLM models for CRMs",
    "html_url": [
      "https://github.com/ORESoftware/llms/blob/862dd64c6b526b59fff14ea4b5bb4f39f9bf2bde/models/claude.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1540,
    "stars": 0
  },
  {
    "full_name": "TJC-LP/spark-instructor",
    "name": "spark-instructor",
    "description": "A library for building structured LLM responses with Spark",
    "html_url": [
      "https://github.com/TJC-LP/spark-instructor/blob/f6a03f68e90f3a71b88c45a9c8e23deacf90c491/tests/factory/test_anthropic_factory.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4190,
    "stars": 4
  },
  {
    "full_name": "edmondsylar/autoGen-GeneralStudy",
    "name": "autoGen-GeneralStudy",
    "description": null,
    "html_url": [
      "https://github.com/edmondsylar/autoGen-GeneralStudy/blob/fc5b171030e741fd788b8cea5e6b45e1b61d799c/ModelConfigs.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 478,
    "stars": 0
  },
  {
    "full_name": "Jai1122/ask-pdf",
    "name": "ask-pdf",
    "description": "Python based OpenAI application that enables users to ask questions on PDF documents",
    "html_url": [
      "https://github.com/Jai1122/ask-pdf/blob/84c4f0a69c786dbe37b91a412f23049bf95ad9b3/ask-pdf-with-claude.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 136,
    "stars": 0
  },
  {
    "full_name": "meghoward/AGI-Alignment-and-Safety-Research",
    "name": "AGI-Alignment-and-Safety-Research",
    "description": "Investigating AGI alignment, safety, and ethical considerations in AI systems through causal reasoning, red-teaming prompts, and fairness evaluations across large language models (LLMs).",
    "html_url": [
      "https://github.com/meghoward/AGI-Alignment-and-Safety-Research/blob/836203d22da98efe68494cbf5135240f48c309c4/Coding/part2_claude_responses.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 16906,
    "stars": 1
  },
  {
    "full_name": "iterabloom/BranchyMcChatFace",
    "name": "BranchyMcChatFace",
    "description": "Chat interface with conversation branching. Explore dialogue trees, visualize chat paths, and interact with multiple LLMs.",
    "html_url": [
      "https://github.com/iterabloom/BranchyMcChatFace/blob/22ce3ac93fafdfb360157fa2485247e2e775a554/backend/app.py",
      "https://github.com/iterabloom/BranchyMcChatFace/blob/22ce3ac93fafdfb360157fa2485247e2e775a554/backend/app.py"
    ],
    "model": [
      "claude",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 889,
    "stars": 4
  },
  {
    "full_name": "acid-design-lab/LLM_classifier_old",
    "name": "LLM_classifier_old",
    "description": null,
    "html_url": [
      "https://github.com/acid-design-lab/LLM_classifier_old/blob/832c60d6fa246114f7a8d152896df93049e08997/claude/claude_funcs.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 562,
    "stars": 0
  },
  {
    "full_name": "langflow-ai/langflow",
    "name": "langflow",
    "description": "Langflow is a low-code app builder for RAG and multi-agent AI applications. It’s Python-based and agnostic to any model, API, or database.",
    "html_url": [
      "https://github.com/langflow-ai/langflow/blob/4fec41fcce74f742efbce3878f83b2d8a912eb93/src/backend/base/langflow/components/models/anthropic.py",
      "https://github.com/langflow-ai/langflow/blob/01c1d47ff518bedfe17ed4930e0f1900dfd8f1fe/src/backend/base/langflow/components/models/openai.py"
    ],
    "model": [
      "claude",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 394543,
    "stars": 72427
  },
  {
    "full_name": "jmikedupont2/openlightllm",
    "name": "openlightllm",
    "description": "fork of litellm that is open source",
    "html_url": [
      "https://github.com/jmikedupont2/openlightllm/blob/0d95c9a2437abc12e44e533a9e1449e3207985b8/litellm/llms/triton.py",
      "https://github.com/jmikedupont2/openlightllm/blob/0d95c9a2437abc12e44e533a9e1449e3207985b8/litellm/llms/anthropic_text.py",
      "https://github.com/jmikedupont2/openlightllm/blob/0d95c9a2437abc12e44e533a9e1449e3207985b8/litellm/llms/anthropic.py",
      "https://github.com/jmikedupont2/openlightllm/blob/0d95c9a2437abc12e44e533a9e1449e3207985b8/litellm/main.py",
      "https://github.com/jmikedupont2/openlightllm/blob/0d95c9a2437abc12e44e533a9e1449e3207985b8/litellm/integrations/helicone.py",
      "https://github.com/jmikedupont2/openlightllm/blob/0d95c9a2437abc12e44e533a9e1449e3207985b8/litellm/llms/azure.py",
      "https://github.com/jmikedupont2/openlightllm/blob/0d95c9a2437abc12e44e533a9e1449e3207985b8/litellm/types/llms/openai.py",
      "https://github.com/jmikedupont2/openlightllm/blob/0d95c9a2437abc12e44e533a9e1449e3207985b8/litellm/batches/main.py",
      "https://github.com/jmikedupont2/openlightllm/blob/0d95c9a2437abc12e44e533a9e1449e3207985b8/litellm/exceptions.py",
      "https://github.com/jmikedupont2/openlightllm/blob/0d95c9a2437abc12e44e533a9e1449e3207985b8/litellm/assistants/main.py",
      "https://github.com/jmikedupont2/openlightllm/blob/0d95c9a2437abc12e44e533a9e1449e3207985b8/litellm/main.py",
      "https://github.com/jmikedupont2/openlightllm/blob/0d95c9a2437abc12e44e533a9e1449e3207985b8/litellm/tests/test_router.py"
    ],
    "model": [
      "claude",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 240560,
    "stars": 20
  },
  {
    "full_name": "eususu/lite-llm-client",
    "name": "lite-llm-client",
    "description": "LLM client library. it communicate with LLM by only REST API",
    "html_url": [
      "https://github.com/eususu/lite-llm-client/blob/5041030cf51c42fbe26408b42293195974d80a5c/lite_llm_client/_config.py",
      "https://github.com/eususu/lite-llm-client/blob/5041030cf51c42fbe26408b42293195974d80a5c/lite_llm_client/_config.py"
    ],
    "model": [
      "claude",
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1241,
    "stars": 0
  },
  {
    "full_name": "uripeled2/llm-client-sdk",
    "name": "llm-client-sdk",
    "description": "SDK for using LLM",
    "html_url": [
      "https://github.com/uripeled2/llm-client-sdk/blob/66af541132c7e84648883dbfae80e8ecc2c0c67e/llm_client/llm_api_client/anthropic_client.py",
      "https://github.com/uripeled2/llm-client-sdk/blob/66af541132c7e84648883dbfae80e8ecc2c0c67e/llm_client/llm_api_client/google_client.py"
    ],
    "model": [
      "claude",
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2265,
    "stars": 79
  },
  {
    "full_name": "chenbin234/Claude-alfred-workflow",
    "name": "Claude-alfred-workflow",
    "description": null,
    "html_url": [
      "https://github.com/chenbin234/Claude-alfred-workflow/blob/7f10cda4795e4d0b442210696e9bcc4ce194a3b9/claude.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 87,
    "stars": 0
  },
  {
    "full_name": "AnandAditya2002/RAG",
    "name": "RAG",
    "description": "Retrieval Augmented Generation",
    "html_url": [
      "https://github.com/AnandAditya2002/RAG/blob/29a056bc26e963b0318bf4b8b9ff579e2a8e313c/langflow/Lib/site-packages/langflow/components/models/AnthropicModel.py",
      "https://github.com/AnandAditya2002/RAG/blob/29a056bc26e963b0318bf4b8b9ff579e2a8e313c/langflow/Lib/site-packages/litellm/llms/anthropic_text.py",
      "https://github.com/AnandAditya2002/RAG/blob/29a056bc26e963b0318bf4b8b9ff579e2a8e313c/langflow/Lib/site-packages/litellm/main.py",
      "https://github.com/AnandAditya2002/RAG/blob/29a056bc26e963b0318bf4b8b9ff579e2a8e313c/langflow/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/base.py",
      "https://github.com/AnandAditya2002/RAG/blob/29a056bc26e963b0318bf4b8b9ff579e2a8e313c/langflow/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/base.py",
      "https://github.com/AnandAditya2002/RAG/blob/29a056bc26e963b0318bf4b8b9ff579e2a8e313c/langflow/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc.py",
      "https://github.com/AnandAditya2002/RAG/blob/29a056bc26e963b0318bf4b8b9ff579e2a8e313c/langflow/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc.py",
      "https://github.com/AnandAditya2002/RAG/blob/29a056bc26e963b0318bf4b8b9ff579e2a8e313c/langflow/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/rest.py",
      "https://github.com/AnandAditya2002/RAG/blob/29a056bc26e963b0318bf4b8b9ff579e2a8e313c/langflow/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc.py",
      "https://github.com/AnandAditya2002/RAG/blob/29a056bc26e963b0318bf4b8b9ff579e2a8e313c/langflow/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/grpc.py",
      "https://github.com/AnandAditya2002/RAG/blob/29a056bc26e963b0318bf4b8b9ff579e2a8e313c/langflow/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/client.py",
      "https://github.com/AnandAditya2002/RAG/blob/29a056bc26e963b0318bf4b8b9ff579e2a8e313c/langflow/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/client.py",
      "https://github.com/AnandAditya2002/RAG/blob/29a056bc26e963b0318bf4b8b9ff579e2a8e313c/langflow/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/client.py",
      "https://github.com/AnandAditya2002/RAG/blob/29a056bc26e963b0318bf4b8b9ff579e2a8e313c/langflow/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/rest.py",
      "https://github.com/AnandAditya2002/RAG/blob/29a056bc26e963b0318bf4b8b9ff579e2a8e313c/langflow/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py",
      "https://github.com/AnandAditya2002/RAG/blob/29a056bc26e963b0318bf4b8b9ff579e2a8e313c/langflow/Lib/site-packages/litellm/integrations/helicone.py",
      "https://github.com/AnandAditya2002/RAG/blob/29a056bc26e963b0318bf4b8b9ff579e2a8e313c/langflow/Lib/site-packages/litellm/llms/azure.py",
      "https://github.com/AnandAditya2002/RAG/blob/29a056bc26e963b0318bf4b8b9ff579e2a8e313c/langflow/Lib/site-packages/flaml/autogen/oai/openai_utils.py",
      "https://github.com/AnandAditya2002/RAG/blob/29a056bc26e963b0318bf4b8b9ff579e2a8e313c/langflow/Lib/site-packages/litellm/llms/azure_text.py",
      "https://github.com/AnandAditya2002/RAG/blob/29a056bc26e963b0318bf4b8b9ff579e2a8e313c/langflow/Lib/site-packages/litellm/batches/main.py",
      "https://github.com/AnandAditya2002/RAG/blob/29a056bc26e963b0318bf4b8b9ff579e2a8e313c/langflow/Lib/site-packages/litellm/llms/openai.py",
      "https://github.com/AnandAditya2002/RAG/blob/29a056bc26e963b0318bf4b8b9ff579e2a8e313c/langflow/Lib/site-packages/litellm/exceptions.py",
      "https://github.com/AnandAditya2002/RAG/blob/29a056bc26e963b0318bf4b8b9ff579e2a8e313c/langflow/Lib/site-packages/autogen/oai/openai_utils.py",
      "https://github.com/AnandAditya2002/RAG/blob/29a056bc26e963b0318bf4b8b9ff579e2a8e313c/langflow/Lib/site-packages/litellm/assistants/main.py",
      "https://github.com/AnandAditya2002/RAG/blob/29a056bc26e963b0318bf4b8b9ff579e2a8e313c/langflow/Lib/site-packages/litellm/main.py",
      "https://github.com/AnandAditya2002/RAG/blob/29a056bc26e963b0318bf4b8b9ff579e2a8e313c/langflow/Lib/site-packages/autogen/oai/completion.py"
    ],
    "model": [
      "claude",
      "gemini",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 7086284,
    "stars": 0
  },
  {
    "full_name": "pymike00/tinychat",
    "name": "tinychat",
    "description": "🔮 TinyChat is a lightweight Desktop client for modern Language Models designed for straightforward comprehension. Supports OpenAI, Anthropic, Meta, Mistral, Google and Cohere APIs.",
    "html_url": [
      "https://github.com/pymike00/tinychat/blob/cade1f9146c7d7a57ec0d0248d13ca3478f8012d/tinychat/llms/anthropic.py",
      "https://github.com/pymike00/tinychat/blob/cade1f9146c7d7a57ec0d0248d13ca3478f8012d/tinychat/llms/google.py",
      "https://github.com/pymike00/tinychat/blob/cade1f9146c7d7a57ec0d0248d13ca3478f8012d/tinychat/llms/openai.py"
    ],
    "model": [
      "claude",
      "gemini",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1414,
    "stars": 51
  },
  {
    "full_name": "DanielBalsam/surv_ai",
    "name": "surv_ai",
    "description": "A framework to empower forecasting using Large Language Models (LLMs)",
    "html_url": [
      "https://github.com/DanielBalsam/surv_ai/blob/f1148453d86c44274c233e13e731e6c906b961d4/surv_ai/lib/llm/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "cyberark/FuzzyAI",
    "name": "FuzzyAI",
    "description": "A powerful tool for automated LLM fuzzing. It is designed to help developers and security researchers identify and mitigate potential security vulnerabilities in their LLM APIs.",
    "html_url": [
      "https://github.com/cyberark/FuzzyAI/blob/2ee9077f3dded2a18b05fce5792d2ef406804767/fuzzy/llm/providers/anthropic/handler.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 287547,
    "stars": 595
  },
  {
    "full_name": "pdx-labs/pdx",
    "name": "pdx",
    "description": "Prompt Engineering and Dev-Ops toolkit for applications powered by Language Models",
    "html_url": [
      "https://github.com/pdx-labs/pdx/blob/c81a4f952a3510fd18f4563bbfb6210a67727408/src/pdx/models/anthropic/client.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4043,
    "stars": 8
  },
  {
    "full_name": "Atharva-Gundawar/GUI-Automation",
    "name": "GUI-Automation",
    "description": "Automating Amazon.com with LLMs",
    "html_url": [
      "https://github.com/Atharva-Gundawar/GUI-Automation/blob/37fa8d497c9ce5b632867d95abfc87625b5f5703/llm_utils.py",
      "https://github.com/Atharva-Gundawar/GUI-Automation/blob/37fa8d497c9ce5b632867d95abfc87625b5f5703/llm_utils.py"
    ],
    "model": [
      "claude",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 368,
    "stars": 1
  },
  {
    "full_name": "brokensandals/maubot-llm",
    "name": "maubot-llm",
    "description": "Maubot plugin for chatting with LLMs.",
    "html_url": [
      "https://github.com/brokensandals/maubot-llm/blob/fc527836acf57cad90020d2dc0127a44ae7f73bd/maubot_llm/backends.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 427,
    "stars": 5
  },
  {
    "full_name": "xingyaoww/code-act",
    "name": "code-act",
    "description": "Official Repo for ICML 2024 paper \"Executable Code Actions Elicit Better LLM Agents\" by Xingyao Wang, Yangyi Chen, Lifan Yuan, Yizhe Zhang, Yunzhu Li, Hao Peng, Heng Ji.",
    "html_url": [
      "https://github.com/xingyaoww/code-act/blob/d607f56c9cfe9e8632ebaf65dcaf2b4b7fe1c6f8/mint/agents/claude_feedback_agent.py",
      "https://github.com/xingyaoww/code-act/blob/d607f56c9cfe9e8632ebaf65dcaf2b4b7fe1c6f8/scripts/eval/m3tooleval/main.py",
      "https://github.com/xingyaoww/code-act/blob/d607f56c9cfe9e8632ebaf65dcaf2b4b7fe1c6f8/scripts/eval/science-world/eval.py",
      "https://github.com/xingyaoww/code-act/blob/d607f56c9cfe9e8632ebaf65dcaf2b4b7fe1c6f8/scripts/eval/miniwob%2B%2B/llm_agent.py"
    ],
    "model": [
      "claude",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 121799,
    "stars": 1239
  },
  {
    "full_name": "flubbid/LLM_API_Helper",
    "name": "LLM_API_Helper",
    "description": null,
    "html_url": [
      "https://github.com/flubbid/LLM_API_Helper/blob/2f4dc0f38d32f4b9db99df99b5e414679e814991/tests/test_llm_service.py",
      "https://github.com/flubbid/LLM_API_Helper/blob/2f4dc0f38d32f4b9db99df99b5e414679e814991/services/llm_service.py"
    ],
    "model": [
      "claude",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "xingyaoww/mint-bench",
    "name": "mint-bench",
    "description": "Official Repo for ICLR 2024 paper MINT: Evaluating LLMs in Multi-turn Interaction with Tools and Language Feedback by Xingyao Wang*, Zihan Wang*, Jiateng Liu, Yangyi Chen, Lifan Yuan, Hao Peng and Heng Ji.",
    "html_url": [
      "https://github.com/xingyaoww/mint-bench/blob/3f7f12c10bf763be1e6dbdeb42feb57624121f61/mint/agents/claude_feedback_agent.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1847849,
    "stars": 124
  },
  {
    "full_name": "TravinDSO/MultiLLM",
    "name": "MultiLLM",
    "description": "Modular frontend supporting any number of LLMs",
    "html_url": [
      "https://github.com/TravinDSO/MultiLLM/blob/7b25aa37dc83e1a76a02eaed076513d388f6e193/llms/claudemulti.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 8314,
    "stars": 2
  },
  {
    "full_name": "ngrinnel/LLMBias",
    "name": "LLMBias",
    "description": null,
    "html_url": [
      "https://github.com/ngrinnel/LLMBias/blob/25bd8dcfa8a902df90f2adb6c917a28492f1fc57/Scripts/Claude100.py",
      "https://github.com/ngrinnel/LLMBias/blob/25bd8dcfa8a902df90f2adb6c917a28492f1fc57/Gender_pronoun/Prompts/pronouns_script.py",
      "https://github.com/ngrinnel/LLMBias/blob/25bd8dcfa8a902df90f2adb6c917a28492f1fc57/Data/Gender_pronoun/Prompts/pronouns_script.py",
      "https://github.com/ngrinnel/LLMBias/blob/25bd8dcfa8a902df90f2adb6c917a28492f1fc57/Scripts/ChatGPT100.py",
      "https://github.com/ngrinnel/LLMBias/blob/25bd8dcfa8a902df90f2adb6c917a28492f1fc57/Gender_pronoun/Prompts/pronouns_script.py"
    ],
    "model": [
      "claude",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 812222,
    "stars": 1
  },
  {
    "full_name": "musa-dev-team/base-rag-proj",
    "name": "base-rag-proj",
    "description": null,
    "html_url": [
      "https://github.com/musa-dev-team/base-rag-proj/blob/6cd3107daf07b0e0820533afb63eb89e4ead01c6/src/llm/anthropic_completion.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 548884,
    "stars": 0
  },
  {
    "full_name": "ptipri047/llm-agents",
    "name": "llm-agents",
    "description": null,
    "html_url": [
      "https://github.com/ptipri047/llm-agents/blob/ad6344c87d4931c0ae2fa1fe91e7b6655f1ac4b7/dspy_code/dspy-main/dsp/modules/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 170261,
    "stars": 0
  },
  {
    "full_name": "hkust-nlp/AgentBoard",
    "name": "AgentBoard",
    "description": "An Analytical Evaluation Board of Multi-turn LLM Agents",
    "html_url": [
      "https://github.com/hkust-nlp/AgentBoard/blob/bb7255e2daf1989069a186dad9e53f70680961db/agentboard/llm/claude.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 471196,
    "stars": 324
  },
  {
    "full_name": "tsinghua-fib-lab/AgentSquare",
    "name": "AgentSquare",
    "description": "The official implementation of the paper \"AgentSquare: Automatic LLM Agent Search in Modular Design Space\"\"",
    "html_url": [
      "https://github.com/tsinghua-fib-lab/AgentSquare/blob/04979c48d1bac7c59eeefd5a2705c12986379be1/tasks/sciworld/agentboard/llm/claude.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4930303,
    "stars": 171
  },
  {
    "full_name": "astonishedrobo/sec-llm-insights",
    "name": "sec-llm-insights",
    "description": "Analyzes 10K Filings Using LLM",
    "html_url": [
      "https://github.com/astonishedrobo/sec-llm-insights/blob/ddb6ffe8a79acd29470bfb0b5f9bab953af339a4/analyzer.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1331,
    "stars": 9
  },
  {
    "full_name": "open-compass/VLMEvalKit",
    "name": "VLMEvalKit",
    "description": "Open-source evaluation toolkit of large vision-language models (LVLMs), support 160+ VLMs, 50+ benchmarks",
    "html_url": [
      "https://github.com/open-compass/VLMEvalKit/blob/e342c817eb61f6ac7a0902e378ec0c8f1308156a/vlmeval/api/claude.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 66633,
    "stars": 2507
  },
  {
    "full_name": "trishcho/Lang-graph_websearch_agent",
    "name": "Lang-graph_websearch_agent",
    "description": "This repository demonstrates the use of LangGraph and various LLM applications to create a Multi-Agent AI system for web search, referred to as a \"Custom WebSearch Agent with LangGraph",
    "html_url": [
      "https://github.com/trishcho/Lang-graph_websearch_agent/blob/16a51bc52261e5091e41403b0ef35ba7a8ed840d/models/claude_models.py",
      "https://github.com/trishcho/Lang-graph_websearch_agent/blob/16a51bc52261e5091e41403b0ef35ba7a8ed840d/models/gemini_models.py"
    ],
    "model": [
      "claude",
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1692,
    "stars": 0
  },
  {
    "full_name": "nishant5790/research_ai",
    "name": "research_ai",
    "description": "LLM system to do research ",
    "html_url": [
      "https://github.com/nishant5790/research_ai/blob/74b7c74ff594245fafb197351a2115aad11ade5f/research_app/models/claude_models.py",
      "https://github.com/nishant5790/research_ai/blob/74b7c74ff594245fafb197351a2115aad11ade5f/research_app/models/gemini_models.py"
    ],
    "model": [
      "claude",
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1840,
    "stars": 0
  },
  {
    "full_name": "tian-minghui/openai-style-api",
    "name": "openai-style-api",
    "description": "支持将openai、claude、azure openai, gemini,kimi, 智谱AI,通义千问,讯飞星火API等模型服务方的调用转为openai方式调用。屏蔽不同大模型API的差异，统一用openai api标准格式使用大模型(Shield the differences between different large model APIs and use large models in a unified openai API standard format)",
    "html_url": [
      "https://github.com/tian-minghui/openai-style-api/blob/98ddab8ececdbd138cf6c346271a32283ce57985/adapters/claude.py",
      "https://github.com/tian-minghui/openai-style-api/blob/98ddab8ececdbd138cf6c346271a32283ce57985/adapters/gemini_adapter.py",
      "https://github.com/tian-minghui/openai-style-api/blob/98ddab8ececdbd138cf6c346271a32283ce57985/adapters/qwen.py"
    ],
    "model": [
      "claude",
      "gemini",
      "qwen"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3127,
    "stars": 412
  },
  {
    "full_name": "simonpierreboucher/LLMFLOW",
    "name": "LLMFLOW",
    "description": null,
    "html_url": [
      "https://github.com/simonpierreboucher/LLMFLOW/blob/f1050e3317d21524a1f78b08d1a141ea01dbc166/src/api/model_api.py",
      "https://github.com/simonpierreboucher/LLMFLOW/blob/f1050e3317d21524a1f78b08d1a141ea01dbc166/src/api/model_api.py"
    ],
    "model": [
      "claude",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 943,
    "stars": 0
  },
  {
    "full_name": "natanaelwf/LLMTest_FindTheOrigin",
    "name": "LLMTest_FindTheOrigin",
    "description": "Testing reasoning degradation in LLMs with variable context windows and information organization.",
    "html_url": [
      "https://github.com/natanaelwf/LLMTest_FindTheOrigin/blob/6264233cab986c37d14f501e65081122f3e3bb29/findtheorigin/run_test.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4432,
    "stars": 4
  },
  {
    "full_name": "explosion/spacy-llm",
    "name": "spacy-llm",
    "description": "🦙 Integrating LLMs into structured NLP pipelines",
    "html_url": [
      "https://github.com/explosion/spacy-llm/blob/117f68963870fd2a4af4c706c40cf223c6ae6fde/spacy_llm/models/rest/anthropic/model.py",
      "https://github.com/explosion/spacy-llm/blob/117f68963870fd2a4af4c706c40cf223c6ae6fde/spacy_llm/models/rest/openai/model.py"
    ],
    "model": [
      "claude",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 15024,
    "stars": 1260
  },
  {
    "full_name": "muximus3/OneAPI",
    "name": "OneAPI",
    "description": "Easily access multiple ChatGPT/Claude APIs with just one line of code/command.",
    "html_url": [
      "https://github.com/muximus3/OneAPI/blob/665556d35c94e411722da5fe0100e191c6a9ef06/oneapi/clients/anthropic_client.py",
      "https://github.com/muximus3/OneAPI/blob/665556d35c94e411722da5fe0100e191c6a9ef06/oneapi/clients/openai_client.py",
      "https://github.com/muximus3/OneAPI/blob/665556d35c94e411722da5fe0100e191c6a9ef06/oneapi/commands/one_api_requst.py"
    ],
    "model": [
      "claude",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1874,
    "stars": 13
  },
  {
    "full_name": "hecrp/Persona-Chatting-Twitch-Bot",
    "name": "Persona-Chatting-Twitch-Bot",
    "description": "Twitchio chatbot that uses AI language models (Claude and GPT) to interact with chat users in different personas.",
    "html_url": [
      "https://github.com/hecrp/Persona-Chatting-Twitch-Bot/blob/21ccd15c16754f64986b2cfe889ed335cead6495/twitch_claude_bot/claude_api.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 7949,
    "stars": 1
  },
  {
    "full_name": "d223302/Over-Reasoning-of-LLMs",
    "name": "Over-Reasoning-of-LLMs",
    "description": "Data and code for EACL'24 paper: Over-Reasoning and Redundant Calculation of Large Language Models",
    "html_url": [
      "https://github.com/d223302/Over-Reasoning-of-LLMs/blob/3bfa71e6af3c08e86007df39e8bb31266a7c3596/inference.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 131285,
    "stars": 10
  },
  {
    "full_name": "jgpeiro/esp32-s3_ai_game_builder",
    "name": "esp32-s3_ai_game_builder",
    "description": "This project uses an LLM to build any game you describe",
    "html_url": [
      "https://github.com/jgpeiro/esp32-s3_ai_game_builder/blob/8bb41f03cd7bc0c0cc447acb0b3eddb2f8c5322b/api_utils.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1978,
    "stars": 2
  },
  {
    "full_name": "Alignment-Lab-AI/Preft-data-claude",
    "name": "Preft-data-claude",
    "description": "a short script to create preference data with claude ",
    "html_url": [
      "https://github.com/Alignment-Lab-AI/Preft-data-claude/blob/f78540d30311151cae7f42e6ddf6bf96c840dc87/preft.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 125,
    "stars": 0
  },
  {
    "full_name": "kavigupta/evallm",
    "name": "evallm",
    "description": null,
    "html_url": [
      "https://github.com/kavigupta/evallm/blob/4d6bb0a90622a4735c94acbfdd429edba8030a21/evallm/llm/llm.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 6172,
    "stars": 0
  },
  {
    "full_name": "digitalwert-devs/claude-pipeline-owu",
    "name": "claude-pipeline-owu",
    "description": "Claude Pipeline for openwebui",
    "html_url": [
      "https://github.com/digitalwert-devs/claude-pipeline-owu/blob/a0f2f6093b26beb6842c37d08e87a90672376f73/claude-proxy.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 141,
    "stars": 1
  },
  {
    "full_name": "BerriAI/litellm",
    "name": "litellm",
    "description": "Python SDK, Proxy Server (LLM Gateway) to call 100+ LLM APIs in OpenAI format - [Bedrock, Azure, OpenAI, VertexAI, Cohere, Anthropic, Sagemaker, HuggingFace, Replicate, Groq]",
    "html_url": [
      "https://github.com/BerriAI/litellm/blob/c3edfc2c92c117281dc1a4039cf5d280f98548f3/litellm/integrations/helicone.py",
      "https://github.com/BerriAI/litellm/blob/c3edfc2c92c117281dc1a4039cf5d280f98548f3/tests/pass_through_unit_tests/test_unit_test_anthropic_pass_through.py",
      "https://github.com/BerriAI/litellm/blob/c3edfc2c92c117281dc1a4039cf5d280f98548f3/tests/pass_through_tests/test_anthropic_passthrough.py",
      "https://github.com/BerriAI/litellm/blob/c3edfc2c92c117281dc1a4039cf5d280f98548f3/litellm/llms/anthropic/completion/transformation.py",
      "https://github.com/BerriAI/litellm/blob/c3edfc2c92c117281dc1a4039cf5d280f98548f3/litellm/proxy/pass_through_endpoints/llm_passthrough_endpoints.py",
      "https://github.com/BerriAI/litellm/blob/c6ca8350469dab8a94ffc4033fc39bd6d5fd207b/litellm/litellm_core_utils/llm_response_utils/get_api_base.py",
      "https://github.com/BerriAI/litellm/blob/888b3a25afa514847deae0307d4b7cc495206564/tests/logging_callback_tests/test_datadog_llm_obs.py",
      "https://github.com/BerriAI/litellm/blob/888b3a25afa514847deae0307d4b7cc495206564/tests/llm_translation/test_openai.py",
      "https://github.com/BerriAI/litellm/blob/888b3a25afa514847deae0307d4b7cc495206564/tests/router_unit_tests/test_router_cooldown_utils.py",
      "https://github.com/BerriAI/litellm/blob/888b3a25afa514847deae0307d4b7cc495206564/litellm/types/llms/openai.py",
      "https://github.com/BerriAI/litellm/blob/888b3a25afa514847deae0307d4b7cc495206564/tests/logging_callback_tests/test_datadog.py",
      "https://github.com/BerriAI/litellm/blob/888b3a25afa514847deae0307d4b7cc495206564/tests/local_testing/test_router_cooldowns.py",
      "https://github.com/BerriAI/litellm/blob/888b3a25afa514847deae0307d4b7cc495206564/litellm/fine_tuning/main.py",
      "https://github.com/BerriAI/litellm/blob/888b3a25afa514847deae0307d4b7cc495206564/tests/local_testing/test_router_retries.py",
      "https://github.com/BerriAI/litellm/blob/888b3a25afa514847deae0307d4b7cc495206564/litellm/files/main.py",
      "https://github.com/BerriAI/litellm/blob/888b3a25afa514847deae0307d4b7cc495206564/litellm/litellm_core_utils/exception_mapping_utils.py",
      "https://github.com/BerriAI/litellm/blob/888b3a25afa514847deae0307d4b7cc495206564/litellm/llms/azure/azure.py"
    ],
    "model": [
      "claude",
      "gemini",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 539696,
    "stars": 23962
  },
  {
    "full_name": "simonpierreboucher/llm-chatbot-function",
    "name": "llm-chatbot-function",
    "description": "At the heart of this project is the ChatBot class, a versatile Python class designed to interact seamlessly with multiple LLM providers. ",
    "html_url": [
      "https://github.com/simonpierreboucher/llm-chatbot-function/blob/6fec4ecd38b95b7dd67b9a4382bc3607d3fcb7b7/llm_utils.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 443,
    "stars": 0
  },
  {
    "full_name": "adityaharishch/llm-microservice",
    "name": "llm-microservice",
    "description": null,
    "html_url": [
      "https://github.com/adityaharishch/llm-microservice/blob/8360a36efd1094efeb424bf35120eee81008c26c/litellm/integrations/helicone.py",
      "https://github.com/adityaharishch/llm-microservice/blob/8360a36efd1094efeb424bf35120eee81008c26c/litellm/llms/triton.py",
      "https://github.com/adityaharishch/llm-microservice/blob/8360a36efd1094efeb424bf35120eee81008c26c/litellm/tests/test_anthropic_prompt_caching.py",
      "https://github.com/adityaharishch/llm-microservice/blob/8360a36efd1094efeb424bf35120eee81008c26c/litellm/llms/anthropic/chat.py",
      "https://github.com/adityaharishch/llm-microservice/blob/8360a36efd1094efeb424bf35120eee81008c26c/litellm/proxy/vertex_ai_endpoints/google_ai_studio_endpoints.py",
      "https://github.com/adityaharishch/llm-microservice/blob/8360a36efd1094efeb424bf35120eee81008c26c/litellm/proxy/openai_files_endpoints/files_endpoints.py",
      "https://github.com/adityaharishch/llm-microservice/blob/8360a36efd1094efeb424bf35120eee81008c26c/litellm/tests/test_alerting.py",
      "https://github.com/adityaharishch/llm-microservice/blob/8360a36efd1094efeb424bf35120eee81008c26c/litellm/exceptions.py",
      "https://github.com/adityaharishch/llm-microservice/blob/8360a36efd1094efeb424bf35120eee81008c26c/litellm/files/main.py",
      "https://github.com/adityaharishch/llm-microservice/blob/8360a36efd1094efeb424bf35120eee81008c26c/litellm/llms/openai.py"
    ],
    "model": [
      "claude",
      "gemini",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1595587,
    "stars": 0
  },
  {
    "full_name": "top-yun/SPARK",
    "name": "SPARK",
    "description": " A benchmark dataset and simple code examples for measuring the perception and reasoning of multi-sensor Vision Language models.",
    "html_url": [
      "https://github.com/top-yun/SPARK/blob/338bad89c88b59c5d34e15b084f17888e895a042/test_closed_models.py",
      "https://github.com/top-yun/SPARK/blob/338bad89c88b59c5d34e15b084f17888e895a042/test_closed_models.py"
    ],
    "model": [
      "claude",
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 579,
    "stars": 18
  },
  {
    "full_name": "mahima-khera-codes/cookbookAi_langchain",
    "name": "cookbookAi_langchain",
    "description": null,
    "html_url": [
      "https://github.com/mahima-khera-codes/cookbookAi_langchain/blob/50e597ae3b03cb235e6c53a6b4c3f07b9332a55c/libs/langchain/tests/unit_tests/chat_models/test_base.py",
      "https://github.com/mahima-khera-codes/cookbookAi_langchain/blob/50e597ae3b03cb235e6c53a6b4c3f07b9332a55c/libs/community/langchain_community/llms/anthropic.py",
      "https://github.com/mahima-khera-codes/cookbookAi_langchain/blob/50e597ae3b03cb235e6c53a6b4c3f07b9332a55c/libs/partners/anthropic/langchain_anthropic/chat_models.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 495092,
    "stars": 0
  },
  {
    "full_name": "compl-ai/compl-ai",
    "name": "compl-ai",
    "description": "An open-source compliance-centered evaluation framework for Generative AI models",
    "html_url": [
      "https://github.com/compl-ai/compl-ai/blob/d640729f65ee3c171684286f164d9388dafbe1ee/src/models/base/anthropic_model.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 228801,
    "stars": 153
  },
  {
    "full_name": "Muhanad-husn/SpecClass",
    "name": "SpecClass",
    "description": "An optimized document classification pipeline that processes and classifies specification documents. It supports similarity search using embeddings, batch processing, and leverages language models like OpenAI, Ollama, and Claude. Easy to set up with Docker and configurable for different models and document types.",
    "html_url": [
      "https://github.com/Muhanad-husn/SpecClass/blob/f522b918cebb65855aeda7938eae2d806e8a74c9/models/llms.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1023,
    "stars": 0
  },
  {
    "full_name": "officialsahyaboutorabi/litellm",
    "name": "litellm",
    "description": null,
    "html_url": [
      "https://github.com/officialsahyaboutorabi/litellm/blob/5cabd1c793c9e69bb27cc077d16d9dec1dcad136/litellm/llms/anthropic.py",
      "https://github.com/officialsahyaboutorabi/litellm/blob/5cabd1c793c9e69bb27cc077d16d9dec1dcad136/litellm/integrations/helicone.py",
      "https://github.com/officialsahyaboutorabi/litellm/blob/5cabd1c793c9e69bb27cc077d16d9dec1dcad136/litellm/llms/openai.py"
    ],
    "model": [
      "claude",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 147416,
    "stars": 0
  },
  {
    "full_name": "ShinChven/doc-gpt",
    "name": "doc-gpt",
    "description": "doc-gpt is a Python CLI tool that processes document files (pdf, docx, pptx, txt, md) using Large Language Models.",
    "html_url": [
      "https://github.com/ShinChven/doc-gpt/blob/ce395ec96f0145471ac02daa4da695e74e0d5f00/src/doc_gpt/config.py",
      "https://github.com/ShinChven/doc-gpt/blob/ce395ec96f0145471ac02daa4da695e74e0d5f00/src/doc_gpt/ai_client.py"
    ],
    "model": [
      "claude",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 701,
    "stars": 5
  },
  {
    "full_name": "smkrv/ha-text-ai",
    "name": "ha-text-ai",
    "description": "Cutting-edge AI solution for Home Assistant. Multi-LLM provider support to transform your smart home experience with intelligent, adaptive automation.",
    "html_url": [
      "https://github.com/smkrv/ha-text-ai/blob/82e1f0c4f9bafbeb2f07c2b6813c5b740ee99cf8/custom_components/ha_text_ai/const.py",
      "https://github.com/smkrv/ha-text-ai/blob/82e1f0c4f9bafbeb2f07c2b6813c5b740ee99cf8/custom_components/ha_text_ai/const.py"
    ],
    "model": [
      "claude",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 5546,
    "stars": 49
  },
  {
    "full_name": "certainforest/llm-modularity",
    "name": "llm-modularity",
    "description": "Final project for BlueDot AIS. :-)",
    "html_url": [
      "https://github.com/certainforest/llm-modularity/blob/315e10b13c9337e2efa8b954e1d3dcd9b44e03a5/notebooks/py_helpers/gpt.py",
      "https://github.com/certainforest/llm-modularity/blob/315e10b13c9337e2efa8b954e1d3dcd9b44e03a5/notebooks/py_helpers/gpt.py"
    ],
    "model": [
      "claude",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 8809,
    "stars": 4
  },
  {
    "full_name": "ps2-controller/anthropic_mock_wrapper",
    "name": "anthropic_mock_wrapper",
    "description": "Lightweight mock wrapper around Anthropic Python client",
    "html_url": [
      "https://github.com/ps2-controller/anthropic_mock_wrapper/blob/53547ac21c550124c7e9eb8758a8a46f5e772350/anthropic_mock_wrapper/wrapper.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 287,
    "stars": 1
  },
  {
    "full_name": "furlat/LLMBooster",
    "name": "LLMBooster",
    "description": "structured generation at rate limits",
    "html_url": [
      "https://github.com/furlat/LLMBooster/blob/e62bd9fbd78d17bb623dd6f22d41073e7d4f7eb4/llmbooster/parallel_inference.py",
      "https://github.com/furlat/LLMBooster/blob/e62bd9fbd78d17bb623dd6f22d41073e7d4f7eb4/llmbooster/parallel_inference.py",
      "https://github.com/furlat/LLMBooster/blob/e62bd9fbd78d17bb623dd6f22d41073e7d4f7eb4/llmbooster/oai_parallel.py"
    ],
    "model": [
      "claude",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1864,
    "stars": 0
  },
  {
    "full_name": "monsternlp/ullm",
    "name": "ullm",
    "description": "A unified interface for local Large Language Models(LLM)  and online LLM providers. ",
    "html_url": [
      "https://github.com/monsternlp/ullm/blob/9d5569feeb7fc0c0210250d4b7808b91dbd79966/ullm/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 6026,
    "stars": 8
  },
  {
    "full_name": "luricodes/Samuraizer",
    "name": "Samuraizer",
    "description": "Large scale generation of serialising data packages of repositorys (local aswell as github integrated). Also generating preprocessed JSONL for LLM training",
    "html_url": [
      "https://github.com/luricodes/Samuraizer/blob/de2125e8587f3246080f068ff009633a3b398357/samuraizer/config/llm_config.py",
      "https://github.com/luricodes/Samuraizer/blob/de2125e8587f3246080f068ff009633a3b398357/samuraizer/config/llm_config.py"
    ],
    "model": [
      "claude",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 11634,
    "stars": 1
  },
  {
    "full_name": "python273/eimi",
    "name": "eimi",
    "description": "Tree Comments / Threaded UI for LLMs | eimi.cns.wtf",
    "html_url": [
      "https://github.com/python273/eimi/blob/9a2eb6c8e3e945fd99fe8c7d9b34b7ea59893564/main.py",
      "https://github.com/python273/eimi/blob/9a2eb6c8e3e945fd99fe8c7d9b34b7ea59893564/app/src/main.js"
    ],
    "model": [
      "claude",
      "openai"
    ],
    "language": [
      "python",
      "javascript"
    ],
    "fork": false,
    "loc": 9386,
    "stars": 7
  },
  {
    "full_name": "Andres77872/magic-llm",
    "name": "magic-llm",
    "description": "Simple llm router",
    "html_url": [
      "https://github.com/Andres77872/magic-llm/blob/bea2c16b70af3191c8c3278f71b1623f8c71d815/magic_llm/engine/engine_anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3190,
    "stars": 6
  },
  {
    "full_name": "836304831/langchain-anal",
    "name": "langchain-anal",
    "description": null,
    "html_url": [
      "https://github.com/836304831/langchain-anal/blob/ac7500fcf2b16ab1e771b86506ac4676d4ea93dc/langchain/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 272174,
    "stars": 13
  },
  {
    "full_name": "humanbright/langchain",
    "name": "langchain",
    "description": "langchain",
    "html_url": [
      "https://github.com/humanbright/langchain/blob/18386db0010a1f045931f966df2f4801007a55c3/langchain/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 273704,
    "stars": 0
  },
  {
    "full_name": "sdpmas/langchain",
    "name": "langchain",
    "description": null,
    "html_url": [
      "https://github.com/sdpmas/langchain/blob/9f0ce5c86557ec2811dfb13375e0e1fda711d00a/langchain/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 265630,
    "stars": 0
  },
  {
    "full_name": "valerie979/langchain",
    "name": "langchain",
    "description": null,
    "html_url": [
      "https://github.com/valerie979/langchain/blob/c3ef8f41b5cf869d2f7a36990335f9822f36e097/langchain/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 271020,
    "stars": 0
  },
  {
    "full_name": "mkoteshai9/langchain",
    "name": "langchain",
    "description": null,
    "html_url": [
      "https://github.com/mkoteshai9/langchain/blob/319f1f1418b2500edd2ebe8bbe7e97bdaf88a1ab/langchain/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 273967,
    "stars": 0
  },
  {
    "full_name": "w1ll14mmoore/https-github.com-hwchase17-langchain",
    "name": "https-github.com-hwchase17-langchain",
    "description": null,
    "html_url": [
      "https://github.com/w1ll14mmoore/https-github.com-hwchase17-langchain/blob/c58d35765daa063b87733e006a4d65e2e1f388d3/langchain/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 273201,
    "stars": 0
  },
  {
    "full_name": "MCG-NJU/p-MoD",
    "name": "p-MoD",
    "description": "p-MoD: Building Mixture-of-Depths MLLMs via Progressive Ratio Decay",
    "html_url": [
      "https://github.com/MCG-NJU/p-MoD/blob/cc853d707712df12f8442aa4f41228ded3b13edd/lmms-eval/lmms_eval/models/claude.py",
      "https://github.com/MCG-NJU/p-MoD/blob/cc853d707712df12f8442aa4f41228ded3b13edd/lmms-eval/lmms_eval/tasks/mmbench/ru_utils.py",
      "https://github.com/MCG-NJU/p-MoD/blob/cc853d707712df12f8442aa4f41228ded3b13edd/lmms-eval/lmms_eval/tasks/mmbench/en_utils.py",
      "https://github.com/MCG-NJU/p-MoD/blob/cc853d707712df12f8442aa4f41228ded3b13edd/lmms-eval/lmms_eval/tasks/internal_eval/d170_en_utils.py",
      "https://github.com/MCG-NJU/p-MoD/blob/cc853d707712df12f8442aa4f41228ded3b13edd/lmms-eval/lmms_eval/tasks/internal_eval/d170_cn_utils.py",
      "https://github.com/MCG-NJU/p-MoD/blob/cc853d707712df12f8442aa4f41228ded3b13edd/lmms-eval/lmms_eval/tasks/llava_wilder/utils.py",
      "https://github.com/MCG-NJU/p-MoD/blob/cc853d707712df12f8442aa4f41228ded3b13edd/lmms-eval/lmms_eval/tasks/wild_vision_bench/utils.py",
      "https://github.com/MCG-NJU/p-MoD/blob/cc853d707712df12f8442aa4f41228ded3b13edd/lmms-eval/lmms_eval/tasks/vitatecs/utils.py",
      "https://github.com/MCG-NJU/p-MoD/blob/cc853d707712df12f8442aa4f41228ded3b13edd/lmms-eval/lmms_eval/models/gpt4v.py",
      "https://github.com/MCG-NJU/p-MoD/blob/cc853d707712df12f8442aa4f41228ded3b13edd/lmms-eval/lmms_eval/tasks/video_detail_description/utils.py",
      "https://github.com/MCG-NJU/p-MoD/blob/cc853d707712df12f8442aa4f41228ded3b13edd/lmms-eval/lmms_eval/tasks/mmvet/utils.py",
      "https://github.com/MCG-NJU/p-MoD/blob/cc853d707712df12f8442aa4f41228ded3b13edd/lmms-eval/lmms_eval/tasks/cvrr/utils.py",
      "https://github.com/MCG-NJU/p-MoD/blob/cc853d707712df12f8442aa4f41228ded3b13edd/lmms-eval/lmms_eval/tasks/worldqa/utils.py",
      "https://github.com/MCG-NJU/p-MoD/blob/cc853d707712df12f8442aa4f41228ded3b13edd/lmms-eval/lmms_eval/tasks/videochatgpt/utils.py"
    ],
    "model": [
      "claude",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 36480,
    "stars": 35
  },
  {
    "full_name": "alea-institute/alea-llm-client",
    "name": "alea-llm-client",
    "description": "ALEA LLM client interface",
    "html_url": [
      "https://github.com/alea-institute/alea-llm-client/blob/c9ae8f8cd9a905c68aeca80d40b0927e36f74ea2/alea_llm_client/llms/models/anthropic_model.py",
      "https://github.com/alea-institute/alea-llm-client/blob/015813ebcf55b27b88af1b55b747873ce83aa80e/alea_llm_client/llms/models/openai_model.py"
    ],
    "model": [
      "claude",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3120,
    "stars": 0
  },
  {
    "full_name": "Je-Cp/jcp-langchain",
    "name": "jcp-langchain",
    "description": null,
    "html_url": [
      "https://github.com/Je-Cp/jcp-langchain/blob/35ea86dfe1e849cabb46afd68a06533d89a9c1a1/libs/partners/anthropic/langchain_anthropic/chat_models.py",
      "https://github.com/Je-Cp/jcp-langchain/blob/35ea86dfe1e849cabb46afd68a06533d89a9c1a1/libs/partners/anthropic/langchain_anthropic/llms.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 401196,
    "stars": 0
  },
  {
    "full_name": "edchen1240/LLM-API-Python-Quick-Start",
    "name": "LLM-API-Python-Quick-Start",
    "description": "This repository includes working basic API functions to connect to ChatGPT by OpenAI, Gemini by Google Deepmind, and Claude by Anthropic.",
    "html_url": [
      "https://github.com/edchen1240/LLM-API-Python-Quick-Start/blob/3358b76d27c7ffcb64b822fe1aafa3b30450e33b/LLM_00_module_1_API.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 671,
    "stars": 1
  },
  {
    "full_name": "KrishayNair/RAG_Chatbot",
    "name": "RAG_Chatbot",
    "description": null,
    "html_url": [
      "https://github.com/KrishayNair/RAG_Chatbot/blob/91d7aae1303b29f105e2a7bdac848e2aa4010aa0/myenv/Lib/site-packages/litellm/llms/anthropic_text.py",
      "https://github.com/KrishayNair/RAG_Chatbot/blob/91d7aae1303b29f105e2a7bdac848e2aa4010aa0/myenv/Lib/site-packages/langchain_anthropic/chat_models.py",
      "https://github.com/KrishayNair/RAG_Chatbot/blob/91d7aae1303b29f105e2a7bdac848e2aa4010aa0/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/cache_service/transports/base.py",
      "https://github.com/KrishayNair/RAG_Chatbot/blob/91d7aae1303b29f105e2a7bdac848e2aa4010aa0/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/base.py",
      "https://github.com/KrishayNair/RAG_Chatbot/blob/91d7aae1303b29f105e2a7bdac848e2aa4010aa0/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc.py",
      "https://github.com/KrishayNair/RAG_Chatbot/blob/91d7aae1303b29f105e2a7bdac848e2aa4010aa0/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/grpc.py",
      "https://github.com/KrishayNair/RAG_Chatbot/blob/91d7aae1303b29f105e2a7bdac848e2aa4010aa0/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc.py",
      "https://github.com/KrishayNair/RAG_Chatbot/blob/91d7aae1303b29f105e2a7bdac848e2aa4010aa0/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/grpc.py",
      "https://github.com/KrishayNair/RAG_Chatbot/blob/91d7aae1303b29f105e2a7bdac848e2aa4010aa0/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/grpc.py",
      "https://github.com/KrishayNair/RAG_Chatbot/blob/91d7aae1303b29f105e2a7bdac848e2aa4010aa0/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/base.py",
      "https://github.com/KrishayNair/RAG_Chatbot/blob/91d7aae1303b29f105e2a7bdac848e2aa4010aa0/myenv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/grpc.py",
      "https://github.com/KrishayNair/RAG_Chatbot/blob/91d7aae1303b29f105e2a7bdac848e2aa4010aa0/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/transports/rest.py",
      "https://github.com/KrishayNair/RAG_Chatbot/blob/91d7aae1303b29f105e2a7bdac848e2aa4010aa0/myenv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/rest.py",
      "https://github.com/KrishayNair/RAG_Chatbot/blob/91d7aae1303b29f105e2a7bdac848e2aa4010aa0/myenv/Lib/site-packages/litellm/llms/vertex_httpx.py",
      "https://github.com/KrishayNair/RAG_Chatbot/blob/91d7aae1303b29f105e2a7bdac848e2aa4010aa0/myenv/Lib/site-packages/langflow/components/models/OpenAIModel.py",
      "https://github.com/KrishayNair/RAG_Chatbot/blob/91d7aae1303b29f105e2a7bdac848e2aa4010aa0/myenv/Lib/site-packages/litellm/integrations/helicone.py",
      "https://github.com/KrishayNair/RAG_Chatbot/blob/91d7aae1303b29f105e2a7bdac848e2aa4010aa0/myenv/Lib/site-packages/flaml/autogen/oai/openai_utils.py",
      "https://github.com/KrishayNair/RAG_Chatbot/blob/91d7aae1303b29f105e2a7bdac848e2aa4010aa0/myenv/Lib/site-packages/litellm/batches/main.py",
      "https://github.com/KrishayNair/RAG_Chatbot/blob/91d7aae1303b29f105e2a7bdac848e2aa4010aa0/myenv/Lib/site-packages/litellm/types/llms/openai.py",
      "https://github.com/KrishayNair/RAG_Chatbot/blob/91d7aae1303b29f105e2a7bdac848e2aa4010aa0/myenv/Lib/site-packages/litellm/proxy/openai_files_endpoints/files_endpoints.py",
      "https://github.com/KrishayNair/RAG_Chatbot/blob/91d7aae1303b29f105e2a7bdac848e2aa4010aa0/myenv/Lib/site-packages/litellm/files/main.py",
      "https://github.com/KrishayNair/RAG_Chatbot/blob/91d7aae1303b29f105e2a7bdac848e2aa4010aa0/myenv/Lib/site-packages/litellm/exceptions.py",
      "https://github.com/KrishayNair/RAG_Chatbot/blob/91d7aae1303b29f105e2a7bdac848e2aa4010aa0/myenv/Lib/site-packages/litellm/tests/test_alerting.py",
      "https://github.com/KrishayNair/RAG_Chatbot/blob/91d7aae1303b29f105e2a7bdac848e2aa4010aa0/myenv/Lib/site-packages/autogen/oai/openai_utils.py",
      "https://github.com/KrishayNair/RAG_Chatbot/blob/91d7aae1303b29f105e2a7bdac848e2aa4010aa0/myenv/Lib/site-packages/litellm/llms/openai.py",
      "https://github.com/KrishayNair/RAG_Chatbot/blob/91d7aae1303b29f105e2a7bdac848e2aa4010aa0/myenv/Lib/site-packages/autogen/oai/completion.py",
      "https://github.com/KrishayNair/RAG_Chatbot/blob/91d7aae1303b29f105e2a7bdac848e2aa4010aa0/myenv/Lib/site-packages/litellm/tests/test_router.py"
    ],
    "model": [
      "claude",
      "gemini",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 7689530,
    "stars": 0
  },
  {
    "full_name": "lordpython/new-llm",
    "name": "new-llm",
    "description": null,
    "html_url": [
      "https://github.com/lordpython/new-llm/blob/948e6ccb89571ff8e5b48f947a93fd51d9849cbc/litellm/llms/anthropic_text.py",
      "https://github.com/lordpython/new-llm/blob/948e6ccb89571ff8e5b48f947a93fd51d9849cbc/litellm/llms/anthropic.py",
      "https://github.com/lordpython/new-llm/blob/948e6ccb89571ff8e5b48f947a93fd51d9849cbc/litellm/main.py",
      "https://github.com/lordpython/new-llm/blob/c2d2c4fb93e453752a45ca0d264ade5de9da195b/litellm/llms/vertex_httpx.py",
      "https://github.com/lordpython/new-llm/blob/948e6ccb89571ff8e5b48f947a93fd51d9849cbc/litellm/litellm_core_utils/exception_mapping_utils.py",
      "https://github.com/lordpython/new-llm/blob/948e6ccb89571ff8e5b48f947a93fd51d9849cbc/litellm/integrations/helicone.py",
      "https://github.com/lordpython/new-llm/blob/948e6ccb89571ff8e5b48f947a93fd51d9849cbc/litellm/types/llms/openai.py",
      "https://github.com/lordpython/new-llm/blob/948e6ccb89571ff8e5b48f947a93fd51d9849cbc/litellm/batches/main.py",
      "https://github.com/lordpython/new-llm/blob/948e6ccb89571ff8e5b48f947a93fd51d9849cbc/litellm/llms/azure.py",
      "https://github.com/lordpython/new-llm/blob/948e6ccb89571ff8e5b48f947a93fd51d9849cbc/litellm/exceptions.py",
      "https://github.com/lordpython/new-llm/blob/948e6ccb89571ff8e5b48f947a93fd51d9849cbc/litellm/tests/test_alerting.py",
      "https://github.com/lordpython/new-llm/blob/948e6ccb89571ff8e5b48f947a93fd51d9849cbc/litellm/llms/openai.py",
      "https://github.com/lordpython/new-llm/blob/948e6ccb89571ff8e5b48f947a93fd51d9849cbc/litellm/assistants/main.py",
      "https://github.com/lordpython/new-llm/blob/948e6ccb89571ff8e5b48f947a93fd51d9849cbc/litellm/main.py",
      "https://github.com/lordpython/new-llm/blob/948e6ccb89571ff8e5b48f947a93fd51d9849cbc/litellm/tests/test_router.py"
    ],
    "model": [
      "claude",
      "gemini",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "LeBlancProductions/langchain",
    "name": "langchain",
    "description": null,
    "html_url": [
      "https://github.com/LeBlancProductions/langchain/blob/454998c1fb8abcba01014f0693af37463cc7a938/libs/langchain/langchain/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 293406,
    "stars": 0
  },
  {
    "full_name": "aryanyadav-dev/LLM-aggregator",
    "name": "LLM-aggregator",
    "description": "This software integrates multiple language models like GPT-4, Claude, and Gemini, providing a dynamic user experience with advanced Framer Motion animations. It supports seamless model selection and response generation.",
    "html_url": [
      "https://github.com/aryanyadav-dev/LLM-aggregator/blob/e56ade957e117044e573e60bc7c34ef785621187/app.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 13057,
    "stars": 0
  },
  {
    "full_name": "myeon9h/PlanRAG",
    "name": "PlanRAG",
    "description": "Repository for “PlanRAG: A Plan-then-Retrieval Augmented Generation for Generative Large Language Models as Decision Makers”, NAACL24",
    "html_url": [
      "https://github.com/myeon9h/PlanRAG/blob/0bf45ff05acbdc999c0d49f76fbe7ece156e6ef6/src/langchain/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 204425,
    "stars": 138
  },
  {
    "full_name": "jnorderia82/langchain-ai-langchain",
    "name": "langchain-ai-langchain",
    "description": null,
    "html_url": [
      "https://github.com/jnorderia82/langchain-ai-langchain/blob/e99ef12cb1e801e2834244505986ce3fa8dfda33/libs/langchain/langchain/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 206824,
    "stars": 0
  },
  {
    "full_name": "Retrofiyer/MediWiki",
    "name": "MediWiki",
    "description": "Aplicación médica usando Langchain",
    "html_url": [
      "https://github.com/Retrofiyer/MediWiki/blob/0dd9ab8ac310d710c01ac9ebc990bdf945c9417d/src/server/venv/Lib/site-packages/langchain/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 750144,
    "stars": 0
  },
  {
    "full_name": "karman103/multiplechat-pdf-llm",
    "name": "multiplechat-pdf-llm",
    "description": null,
    "html_url": [
      "https://github.com/karman103/multiplechat-pdf-llm/blob/a664b1029b92c5fc48132690e61298eecd6354ed/multichat/Lib/site-packages/langchain/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 323109,
    "stars": 0
  },
  {
    "full_name": "LeafarCoder/llm-experiments",
    "name": "llm-experiments",
    "description": null,
    "html_url": [
      "https://github.com/LeafarCoder/llm-experiments/blob/af57555a710933ffc6104ba2c9a0f7f9e6453335/hugging-face%20llms/.venv/Lib/site-packages/langchain/llms/anthropic.py",
      "https://github.com/LeafarCoder/llm-experiments/blob/af57555a710933ffc6104ba2c9a0f7f9e6453335/youtube-summarize/openai-chatgpt-chrome-extension-main/background.js",
      "https://github.com/LeafarCoder/llm-experiments/blob/af57555a710933ffc6104ba2c9a0f7f9e6453335/youtube-summarize/youtube-summarizer-extension/content.js"
    ],
    "model": [
      "claude",
      "openai"
    ],
    "language": [
      "python",
      "javascript"
    ],
    "fork": false,
    "loc": 705648,
    "stars": 0
  },
  {
    "full_name": "F00LIAN/langchain-musical-theme-chat",
    "name": "langchain-musical-theme-chat",
    "description": "A streamlit web GUI chat that takes the user's input and creates a musical from it. ",
    "html_url": [
      "https://github.com/F00LIAN/langchain-musical-theme-chat/blob/c91c4d9a1eb9ddf6ec84900e6167edc2226bf540/venv/Lib/site-packages/langchain/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1515453,
    "stars": 0
  },
  {
    "full_name": "nicholasmoy/langchain-fork",
    "name": "langchain-fork",
    "description": null,
    "html_url": [
      "https://github.com/nicholasmoy/langchain-fork/blob/9a49aa4a075cb7485b96d7bfe054e7f8f1b8bb06/langchain/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 147415,
    "stars": 0
  },
  {
    "full_name": "fogel-j/langchain",
    "name": "langchain",
    "description": "Extracted langchain from monorepo for edits",
    "html_url": [
      "https://github.com/fogel-j/langchain/blob/732a5be9e19889c9b60c1f1abe4fcd0e3608e343/langchain/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 147316,
    "stars": 0
  },
  {
    "full_name": "NotAndOr/langchain",
    "name": "langchain",
    "description": null,
    "html_url": [
      "https://github.com/NotAndOr/langchain/blob/5f402900d286bee3112839cace8e75b80545a600/libs/langchain/langchain/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 230756,
    "stars": 0
  },
  {
    "full_name": "muhammadshahzad110/langchain",
    "name": "langchain",
    "description": "langchain",
    "html_url": [
      "https://github.com/muhammadshahzad110/langchain/blob/2d2b097fab8eb6f3626c86cb958d8cc762257061/libs/langchain/langchain/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 217629,
    "stars": 0
  },
  {
    "full_name": "smartcat923/langChain",
    "name": "langChain",
    "description": null,
    "html_url": [
      "https://github.com/smartcat923/langChain/blob/01e9d7902d4bdd0de88bc8d63c96d8d8894b8c4c/libs/langchain/langchain/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 226271,
    "stars": 0
  },
  {
    "full_name": "shaunck96/Langchain_To_Build_Apps",
    "name": "Langchain_To_Build_Apps",
    "description": null,
    "html_url": [
      "https://github.com/shaunck96/Langchain_To_Build_Apps/blob/eaf916f99989a31c398230f012931e97c400cf6e/libs/langchain/langchain/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 229664,
    "stars": 0
  },
  {
    "full_name": "OmarBubkr/LangChain",
    "name": "LangChain",
    "description": null,
    "html_url": [
      "https://github.com/OmarBubkr/LangChain/blob/0786395b563bc5c1a3f4b796594c0dd3b1514903/libs/langchain/langchain/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 230834,
    "stars": 0
  },
  {
    "full_name": "BINGI-ADHITYA-RAJESH/CustomGPT_21cs3011",
    "name": "CustomGPT_21cs3011",
    "description": "This is a chatbot that can give answers on your own dataset. Flutter,Python, LangChain,Firebase and OpenAI API are used in the development.",
    "html_url": [
      "https://github.com/BINGI-ADHITYA-RAJESH/CustomGPT_21cs3011/blob/d4427c2326a3528e89930b9ad7fd24a5f1f36dc9/LangChain%20backend/myenv/Lib/site-packages/langchain/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 791,
    "stars": 1
  },
  {
    "full_name": "Anu0408/House_Price_Prediction-Machine_Learning_Application",
    "name": "House_Price_Prediction-Machine_Learning_Application",
    "description": "A real-time, end-to-end machine learning application built with Flask and integrated with MLflow for tracking and model management. The application predicts house prices based on user input, leveraging trained regression models and providing a web interface for seamless interaction.",
    "html_url": [
      "https://github.com/Anu0408/House_Price_Prediction-Machine_Learning_Application/blob/5f2f7b5c531df531406d24c663d998ad38d8948f/.venv/Lib/site-packages/mlflow/gateway/providers/anthropic.py",
      "https://github.com/Anu0408/House_Price_Prediction-Machine_Learning_Application/blob/5f2f7b5c531df531406d24c663d998ad38d8948f/.venv/Lib/site-packages/mlflow/gateway/providers/openai.py"
    ],
    "model": [
      "claude",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 7754290,
    "stars": 1
  },
  {
    "full_name": "ephoning/sam-genai-rag-prototype",
    "name": "sam-genai-rag-prototype",
    "description": null,
    "html_url": [
      "https://github.com/ephoning/sam-genai-rag-prototype/blob/e82588c9d60a97829011b4dd44fc8c875decf944/libs-layer/python/langchain/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2482973,
    "stars": 0
  },
  {
    "full_name": "rescode-team/langchain",
    "name": "langchain",
    "description": "Large language models (LLMs) are emerging as a transformative technology, enabling developers to build applications that they previously could not. However, using these LLMs in isolation is often insufficient for creating a truly powerful app - the real power comes when you can combine them with other sources of computation or knowledge.",
    "html_url": [
      "https://github.com/rescode-team/langchain/blob/eece14e6b717b667452a6de9ba0081e41e2c76f2/libs/langchain/langchain/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 279805,
    "stars": 0
  },
  {
    "full_name": "tekiny/langchain",
    "name": "langchain",
    "description": null,
    "html_url": [
      "https://github.com/tekiny/langchain/blob/58da6e0d476d3b3554c30d68c847ce93b5194924/libs/langchain/langchain/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 284903,
    "stars": 0
  },
  {
    "full_name": "Lavania-19/Debate-Master",
    "name": "Debate-Master",
    "description": "Debate Master is a web application powered by OpenAI's GPT-3.5 Turbo, offering users the ability to engage in dynamic debates on various topics. Set the difficulty level, pick a topic, and start a debate with the AI assistant. It's a platform for thought-provoking discussions",
    "html_url": [
      "https://github.com/Lavania-19/Debate-Master/blob/c70e041c13386ec1180794873ba47c94b0d0ee2a/venv/Lib/site-packages/langchain/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2543847,
    "stars": 0
  },
  {
    "full_name": "kiffoh/text_based_adventure_game",
    "name": "text_based_adventure_game",
    "description": "A simple text based game similar to dungeon and dragons using the chatGPT API as a realtime dungeon master.",
    "html_url": [
      "https://github.com/kiffoh/text_based_adventure_game/blob/1d35d9a2727e6ccbb788cf0df1615561effbfd40/venv/Lib/site-packages/langchain/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 784662,
    "stars": 0
  },
  {
    "full_name": "sreeramathrij/callisto",
    "name": "callisto",
    "description": "Leveraging the power of Artificial Intelligence, our innovative website/app aims to revolutionize this preparatory process. Our website/app provides a dynamic platform where we use retrieval augmented generation approach to provide study notes, mark based answers for old questions etc.",
    "html_url": [
      "https://github.com/sreeramathrij/callisto/blob/c17808f5909984e96c811c3a5a9837f8b398c1cc/env/Lib/site-packages/langchain/llms/anthropic.py",
      "https://github.com/sreeramathrij/callisto/blob/c17808f5909984e96c811c3a5a9837f8b398c1cc/callisto/home/utils/llm.py"
    ],
    "model": [
      "claude",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1153108,
    "stars": 1
  },
  {
    "full_name": "utilityfog/LLM_POP",
    "name": "LLM_POP",
    "description": "Application of RAG and LLM Fine Tuning in Pop Culture Analysis",
    "html_url": [
      "https://github.com/utilityfog/LLM_POP/blob/86f4af7dd9dd1b2abe5961880cfec70c39624a46/langchain/libs/partners/anthropic/langchain_anthropic/llms.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 9721718,
    "stars": 0
  },
  {
    "full_name": "yilongzhou/langchain",
    "name": "langchain",
    "description": null,
    "html_url": [
      "https://github.com/yilongzhou/langchain/blob/71d0981f18dd2613261ab72d584b674c0cf180fa/libs/partners/anthropic/langchain_anthropic/llms.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 380490,
    "stars": 1
  },
  {
    "full_name": "mehmeteminak/ice-break",
    "name": "ice-break",
    "description": "This is AI based personal career inquiry software. I used langchain library in this project",
    "html_url": [
      "https://github.com/mehmeteminak/ice-break/blob/626030a36230a942cb4cd99e5ce9ad093c65dafe/venv/Lib/site-packages/langchain/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 769562,
    "stars": 0
  },
  {
    "full_name": "Jerrinthomas007/langchain",
    "name": "langchain",
    "description": null,
    "html_url": [
      "https://github.com/Jerrinthomas007/langchain/blob/ba9fd221ae98e149079f2186f7fde8a015db762e/langchain1/Lib/site-packages/langchain/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1755804,
    "stars": 0
  },
  {
    "full_name": "EleutherAI/lm-evaluation-harness",
    "name": "lm-evaluation-harness",
    "description": "A framework for few-shot evaluation of language models.",
    "html_url": [
      "https://github.com/EleutherAI/lm-evaluation-harness/blob/b86aa2131fc34405d2245edb0ec4b13933afec8c/lm_eval/models/anthropic_llms.py",
      "https://github.com/EleutherAI/lm-evaluation-harness/blob/6ccd520f3fb2b5d74c6f14c05f9d189521424719/lm_eval/models/openai_completions.py"
    ],
    "model": [
      "claude",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 177813,
    "stars": 9224
  },
  {
    "full_name": "viditpandey06/Langify",
    "name": "Langify",
    "description": "Langster is a chatbot that uses langchain, a framework that connects large language models to external data sources and APIs. Langster can generate natural and informative responses based on custom data and computations.",
    "html_url": [
      "https://github.com/viditpandey06/Langify/blob/2faa95c55f83e4f7adb852fe1453435ec9e8467b/venv/Lib/site-packages/langchain_community/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1818691,
    "stars": 0
  },
  {
    "full_name": "saciyer/langchain",
    "name": "langchain",
    "description": null,
    "html_url": [
      "https://github.com/saciyer/langchain/blob/01693b291e8af52001333c2561279db44f44aa29/libs/community/langchain_community/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 319956,
    "stars": 0
  },
  {
    "full_name": "gridgentoo/langchain",
    "name": "langchain",
    "description": "Фреймворк для создания приложений с LLM",
    "html_url": [
      "https://github.com/gridgentoo/langchain/blob/4f4b078bf3b2ea3c150f0a03765eae24efda6c1a/libs/community/langchain_community/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 321440,
    "stars": 0
  },
  {
    "full_name": "jmoraledac/Langchain",
    "name": "Langchain",
    "description": null,
    "html_url": [
      "https://github.com/jmoraledac/Langchain/blob/04caf07dee2e2843ab720e5b8f0c0e83d0b86a3e/libs/community/langchain_community/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 332265,
    "stars": 0
  },
  {
    "full_name": "FaycalD/langchain",
    "name": "langchain",
    "description": null,
    "html_url": [
      "https://github.com/FaycalD/langchain/blob/9b3962fc2521ec0d6ef2ea7c0a40b9c32977671a/libs/community/langchain_community/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 336354,
    "stars": 0
  },
  {
    "full_name": "abdulrahman305/Langchain_gcp",
    "name": "Langchain_gcp",
    "description": null,
    "html_url": [
      "https://github.com/abdulrahman305/Langchain_gcp/blob/92914b3a591ab66cd7f0dc4851c9026aaabfe942/libs/community/langchain_community/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 366591,
    "stars": 0
  },
  {
    "full_name": "princekeshriabc/LLM_Project",
    "name": "LLM_Project",
    "description": "The project is currently in it's developing phase. We, @princekeshriabc and @dishhaa03 are working on it.",
    "html_url": [
      "https://github.com/princekeshriabc/LLM_Project/blob/68184961590b0764eb7b55b458c23a4afb35e26c/venv/Lib/site-packages/langchain_community/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2033293,
    "stars": 0
  },
  {
    "full_name": "LucasRomanato0/ChatBot",
    "name": "ChatBot",
    "description": "Estudo de LLM com a criação de um chatbox.",
    "html_url": [
      "https://github.com/LucasRomanato0/ChatBot/blob/bdffa4c04bb3e1a4fb0a0bb86b106f4360cf0d51/venv/Lib/site-packages/langchain_community/llms/anthropic.py",
      "https://github.com/LucasRomanato0/ChatBot/blob/bdffa4c04bb3e1a4fb0a0bb86b106f4360cf0d51/venv/Lib/site-packages/openai/_client.py"
    ],
    "model": [
      "claude",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1752314,
    "stars": 0
  },
  {
    "full_name": "ekkamel/rag",
    "name": "rag",
    "description": null,
    "html_url": [
      "https://github.com/ekkamel/rag/blob/4411cc93a3389b76d34dcc2d2c701424bdb38e09/venv/Lib/site-packages/langchain_community/llms/anthropic.py",
      "https://github.com/ekkamel/rag/blob/4411cc93a3389b76d34dcc2d2c701424bdb38e09/venv/Lib/site-packages/openai/_client.py"
    ],
    "model": [
      "claude",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2245262,
    "stars": 0
  },
  {
    "full_name": "BevanSmith/RAG-LLM-1",
    "name": "RAG-LLM-1",
    "description": "In this folder I show projects on how to implement retrieval augmented generation and others",
    "html_url": [
      "https://github.com/BevanSmith/RAG-LLM-1/blob/b557393623279589c0eeb77c61a3b8ccbdcd4519/.venv/Lib/site-packages/langchain_community/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1849364,
    "stars": 0
  },
  {
    "full_name": "phaniteja5789/Intelligent-Document-Retrieval-and-Question-Answering-System-with-RAG-Approach",
    "name": "Intelligent-Document-Retrieval-and-Question-Answering-System-with-RAG-Approach",
    "description": null,
    "html_url": [
      "https://github.com/phaniteja5789/Intelligent-Document-Retrieval-and-Question-Answering-System-with-RAG-Approach/blob/e77b9ac5bb756c5eaa5daa70fb8654840c225711/DocumentSearch/Lib/site-packages/langchain_community/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 6005868,
    "stars": 1
  },
  {
    "full_name": "Rami-Aloui/flask_login_app",
    "name": "flask_login_app",
    "description": "neo4j GraphDatabase connection, sweetalert2,cryptography.fernet password encryption decryption langchain openai",
    "html_url": [
      "https://github.com/Rami-Aloui/flask_login_app/blob/e76c56d54d348861343bf3a7c9d2d00c35afe2a4/venv/Lib/site-packages/langchain_community/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 919694,
    "stars": 0
  },
  {
    "full_name": "gptbuilds/Langchain-Web-Scraper",
    "name": "Langchain-Web-Scraper",
    "description": null,
    "html_url": [
      "https://github.com/gptbuilds/Langchain-Web-Scraper/blob/76d15965ea46d13a7b6945d957700eb13856ac76/venv/Lib/site-packages/langchain_community/llms/anthropic.py",
      "https://github.com/gptbuilds/Langchain-Web-Scraper/blob/76d15965ea46d13a7b6945d957700eb13856ac76/venv/Lib/site-packages/openai/_client.py"
    ],
    "model": [
      "claude",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 966019,
    "stars": 1
  },
  {
    "full_name": "Dev-inmaking1211/MCQ-generator-using-OpenAi-and-Langchain",
    "name": "MCQ-generator-using-OpenAi-and-Langchain",
    "description": null,
    "html_url": [
      "https://github.com/Dev-inmaking1211/MCQ-generator-using-OpenAi-and-Langchain/blob/369455e9691557f1150c4acefc0ca5bdca9e86fd/venv/Lib/site-packages/langchain_community/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1812860,
    "stars": 0
  },
  {
    "full_name": "dolwinf/RAG-Blueprint",
    "name": "RAG-Blueprint",
    "description": "Implementing RAG without a framework",
    "html_url": [
      "https://github.com/dolwinf/RAG-Blueprint/blob/c0f5eec195e8f76209b4f0b4e23bfa16be027e28/.venv/Lib/site-packages/langchain_community/llms/anthropic.py",
      "https://github.com/dolwinf/RAG-Blueprint/blob/c0f5eec195e8f76209b4f0b4e23bfa16be027e28/create_index.py",
      "https://github.com/dolwinf/RAG-Blueprint/blob/c0f5eec195e8f76209b4f0b4e23bfa16be027e28/.venv/Lib/site-packages/openai/_client.py"
    ],
    "model": [
      "claude",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "Ai-Sukmoren/langchain_demo",
    "name": "langchain_demo",
    "description": null,
    "html_url": [
      "https://github.com/Ai-Sukmoren/langchain_demo/blob/f2a5f818bd911a54485ba5992014659db1fd1000/.venv/Lib/site-packages/langchain_community/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1395455,
    "stars": 1
  },
  {
    "full_name": "pramodkoujalagi/AI-Personal-Agent",
    "name": "AI-Personal-Agent",
    "description": "The code sets up a Streamlit application where users can interact with a personal agent powered by various language models and tools, including OpenAI's GPT, DuckDuckGo search, and mathematical reasoning capabilities, enabling users to ask questions and receive responses.",
    "html_url": [
      "https://github.com/pramodkoujalagi/AI-Personal-Agent/blob/59330a3db102c015a65102605d64b8db665b51b7/venv/Lib/site-packages/langchain_community/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 5573573,
    "stars": 0
  },
  {
    "full_name": "gabacame/LLM2Math_Engine",
    "name": "LLM2Math_Engine",
    "description": "Improve the mathematical performance of a lightweight LLM (gemma 2b) by using RAG to extend its knowledge and give it access to a mathematical engine to perform operations",
    "html_url": [
      "https://github.com/gabacame/LLM2Math_Engine/blob/be63a84e2674ea785896733a669074506a65c6e9/ai/Lib/site-packages/langchain_community/llms/anthropic.py",
      "https://github.com/gabacame/LLM2Math_Engine/blob/be63a84e2674ea785896733a669074506a65c6e9/ai/Lib/site-packages/llama_index/multi_modal_llms/openai/utils.py",
      "https://github.com/gabacame/LLM2Math_Engine/blob/be63a84e2674ea785896733a669074506a65c6e9/ai/Lib/site-packages/llama_index/legacy/multi_modal_llms/openai_utils.py",
      "https://github.com/gabacame/LLM2Math_Engine/blob/be63a84e2674ea785896733a669074506a65c6e9/ai/Lib/site-packages/llama_index/embeddings/openai/utils.py",
      "https://github.com/gabacame/LLM2Math_Engine/blob/be63a84e2674ea785896733a669074506a65c6e9/ai/Lib/site-packages/llama_index/legacy/embeddings/azure_openai.py",
      "https://github.com/gabacame/LLM2Math_Engine/blob/be63a84e2674ea785896733a669074506a65c6e9/ai/Lib/site-packages/llama_index/legacy/llms/azure_openai.py",
      "https://github.com/gabacame/LLM2Math_Engine/blob/be63a84e2674ea785896733a669074506a65c6e9/ai/Lib/site-packages/llama_index/legacy/llms/openai_utils.py"
    ],
    "model": [
      "claude",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2695815,
    "stars": 0
  },
  {
    "full_name": "pareekshitreddy/AskAlly-Your-Intuitive-Q-A-Chatbot",
    "name": "AskAlly-Your-Intuitive-Q-A-Chatbot",
    "description": "This project implements a question-answering chatbot using Python and Streamlit, integrating the Langchain language model and the OpenAI API for language understanding. The application is deployed on Hugging Face Spaces and can be accessed here.",
    "html_url": [
      "https://github.com/pareekshitreddy/AskAlly-Your-Intuitive-Q-A-Chatbot/blob/984d1aedbf360403cef7f5f9dcbe06945178c859/venv/Lib/site-packages/langchain_community/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2658235,
    "stars": 0
  },
  {
    "full_name": "y20acs524/Conversational-AI-chatbot",
    "name": "Conversational-AI-chatbot",
    "description": "chatbot using python,NLP,LLM and Generative AI technology.It also includes speech recognition to give voice inputs.",
    "html_url": [
      "https://github.com/y20acs524/Conversational-AI-chatbot/blob/df2915b684c6d5db331d8531ec27cd1b165de47d/venv/Lib/site-packages/langchain_community/llms/anthropic.py",
      "https://github.com/y20acs524/Conversational-AI-chatbot/blob/df2915b684c6d5db331d8531ec27cd1b165de47d/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/base.py",
      "https://github.com/y20acs524/Conversational-AI-chatbot/blob/df2915b684c6d5db331d8531ec27cd1b165de47d/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/base.py",
      "https://github.com/y20acs524/Conversational-AI-chatbot/blob/df2915b684c6d5db331d8531ec27cd1b165de47d/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/transports/base.py",
      "https://github.com/y20acs524/Conversational-AI-chatbot/blob/df2915b684c6d5db331d8531ec27cd1b165de47d/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/base.py",
      "https://github.com/y20acs524/Conversational-AI-chatbot/blob/df2915b684c6d5db331d8531ec27cd1b165de47d/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/base.py",
      "https://github.com/y20acs524/Conversational-AI-chatbot/blob/df2915b684c6d5db331d8531ec27cd1b165de47d/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/base.py",
      "https://github.com/y20acs524/Conversational-AI-chatbot/blob/df2915b684c6d5db331d8531ec27cd1b165de47d/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/grpc.py",
      "https://github.com/y20acs524/Conversational-AI-chatbot/blob/df2915b684c6d5db331d8531ec27cd1b165de47d/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/y20acs524/Conversational-AI-chatbot/blob/df2915b684c6d5db331d8531ec27cd1b165de47d/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/y20acs524/Conversational-AI-chatbot/blob/df2915b684c6d5db331d8531ec27cd1b165de47d/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/rest.py",
      "https://github.com/y20acs524/Conversational-AI-chatbot/blob/df2915b684c6d5db331d8531ec27cd1b165de47d/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/rest.py",
      "https://github.com/y20acs524/Conversational-AI-chatbot/blob/df2915b684c6d5db331d8531ec27cd1b165de47d/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/grpc.py",
      "https://github.com/y20acs524/Conversational-AI-chatbot/blob/df2915b684c6d5db331d8531ec27cd1b165de47d/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/grpc.py",
      "https://github.com/y20acs524/Conversational-AI-chatbot/blob/df2915b684c6d5db331d8531ec27cd1b165de47d/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc.py",
      "https://github.com/y20acs524/Conversational-AI-chatbot/blob/df2915b684c6d5db331d8531ec27cd1b165de47d/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/rest.py",
      "https://github.com/y20acs524/Conversational-AI-chatbot/blob/df2915b684c6d5db331d8531ec27cd1b165de47d/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/y20acs524/Conversational-AI-chatbot/blob/df2915b684c6d5db331d8531ec27cd1b165de47d/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/client.py",
      "https://github.com/y20acs524/Conversational-AI-chatbot/blob/df2915b684c6d5db331d8531ec27cd1b165de47d/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/rest.py",
      "https://github.com/y20acs524/Conversational-AI-chatbot/blob/df2915b684c6d5db331d8531ec27cd1b165de47d/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/grpc_asyncio.py",
      "https://github.com/y20acs524/Conversational-AI-chatbot/blob/df2915b684c6d5db331d8531ec27cd1b165de47d/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/rest.py",
      "https://github.com/y20acs524/Conversational-AI-chatbot/blob/df2915b684c6d5db331d8531ec27cd1b165de47d/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/rest.py",
      "https://github.com/y20acs524/Conversational-AI-chatbot/blob/df2915b684c6d5db331d8531ec27cd1b165de47d/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/client.py",
      "https://github.com/y20acs524/Conversational-AI-chatbot/blob/df2915b684c6d5db331d8531ec27cd1b165de47d/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py"
    ],
    "model": [
      "claude",
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4211863,
    "stars": 1
  },
  {
    "full_name": "rohit-b27/PDF_Analyser-using-LLM-and-vectordb",
    "name": "PDF_Analyser-using-LLM-and-vectordb",
    "description": null,
    "html_url": [
      "https://github.com/rohit-b27/PDF_Analyser-using-LLM-and-vectordb/blob/5441a3e06316a6a01284749c58aaf877cf8e9714/venv-1/Lib/site-packages/langchain_community/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3211833,
    "stars": 0
  },
  {
    "full_name": "Shiva008/MCQ-generator-with-OpenAi",
    "name": "MCQ-generator-with-OpenAi",
    "description": "This project automates the creation of multiple-choice questions (MCQs) from a given PDF document using the power of generative AI, specifically the OpenAI API. It streamlines the process of crafting assessment materials, saving educators and trainers valuable time and effort.",
    "html_url": [
      "https://github.com/Shiva008/MCQ-generator-with-OpenAi/blob/a7c8395508e63c4fc159ab06e33d018896ec96ad/env/Lib/site-packages/langchain_community/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2180972,
    "stars": 1
  },
  {
    "full_name": "devnayyar/Mcq_generator_llm",
    "name": "Mcq_generator_llm",
    "description": null,
    "html_url": [
      "https://github.com/devnayyar/Mcq_generator_llm/blob/b0f55add647fd1a40fffb27f010d2d539c1907c7/env/Lib/site-packages/langchain_community/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2181046,
    "stars": 0
  },
  {
    "full_name": "arsath-eng/RAG1-NVIDIA-GENAI",
    "name": "RAG1-NVIDIA-GENAI",
    "description": "A powerful Retrieval Augmented Generation (RAG) application built with NVIDIA AI endpoints and Streamlit. This solution enables intelligent document analysis and question-answering using state-of-the-art language models, featuring multi-PDF processing, FAISS vector store integration, and advanced prompt engineering.",
    "html_url": [
      "https://github.com/arsath-eng/RAG1-NVIDIA-GENAI/blob/f15d26c76217ba5083c03475a98fc587d59d8ad5/venv/Lib/site-packages/langchain_community/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1814380,
    "stars": 2
  },
  {
    "full_name": "oceanbase-devhub/langchain-community",
    "name": "langchain-community",
    "description": "Community contributed LangChain integrations.",
    "html_url": [
      "https://github.com/oceanbase-devhub/langchain-community/blob/b39e352003d0dbe167aedc5d7cd2369674c47934/langchain_community/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 240687,
    "stars": 4
  },
  {
    "full_name": "Kar-nV/LLM-with-LangChain",
    "name": "LLM-with-LangChain",
    "description": null,
    "html_url": [
      "https://github.com/Kar-nV/LLM-with-LangChain/blob/7dc855586490b3b71df203a7375344149a1847b4/Lib/site-packages/langchain_community/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1474845,
    "stars": 0
  },
  {
    "full_name": "YoChan1017/Django_openAI",
    "name": "Django_openAI",
    "description": null,
    "html_url": [
      "https://github.com/YoChan1017/Django_openAI/blob/21636c2da0183f51d2fe1dc5971b7ad92aeb16fc/vm/Lib/site-packages/langchain_community/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3082111,
    "stars": 0
  },
  {
    "full_name": "SAI-ADITY-A/Code-Assistant---Gen-AI",
    "name": "Code-Assistant---Gen-AI",
    "description": "This project demonstrates how to create a personal code assistant using a local open-source large language model (LLM). We utilize Codellama, a fine-tuned version of Llama specifically developed for coding tasks, along with Ollama, Langchain, and Streamlit to build a robust, interactive, and user-friendly interface.",
    "html_url": [
      "https://github.com/SAI-ADITY-A/Code-Assistant---Gen-AI/blob/c0720d082f12a27b556768155b5e7947f9bb4357/venv/Lib/site-packages/langchain_community/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3264294,
    "stars": 0
  },
  {
    "full_name": "AlaBelgacem/RAG-Speech-to-text",
    "name": "RAG-Speech-to-text",
    "description": null,
    "html_url": [
      "https://github.com/AlaBelgacem/RAG-Speech-to-text/blob/0a595201f519a74ea41775ada6a06f963474718a/envpfe/Lib/site-packages/langchain_community/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1412219,
    "stars": 0
  },
  {
    "full_name": "rajendrasrao/Ask-Your-CSV-Bot",
    "name": "Ask-Your-CSV-Bot",
    "description": "A versatile chatbot capable of answering questions based on the data provided in a CSV file. Simply upload your CSV, ask your questions in provided text box and it will reply using LLM models",
    "html_url": [
      "https://github.com/rajendrasrao/Ask-Your-CSV-Bot/blob/a8972f7e4945685276d44e9fed55f5150b2a1e0f/.csvchatbotenv/Lib/site-packages/langchain_community/llms/anthropic.py",
      "https://github.com/rajendrasrao/Ask-Your-CSV-Bot/blob/a8972f7e4945685276d44e9fed55f5150b2a1e0f/.csvchatbotenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/base.py",
      "https://github.com/rajendrasrao/Ask-Your-CSV-Bot/blob/a8972f7e4945685276d44e9fed55f5150b2a1e0f/.csvchatbotenv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/transports/base.py",
      "https://github.com/rajendrasrao/Ask-Your-CSV-Bot/blob/a8972f7e4945685276d44e9fed55f5150b2a1e0f/.csvchatbotenv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/base.py",
      "https://github.com/rajendrasrao/Ask-Your-CSV-Bot/blob/a8972f7e4945685276d44e9fed55f5150b2a1e0f/.csvchatbotenv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/base.py",
      "https://github.com/rajendrasrao/Ask-Your-CSV-Bot/blob/a8972f7e4945685276d44e9fed55f5150b2a1e0f/.csvchatbotenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/base.py",
      "https://github.com/rajendrasrao/Ask-Your-CSV-Bot/blob/a8972f7e4945685276d44e9fed55f5150b2a1e0f/.csvchatbotenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc.py",
      "https://github.com/rajendrasrao/Ask-Your-CSV-Bot/blob/a8972f7e4945685276d44e9fed55f5150b2a1e0f/.csvchatbotenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/rajendrasrao/Ask-Your-CSV-Bot/blob/a8972f7e4945685276d44e9fed55f5150b2a1e0f/.csvchatbotenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/grpc.py",
      "https://github.com/rajendrasrao/Ask-Your-CSV-Bot/blob/a8972f7e4945685276d44e9fed55f5150b2a1e0f/.csvchatbotenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/cache_service/transports/grpc_asyncio.py",
      "https://github.com/rajendrasrao/Ask-Your-CSV-Bot/blob/a8972f7e4945685276d44e9fed55f5150b2a1e0f/.csvchatbotenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/grpc.py",
      "https://github.com/rajendrasrao/Ask-Your-CSV-Bot/blob/a8972f7e4945685276d44e9fed55f5150b2a1e0f/.csvchatbotenv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/rajendrasrao/Ask-Your-CSV-Bot/blob/a8972f7e4945685276d44e9fed55f5150b2a1e0f/.csvchatbotenv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/client.py",
      "https://github.com/rajendrasrao/Ask-Your-CSV-Bot/blob/a8972f7e4945685276d44e9fed55f5150b2a1e0f/.csvchatbotenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/client.py",
      "https://github.com/rajendrasrao/Ask-Your-CSV-Bot/blob/a8972f7e4945685276d44e9fed55f5150b2a1e0f/.csvchatbotenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py"
    ],
    "model": [
      "claude",
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4881485,
    "stars": 1
  },
  {
    "full_name": "sidneybispo/ai-trainer",
    "name": "ai-trainer",
    "description": "Visão Geral do Projeto. Este projeto implementa um agente de consulta SQL com uma interface de usuário baseada em Streamlit. O sistema permite que os usuários façam perguntas em linguagem natural sobre dados armazenados em um banco de dados PostgreSQL ou em uma planilha, e recebam respostas geradas por um modelo de linguagem.",
    "html_url": [
      "https://github.com/sidneybispo/ai-trainer/blob/0992fec67e8dba4147d97ec2819829a5db810712/venv/Lib/site-packages/langchain_community/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1745639,
    "stars": 0
  },
  {
    "full_name": "fellenwennesa/PMCoding",
    "name": "PMCoding",
    "description": "This is a Simple LLM App that generates Social Media Caption based on topic.",
    "html_url": [
      "https://github.com/fellenwennesa/PMCoding/blob/428810cd2e049e38972dca7e564a6df20e2549ac/venv/Lib/site-packages/langchain_community/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 853479,
    "stars": 0
  },
  {
    "full_name": "Ashish-kharde1/GeminiLLM",
    "name": "GeminiLLM",
    "description": null,
    "html_url": [
      "https://github.com/Ashish-kharde1/GeminiLLM/blob/a2bd4a1ed5d01d6b2b3321fb5bab9e5d129c0fe3/venv/Lib/site-packages/langchain_community/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 5327315,
    "stars": 0
  },
  {
    "full_name": "Roopshankar10/LLM-Based-RAG-System",
    "name": "LLM-Based-RAG-System",
    "description": null,
    "html_url": [
      "https://github.com/Roopshankar10/LLM-Based-RAG-System/blob/27c3b33887d5bb3edc83c2d9c0ae320cabc36437/venv/Lib/site-packages/langchain_community/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1801757,
    "stars": 0
  },
  {
    "full_name": "JadBaradei/LLM_Project",
    "name": "LLM_Project",
    "description": "This code creates streamlit web application to communicate with a gemini agent",
    "html_url": [
      "https://github.com/JadBaradei/LLM_Project/blob/3a46063978e670b5f5de4fec8bfa9dc6fd223891/venv/Lib/site-packages/langchain_community/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 5298719,
    "stars": 0
  },
  {
    "full_name": "MetaSonic001/local-pdf-rag-with-fastapi",
    "name": "local-pdf-rag-with-fastapi",
    "description": null,
    "html_url": [
      "https://github.com/MetaSonic001/local-pdf-rag-with-fastapi/blob/bf036eb963a6e5a7b6f36388c819071517329d00/venv/Lib/site-packages/langchain_community/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2087364,
    "stars": 0
  },
  {
    "full_name": "Andrejr82/agente-sql-langchain",
    "name": "agente-sql-langchain",
    "description": null,
    "html_url": [
      "https://github.com/Andrejr82/agente-sql-langchain/blob/086957ef595974ebbe5ccd130e0c100cdfc6ed83/venv-langchain/Lib/site-packages/langchain_community/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2806681,
    "stars": 0
  },
  {
    "full_name": "AizFaliq/Ollama3-Chatbot",
    "name": "Ollama3-Chatbot",
    "description": "Ollama3 Chatbot with hidden context + StreamLit",
    "html_url": [
      "https://github.com/AizFaliq/Ollama3-Chatbot/blob/ae4d9c8c82757c30baa8374efe0211d02e5abcd8/Lib/site-packages/langchain_community/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1701756,
    "stars": 0
  },
  {
    "full_name": "Anmol-2003/resumer-dockerized",
    "name": "resumer-dockerized",
    "description": "A tool to generate a resume given a job description using latex and llama-3.1",
    "html_url": [
      "https://github.com/Anmol-2003/resumer-dockerized/blob/874ccaf57966f7780b2da1ed5b1d4bdd8f862f79/backend/venv/Lib/site-packages/langchain_community/llms/anthropic.py",
      "https://github.com/Anmol-2003/resumer-dockerized/blob/874ccaf57966f7780b2da1ed5b1d4bdd8f862f79/backend/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/transports/base.py",
      "https://github.com/Anmol-2003/resumer-dockerized/blob/874ccaf57966f7780b2da1ed5b1d4bdd8f862f79/backend/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/base.py",
      "https://github.com/Anmol-2003/resumer-dockerized/blob/874ccaf57966f7780b2da1ed5b1d4bdd8f862f79/backend/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/base.py",
      "https://github.com/Anmol-2003/resumer-dockerized/blob/874ccaf57966f7780b2da1ed5b1d4bdd8f862f79/backend/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc.py",
      "https://github.com/Anmol-2003/resumer-dockerized/blob/874ccaf57966f7780b2da1ed5b1d4bdd8f862f79/backend/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/Anmol-2003/resumer-dockerized/blob/874ccaf57966f7780b2da1ed5b1d4bdd8f862f79/backend/venv/Lib/site-packages/google/generativeai/client.py",
      "https://github.com/Anmol-2003/resumer-dockerized/blob/874ccaf57966f7780b2da1ed5b1d4bdd8f862f79/backend/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/grpc_asyncio.py",
      "https://github.com/Anmol-2003/resumer-dockerized/blob/874ccaf57966f7780b2da1ed5b1d4bdd8f862f79/backend/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/cache_service/transports/grpc_asyncio.py",
      "https://github.com/Anmol-2003/resumer-dockerized/blob/874ccaf57966f7780b2da1ed5b1d4bdd8f862f79/backend/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/prediction_service/client.py",
      "https://github.com/Anmol-2003/resumer-dockerized/blob/874ccaf57966f7780b2da1ed5b1d4bdd8f862f79/backend/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/client.py"
    ],
    "model": [
      "claude",
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "Roshan0909/LangChain-PDF-Processor",
    "name": "LangChain-PDF-Processor",
    "description": null,
    "html_url": [
      "https://github.com/Roshan0909/LangChain-PDF-Processor/blob/d3f92c5dd6a4655050b265972daa1f59a12b5b6a/venv/Lib/site-packages/langchain_community/llms/anthropic.py",
      "https://github.com/Roshan0909/LangChain-PDF-Processor/blob/d3f92c5dd6a4655050b265972daa1f59a12b5b6a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/prediction_service/transports/base.py",
      "https://github.com/Roshan0909/LangChain-PDF-Processor/blob/d3f92c5dd6a4655050b265972daa1f59a12b5b6a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/base.py",
      "https://github.com/Roshan0909/LangChain-PDF-Processor/blob/d3f92c5dd6a4655050b265972daa1f59a12b5b6a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/base.py",
      "https://github.com/Roshan0909/LangChain-PDF-Processor/blob/d3f92c5dd6a4655050b265972daa1f59a12b5b6a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/grpc_asyncio.py",
      "https://github.com/Roshan0909/LangChain-PDF-Processor/blob/d3f92c5dd6a4655050b265972daa1f59a12b5b6a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/grpc.py",
      "https://github.com/Roshan0909/LangChain-PDF-Processor/blob/d3f92c5dd6a4655050b265972daa1f59a12b5b6a/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/client.py",
      "https://github.com/Roshan0909/LangChain-PDF-Processor/blob/d3f92c5dd6a4655050b265972daa1f59a12b5b6a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py"
    ],
    "model": [
      "claude",
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4018899,
    "stars": 0
  },
  {
    "full_name": "AshwinKrishnaK/langchain-basics",
    "name": "langchain-basics",
    "description": null,
    "html_url": [
      "https://github.com/AshwinKrishnaK/langchain-basics/blob/0dbd358e1976740dde4a6ee42937127f2a3c3f5b/venv/Lib/site-packages/langchain_community/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1948296,
    "stars": 0
  },
  {
    "full_name": "Dousery/Open-Source-LLM-RAG",
    "name": "Open-Source-LLM-RAG",
    "description": null,
    "html_url": [
      "https://github.com/Dousery/Open-Source-LLM-RAG/blob/d168286819582d8665ffb24d0ed922611a2697a3/venv/Lib/site-packages/langchain_community/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2681142,
    "stars": 0
  },
  {
    "full_name": "JessiP23/langchain-chatbot",
    "name": "langchain-chatbot",
    "description": null,
    "html_url": [
      "https://github.com/JessiP23/langchain-chatbot/blob/3375629ff819cd07deb89f0dd687c325fbd30e73/venv/Lib/site-packages/langchain_community/llms/anthropic.py",
      "https://github.com/JessiP23/langchain-chatbot/blob/3375629ff819cd07deb89f0dd687c325fbd30e73/venv/Lib/site-packages/anthropic/_client.py",
      "https://github.com/JessiP23/langchain-chatbot/blob/3375629ff819cd07deb89f0dd687c325fbd30e73/venv/Lib/site-packages/langchain_anthropic/chat_models.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 844891,
    "stars": 0
  },
  {
    "full_name": "yashvinshah/LLM-RAG-chat",
    "name": "LLM-RAG-chat",
    "description": null,
    "html_url": [
      "https://github.com/yashvinshah/LLM-RAG-chat/blob/128ab805506a572b59e82da69052e26968e193b2/env/Lib/site-packages/langchain_community/llms/anthropic.py",
      "https://github.com/yashvinshah/LLM-RAG-chat/blob/128ab805506a572b59e82da69052e26968e193b2/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/prediction_service/transports/base.py",
      "https://github.com/yashvinshah/LLM-RAG-chat/blob/128ab805506a572b59e82da69052e26968e193b2/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/transports/base.py",
      "https://github.com/yashvinshah/LLM-RAG-chat/blob/128ab805506a572b59e82da69052e26968e193b2/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/base.py",
      "https://github.com/yashvinshah/LLM-RAG-chat/blob/128ab805506a572b59e82da69052e26968e193b2/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/transports/base.py",
      "https://github.com/yashvinshah/LLM-RAG-chat/blob/128ab805506a572b59e82da69052e26968e193b2/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/base.py",
      "https://github.com/yashvinshah/LLM-RAG-chat/blob/128ab805506a572b59e82da69052e26968e193b2/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/base.py",
      "https://github.com/yashvinshah/LLM-RAG-chat/blob/128ab805506a572b59e82da69052e26968e193b2/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/yashvinshah/LLM-RAG-chat/blob/128ab805506a572b59e82da69052e26968e193b2/env/Lib/site-packages/google/generativeai/client.py",
      "https://github.com/yashvinshah/LLM-RAG-chat/blob/128ab805506a572b59e82da69052e26968e193b2/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/yashvinshah/LLM-RAG-chat/blob/128ab805506a572b59e82da69052e26968e193b2/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/rest.py",
      "https://github.com/yashvinshah/LLM-RAG-chat/blob/128ab805506a572b59e82da69052e26968e193b2/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/yashvinshah/LLM-RAG-chat/blob/128ab805506a572b59e82da69052e26968e193b2/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/rest.py",
      "https://github.com/yashvinshah/LLM-RAG-chat/blob/128ab805506a572b59e82da69052e26968e193b2/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/prediction_service/client.py",
      "https://github.com/yashvinshah/LLM-RAG-chat/blob/128ab805506a572b59e82da69052e26968e193b2/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/client.py",
      "https://github.com/yashvinshah/LLM-RAG-chat/blob/128ab805506a572b59e82da69052e26968e193b2/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/client.py",
      "https://github.com/yashvinshah/LLM-RAG-chat/blob/128ab805506a572b59e82da69052e26968e193b2/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/client.py"
    ],
    "model": [
      "claude",
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4025842,
    "stars": 0
  },
  {
    "full_name": "edwardfranciaescuelaing/langchaingpt",
    "name": "langchaingpt",
    "description": null,
    "html_url": [
      "https://github.com/edwardfranciaescuelaing/langchaingpt/blob/efcb0aab1311e533479785b231b6eda1253e7c7c/env/Lib/site-packages/langchain_community/llms/anthropic.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2434930,
    "stars": 0
  },
  {
    "full_name": "rebumatadele/translate",
    "name": "translate",
    "description": "This repository will hold OpenAi API integration",
    "html_url": [
      "https://github.com/rebumatadele/translate/blob/41f5bccfcca6d5ecbafa3e16d773bb5bba2882f4/gemini.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 459,
    "stars": 0
  },
  {
    "full_name": "JANHMS/needle-langchain-partner",
    "name": "needle-langchain-partner",
    "description": "Partner Package for needle langchain integration",
    "html_url": [
      "https://github.com/JANHMS/needle-langchain-partner/blob/d67b699101e46d5525a02757ed5e730a58e81e56/libs/partners/anthropic/langchain_anthropic/llms.py",
      "https://github.com/JANHMS/needle-langchain-partner/blob/d67b699101e46d5525a02757ed5e730a58e81e56/libs/partners/anthropic/langchain_anthropic/chat_models.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 517228,
    "stars": 0
  },
  {
    "full_name": "AdamSobieszek/langtorch",
    "name": "langtorch",
    "description": "Building LLM apps with Text Tensors using PyTorch concepts and text gradients",
    "html_url": [
      "https://github.com/AdamSobieszek/langtorch/blob/a44b787fcd0cc5321d1beef55c7d0ff87692c7ce/src/langtorch/api/call.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 6435,
    "stars": 36
  },
  {
    "full_name": "aceliuchanghong/large_scale_models_learning_log",
    "name": "large_scale_models_learning_log",
    "description": "my large scale models learning log(我的大模型学习记录,包括langchain之类的放在一起)",
    "html_url": [
      "https://github.com/aceliuchanghong/large_scale_models_learning_log/blob/d0a1a45b2579eded587637e0bf46e88670f249a4/my_knowledge_rag_qa_llm_log/RAG/worker/anthropic2.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 33110,
    "stars": 13
  },
  {
    "full_name": "PromptSail/prompt_sail",
    "name": "prompt_sail",
    "description": "Open Source LLM proxy that transparently captures and logs all interactions with LLM API",
    "html_url": [
      "https://github.com/PromptSail/prompt_sail/blob/11330b86d7410043c1f67879742af8fe56a7df75/backend/src/utils.py",
      "https://github.com/PromptSail/prompt_sail/blob/11330b86d7410043c1f67879742af8fe56a7df75/backend/tests/conftest.py",
      "https://github.com/PromptSail/prompt_sail/blob/11330b86d7410043c1f67879742af8fe56a7df75/backend/src/utils.py",
      "https://github.com/PromptSail/prompt_sail/blob/11330b86d7410043c1f67879742af8fe56a7df75/backend/tests/test_api_projects.py",
      "https://github.com/PromptSail/prompt_sail/blob/11330b86d7410043c1f67879742af8fe56a7df75/backend/tests/test_api%20transactions.py"
    ],
    "model": [
      "claude",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 34100,
    "stars": 58
  },
  {
    "full_name": "sliday/telegram-ai-digest",
    "name": "telegram-ai-digest",
    "description": "Automates Telegram message digests using Claude AI for summaries and Replicate API for image generation, sending results to saved messages.",
    "html_url": [
      "https://github.com/sliday/telegram-ai-digest/blob/b1d22b85f16349d052a937510cf9a1e11930cf9d/digest.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 361,
    "stars": 53
  },
  {
    "full_name": "9600dev/llmvm",
    "name": "llmvm",
    "description": "LLM <-> Python agentic runtime prototype",
    "html_url": [
      "https://github.com/9600dev/llmvm/blob/821cd02a0734fdf7a8c56da2f1186909445aa26f/llmvm/common/anthropic_executor.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 331926,
    "stars": 49
  },
  {
    "full_name": "cmcguinness/newsreader",
    "name": "newsreader",
    "description": "Simple LLM based news reading program",
    "html_url": [
      "https://github.com/cmcguinness/newsreader/blob/d16a1afdb58891f845468e8c82534036ce901707/llm.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1159,
    "stars": 1
  },
  {
    "full_name": "aypan17/llm-feedback",
    "name": "llm-feedback",
    "description": null,
    "html_url": [
      "https://github.com/aypan17/llm-feedback/blob/a475b3e38ee38412de0b6a667a36522d11a27d84/policy-refinement/assets/generate_errors.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 44261,
    "stars": 8
  },
  {
    "full_name": "xxxAleksandrxxx/terminal_companion_v2",
    "name": "terminal_companion_v2",
    "description": "It's a simple Python app (use Python 3.12.2) for communicating with the ChatGPT API, and local LLMs using [ollama](https://github.com/ollama/ollama), directly from the terminal.",
    "html_url": [
      "https://github.com/xxxAleksandrxxx/terminal_companion_v2/blob/d0ebc39a97c4a1b8b3ca83f8290359c67d509210/tests/test_main.py",
      "https://github.com/xxxAleksandrxxx/terminal_companion_v2/blob/d0ebc39a97c4a1b8b3ca83f8290359c67d509210/terminal_companion_v2/main.py",
      "https://github.com/xxxAleksandrxxx/terminal_companion_v2/blob/d0ebc39a97c4a1b8b3ca83f8290359c67d509210/terminal_companion_v2/main.py"
    ],
    "model": [
      "claude",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1298,
    "stars": 1
  },
  {
    "full_name": "plotJ/SelfGPT",
    "name": "SelfGPT",
    "description": "A clone of ChatGPT for web deployment with user's OpenAI API key",
    "html_url": [
      "https://github.com/plotJ/SelfGPT/blob/0234b7bd06e0dd02c883b5220dba61c07bb57977/server/config.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1795,
    "stars": 0
  },
  {
    "full_name": "fabriziosalmi/UglyFeed",
    "name": "UglyFeed",
    "description": "Retrieve, aggregate, filter, evaluate, rewrite and serve RSS feeds using Large Language Models for fun, research and learning purposes",
    "html_url": [
      "https://github.com/fabriziosalmi/UglyFeed/blob/534b8b86c67d128203b8a914cd3e78b69c5bffa5/llm_processor.py",
      "https://github.com/fabriziosalmi/UglyFeed/blob/534b8b86c67d128203b8a914cd3e78b69c5bffa5/config.py"
    ],
    "model": [
      "claude",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 21673,
    "stars": 250
  },
  {
    "full_name": "yym68686/uni-api",
    "name": "uni-api",
    "description": "This is a project that unifies the management of LLM APIs. It can call multiple backend services through a unified API interface, convert them to the OpenAI format uniformly, and support load balancing. Currently supported backend services include: OpenAI, Anthropic, DeepBricks, OpenRouter, Gemini, Vertex, etc.",
    "html_url": [
      "https://github.com/yym68686/uni-api/blob/0d743fb477f8e3e2ff97aa5ac1ae293d704ebade/main.py",
      "https://github.com/yym68686/uni-api/blob/a0e48a2a101617e4ef388e8cc38aca415e57cd6b/request.py",
      "https://github.com/yym68686/uni-api/blob/0c42621160971dc27444bd07352effb06d15fe48/test/test_baseurl.py",
      "https://github.com/yym68686/uni-api/blob/0c42621160971dc27444bd07352effb06d15fe48/utils.py"
    ],
    "model": [
      "claude",
      "gemini",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 5130,
    "stars": 971
  },
  {
    "full_name": "wgryc/phasellm",
    "name": "phasellm",
    "description": "Large language model evaluation and workflow framework from Phase AI.",
    "html_url": [
      "https://github.com/wgryc/phasellm/blob/28847b7656e81e72856f6cc4718b612f4066523d/phasellm/llms.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 40652,
    "stars": 455
  },
  {
    "full_name": "valentinfrlch/ha-llmvision",
    "name": "ha-llmvision",
    "description": "Let Home Assistant see!",
    "html_url": [
      "https://github.com/valentinfrlch/ha-llmvision/blob/d7335e04a3da96e11cab61a1aaf45a9dbc4f47e0/custom_components/llmvision/config_flow.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 5936,
    "stars": 834
  },
  {
    "full_name": "anthropics/anthropic-sdk-python",
    "name": "anthropic-sdk-python",
    "description": null,
    "html_url": [
      "https://github.com/anthropics/anthropic-sdk-python/blob/93cbbbde964e244f02bf1bd2b579c5fabce4e267/src/anthropic/_client.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 24867,
    "stars": 1995
  },
  {
    "full_name": "pkelaita/l2m2",
    "name": "l2m2",
    "description": "A simple Python library for asynchronous, model-agnostic LLM inference.",
    "html_url": [
      "https://github.com/pkelaita/l2m2/blob/972e7104f9a828ab05a8a697dbce1b6516174f6c/l2m2/model_info.py",
      "https://github.com/pkelaita/l2m2/blob/972e7104f9a828ab05a8a697dbce1b6516174f6c/l2m2/model_info.py"
    ],
    "model": [
      "claude",
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4598,
    "stars": 13
  },
  {
    "full_name": "cohere-ai/self-reflection-planning-paper",
    "name": "self-reflection-planning-paper",
    "description": "This repository contains the code for our paper: \"On the Efficacy of Self-reflection for Improving LLM Agent Planning\".",
    "html_url": [
      "https://github.com/cohere-ai/self-reflection-planning-paper/blob/01f94f1f1b5c8fd9b97abac23bd9f026db5be24a/ToolSandbox/tool_sandbox/roles/anthropic_api_agent.py",
      "https://github.com/cohere-ai/self-reflection-planning-paper/blob/01f94f1f1b5c8fd9b97abac23bd9f026db5be24a/ToolSandbox/tool_sandbox/roles/mistral_api_agent.py",
      "https://github.com/cohere-ai/self-reflection-planning-paper/blob/01f94f1f1b5c8fd9b97abac23bd9f026db5be24a/ToolSandbox/tool_sandbox/roles/openai_api_user.py"
    ],
    "model": [
      "claude",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1299723,
    "stars": 1
  },
  {
    "full_name": "whuera/langchain-proyects",
    "name": "langchain-proyects",
    "description": null,
    "html_url": [
      "https://github.com/whuera/langchain-proyects/blob/3ca38139e1452cf6f3e4d1614e547b95ea20ca3d/langchain/libs/partners/anthropic/tests/unit_tests/test_chat_models.py",
      "https://github.com/whuera/langchain-proyects/blob/3ca38139e1452cf6f3e4d1614e547b95ea20ca3d/langchain/libs/partners/anthropic/langchain_anthropic/chat_models.py",
      "https://github.com/whuera/langchain-proyects/blob/3ca38139e1452cf6f3e4d1614e547b95ea20ca3d/langchain/libs/partners/openai/tests/unit_tests/embeddings/test_azure_embeddings.py"
    ],
    "model": [
      "claude",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 518016,
    "stars": 0
  },
  {
    "full_name": "protectai/vulnhuntr",
    "name": "vulnhuntr",
    "description": "Zero shot vulnerability discovery using LLMs",
    "html_url": [
      "https://github.com/protectai/vulnhuntr/blob/c21cdab0c2be9724c7878a3b3120c78b586c262d/vulnhuntr/__main__.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1434,
    "stars": 1807
  },
  {
    "full_name": "afiq-aswadi/anki-assistant",
    "name": "anki-assistant",
    "description": "Tool that calls Claude API to edit Anki flashcards for you.",
    "html_url": [
      "https://github.com/afiq-aswadi/anki-assistant/blob/040085d1573abe4ad51479854f2457e67bfcc467/libs/anthropic/_client.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 78271,
    "stars": 0
  },
  {
    "full_name": "karthikeya-peeriga/claude-internal",
    "name": "claude-internal",
    "description": "Internal exploratory tool for claude api",
    "html_url": [
      "https://github.com/karthikeya-peeriga/claude-internal/blob/d0eb89e957de634a545657e699993836b10a5dc2/claude-env/Lib/site-packages/anthropic/_client.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2023,
    "stars": 0
  },
  {
    "full_name": "pranalimandhare/Microservices",
    "name": "Microservices",
    "description": "Python Chatbots and AI models",
    "html_url": [
      "https://github.com/pranalimandhare/Microservices/blob/98d8653d659d948596c0af9d7a79d343e4211125/venv/Lib/site-packages/anthropic/_client.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1309921,
    "stars": 0
  },
  {
    "full_name": "LiquidAdTech/Zahara-LiteLLM",
    "name": "Zahara-LiteLLM",
    "description": "Gen AI tools ",
    "html_url": [
      "https://github.com/LiquidAdTech/Zahara-LiteLLM/blob/24bfbe18f6a771dbf64b829a3e99362e2b45f0e1/litellm/main.py",
      "https://github.com/LiquidAdTech/Zahara-LiteLLM/blob/24bfbe18f6a771dbf64b829a3e99362e2b45f0e1/litellm/llms/azure.py",
      "https://github.com/LiquidAdTech/Zahara-LiteLLM/blob/24bfbe18f6a771dbf64b829a3e99362e2b45f0e1/litellm/main.py"
    ],
    "model": [
      "claude",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 92055,
    "stars": 1
  },
  {
    "full_name": "h2oai/h2ogpt",
    "name": "h2ogpt",
    "description": "Private chat with local GPT with document, images, video, etc. 100% private, Apache 2.0. Supports oLLaMa, Mixtral, llama.cpp, and more. Demo: https://gpt.h2o.ai/ https://gpt-docs.h2o.ai/",
    "html_url": [
      "https://github.com/h2oai/h2ogpt/blob/a0fcc3344d53a834fe3cb5b26265aaeb84993b77/src/model_utils.py",
      "https://github.com/h2oai/h2ogpt/blob/a0fcc3344d53a834fe3cb5b26265aaeb84993b77/openai_server/agent_tools/audio_transcription.py",
      "https://github.com/h2oai/h2ogpt/blob/a0fcc3344d53a834fe3cb5b26265aaeb84993b77/openai_server/autogen_utils.py",
      "https://github.com/h2oai/h2ogpt/blob/a0fcc3344d53a834fe3cb5b26265aaeb84993b77/openai_server/agent_prompting.py"
    ],
    "model": [
      "claude",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 207805,
    "stars": 11838
  },
  {
    "full_name": "ITSpecialist111/ai_automation_suggester",
    "name": "ai_automation_suggester",
    "description": "This custom Home Assistant integration automatically scans your entities, detects new devices, and uses AI (via cloud and local APIs) to suggest tailored automations. It supports multiple AI providers, including OpenAI, Anthropic, Google, Groq, LocalAI, and Ollama. The integration provides automation suggestions via persistent notifications.",
    "html_url": [
      "https://github.com/ITSpecialist111/ai_automation_suggester/blob/a3a4bbbd2a0f8b15b360891c627b4be2cef2d0db/custom_components/ai_automation_suggester/config_flow.py",
      "https://github.com/ITSpecialist111/ai_automation_suggester/blob/a3a4bbbd2a0f8b15b360891c627b4be2cef2d0db/custom_components/ai_automation_suggester/coordinator.py",
      "https://github.com/ITSpecialist111/ai_automation_suggester/blob/a3a4bbbd2a0f8b15b360891c627b4be2cef2d0db/custom_components/ai_automation_suggester/const.py"
    ],
    "model": [
      "claude",
      "gemini",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2874,
    "stars": 477
  },
  {
    "full_name": "pwnhyo/LIAV-Checker",
    "name": "LIAV-Checker",
    "description": "LLM-Integrated Application Vulnerability Checker",
    "html_url": [
      "https://github.com/pwnhyo/LIAV-Checker/blob/fabf9b271bcb08ebb1af13adff3d92dc5d813fcf/__main__.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2559,
    "stars": 0
  },
  {
    "full_name": "Eslamasabry/litellm",
    "name": "litellm",
    "description": null,
    "html_url": [
      "https://github.com/Eslamasabry/litellm/blob/61e4d02e49b2a8cf6fc5c87bfb9e4f5239ecbac5/litellm/main.py",
      "https://github.com/Eslamasabry/litellm/blob/61e4d02e49b2a8cf6fc5c87bfb9e4f5239ecbac5/litellm/main.py"
    ],
    "model": [
      "claude",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 97301,
    "stars": 0
  },
  {
    "full_name": "DefamationStation/Retrochat-v2",
    "name": "Retrochat-v2",
    "description": "RetroChat is a powerful command-line interface for interacting with various AI language models. It provides a seamless experience for engaging with different chat providers while offering robust features for managing and customizing your conversations. The code in this repo is 100% AI generated. Nothing has been written by a human. ",
    "html_url": [
      "https://github.com/DefamationStation/Retrochat-v2/blob/f0068228492b243c71293cf62969f58cf65cf66a/retrochat.py",
      "https://github.com/DefamationStation/Retrochat-v2/blob/f0068228492b243c71293cf62969f58cf65cf66a/retrochat.py"
    ],
    "model": [
      "claude",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1896,
    "stars": 76
  },
  {
    "full_name": "Jinash-Rouniyar/Web_Rembrance",
    "name": "Web_Rembrance",
    "description": "A web-application that provides personalized, conversational SAT tutoring to help students practice SAT questions built on top of Langchain and deployed using docker on DigitalOcean. . ",
    "html_url": [
      "https://github.com/Jinash-Rouniyar/Web_Rembrance/blob/085e0abf36c3f185321694a30eb7600460b9cfb0/venv/Lib/site-packages/langchain_anthropic/chat_models.py"
    ],
    "model": [
      "claude"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2003290,
    "stars": 0
  },
  {
    "full_name": "Makesh-Srinivasan/LangChain-GPT-Researcher",
    "name": "LangChain-GPT-Researcher",
    "description": "GPT-Researcher as a LangChain tool to be used in Agents and Chains",
    "html_url": [
      "https://github.com/Makesh-Srinivasan/LangChain-GPT-Researcher/blob/9142703eb30340c7a6c2e6bfb973ac3863ccb449/libs/partners/anthropic/langchain_anthropic/chat_models.py",
      "https://github.com/Makesh-Srinivasan/LangChain-GPT-Researcher/blob/9142703eb30340c7a6c2e6bfb973ac3863ccb449/libs/partners/openai/tests/unit_tests/embeddings/test_azure_embeddings.py"
    ],
    "model": [
      "claude",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 515254,
    "stars": 121
  },
  {
    "full_name": "wzdnzd/chatgpt-collector",
    "name": "chatgpt-collector",
    "description": "AIGC API Services Freedom",
    "html_url": [
      "https://github.com/wzdnzd/chatgpt-collector/blob/8461f5153ee5f7157ef08468ae334c6d475b70d8/cmd/search.py",
      "https://github.com/wzdnzd/chatgpt-collector/blob/8461f5153ee5f7157ef08468ae334c6d475b70d8/cmd/search.py",
      "https://github.com/wzdnzd/chatgpt-collector/blob/ffca8f94f51748b5e01bb9d04cfff4f88df6aae2/cmd/search.py"
    ],
    "model": [
      "claude",
      "gemini",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 7864,
    "stars": 8
  },
  {
    "full_name": "zoom/meetingbot-recall-sample",
    "name": "meetingbot-recall-sample",
    "description": "Zoom Meeting assistant built using Recall.ai, Anthropic's Claude API, and the Zoom Apps SDK",
    "html_url": [
      "https://github.com/zoom/meetingbot-recall-sample/blob/b7f280afb49bdf6803fdfbb30b14d95caf2b349c/server/helpers/anthropic.js"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 12620,
    "stars": 80
  },
  {
    "full_name": "JoeyWangTW/youtube-addiction-rehab-chrome-extension",
    "name": "youtube-addiction-rehab-chrome-extension",
    "description": "LLM powered chrome extension for content level blocking and filtering",
    "html_url": [
      "https://github.com/JoeyWangTW/youtube-addiction-rehab-chrome-extension/blob/0674fbefdaaa91a7695c3ac27ac8123a00386914/chrome-extension/manifest.js"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 8793,
    "stars": 75
  },
  {
    "full_name": "Magnazee/PWA005",
    "name": "PWA005",
    "description": "Claude Chat Interface - A simple PWA for interacting with Claude AI",
    "html_url": [
      "https://github.com/Magnazee/PWA005/blob/bc14ab3217c887f094d3311c634a84c3f2709457/server.js"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 10295,
    "stars": 0
  },
  {
    "full_name": "rxtoolkit/genai",
    "name": "genai",
    "description": "Generative AI tools for RxJS (e.g. OpenAI, Anthropic, Cohere, HuggingFace, etc)",
    "html_url": [
      "https://github.com/rxtoolkit/genai/blob/5c492b12bc844550cf1ca715324f32a168d1782d/src/internals/toAnthropic.js"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 987,
    "stars": 3
  },
  {
    "full_name": "zmxv/humorset",
    "name": "humorset",
    "description": "HumorSet is a data set to evaluate AI model's sense of humor and ability to explain jokes.",
    "html_url": [
      "https://github.com/zmxv/humorset/blob/e0bf1d4262d653e8f18dadd53c61747cf42ce129/scripts/query.js",
      "https://github.com/zmxv/humorset/blob/e0bf1d4262d653e8f18dadd53c61747cf42ce129/scripts/query.js"
    ],
    "model": [
      "gemini",
      "openai"
    ],
    "language": [
      "JavaScript",
      "javascript"
    ],
    "fork": false,
    "loc": 1904,
    "stars": 2
  },
  {
    "full_name": "me-suzy/Integrate-ChatBOT-with-CLAUDE.AI-on-your-website",
    "name": "Integrate-ChatBOT-with-CLAUDE.AI-on-your-website",
    "description": "Integrate ChatBOT with CHATGPT on your website - Step by step",
    "html_url": [
      "https://github.com/me-suzy/Integrate-ChatBOT-with-CLAUDE.AI-on-your-website/blob/64b111d85d23d325c7674fab0e0ab317e16dc336/server.js"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 255,
    "stars": 0
  },
  {
    "full_name": "allenyo7/actualclaudecloneworks",
    "name": "actualclaudecloneworks",
    "description": "this is the one that works when hosted locally, and is split in two folders for client and server.",
    "html_url": [
      "https://github.com/allenyo7/actualclaudecloneworks/blob/a0108a4c82796012ce14fe767ea42add8de6ed97/server/index.js"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 19719,
    "stars": 0
  },
  {
    "full_name": "chokiproai/ChatGPT-Plugins",
    "name": "ChatGPT-Plugins",
    "description": "Chat AI (↓↓Cuộn trang để xem thêm↓↓)",
    "html_url": [
      "https://github.com/chokiproai/ChatGPT-Plugins/blob/2a7488bc08ea2fd71370a0c117613fdc6c7c4347/next.config.mjs",
      "https://github.com/chokiproai/ChatGPT-Plugins/blob/3c40f310fcdb2e91de47dd17df82ec48a6252ff7/next.config.mjs"
    ],
    "model": [
      "gemini",
      "openai"
    ],
    "language": [
      "JavaScript",
      "javascript"
    ],
    "fork": false,
    "loc": 59488,
    "stars": 72
  },
  {
    "full_name": "gloryhry/ChatGPT-Next-Web-LangChain",
    "name": "ChatGPT-Next-Web-LangChain",
    "description": null,
    "html_url": [
      "https://github.com/gloryhry/ChatGPT-Next-Web-LangChain/blob/beb7d6a422ddd2e9823c219d8713af4f2ea7696c/next.config.mjs"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 39998,
    "stars": 0
  },
  {
    "full_name": "ChatGPTNextWeb/ChatGPT-Next-Web",
    "name": "ChatGPT-Next-Web",
    "description": "A cross-platform ChatGPT/Gemini UI (Web / PWA / Linux / Win / MacOS). 一键拥有你自己的跨平台 ChatGPT/Gemini/Claude LLM 应用。",
    "html_url": [
      "https://github.com/ChatGPTNextWeb/ChatGPT-Next-Web/blob/c0062ff2802a6d921895517aa4ab17b1c897fe72/next.config.mjs"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 46304,
    "stars": 83775
  },
  {
    "full_name": "find-xposed-magisk/Yidadaa_ChatGPT-Next-Web",
    "name": "Yidadaa_ChatGPT-Next-Web",
    "description": "A well-designed cross-platform ChatGPT UI (Web / PWA / Linux / Win / MacOS). 一键拥有你自己的跨平台 ChatGPT 应用。",
    "html_url": [
      "https://github.com/find-xposed-magisk/Yidadaa_ChatGPT-Next-Web/blob/729f7b7ed7b5feeccb6abbe6dfee834ffc5eedec/next.config.mjs"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 46547,
    "stars": 12
  },
  {
    "full_name": "zydou/ChatGPT-Next-Web",
    "name": "ChatGPT-Next-Web",
    "description": "A well-designed cross-platform ChatGPT UI (Web / PWA / Linux / Win / MacOS). 一键拥有你自己的跨平台 ChatGPT 应用。",
    "html_url": [
      "https://github.com/zydou/ChatGPT-Next-Web/blob/f8b10ad8b173927861c6d1df12e07470465c9a1e/next.config.mjs"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 46303,
    "stars": 0
  },
  {
    "full_name": "carsond135/ChatGPT-Next-Web",
    "name": "ChatGPT-Next-Web",
    "description": "A cross-platform ChatGPT/Gemini UI.",
    "html_url": [
      "https://github.com/carsond135/ChatGPT-Next-Web/blob/24fb633552e3c6989cd0bb020ad91f074e46aa60/next.config.mjs",
      "https://github.com/carsond135/ChatGPT-Next-Web/blob/24fb633552e3c6989cd0bb020ad91f074e46aa60/next.config.mjs"
    ],
    "model": [
      "gemini",
      "openai"
    ],
    "language": [
      "JavaScript",
      "javascript"
    ],
    "fork": false,
    "loc": 41441,
    "stars": 1
  },
  {
    "full_name": "buer123123/chatgpt-next-web-gemini",
    "name": "chatgpt-next-web-gemini",
    "description": null,
    "html_url": [
      "https://github.com/buer123123/chatgpt-next-web-gemini/blob/3d5f5cb1aa2fefee5e9d2eccddbf484266b828d4/next.config.mjs"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 41120,
    "stars": 0
  },
  {
    "full_name": "sej95/ChatTopWeb",
    "name": "ChatTopWeb",
    "description": "A well-designed cross-platform Gemini UI (Web / PWA / Linux / Win / MacOS). 一键拥有你自己的跨平台 Gemini 应用。",
    "html_url": [
      "https://github.com/sej95/ChatTopWeb/blob/876f12c3b87addcf34c25407c2b3f440aae7df17/next.config.mjs"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 40937,
    "stars": 0
  },
  {
    "full_name": "Dogtiti/ChatGPT-Next-Web-EarlyBird",
    "name": "ChatGPT-Next-Web-EarlyBird",
    "description": "A cross-platform ChatGPT/Gemini UI (Web / PWA / Linux / Win / MacOS). 一键拥有你自己的跨平台 ChatGPT/Gemini 应用。",
    "html_url": [
      "https://github.com/Dogtiti/ChatGPT-Next-Web-EarlyBird/blob/3e9fdc6a7377106b0b0e6edc1087793e1fba6f94/next.config.mjs"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 43381,
    "stars": 13
  },
  {
    "full_name": "Stevenic/convo",
    "name": "convo",
    "description": "Convo is a conversational programming language that's designed to be generated and interpreted by a Large Language Model (LLM).",
    "html_url": [
      "https://github.com/Stevenic/convo/blob/17acae8db1a1ff16934c5097748d912670853cf5/examples/fauxberry-cli/fauxberry.js",
      "https://github.com/Stevenic/convo/blob/17acae8db1a1ff16934c5097748d912670853cf5/realtime/realtime.py"
    ],
    "model": [
      "gemini",
      "openai"
    ],
    "language": [
      "JavaScript",
      "python"
    ],
    "fork": false,
    "loc": 6833,
    "stars": 30
  },
  {
    "full_name": "CompendiumLabs/oneping",
    "name": "oneping",
    "description": "Library for querying and chatting with LLMs. Supports major providers.",
    "html_url": [
      "https://github.com/CompendiumLabs/oneping/blob/c7e4b65b10e52d4bb93c9d10cfcaf080330cd7e7/oneping/web/curl.js",
      "https://github.com/CompendiumLabs/oneping/blob/fc4c595e18ec7b3457ea9d08ca4d95108d25cfc8/oneping/web/audio.js"
    ],
    "model": [
      "gemini",
      "openai"
    ],
    "language": [
      "JavaScript",
      "javascript"
    ],
    "fork": false,
    "loc": 1622,
    "stars": 1
  },
  {
    "full_name": "irom77/filterable-table-demo",
    "name": "filterable-table-demo",
    "description": "filter with LLM",
    "html_url": [
      "https://github.com/irom77/filterable-table-demo/blob/3be900b9e1c777fa933b311eb671c5c82c1036c9/src/components/FilterableTable.jsx"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 6724,
    "stars": 0
  },
  {
    "full_name": "QuestoM/Linsights",
    "name": "Linsights",
    "description": "Linsights is a Chrome extension that adds AI-powered insights to LinkedIn posts. It integrates a \"Linsights\" button into the LinkedIn interface, using the Claude API to analyze post content and generate insights. Users can customize AI settings, and the extension automatically inserts insights into comment boxes.",
    "html_url": [
      "https://github.com/QuestoM/Linsights/blob/a5a51f8ca547854518dcf18d7098fe58038f72d6/background.js"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 484,
    "stars": 0
  },
  {
    "full_name": "remichu-ai/gallamaUI",
    "name": "gallamaUI",
    "description": null,
    "html_url": [
      "https://github.com/remichu-ai/gallamaUI/blob/99567efa983a58e77e2c0a61cd3362ccd198f151/frontend/src/store/apiKeyStore.js"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 26540,
    "stars": 23
  },
  {
    "full_name": "me-suzy/Integrate-ChatBOT-with-CLAUDE.AI-on-your-website-the-second-method",
    "name": "Integrate-ChatBOT-with-CLAUDE.AI-on-your-website-the-second-method",
    "description": "Integrate ChatBOT with CLAUDE.AI on your website (the second method)",
    "html_url": [
      "https://github.com/me-suzy/Integrate-ChatBOT-with-CLAUDE.AI-on-your-website-the-second-method/blob/ca5dddd0f9ad4d537fe629a924573d74075f9d53/server.js"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 335,
    "stars": 0
  },
  {
    "full_name": "ivanyu/hn-tldr-extension",
    "name": "hn-tldr-extension",
    "description": "A bring-your-own-key browser extension for summarizing Hacker News articles with LLMs",
    "html_url": [
      "https://github.com/ivanyu/hn-tldr-extension/blob/be8d55e2eb3370fc56e904da990d09f261c55cb0/src/background.js",
      "https://github.com/ivanyu/hn-tldr-extension/blob/be8d55e2eb3370fc56e904da990d09f261c55cb0/src/background.js"
    ],
    "model": [
      "gemini",
      "openai"
    ],
    "language": [
      "JavaScript",
      "javascript"
    ],
    "fork": false,
    "loc": 6853,
    "stars": 55
  },
  {
    "full_name": "AmanPriyanshu/API-LLM-Hub",
    "name": "API-LLM-Hub",
    "description": "A static-page vanilla-js interface for various LLM APIs (OpenAI, Claude, Gemini, Together).",
    "html_url": [
      "https://github.com/AmanPriyanshu/API-LLM-Hub/blob/3d6eb4ac60fd06d8ccc08aa19acd94329d74198f/unified-llm-api.js"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 1592,
    "stars": 7
  },
  {
    "full_name": "threedesoft/toshimo",
    "name": "toshimo",
    "description": "AI-powered coding assistant with multi-LLM support and comprehensive testing",
    "html_url": [
      "https://github.com/threedesoft/toshimo/blob/04cedcdf5754373cca84f5a30db038aa7e4efe4b/src/services/LLMService.js",
      "https://github.com/threedesoft/toshimo/blob/04cedcdf5754373cca84f5a30db038aa7e4efe4b/src/services/LLMService.js"
    ],
    "model": [
      "gemini",
      "openai"
    ],
    "language": [
      "JavaScript",
      "javascript"
    ],
    "fork": false,
    "loc": 2587,
    "stars": 0
  },
  {
    "full_name": "radareorg/r2ai",
    "name": "r2ai",
    "description": "local language model for radare2",
    "html_url": [
      "https://github.com/radareorg/r2ai/blob/223a2660351c0d8b66e7f36321c1dbdf9d35037d/decai/decai.r2.js",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/src/r2ai_openai.c",
      "https://github.com/radareorg/r2ai/blob/81188c663bc8a6622d7952e460440a75ff9c2314/decai/decai.r2.js"
    ],
    "model": [
      "gemini",
      "openai"
    ],
    "language": [
      "JavaScript",
      "c#",
      "javascript"
    ],
    "fork": false,
    "loc": 18123,
    "stars": 281
  },
  {
    "full_name": "lugia19/Claude-Usage-Extension",
    "name": "Claude-Usage-Extension",
    "description": "A usage tracker extension for Claude.ai",
    "html_url": [
      "https://github.com/lugia19/Claude-Usage-Extension/blob/8a41d76fd36a2afea10129b0d7d8d205428f3b95/background.js"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "JavaScript"
    ],
    "fork": false,
    "loc": 3666,
    "stars": 103
  },
  {
    "full_name": "fuzhengwei/openai-sdk-java",
    "name": "openai-sdk-java",
    "description": "星球开源共建项目 《OpenAI SDK》 统一大模型标准化对接的技术组件项目，此项目以解决实际市面上的场景为诉求，将 OpenAI、Claude、PalM、文心一言、通义千问、讯飞星火、智谱 ChatGLM、腾讯混元等这些大模型做一个统一的 SDK 对接组件。",
    "html_url": [
      "https://github.com/fuzhengwei/openai-sdk-java/blob/6fa7f0c43b41b5dfcf7a64d4f1d9f4d81e6724d3/src/main/java/cn/bugstack/openai/executor/model/google/config/PalmConfig.java",
      "https://github.com/fuzhengwei/openai-sdk-java/blob/6fa7f0c43b41b5dfcf7a64d4f1d9f4d81e6724d3/src/main/java/cn/bugstack/openai/executor/model/google/config/GeminiProConfig.java",
      "https://github.com/fuzhengwei/openai-sdk-java/blob/6fa7f0c43b41b5dfcf7a64d4f1d9f4d81e6724d3/src/main/java/cn/bugstack/openai/executor/model/gemini/config/GeminiProConfig.java",
      "https://github.com/fuzhengwei/openai-sdk-java/blob/6fa7f0c43b41b5dfcf7a64d4f1d9f4d81e6724d3/src/main/java/cn/bugstack/openai/executor/model/aliyun/config/AliModelConfig.java"
    ],
    "model": [
      "gemini",
      "qwen"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 7529,
    "stars": 57
  },
  {
    "full_name": "Lunatix01/ragscan",
    "name": "ragscan",
    "description": "Simple CLI RAG scanner",
    "html_url": [
      "https://github.com/Lunatix01/ragscan/blob/e78c200d9ce1fd05f6f524cddd44c5dbd38b940f/src/main/java/lunatix/ragscan/gemini/GeminiClient.java"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 1879,
    "stars": 20
  },
  {
    "full_name": "Suhas-Koheda/Gemini_Java_Wrapper",
    "name": "Gemini_Java_Wrapper",
    "description": null,
    "html_url": [
      "https://github.com/Suhas-Koheda/Gemini_Java_Wrapper/blob/dd6e875c7388891668b413877a80b3f91308d196/src/main/java/org/example/javachatbot/config/GeminiConfig.java"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 662,
    "stars": 0
  },
  {
    "full_name": "AlvesBenvindo/ChatBox",
    "name": "ChatBox",
    "description": "Pequeno chat feito em JAVA integrado com Gemini",
    "html_url": [
      "https://github.com/AlvesBenvindo/ChatBox/blob/1f4689007b501777ce55bd69f12a4b56b368f25d/src/main/java/digra/dev/bind_IA/servico_IA/Service_Gemini.java"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 463,
    "stars": 2
  },
  {
    "full_name": "IvanSJr/spring-integration-gemini",
    "name": "spring-integration-gemini",
    "description": "Integração do Spring Boot com o Gemini",
    "html_url": [
      "https://github.com/IvanSJr/spring-integration-gemini/blob/38802bdb549a907ce20e409c0731e4478d35087f/src/main/java/com/github/ivansjr/integrationgeminispring/service/GeminiPromptService.java"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 456,
    "stars": 0
  },
  {
    "full_name": "sam253narula/spring-boot-gemini",
    "name": "spring-boot-gemini",
    "description": "Spring Boot gemini integration project",
    "html_url": [
      "https://github.com/sam253narula/spring-boot-gemini/blob/b676de792cb0d4426afff465cc9d561f3218968b/spring-boot-gemini/src/main/java/com/gemini/serviceImpl/GeminiService.java"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 149,
    "stars": 4
  },
  {
    "full_name": "devlive-community/openai-java-sdk",
    "name": "openai-java-sdk",
    "description": "Provides an easy-to-use SDK for Java developers to interact with the APIs of open AI models.",
    "html_url": [
      "https://github.com/devlive-community/openai-java-sdk/blob/8c2876f9e22e6965019f69753640bb9191e5ec7a/src/main/java/org/devlive/sdk/platform/google/interceptor/GoogleInterceptor.java",
      "https://github.com/devlive-community/openai-java-sdk/blob/8c2876f9e22e6965019f69753640bb9191e5ec7a/src/main/java/org/devlive/sdk/openai/OpenAiClient.java",
      "https://github.com/devlive-community/openai-java-sdk/blob/8c2876f9e22e6965019f69753640bb9191e5ec7a/src/main/java/org/devlive/sdk/openai/OpenAiClient.java"
    ],
    "model": [
      "gemini",
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 10097,
    "stars": 111
  },
  {
    "full_name": "valdineisaugo/java-google-gemini",
    "name": "java-google-gemini",
    "description": null,
    "html_url": [
      "https://github.com/valdineisaugo/java-google-gemini/blob/885c164a43ef1e3a746355d819b65f1cd6d971a5/src/main/java/com/saugo/gemini/GeminiController.java"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 458,
    "stars": 0
  },
  {
    "full_name": "quochung-cyou/GGStudy",
    "name": "GGStudy",
    "description": "GGStudy is a smart learning platform that uses artificial intelligence (AI), specifically Gemini, to create customized learning slides, facilitating efficient and accessible learning through a structured roadmap and continuous interaction.",
    "html_url": [
      "https://github.com/quochung-cyou/GGStudy/blob/cb516631e66b4b8e735d082515a1121a3a5916d3/backend/src/main/java/web/service/GeminiClientImpl.java"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 6998,
    "stars": 2
  },
  {
    "full_name": "Abduazizxon11/Gemini-AI-telegram-bot",
    "name": "Gemini-AI-telegram-bot",
    "description": null,
    "html_url": [
      "https://github.com/Abduazizxon11/Gemini-AI-telegram-bot/blob/a484271ca6230f05cd11ce17e8a7275b6b4aeec9/src/main/java/org/example/MyBot.java"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 180,
    "stars": 0
  },
  {
    "full_name": "ai-versum/ai-versum",
    "name": "ai-versum",
    "description": "The chat to communicate with either offline or online models like Ollama, ChatGPT, VertexAI, Claude, Gemini, etc. ",
    "html_url": [
      "https://github.com/ai-versum/ai-versum/blob/b6ab79e22367aeb53585ad753f8f9e89579732ba/backend/src/main/java/aiversum/backend/service/ModelService.java",
      "https://github.com/ai-versum/ai-versum/blob/b6ab79e22367aeb53585ad753f8f9e89579732ba/backend/src/main/java/aiversum/backend/service/ModelService.java"
    ],
    "model": [
      "gemini",
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 6241,
    "stars": 2
  },
  {
    "full_name": "04aks/gemini-sdk",
    "name": "gemini-sdk",
    "description": null,
    "html_url": [
      "https://github.com/04aks/gemini-sdk/blob/ceb2287349e4c917d74459cecf8afacbd461c1a2/src/main/java/aks/gemini/GeminiClient.java"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 211,
    "stars": 0
  },
  {
    "full_name": "ramide1/mcgemini",
    "name": "mcgemini",
    "description": "A Minecraft Google Gemini bridge for interacting with Spigot server",
    "html_url": [
      "https://github.com/ramide1/mcgemini/blob/c9b786180cbc64045e972b90a88ccc76582a6b8c/src/main/java/com/ramide1/mcgemini/Gemini.java"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 267,
    "stars": 1
  },
  {
    "full_name": "chandan789maity/LLM-using-Spring-boot",
    "name": "LLM-using-Spring-boot",
    "description": "We are developing a LLM based Chatbot using Spring boot, Typescript  etc.",
    "html_url": [
      "https://github.com/chandan789maity/LLM-using-Spring-boot/blob/daa5f02c234f063ff36d70b9f23e2a0381819598/server/src/main/java/com/webosmotic/gemini/service/AIService.java"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 19050,
    "stars": 3
  },
  {
    "full_name": "st0rm1O1/Gemini-API",
    "name": "Gemini-API",
    "description": "Java example demonstrating how to use the `GeminiAPI` to generate text responses based on a given prompt.",
    "html_url": [
      "https://github.com/st0rm1O1/Gemini-API/blob/72ebed89478ca84377add6dc9c8a577a043bc665/src/main/java/GeminiAPI.java"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 187,
    "stars": 0
  },
  {
    "full_name": "Praveen-Tankala/BuildAndBlogMarathon",
    "name": "BuildAndBlogMarathon",
    "description": "Smart Storage Software with Gemini AI",
    "html_url": [
      "https://github.com/Praveen-Tankala/BuildAndBlogMarathon/blob/8331e9da06e3009f5d0f9df9f8278604fb59a27c/src/main/java/org/smartstorage/Service/PromptServiceImpl.java"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 1171,
    "stars": 0
  },
  {
    "full_name": "zhangjh/gemini_sdk",
    "name": "gemini_sdk",
    "description": "Google gemini api's java implement",
    "html_url": [
      "https://github.com/zhangjh/gemini_sdk/blob/4f7737022146f6b7b46c5b6738522281ff733a6a/src/main/java/me/zhangjh/gemini/util/HttpClientUtil.java"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 1151,
    "stars": 16
  },
  {
    "full_name": "lrbmike/java-ai-sdk",
    "name": "java-ai-sdk",
    "description": "AI APIs SDK for JAVA. Provide an easy way to improve development. Support Google Gemini, OpenAi, Ollama",
    "html_url": [
      "https://github.com/lrbmike/java-ai-sdk/blob/12087b7f865b4b5f59d710b35e3f24ad5b2ed278/src/main/java/org/liurb/ai/sdk/gemini/GeminiClient.java",
      "https://github.com/lrbmike/java-ai-sdk/blob/12087b7f865b4b5f59d710b35e3f24ad5b2ed278/src/main/java/org/liurb/ai/sdk/openai/OpenAiClient.java"
    ],
    "model": [
      "gemini",
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 1889,
    "stars": 6
  },
  {
    "full_name": "mdaconta/xlm-eco-api",
    "name": "xlm-eco-api",
    "description": "Cross Language Model (LLM/SLM/etc.) Ecosystem API (xlm-eco-api)",
    "html_url": [
      "https://github.com/mdaconta/xlm-eco-api/blob/3ab8bf21e6c7b31c71fadf9d55eeaff9b49918b8/src/main/java/us/daconta/xlmeco/provider/impl/GoogleProvider.java"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 5132,
    "stars": 1
  },
  {
    "full_name": "michael-ameri/gemini-api",
    "name": "gemini-api",
    "description": "Java library for gemini api",
    "html_url": [
      "https://github.com/michael-ameri/gemini-api/blob/3b893452eedbc669139769036daf3b5005b7a7fb/gemini-api/src/main/java/swiss/ameri/gemini/api/GenAi.java"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 1549,
    "stars": 19
  },
  {
    "full_name": "didalgolab/spring-ai-gemini",
    "name": "spring-ai-gemini",
    "description": "Spring AI compatible Gemini API provider",
    "html_url": [
      "https://github.com/didalgolab/spring-ai-gemini/blob/51e6ed5bef64cb40ff35901de70fefa6069fd252/spring-ai-gemini/src/main/java/com/didalgo/ai/gemini/api/GeminiApi.java"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 1831,
    "stars": 4
  },
  {
    "full_name": "richeeta/AIAuditor",
    "name": "AIAuditor",
    "description": "Lightweight BApp that seamlessly integrates powerful LLM-scanning capabilities into Burp's built-in Scanner with improved accuracy. Supports the latest LLMs from OpenAI (gpt-4o, o1), Anthropic (Claude 3.5, Claude 3), and Google (Gemini 1.5). Requires valid API key(s) and an active Burp Suite Pro or Enterprise license.",
    "html_url": [
      "https://github.com/richeeta/AIAuditor/blob/0f4411aed1e517928e49d4bf66f6144600ac72a7/src/main/java/burp/AIAuditor.java",
      "https://github.com/richeeta/AIAuditor/blob/0f4411aed1e517928e49d4bf66f6144600ac72a7/src/main/java/burp/AIAuditor.java"
    ],
    "model": [
      "gemini",
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 1505,
    "stars": 9
  },
  {
    "full_name": "flyun/chatAir",
    "name": "chatAir",
    "description": "☁️A native Android app for ChatGPT, Gemini, and Claude ☁️ChatGPT、Gemini 和 Claude 的原生安卓应用程序",
    "html_url": [
      "https://github.com/flyun/chatAir/blob/dbc1ffcf9e047f21943aa288cce2f419ab4c9503/openai_service/src/main/java/com/theokanning/openai/service/OpenAiService.java"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 3913299,
    "stars": 726
  },
  {
    "full_name": "rdkworld/portfolio",
    "name": "portfolio",
    "description": "Portfolio of side-projects by Raghavendra Kulkarni",
    "html_url": [
      "https://github.com/rdkworld/portfolio/blob/157a94365615c807d937a572630f34b2b2865ff3/genai/gemini/invoice-extractor/quickstart.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1145910,
    "stars": 1
  },
  {
    "full_name": "rajib76/gcpllm",
    "name": "gcpllm",
    "description": "google llm examples",
    "html_url": [
      "https://github.com/rajib76/gcpllm/blob/85b469f4dd9c7eb69062de00e25a1c93a746b047/gcp_bison_using_langchain.py",
      "https://github.com/rajib76/gcpllm/blob/85b469f4dd9c7eb69062de00e25a1c93a746b047/palmai_custom_llm.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 576,
    "stars": 0
  },
  {
    "full_name": "abhinandansgit/GENai-chat",
    "name": "GENai-chat",
    "description": "created an ai chatbot based on generetive text response working through gemini API key.",
    "html_url": [
      "https://github.com/abhinandansgit/GENai-chat/blob/5caad43b26dc893dbd367184886d689086c0543f/pipgem.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 76,
    "stars": 1
  },
  {
    "full_name": "Keshav-T-M/Astra-AI",
    "name": "Astra-AI",
    "description": "It's an Ai Project build using Python and Gemini Ai",
    "html_url": [
      "https://github.com/Keshav-T-M/Astra-AI/blob/931547892ca64aa1eb788d47ec995b8be9a8b4f5/Gemini_content.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 90,
    "stars": 0
  },
  {
    "full_name": "eniompw/GeminiAPI",
    "name": "GeminiAPI",
    "description": "Simple ChatGPT Clone",
    "html_url": [
      "https://github.com/eniompw/GeminiAPI/blob/38a308a6bac288aa4f95bea47e29d68c89689eaa/dev/rest.py",
      "https://github.com/eniompw/GeminiAPI/blob/38a308a6bac288aa4f95bea47e29d68c89689eaa/dev/flask/app-rest.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 269,
    "stars": 0
  },
  {
    "full_name": "faiza293/gemini-argocd",
    "name": "gemini-argocd",
    "description": null,
    "html_url": [
      "https://github.com/faiza293/gemini-argocd/blob/894041f4bcd61b425ebfb3c4530203a57c451a9d/backend/app.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 279,
    "stars": 0
  },
  {
    "full_name": "ALMerrill/wiki-rag",
    "name": "wiki-rag",
    "description": "RAG model pipeline set up to work with wikipedia articles",
    "html_url": [
      "https://github.com/ALMerrill/wiki-rag/blob/0e81c6ca898257ce0b892ea0c6a52f70a3c24cd9/llm.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 221,
    "stars": 1
  },
  {
    "full_name": "abhineetraj1/flask-autogenius",
    "name": "flask-autogenius",
    "description": "  AutoGenius  Problem Statement : 3.2.1.7 Generative AI solutions for developing proposals based on customer requirements – AI tools for generating customized proposals tailored to customer demands.",
    "html_url": [
      "https://github.com/abhineetraj1/flask-autogenius/blob/3e08feb69e22f955fc4ca0e71e44070d0d944aa9/app.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 409,
    "stars": 0
  },
  {
    "full_name": "googleapis/python-genai",
    "name": "python-genai",
    "description": "Google Gen AI Python SDK provides an interface for developers to integrate Google's generative models into their Python applications. This is an early release. API is subject to change. Please do not use this SDK in production environments at this stage",
    "html_url": [
      "https://github.com/googleapis/python-genai/blob/5586f3d650964547c3e7cafa1165f9c7d1306529/google/genai/tests/caches/constants.py",
      "https://github.com/googleapis/python-genai/blob/5586f3d650964547c3e7cafa1165f9c7d1306529/google/genai/tests/caches/test_create_custom_url.py",
      "https://github.com/googleapis/python-genai/blob/5586f3d650964547c3e7cafa1165f9c7d1306529/google/genai/tests/chats/test_send_message.py",
      "https://github.com/googleapis/python-genai/blob/5586f3d650964547c3e7cafa1165f9c7d1306529/google/genai/_api_client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 161641,
    "stars": 1818
  },
  {
    "full_name": "qiuchen001/gemini-vision-perception",
    "name": "gemini-vision-perception",
    "description": "基于google geminiAPI视频理解的能力，实现标签挖掘、视频RAG",
    "html_url": [
      "https://github.com/qiuchen001/gemini-vision-perception/blob/80c05d9833f768504e7bb2bd06d72470082179be/test1.py",
      "https://github.com/qiuchen001/gemini-vision-perception/blob/80c05d9833f768504e7bb2bd06d72470082179be/tag_mining/qwen/embedding_summary.py"
    ],
    "model": [
      "gemini",
      "qwen"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1358,
    "stars": 0
  },
  {
    "full_name": "dungca1512/llm_retrieval_rag",
    "name": "llm_retrieval_rag",
    "description": null,
    "html_url": [
      "https://github.com/dungca1512/llm_retrieval_rag/blob/2dda7bb1164a895d610bfec2dfe73545f4bb47a2/src/query.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3668,
    "stars": 1
  },
  {
    "full_name": "ChijieAn/Chatbot-Based-on-Google-Gemini",
    "name": "Chatbot-Based-on-Google-Gemini",
    "description": "This repository is a prototype of a chatbot which can help professors to generate letters regarding a student's performance. The backbone chatbot is based on the google Gemini API, and it also utilized the text to speech and speech to text API from Google cloud platform to realize a live dialogue with user.  ",
    "html_url": [
      "https://github.com/ChijieAn/Chatbot-Based-on-Google-Gemini/blob/4df8f026f7720fccc86ba9f1ecab7a5097d6c013/Chatbot%20Version%209.23(Github)/basic_functions.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "RAHULMYDUR/DocuChat-RAG-Based-ChatBOT",
    "name": "DocuChat-RAG-Based-ChatBOT",
    "description": "This Streamlit application allows users to upload PDF files, extract text, and interact with a Retrieval Augmented Generation (RAG)-based chatbot. ",
    "html_url": [
      "https://github.com/RAHULMYDUR/DocuChat-RAG-Based-ChatBOT/blob/ec15a6bda03bcdfee271dd5185d96b9efd39fc4a/retrieval_response.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 232,
    "stars": 0
  },
  {
    "full_name": "Archillesjakins/Ecommerce-Recommendation-LLM-System",
    "name": "Ecommerce-Recommendation-LLM-System",
    "description": "An AI driven app combining Tinder-like interface with personalized recommendations  with Gemini embeddings",
    "html_url": [
      "https://github.com/Archillesjakins/Ecommerce-Recommendation-LLM-System/blob/d7b48b2a524c420ca7796bb77f9a7658b09fec5d/backend/embeddings.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 140,
    "stars": 1
  },
  {
    "full_name": "carlini/yet-another-applied-llm-benchmark",
    "name": "yet-another-applied-llm-benchmark",
    "description": "A benchmark to evaluate language models on questions I've previously asked them to solve.",
    "html_url": [
      "https://github.com/carlini/yet-another-applied-llm-benchmark/blob/2f6b6bac908c53f63e2760b8d48c6499e2b6317f/llms/gemini_model.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3299,
    "stars": 1016
  },
  {
    "full_name": "KroMiose/fis-tool",
    "name": "fis-tool",
    "description": "FIS (File Interaction Script) 工具，用于生成、读取和应用项目文件结构描述，方便与 LLM 进行交互，实现高效的项目迭代",
    "html_url": [
      "https://github.com/KroMiose/fis-tool/blob/8bb16ad1e498df39f4007962b72e08d81a42d889/src/chat_models/gemini_patch.py",
      "https://github.com/KroMiose/fis-tool/blob/8bb16ad1e498df39f4007962b72e08d81a42d889/src/chat_models/chatgpt.py"
    ],
    "model": [
      "gemini",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1125,
    "stars": 10
  },
  {
    "full_name": "v019-exe/shellgemini",
    "name": "shellgemini",
    "description": "Shellgemini, tu asistente en la terminal de linux!",
    "html_url": [
      "https://github.com/v019-exe/shellgemini/blob/10aaa2bb5012514e1033d6e13de295d2b7e12c5f/shellgemini.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "keeqin/esp32_micropython_gemini",
    "name": "esp32_micropython_gemini",
    "description": null,
    "html_url": [
      "https://github.com/keeqin/esp32_micropython_gemini/blob/767dee7e27146e5c769c23b3598dc97d9ad6e6d4/main.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 36,
    "stars": 3
  },
  {
    "full_name": "araobp/node-red-genai",
    "name": "node-red-genai",
    "description": "Node-RED as an LLM-chain framework with IoT",
    "html_url": [
      "https://github.com/araobp/node-red-genai/blob/f1ad5c80c0ffea37ca08b47394ea594aedd81796/ref/search/embeddings_gemini/__init__.py",
      "https://github.com/araobp/node-red-genai/blob/f1ad5c80c0ffea37ca08b47394ea594aedd81796/openai/chat.js"
    ],
    "model": [
      "gemini",
      "openai"
    ],
    "language": [
      "python",
      "javascript"
    ],
    "fork": false,
    "loc": 4984,
    "stars": 1
  },
  {
    "full_name": "GitData-GA/GenAI",
    "name": "GenAI",
    "description": "GenAI harnesses the power of advanced models like GPT-4 and Gemini Pro to serve as versatile coding and writing assistants for users in both R and, soon, Python. This toolbox empowers users with a range of capabilities, including text generation, code optimization, natural language processing, chat assistance, and image interpretation.",
    "html_url": [
      "https://github.com/GitData-GA/GenAI/blob/020c8396b2b98c6dcabdb8ae23e6508ef8bd445b/Python/src/GeAI/connect.py",
      "https://github.com/GitData-GA/GenAI/blob/020c8396b2b98c6dcabdb8ae23e6508ef8bd445b/Python/src/GeAI/txt.py",
      "https://github.com/GitData-GA/GenAI/blob/020c8396b2b98c6dcabdb8ae23e6508ef8bd445b/Python/src/GeAI/txt/txt_default.py",
      "https://github.com/GitData-GA/GenAI/blob/020c8396b2b98c6dcabdb8ae23e6508ef8bd445b/Python/src/GeAI/txt/fix_grammar.py",
      "https://github.com/GitData-GA/GenAI/blob/020c8396b2b98c6dcabdb8ae23e6508ef8bd445b/Python/src/GeAI/txt/optimize_code.py",
      "https://github.com/GitData-GA/GenAI/blob/020c8396b2b98c6dcabdb8ae23e6508ef8bd445b/Python/src/GeAI/txt.py",
      "https://github.com/GitData-GA/GenAI/blob/020c8396b2b98c6dcabdb8ae23e6508ef8bd445b/Python/src/GeAI/txt/txt_default.py",
      "https://github.com/GitData-GA/GenAI/blob/020c8396b2b98c6dcabdb8ae23e6508ef8bd445b/Python/src/GeAI/txt/fix_grammar.py",
      "https://github.com/GitData-GA/GenAI/blob/020c8396b2b98c6dcabdb8ae23e6508ef8bd445b/Python/src/GeAI/txt/optimize_code.py",
      "https://github.com/GitData-GA/GenAI/blob/020c8396b2b98c6dcabdb8ae23e6508ef8bd445b/Python/src/GeAI/txt/image.py"
    ],
    "model": [
      "gemini",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2528,
    "stars": 10
  },
  {
    "full_name": "Audecitysid/CV-Project",
    "name": "CV-Project",
    "description": "This Streamlit app designed to upload an image, generate captions, detect objects, and ask questions about the image. It combines ml models with Gemini’s AI to provide intelligent responses to user queries. ",
    "html_url": [
      "https://github.com/Audecitysid/CV-Project/blob/33c301533dfcd77fdbd057538871f6f08781759c/Gemini.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 150,
    "stars": 1
  },
  {
    "full_name": "withmartian/llm-adapters",
    "name": "llm-adapters",
    "description": "Package for calling different models with same interface",
    "html_url": [
      "https://github.com/withmartian/llm-adapters/blob/8c4b4a5e5013bcd1948b19f1645bce77d2a4899a/adapters/provider_adapters/gemini_sdk_chat_provider_adapter.py",
      "https://github.com/withmartian/llm-adapters/blob/8c4b4a5e5013bcd1948b19f1645bce77d2a4899a/adapters/provider_adapters/openai_sdk_chat_provider_adapter.py"
    ],
    "model": [
      "gemini",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 425924,
    "stars": 23
  },
  {
    "full_name": "Laksh-Mendpara/ADVANCED-RAG",
    "name": "ADVANCED-RAG",
    "description": null,
    "html_url": [
      "https://github.com/Laksh-Mendpara/ADVANCED-RAG/blob/3c933b073a750e398bc1a31d05bc8d88e161ada3/rag/agent.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1145,
    "stars": 0
  },
  {
    "full_name": "CXwudi/litellm-config-generator",
    "name": "litellm-config-generator",
    "description": "Fill up the `model_list` field in your LiteLLM proxy configuration file",
    "html_url": [
      "https://github.com/CXwudi/litellm-config-generator/blob/c957664be7a8a2d23fc64034fb89cc5f82a29ae2/config_generator/src/component/llm_poper/google.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 660,
    "stars": 10
  },
  {
    "full_name": "duolabmeng6/pro-api",
    "name": "pro-api",
    "description": "Unified management of projects with large model APIs, unified conversion to OpenAI format, calling multiple backend services, OpenAI, Anthropic, Gemini, Vertex, Cloudflare, DeepBricks, OpenRouter, etc.",
    "html_url": [
      "https://github.com/duolabmeng6/pro-api/blob/5770580c99bb9014aa06013f3c06b244fa74adbd/app/test/test_api.py",
      "https://github.com/duolabmeng6/pro-api/blob/5770580c99bb9014aa06013f3c06b244fa74adbd/app/provider/openai/openaiProvider.py",
      "https://github.com/duolabmeng6/pro-api/blob/5770580c99bb9014aa06013f3c06b244fa74adbd/app/db/logDB.py"
    ],
    "model": [
      "gemini",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 78924,
    "stars": 128
  },
  {
    "full_name": "KaitoEight/Translating-with-gemini-api",
    "name": "Translating-with-gemini-api",
    "description": null,
    "html_url": [
      "https://github.com/KaitoEight/Translating-with-gemini-api/blob/99cef1b5208dea5a28afdcd6ef431cb6463aa635/api/index.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 276,
    "stars": 4
  },
  {
    "full_name": "PawanYadav007s/AutoExamSolver",
    "name": "AutoExamSolver",
    "description": "**Automated Exam Paper Answering Using Python and Google Gemini**    A Python automation project that processes mixed-type exam papers using Google Gemini. It generates answers and exports them to Word documents, following a structured file naming convention.",
    "html_url": [
      "https://github.com/PawanYadav007s/AutoExamSolver/blob/8da174fffe8b50bb200e4048fa29a091fe6ab269/Python%20LLM/automate_exam_answers.py",
      "https://github.com/PawanYadav007s/AutoExamSolver/blob/8da174fffe8b50bb200e4048fa29a091fe6ab269/Python%20LLM/automate_exam1.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 665,
    "stars": 1
  },
  {
    "full_name": "pshubham96k/ExamAnswerBot",
    "name": "ExamAnswerBot",
    "description": "A Python automation project that processes 800 mixed-type exam papers using Google Gemini. It generates answers and exports them to Word documents, following a structured file naming convention.",
    "html_url": [
      "https://github.com/pshubham96k/ExamAnswerBot/blob/cdddda740213b7223250defbc04b3179b395848a/Python/automate_exam_answers.py",
      "https://github.com/pshubham96k/ExamAnswerBot/blob/cdddda740213b7223250defbc04b3179b395848a/Python/automate_exam1.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 560,
    "stars": 0
  },
  {
    "full_name": "TeamDman/gemini-engine",
    "name": "gemini-engine",
    "description": "A suite of utilities for interacting with the Gemini 1.5 Pro API",
    "html_url": [
      "https://github.com/TeamDman/gemini-engine/blob/6cd8c9cdffa3d06c934ddf2cec065447b5dfde32/tools/count%20tokens/count%20tokens.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 308145,
    "stars": 2
  },
  {
    "full_name": "runvnc/mr_gemini",
    "name": "mr_gemini",
    "description": null,
    "html_url": [
      "https://github.com/runvnc/mr_gemini/blob/b4bd8e15817c9e54bb5de7d9d9ccc34685bb859a/src/mr_gemini/mod.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 764,
    "stars": 0
  },
  {
    "full_name": "trancethehuman/ai-workshop-code",
    "name": "ai-workshop-code",
    "description": "Code I wrote for my AI & LLM workshops",
    "html_url": [
      "https://github.com/trancethehuman/ai-workshop-code/blob/959b1c5f6a3a6a8e245cf019464f802da138454d/projects/tracing_eval/trace_custom_model.py",
      "https://github.com/trancethehuman/ai-workshop-code/blob/959b1c5f6a3a6a8e245cf019464f802da138454d/projects/ocr-battle/gemini-ocr.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 15886,
    "stars": 436
  },
  {
    "full_name": "merlinbaptista/Handwriting-Recognition-with-Gemini-API",
    "name": "Handwriting-Recognition-with-Gemini-API",
    "description": "This Python script integrates image capture, text extraction from documents, grammar correction, translation, speech recognition, and chatbot interaction using the Gemini API. It allows users to process images, correct and translate text, and interact with a chatbot to answer questions about the documents.",
    "html_url": [
      "https://github.com/merlinbaptista/Handwriting-Recognition-with-Gemini-API/blob/334aa16dbc3bc5e8bf769d8c6915eea4ad00b30d/app.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 453,
    "stars": 1
  },
  {
    "full_name": "SomeoneKong/llm_tool_test_202411",
    "name": "llm_tool_test_202411",
    "description": null,
    "html_url": [
      "https://github.com/SomeoneKong/llm_tool_test_202411/blob/f426d4616bc838d5810e9ef16f6d656e6eda48d3/client_impl/google_openai_impl.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3574,
    "stars": 7
  },
  {
    "full_name": "jaredpek/Study-Buddy",
    "name": "Study-Buddy",
    "description": "A platform to optimize productivity built in Vite.js and Django, leveraging Google Maps API and Gemini LLM",
    "html_url": [
      "https://github.com/jaredpek/Study-Buddy/blob/19c80a47d78acfa0e84bd02f91cb4768055660e2/application/backend/project/buddy/views.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 58226,
    "stars": 0
  },
  {
    "full_name": "RMNCLDYO/gemini-ai-toolkit",
    "name": "gemini-ai-toolkit",
    "description": "Unlock the potential of Google's Gemini AI models with this versatile toolkit. Offering seamless chat, text generation, and multimodal interactions, supporting various file types, including PDF's, images, videos, audio, text and more. Enjoy real-time responses, customizable parameters, and easy integration for diverse AI tasks.",
    "html_url": [
      "https://github.com/RMNCLDYO/gemini-ai-toolkit/blob/7d7924f758fbd9efcca0a1c966517b093c18f560/config.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1278,
    "stars": 71
  },
  {
    "full_name": "Rohan-Vij/llm-product-name",
    "name": "llm-product-name",
    "description": null,
    "html_url": [
      "https://github.com/Rohan-Vij/llm-product-name/blob/ceae0e4afff7e54a8137616187450a9bf622bf50/main.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 98,
    "stars": 0
  },
  {
    "full_name": "nishant-bhandigare/LLM-based-Customer-Virtual-Assistant",
    "name": "LLM-based-Customer-Virtual-Assistant",
    "description": null,
    "html_url": [
      "https://github.com/nishant-bhandigare/LLM-based-Customer-Virtual-Assistant/blob/f012e2e77d0a7460067b116d893641972d790a13/LLM%20Model%20Parts/gemini2.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 5612,
    "stars": 0
  },
  {
    "full_name": "Puzan789/LLM-Projects",
    "name": "LLM-Projects",
    "description": null,
    "html_url": [
      "https://github.com/Puzan789/LLM-Projects/blob/c68f6999cacf4b307da5b5943f75728ee6ac9dd4/finetuning/settings.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1352,
    "stars": 0
  },
  {
    "full_name": "baochi0212/gemini-host",
    "name": "gemini-host",
    "description": "free gemini host for yall",
    "html_url": [
      "https://github.com/baochi0212/gemini-host/blob/5cc8d5b0ecb15c7c1c93101da5134d3be7647831/test_api.py",
      "https://github.com/baochi0212/gemini-host/blob/5cc8d5b0ecb15c7c1c93101da5134d3be7647831/main.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 142,
    "stars": 0
  },
  {
    "full_name": "Ajay-Bazuu/gemini_python_esp8266",
    "name": "gemini_python_esp8266",
    "description": null,
    "html_url": [
      "https://github.com/Ajay-Bazuu/gemini_python_esp8266/blob/4fa6838bd14d0761f3bd1949258d399b12407f08/gemini_with_esp8266.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 59,
    "stars": 0
  },
  {
    "full_name": "marco0antonio0/py-api-gemini",
    "name": "py-api-gemini",
    "description": "Este projeto fornece uma implementação básica de uma classe Python para interagir com a API do Google Gemini. A classe `ia_google` é projetada para realizar consultas na API de maneira organizada e eficiente.",
    "html_url": [
      "https://github.com/marco0antonio0/py-api-gemini/blob/d7c55a341d3b7caed996c42ce84cf346ec090e9f/service_ia.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 118,
    "stars": 2
  },
  {
    "full_name": "g-divya/RAGMedicalReportAnalyzer",
    "name": "RAGMedicalReportAnalyzer",
    "description": "The Retrieval Augmenter Generator (RAG) Enhanced Medical Report Analyzer project aims to develop an advanced system for automatically analyzing medical reports in PDF format and providing summarized insights while enabling users to ask questions based on the extracted information. ",
    "html_url": [
      "https://github.com/g-divya/RAGMedicalReportAnalyzer/blob/7842c3fe9f937fea5fc518cf9fe3baff87057b29/app.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 753,
    "stars": 1
  },
  {
    "full_name": "DattatrayBodake25/LLM-Integration",
    "name": "LLM-Integration",
    "description": null,
    "html_url": [
      "https://github.com/DattatrayBodake25/LLM-Integration/blob/330dc452fbe11862a9853725ffc9f6cfb7d8ef1e/flask_app/utils.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1633458,
    "stars": 0
  },
  {
    "full_name": "whanyu1212/agent-from-scratch",
    "name": "agent-from-scratch",
    "description": "Implementing LLM Agents from scratch without intermediate libraries",
    "html_url": [
      "https://github.com/whanyu1212/agent-from-scratch/blob/6634dec7528b61d73502eb0f1b6bf161311a1e94/src/models/gemini_models.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 256,
    "stars": 0
  },
  {
    "full_name": "DTabernam/youtube-summarizer",
    "name": "youtube-summarizer",
    "description": "YouTube Summarizer is an automated tool that fetches transcripts from YouTube videos and generates concise summaries using natural language model",
    "html_url": [
      "https://github.com/DTabernam/youtube-summarizer/blob/350be19504237c4a4fdd1016d5e54dbcab31ed4c/YTsummarization.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 7092,
    "stars": 1
  },
  {
    "full_name": "yosh95/chat",
    "name": "chat",
    "description": "LLM Chat Tool",
    "html_url": [
      "https://github.com/yosh95/chat/blob/90d1a3338b842df7490d09fe8a7d0c601946988c/gemini.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1072,
    "stars": 0
  },
  {
    "full_name": "TrustedFloppa/Telegram-Bot-Gemini-AI",
    "name": "Telegram-Bot-Gemini-AI",
    "description": null,
    "html_url": [
      "https://github.com/TrustedFloppa/Telegram-Bot-Gemini-AI/blob/6bd6ad9200faddbda48f057b0dd9e62e0bd62913/main.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "ashuthe1/Flask-Ecommerce-Ticket-Classifier",
    "name": "Flask-Ecommerce-Ticket-Classifier",
    "description": "This Flask application provides an endpoint to classify e-commerce reviews into predefined categories using LLama3 and Gemini API.",
    "html_url": [
      "https://github.com/ashuthe1/Flask-Ecommerce-Ticket-Classifier/blob/f994c249c8532fc10a0524b1f017c093d47fe6e2/app.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 189,
    "stars": 0
  },
  {
    "full_name": "datacommonsorg/llm-tools",
    "name": "llm-tools",
    "description": null,
    "html_url": [
      "https://github.com/datacommonsorg/llm-tools/blob/df971f81ce12dd67fe29d7e7f9f47478623f2dae/data_gemma/google_api.py",
      "https://github.com/datacommonsorg/llm-tools/blob/df971f81ce12dd67fe29d7e7f9f47478623f2dae/data_gemma/openai_api.py"
    ],
    "model": [
      "gemini",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1216,
    "stars": 60
  },
  {
    "full_name": "mthnguyener/mini-m",
    "name": "mini-m",
    "description": "Local LLM agent that takes instructions before triggering actions to compile files (txt, scripts – py, cpp). ",
    "html_url": [
      "https://github.com/mthnguyener/mini-m/blob/72738faa6ce03becf4340523cafbe98b57e77205/minim/gemini/agent.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2091,
    "stars": 4
  },
  {
    "full_name": "HawkClaws/proxy_gemini",
    "name": "proxy_gemini",
    "description": "LLamaIndex's custom LLM, a Proxy-enabled version of Gemini!",
    "html_url": [
      "https://github.com/HawkClaws/proxy_gemini/blob/8dce88848221fd3cd7ce827b5f44cbd11690082f/proxy_gemini/proxy_gemini.py",
      "https://github.com/HawkClaws/proxy_gemini/blob/8dce88848221fd3cd7ce827b5f44cbd11690082f/proxy_gemini/proxy_gemini_with_keyring.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 222,
    "stars": 10
  },
  {
    "full_name": "BalajiMittapalli/LLM-based-Rag",
    "name": "LLM-based-Rag",
    "description": null,
    "html_url": [
      "https://github.com/BalajiMittapalli/LLM-based-Rag/blob/bf21e993f67b75824c0f76a4169dae38b513cef4/flask_app/utils.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 354,
    "stars": 0
  },
  {
    "full_name": "akhilpenugonda/LLM_Journey",
    "name": "LLM_Journey",
    "description": "My LLM_Journey",
    "html_url": [
      "https://github.com/akhilpenugonda/LLM_Journey/blob/944b1d5f789e5d77443fa6d7bd2918b080fd8dad/RagOverCode/RAGoverCode.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 11368,
    "stars": 0
  },
  {
    "full_name": "bozicschucky/pdf_rag",
    "name": "pdf_rag",
    "description": "Simple RAG app for query any pdf, for this case i am using a resume but any kind of pdf can be used",
    "html_url": [
      "https://github.com/bozicschucky/pdf_rag/blob/74d12d152622cd13fe6a0f4bcad7737820fd63a9/resume_rag.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 241,
    "stars": 0
  },
  {
    "full_name": "deep-diver/llamaduo",
    "name": "llamaduo",
    "description": "This project showcases an LLMOps pipeline that fine-tunes a small-size LLM model to prepare for the outage of the service LLM. ",
    "html_url": [
      "https://github.com/deep-diver/llamaduo/blob/6e59aedf37c4f66bcdf4ba451102080d6280f847/src/gen/async_generate_data_gemini.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 10234,
    "stars": 306
  },
  {
    "full_name": "SigmaNight/basiliskLLM",
    "name": "basiliskLLM",
    "description": "🐍 Where LLMs Unite",
    "html_url": [
      "https://github.com/SigmaNight/basiliskLLM/blob/aca2d00d95cdeb9806aae4ba1aff8842b3f42901/basilisk/provider.py",
      "https://github.com/SigmaNight/basiliskLLM/blob/5c7c619f6006e5c29c9e13b7875e42fb02009092/basilisk/provider.py"
    ],
    "model": [
      "gemini",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 14595,
    "stars": 22
  },
  {
    "full_name": "shreysharma/llm-rabbitmq-streaming",
    "name": "llm-rabbitmq-streaming",
    "description": "Using Rabbit MQ for communication with LLM with streaming response for the user",
    "html_url": [
      "https://github.com/shreysharma/llm-rabbitmq-streaming/blob/7ee63dc8a237bb5ed2c912e29ea40b9481e46ed1/llm_service/test.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 604,
    "stars": 0
  },
  {
    "full_name": "Poojan38380/SwayamGPT",
    "name": "SwayamGPT",
    "description": "Get solution to every assignment of Swayam Courses on National Programme on Technology Enhanced Learning(NPTEL) through premium LLMs like GPT-4 and GPT-4-TURBO . There is also an added functionality to use premium GPTs for free.",
    "html_url": [
      "https://github.com/Poojan38380/SwayamGPT/blob/e4744a57b96bd479790c5e67911d3fd79f5afc66/Lib/site-packages/g4f/Provider/GeminiPro.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 314699,
    "stars": 2
  },
  {
    "full_name": "GoodAI/goodai-ltm-benchmark",
    "name": "goodai-ltm-benchmark",
    "description": "A library for benchmarking the Long Term Memory and Continual learning capabilities of  LLM based agents. With all the tests and code you need to evaluate your own agents. See more in the blogpost:",
    "html_url": [
      "https://github.com/GoodAI/goodai-ltm-benchmark/blob/188e7618413775f1ce783763d5ee0b5ccd4c31c9/model_interfaces/gemini_interface.py",
      "https://github.com/GoodAI/goodai-ltm-benchmark/blob/188e7618413775f1ce783763d5ee0b5ccd4c31c9/model_interfaces/memgpt_proxy.py"
    ],
    "model": [
      "gemini",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1409317,
    "stars": 72
  },
  {
    "full_name": "pranavmittal07/Mind-Mitra",
    "name": "Mind-Mitra",
    "description": "Developed Mental Health Chatbot using Flask and Gemini API for emotional support. Full-stack Web App with responsive UI, API integration, and real-time interaction.",
    "html_url": [
      "https://github.com/pranavmittal07/Mind-Mitra/blob/7d1fe804e485b44bb93971572f628b635469c9c9/app.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 296,
    "stars": 0
  },
  {
    "full_name": "Piyush5madhukar/LLM-based-Feedback-mechanism-to-situational-solutions",
    "name": "LLM-based-Feedback-mechanism-to-situational-solutions",
    "description": null,
    "html_url": [
      "https://github.com/Piyush5madhukar/LLM-based-Feedback-mechanism-to-situational-solutions/blob/394f997e963dc935c5c4912cd4f44ed9d6c55e4d/server.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 276,
    "stars": 0
  },
  {
    "full_name": "Nikun0209/Application-GeoSpeak-Techwiz-5-GenAI-2024",
    "name": "Application-GeoSpeak-Techwiz-5-GenAI-2024",
    "description": "Using OpenAI's Large Language Models (LLMs) and Generative  AI (Gen AI), the application can dynamically interpret and translate text  considering context, idioms, and subtle nuances.",
    "html_url": [
      "https://github.com/Nikun0209/Application-GeoSpeak-Techwiz-5-GenAI-2024/blob/34d08f8ca17b883023dc4ddee30832f0f02ee414/src/google_gemini.py",
      "https://github.com/Nikun0209/Application-GeoSpeak-Techwiz-5-GenAI-2024/blob/34d08f8ca17b883023dc4ddee30832f0f02ee414/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/base.py",
      "https://github.com/Nikun0209/Application-GeoSpeak-Techwiz-5-GenAI-2024/blob/34d08f8ca17b883023dc4ddee30832f0f02ee414/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/transports/base.py",
      "https://github.com/Nikun0209/Application-GeoSpeak-Techwiz-5-GenAI-2024/blob/34d08f8ca17b883023dc4ddee30832f0f02ee414/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/base.py",
      "https://github.com/Nikun0209/Application-GeoSpeak-Techwiz-5-GenAI-2024/blob/34d08f8ca17b883023dc4ddee30832f0f02ee414/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/base.py",
      "https://github.com/Nikun0209/Application-GeoSpeak-Techwiz-5-GenAI-2024/blob/34d08f8ca17b883023dc4ddee30832f0f02ee414/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/grpc.py",
      "https://github.com/Nikun0209/Application-GeoSpeak-Techwiz-5-GenAI-2024/blob/34d08f8ca17b883023dc4ddee30832f0f02ee414/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/Nikun0209/Application-GeoSpeak-Techwiz-5-GenAI-2024/blob/34d08f8ca17b883023dc4ddee30832f0f02ee414/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/Nikun0209/Application-GeoSpeak-Techwiz-5-GenAI-2024/blob/34d08f8ca17b883023dc4ddee30832f0f02ee414/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/rest.py",
      "https://github.com/Nikun0209/Application-GeoSpeak-Techwiz-5-GenAI-2024/blob/34d08f8ca17b883023dc4ddee30832f0f02ee414/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/rest.py",
      "https://github.com/Nikun0209/Application-GeoSpeak-Techwiz-5-GenAI-2024/blob/34d08f8ca17b883023dc4ddee30832f0f02ee414/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/grpc.py",
      "https://github.com/Nikun0209/Application-GeoSpeak-Techwiz-5-GenAI-2024/blob/34d08f8ca17b883023dc4ddee30832f0f02ee414/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/grpc.py",
      "https://github.com/Nikun0209/Application-GeoSpeak-Techwiz-5-GenAI-2024/blob/34d08f8ca17b883023dc4ddee30832f0f02ee414/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc.py",
      "https://github.com/Nikun0209/Application-GeoSpeak-Techwiz-5-GenAI-2024/blob/34d08f8ca17b883023dc4ddee30832f0f02ee414/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/rest.py",
      "https://github.com/Nikun0209/Application-GeoSpeak-Techwiz-5-GenAI-2024/blob/34d08f8ca17b883023dc4ddee30832f0f02ee414/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/Nikun0209/Application-GeoSpeak-Techwiz-5-GenAI-2024/blob/34d08f8ca17b883023dc4ddee30832f0f02ee414/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/client.py",
      "https://github.com/Nikun0209/Application-GeoSpeak-Techwiz-5-GenAI-2024/blob/34d08f8ca17b883023dc4ddee30832f0f02ee414/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/grpc_asyncio.py",
      "https://github.com/Nikun0209/Application-GeoSpeak-Techwiz-5-GenAI-2024/blob/34d08f8ca17b883023dc4ddee30832f0f02ee414/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2487717,
    "stars": 0
  },
  {
    "full_name": "cpujades/Podsum",
    "name": "Podsum",
    "description": "Podsum is a SaaS platform that transcribes, summarizes, and answers questions about podcasts, helping users extract insights quickly and efficiently. Powered by state-of-the-art AI models and vector search technology, Podsum transforms long audio content into actionable information.",
    "html_url": [
      "https://github.com/cpujades/Podsum/blob/463b797170f54b25c9e0cff2e237be3c7bd0f96a/app/utils/external_apis.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 368,
    "stars": 1
  },
  {
    "full_name": "bixorko/weather-app",
    "name": "weather-app",
    "description": "Weather Application with utilizing the LLM for reporting the obtained forecast.",
    "html_url": [
      "https://github.com/bixorko/weather-app/blob/950661e7ad8c3701a2180f21df12641050e32334/main.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 138,
    "stars": 0
  },
  {
    "full_name": "ijaric/llm-service",
    "name": "llm-service",
    "description": "Universal LLM service with support for OpenAI, Anthropic, and Gemini",
    "html_url": [
      "https://github.com/ijaric/llm-service/blob/e2b59d9df60e752724a3552ae58e884e57ddc663/repositories/gemini.py",
      "https://github.com/ijaric/llm-service/blob/e2b59d9df60e752724a3552ae58e884e57ddc663/repositories/openai.py"
    ],
    "model": [
      "gemini",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "NeuronQ/summony",
    "name": "summony",
    "description": "🍋😛 Collection of tools and UIs for chatting and experimenting with multiple LLMs (via their APIs) at the same time.",
    "html_url": [
      "https://github.com/NeuronQ/summony/blob/62cd7b7099a30ef3e81aa77bea6dc30645049917/src/summony/model_connectors/gemini_model_connector.py",
      "https://github.com/NeuronQ/summony/blob/0d4b98427636720510c4022982dbf3ff6e143b05/src/summony/model_connectors/dummy_model_connector.py"
    ],
    "model": [
      "gemini",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4484,
    "stars": 2
  },
  {
    "full_name": "Lakshay-13/RAGs",
    "name": "RAGs",
    "description": null,
    "html_url": [
      "https://github.com/Lakshay-13/RAGs/blob/29ed651de0c85d2f5c93379f0e55a0509bbb7d5f/app.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 299,
    "stars": 0
  },
  {
    "full_name": "xfluidsss/Gemini_george_bot",
    "name": "Gemini_george_bot",
    "description": null,
    "html_url": [
      "https://github.com/xfluidsss/Gemini_george_bot/blob/ec004788946e6573eef206ccd746d1924aee5328/JERY/uncenzored_Different_voices.py",
      "https://github.com/xfluidsss/Gemini_george_bot/blob/ec004788946e6573eef206ccd746d1924aee5328/JERY/jery.py",
      "https://github.com/xfluidsss/Gemini_george_bot/blob/ec004788946e6573eef206ccd746d1924aee5328/JERY/uncenzored_Different_voices_and_history.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 38418,
    "stars": 3
  },
  {
    "full_name": "Vijaygurung1/Negotiation_Chatbot_Gemini_AI",
    "name": "Negotiation_Chatbot_Gemini_AI",
    "description": null,
    "html_url": [
      "https://github.com/Vijaygurung1/Negotiation_Chatbot_Gemini_AI/blob/72b995f387a6f9a572112a27ebd0c32bd1fd40bf/app.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 568600,
    "stars": 0
  },
  {
    "full_name": "if-ai/ComfyUI-IF_AI_tools",
    "name": "ComfyUI-IF_AI_tools",
    "description": "ComfyUI-IF_AI_tools is a set of custom nodes for ComfyUI that allows you to generate prompts using a local Large Language Model (LLM) via Ollama. This tool enables you to enhance your image generation workflow by leveraging the power of language models.",
    "html_url": [
      "https://github.com/if-ai/ComfyUI-IF_AI_tools/blob/267379d8539f596166a5b7f6882eba3a42e34c4b/gemini_api.py",
      "https://github.com/if-ai/ComfyUI-IF_AI_tools/blob/267379d8539f596166a5b7f6882eba3a42e34c4b/send_request.py"
    ],
    "model": [
      "gemini",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 108524,
    "stars": 651
  },
  {
    "full_name": "Evolvify-Project/AI-Chatbot",
    "name": "AI-Chatbot",
    "description": "AI Chatbot using Google Gemini made using Streamlit",
    "html_url": [
      "https://github.com/Evolvify-Project/AI-Chatbot/blob/39549770ecf6dad1c4ac448b1bdfccfcdaa49089/app.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "if-ai/ComfyUI-IF_LLM",
    "name": "ComfyUI-IF_LLM",
    "description": null,
    "html_url": [
      "https://github.com/if-ai/ComfyUI-IF_LLM/blob/ce5106b36a1053d6c9ac8dafcaaaf6d83b21f2a6/gemini_api.py",
      "https://github.com/if-ai/ComfyUI-IF_LLM/blob/ce5106b36a1053d6c9ac8dafcaaaf6d83b21f2a6/utils.py"
    ],
    "model": [
      "gemini",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 134191,
    "stars": 122
  },
  {
    "full_name": "akesh-0909/RAG-application",
    "name": "RAG-application",
    "description": null,
    "html_url": [
      "https://github.com/akesh-0909/RAG-application/blob/2a72048c1ad87932ed0e778f8568ffd666e126ea/helper.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 323,
    "stars": 2
  },
  {
    "full_name": "gewanbo/gemini-copilot",
    "name": "gemini-copilot",
    "description": "Copilot based on Gemini",
    "html_url": [
      "https://github.com/gewanbo/gemini-copilot/blob/789aeb9b9a79653fa8c486bff7ffa865aae9c10f/api/index.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 83,
    "stars": 0
  },
  {
    "full_name": "mrfirdauss-20/RaG-Garuda-Hack",
    "name": "RaG-Garuda-Hack",
    "description": null,
    "html_url": [
      "https://github.com/mrfirdauss-20/RaG-Garuda-Hack/blob/0b5996df489548a420daefbe75a6b20b4d5c05d8/app.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 403,
    "stars": 0
  },
  {
    "full_name": "programerr01/gemini-telegram-bot",
    "name": "gemini-telegram-bot",
    "description": "Telegram bot for google's gemini  pro and vision",
    "html_url": [
      "https://github.com/programerr01/gemini-telegram-bot/blob/592de633948b2a7c6561f3011a436c999c62f599/main.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 182,
    "stars": 18
  },
  {
    "full_name": "cattodotpy/GeminiBot",
    "name": "GeminiBot",
    "description": "A Discord chatbot built with Python using Google's Gemini API.",
    "html_url": [
      "https://github.com/cattodotpy/GeminiBot/blob/e1e26e8c0f3b33fd98dcc7f8a03655f237005b4d/helpers/session.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 547,
    "stars": 3
  },
  {
    "full_name": "yarivtach/PCB_chatbot",
    "name": "PCB_chatbot",
    "description": "create a proffsional cahtbot of PCB using RAG",
    "html_url": [
      "https://github.com/yarivtach/PCB_chatbot/blob/3ae2a21b338b19c2240114f782ea8076585105d3/ChatBot.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 223,
    "stars": 0
  },
  {
    "full_name": "chaos4455/doc-generator-ai",
    "name": "doc-generator-ai",
    "description": "Documentation, manual and process generation implementention with python and google Gemini",
    "html_url": [
      "https://github.com/chaos4455/doc-generator-ai/blob/2ec5903ff2e86c211bf5c56cec1722204eb2cd24/doc-gen.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 18124,
    "stars": 1
  },
  {
    "full_name": "ultrasev/llmproxy-vercel",
    "name": "llmproxy-vercel",
    "description": "通过 vercel 搭建 LLM API 的反向代理 ",
    "html_url": [
      "https://github.com/ultrasev/llmproxy-vercel/blob/33725d98111811ed739046c2f8edbba2c18b39f8/api/servers/gemini.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 586,
    "stars": 43
  },
  {
    "full_name": "kmkarakaya/rag-kmk",
    "name": "rag-kmk",
    "description": "A simple RAG implemetation for educational purposes implemented by Murat Karakaya Akademi",
    "html_url": [
      "https://github.com/kmkarakaya/rag-kmk/blob/92a334cdc99ec9cd15d273890177a34dcf142d87/rag_kmk/chat_flow/llm_interface.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1891,
    "stars": 7
  },
  {
    "full_name": "agituts/gemini-2-podcast",
    "name": "gemini-2-podcast",
    "description": "A Python-based tool that generates engaging podcast conversations using Google's Gemini 2.0 Flash Experimental model for script generation and text-to-speech conversion.",
    "html_url": [
      "https://github.com/agituts/gemini-2-podcast/blob/0a05cdffe795db7a4a5dbdd508e95e9270b0dd36/audio_processor.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 625,
    "stars": 109
  },
  {
    "full_name": "ZLMediaKit/Github-AI-Assistant",
    "name": "Github-AI-Assistant",
    "description": "The best AI assistant for your Github repository, it can not only help you automatically translate issues/discussions/pr/commit to the specified language, but also help you with code review, automatic code repair and other functions through AI models.您Github存储库的最佳AI助手, 它不但可以帮助您自动翻译issues/discussions/pr/commit到指定语言, 还可以通过AI模型帮助您进行代码审查, 代码自动修复等功能",
    "html_url": [
      "https://github.com/ZLMediaKit/Github-AI-Assistant/blob/0fb4a6735fa38111a18ebccf9ab09d6d9d7b01a6/core/llm.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 5979,
    "stars": 8
  },
  {
    "full_name": "hdi-umd/Semantic_Profiling_LLM_Evaluation",
    "name": "Semantic_Profiling_LLM_Evaluation",
    "description": null,
    "html_url": [
      "https://github.com/hdi-umd/Semantic_Profiling_LLM_Evaluation/blob/620a9126cb727e42ecc44fb849c33d57a33c540d/GPT_Gemini_Prompting_Scripts/run_gpt_gemini_queries.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 228872,
    "stars": 1
  },
  {
    "full_name": "lingo-chat/prompt",
    "name": "prompt",
    "description": "lingo-chat AI server (w/ 프롬프트엔지니어링, RAG, Agenting, Dataset generation)",
    "html_url": [
      "https://github.com/lingo-chat/prompt/blob/3a2d4a3e5428f00bc8047c5792dd1d4ffa17a08d/Lingo_Chat/generate_with_gemini/src/api.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 71882,
    "stars": 0
  },
  {
    "full_name": "nocdn/podcast-ad-trimmer",
    "name": "podcast-ad-trimmer",
    "description": "Remove ads from podcasts with Whisper and LLMs",
    "html_url": [
      "https://github.com/nocdn/podcast-ad-trimmer/blob/786278a8a81a11c2f496f4edb1c25a9370d740e0/app.py",
      "https://github.com/nocdn/podcast-ad-trimmer/blob/786278a8a81a11c2f496f4edb1c25a9370d740e0/main.py"
    ],
    "model": [
      "gemini",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 964,
    "stars": 8
  },
  {
    "full_name": "YooshaMirza/llm_chatbot_2",
    "name": "llm_chatbot_2",
    "description": null,
    "html_url": [
      "https://github.com/YooshaMirza/llm_chatbot_2/blob/dd2460bbef5f5f0bfb3469f58a07c965f222ef6b/app.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 11932,
    "stars": 0
  },
  {
    "full_name": "Parmeesh/SEO_Optimiz_POC",
    "name": "SEO_Optimiz_POC",
    "description": "This Proof of Concept (POC) introduces an application that uses OpenAI and Gemini models for SEO optimization of online articles. It allows users to enhance their content's search engine visibility and engagement through text optimization and AI-generated imagery.",
    "html_url": [
      "https://github.com/Parmeesh/SEO_Optimiz_POC/blob/d863c0e4542533866390b503cf4c5b6e41970c85/Functions.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2900429,
    "stars": 0
  },
  {
    "full_name": "ACM-Amrita-Amritapuri/OmniHubAI",
    "name": "OmniHubAI",
    "description": " A modular library offering diverse AI functionalities for text, image, audio, and video processing. Leverage state-of-the-art models to create intelligent solutions for a wide range of tasks.",
    "html_url": [
      "https://github.com/ACM-Amrita-Amritapuri/OmniHubAI/blob/72328ca6938f6a06c2b2d8b34c541f7436269090/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/prediction_service/transports/base.py",
      "https://github.com/ACM-Amrita-Amritapuri/OmniHubAI/blob/72328ca6938f6a06c2b2d8b34c541f7436269090/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/base.py",
      "https://github.com/ACM-Amrita-Amritapuri/OmniHubAI/blob/72328ca6938f6a06c2b2d8b34c541f7436269090/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/transports/base.py",
      "https://github.com/ACM-Amrita-Amritapuri/OmniHubAI/blob/72328ca6938f6a06c2b2d8b34c541f7436269090/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/base.py",
      "https://github.com/ACM-Amrita-Amritapuri/OmniHubAI/blob/72328ca6938f6a06c2b2d8b34c541f7436269090/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/base.py",
      "https://github.com/ACM-Amrita-Amritapuri/OmniHubAI/blob/72328ca6938f6a06c2b2d8b34c541f7436269090/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/grpc.py",
      "https://github.com/ACM-Amrita-Amritapuri/OmniHubAI/blob/72328ca6938f6a06c2b2d8b34c541f7436269090/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/grpc_asyncio.py",
      "https://github.com/ACM-Amrita-Amritapuri/OmniHubAI/blob/72328ca6938f6a06c2b2d8b34c541f7436269090/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/grpc.py",
      "https://github.com/ACM-Amrita-Amritapuri/OmniHubAI/blob/72328ca6938f6a06c2b2d8b34c541f7436269090/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/grpc_asyncio.py",
      "https://github.com/ACM-Amrita-Amritapuri/OmniHubAI/blob/72328ca6938f6a06c2b2d8b34c541f7436269090/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/grpc.py",
      "https://github.com/ACM-Amrita-Amritapuri/OmniHubAI/blob/72328ca6938f6a06c2b2d8b34c541f7436269090/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/client.py",
      "https://github.com/ACM-Amrita-Amritapuri/OmniHubAI/blob/72328ca6938f6a06c2b2d8b34c541f7436269090/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/client.py",
      "https://github.com/ACM-Amrita-Amritapuri/OmniHubAI/blob/72328ca6938f6a06c2b2d8b34c541f7436269090/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/grpc_asyncio.py",
      "https://github.com/ACM-Amrita-Amritapuri/OmniHubAI/blob/72328ca6938f6a06c2b2d8b34c541f7436269090/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/client.py",
      "https://github.com/ACM-Amrita-Amritapuri/OmniHubAI/blob/72328ca6938f6a06c2b2d8b34c541f7436269090/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2316323,
    "stars": 3
  },
  {
    "full_name": "asharsha30-1996/LLM_SMART_ASSISTANCE",
    "name": "LLM_SMART_ASSISTANCE",
    "description": null,
    "html_url": [
      "https://github.com/asharsha30-1996/LLM_SMART_ASSISTANCE/blob/da39ed504dae73f0cbafc26e967a8946d326f783/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/prediction_service/transports/base.py",
      "https://github.com/asharsha30-1996/LLM_SMART_ASSISTANCE/blob/da39ed504dae73f0cbafc26e967a8946d326f783/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/transports/base.py",
      "https://github.com/asharsha30-1996/LLM_SMART_ASSISTANCE/blob/da39ed504dae73f0cbafc26e967a8946d326f783/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/base.py",
      "https://github.com/asharsha30-1996/LLM_SMART_ASSISTANCE/blob/da39ed504dae73f0cbafc26e967a8946d326f783/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/grpc.py",
      "https://github.com/asharsha30-1996/LLM_SMART_ASSISTANCE/blob/da39ed504dae73f0cbafc26e967a8946d326f783/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/asharsha30-1996/LLM_SMART_ASSISTANCE/blob/da39ed504dae73f0cbafc26e967a8946d326f783/.venv/Lib/site-packages/google/generativeai/client.py",
      "https://github.com/asharsha30-1996/LLM_SMART_ASSISTANCE/blob/da39ed504dae73f0cbafc26e967a8946d326f783/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/grpc.py",
      "https://github.com/asharsha30-1996/LLM_SMART_ASSISTANCE/blob/da39ed504dae73f0cbafc26e967a8946d326f783/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/grpc.py",
      "https://github.com/asharsha30-1996/LLM_SMART_ASSISTANCE/blob/da39ed504dae73f0cbafc26e967a8946d326f783/.venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/asharsha30-1996/LLM_SMART_ASSISTANCE/blob/da39ed504dae73f0cbafc26e967a8946d326f783/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/asharsha30-1996/LLM_SMART_ASSISTANCE/blob/da39ed504dae73f0cbafc26e967a8946d326f783/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/prediction_service/client.py",
      "https://github.com/asharsha30-1996/LLM_SMART_ASSISTANCE/blob/da39ed504dae73f0cbafc26e967a8946d326f783/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/client.py",
      "https://github.com/asharsha30-1996/LLM_SMART_ASSISTANCE/blob/da39ed504dae73f0cbafc26e967a8946d326f783/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/client.py",
      "https://github.com/asharsha30-1996/LLM_SMART_ASSISTANCE/blob/da39ed504dae73f0cbafc26e967a8946d326f783/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4038011,
    "stars": 1
  },
  {
    "full_name": "ankit31199/Gemini-AI-Chatbot-Streamlit_basic",
    "name": "Gemini-AI-Chatbot-Streamlit_basic",
    "description": null,
    "html_url": [
      "https://github.com/ankit31199/Gemini-AI-Chatbot-Streamlit_basic/blob/8a34127fc60108b9a173c543ede4e433418dfd8b/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/prediction_service/transports/base.py",
      "https://github.com/ankit31199/Gemini-AI-Chatbot-Streamlit_basic/blob/8a34127fc60108b9a173c543ede4e433418dfd8b/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/base.py",
      "https://github.com/ankit31199/Gemini-AI-Chatbot-Streamlit_basic/blob/8a34127fc60108b9a173c543ede4e433418dfd8b/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/base.py",
      "https://github.com/ankit31199/Gemini-AI-Chatbot-Streamlit_basic/blob/8a34127fc60108b9a173c543ede4e433418dfd8b/venv/Lib/site-packages/google/generativeai/client.py",
      "https://github.com/ankit31199/Gemini-AI-Chatbot-Streamlit_basic/blob/8a34127fc60108b9a173c543ede4e433418dfd8b/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/grpc_asyncio.py",
      "https://github.com/ankit31199/Gemini-AI-Chatbot-Streamlit_basic/blob/8a34127fc60108b9a173c543ede4e433418dfd8b/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/grpc.py",
      "https://github.com/ankit31199/Gemini-AI-Chatbot-Streamlit_basic/blob/8a34127fc60108b9a173c543ede4e433418dfd8b/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/client.py",
      "https://github.com/ankit31199/Gemini-AI-Chatbot-Streamlit_basic/blob/8a34127fc60108b9a173c543ede4e433418dfd8b/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3419810,
    "stars": 0
  },
  {
    "full_name": "HananeNadi/Extract_data_from_pdf_using_LLM_and_RAG",
    "name": "Extract_data_from_pdf_using_LLM_and_RAG",
    "description": null,
    "html_url": [
      "https://github.com/HananeNadi/Extract_data_from_pdf_using_LLM_and_RAG/blob/03c598475b23a335a46d5ca18742853fd2159243/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/prediction_service/transports/base.py",
      "https://github.com/HananeNadi/Extract_data_from_pdf_using_LLM_and_RAG/blob/03c598475b23a335a46d5ca18742853fd2159243/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/transports/base.py",
      "https://github.com/HananeNadi/Extract_data_from_pdf_using_LLM_and_RAG/blob/03c598475b23a335a46d5ca18742853fd2159243/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/base.py",
      "https://github.com/HananeNadi/Extract_data_from_pdf_using_LLM_and_RAG/blob/03c598475b23a335a46d5ca18742853fd2159243/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/grpc.py",
      "https://github.com/HananeNadi/Extract_data_from_pdf_using_LLM_and_RAG/blob/03c598475b23a335a46d5ca18742853fd2159243/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/HananeNadi/Extract_data_from_pdf_using_LLM_and_RAG/blob/03c598475b23a335a46d5ca18742853fd2159243/.venv/Lib/site-packages/google/generativeai/client.py",
      "https://github.com/HananeNadi/Extract_data_from_pdf_using_LLM_and_RAG/blob/03c598475b23a335a46d5ca18742853fd2159243/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/grpc.py",
      "https://github.com/HananeNadi/Extract_data_from_pdf_using_LLM_and_RAG/blob/03c598475b23a335a46d5ca18742853fd2159243/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/grpc.py",
      "https://github.com/HananeNadi/Extract_data_from_pdf_using_LLM_and_RAG/blob/03c598475b23a335a46d5ca18742853fd2159243/.venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/HananeNadi/Extract_data_from_pdf_using_LLM_and_RAG/blob/03c598475b23a335a46d5ca18742853fd2159243/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/HananeNadi/Extract_data_from_pdf_using_LLM_and_RAG/blob/03c598475b23a335a46d5ca18742853fd2159243/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/prediction_service/client.py",
      "https://github.com/HananeNadi/Extract_data_from_pdf_using_LLM_and_RAG/blob/03c598475b23a335a46d5ca18742853fd2159243/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/client.py",
      "https://github.com/HananeNadi/Extract_data_from_pdf_using_LLM_and_RAG/blob/03c598475b23a335a46d5ca18742853fd2159243/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/client.py",
      "https://github.com/HananeNadi/Extract_data_from_pdf_using_LLM_and_RAG/blob/03c598475b23a335a46d5ca18742853fd2159243/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4741851,
    "stars": 0
  },
  {
    "full_name": "codingcat08/Rag-fusion-with-gemini",
    "name": "Rag-fusion-with-gemini",
    "description": null,
    "html_url": [
      "https://github.com/codingcat08/Rag-fusion-with-gemini/blob/e303927a9a24dbecd2b6b4557b1206b9e5d75061/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/prediction_service/transports/base.py",
      "https://github.com/codingcat08/Rag-fusion-with-gemini/blob/e303927a9a24dbecd2b6b4557b1206b9e5d75061/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/transports/base.py",
      "https://github.com/codingcat08/Rag-fusion-with-gemini/blob/e303927a9a24dbecd2b6b4557b1206b9e5d75061/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/base.py",
      "https://github.com/codingcat08/Rag-fusion-with-gemini/blob/e303927a9a24dbecd2b6b4557b1206b9e5d75061/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/grpc.py",
      "https://github.com/codingcat08/Rag-fusion-with-gemini/blob/e303927a9a24dbecd2b6b4557b1206b9e5d75061/.venv/Lib/site-packages/google/generativeai/client.py",
      "https://github.com/codingcat08/Rag-fusion-with-gemini/blob/e303927a9a24dbecd2b6b4557b1206b9e5d75061/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/grpc.py",
      "https://github.com/codingcat08/Rag-fusion-with-gemini/blob/e303927a9a24dbecd2b6b4557b1206b9e5d75061/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/grpc.py",
      "https://github.com/codingcat08/Rag-fusion-with-gemini/blob/e303927a9a24dbecd2b6b4557b1206b9e5d75061/.venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/codingcat08/Rag-fusion-with-gemini/blob/e303927a9a24dbecd2b6b4557b1206b9e5d75061/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/codingcat08/Rag-fusion-with-gemini/blob/e303927a9a24dbecd2b6b4557b1206b9e5d75061/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/prediction_service/client.py",
      "https://github.com/codingcat08/Rag-fusion-with-gemini/blob/e303927a9a24dbecd2b6b4557b1206b9e5d75061/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/client.py",
      "https://github.com/codingcat08/Rag-fusion-with-gemini/blob/e303927a9a24dbecd2b6b4557b1206b9e5d75061/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/client.py",
      "https://github.com/codingcat08/Rag-fusion-with-gemini/blob/e303927a9a24dbecd2b6b4557b1206b9e5d75061/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2451495,
    "stars": 0
  },
  {
    "full_name": "MarlonJerold/clientgemini",
    "name": "clientgemini",
    "description": "Client API para aplicação de notícias utilizando IA, Milho News,  Organização: Milharal dos Devs",
    "html_url": [
      "https://github.com/MarlonJerold/clientgemini/blob/cd9755bb0edab3ee8a2d5fd8822475685f416e54/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/prediction_service/transports/base.py",
      "https://github.com/MarlonJerold/clientgemini/blob/cd9755bb0edab3ee8a2d5fd8822475685f416e54/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/base.py",
      "https://github.com/MarlonJerold/clientgemini/blob/cd9755bb0edab3ee8a2d5fd8822475685f416e54/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/transports/base.py",
      "https://github.com/MarlonJerold/clientgemini/blob/cd9755bb0edab3ee8a2d5fd8822475685f416e54/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/base.py",
      "https://github.com/MarlonJerold/clientgemini/blob/cd9755bb0edab3ee8a2d5fd8822475685f416e54/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/base.py",
      "https://github.com/MarlonJerold/clientgemini/blob/cd9755bb0edab3ee8a2d5fd8822475685f416e54/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/grpc.py",
      "https://github.com/MarlonJerold/clientgemini/blob/cd9755bb0edab3ee8a2d5fd8822475685f416e54/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/grpc_asyncio.py",
      "https://github.com/MarlonJerold/clientgemini/blob/cd9755bb0edab3ee8a2d5fd8822475685f416e54/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/grpc.py",
      "https://github.com/MarlonJerold/clientgemini/blob/cd9755bb0edab3ee8a2d5fd8822475685f416e54/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/grpc_asyncio.py",
      "https://github.com/MarlonJerold/clientgemini/blob/cd9755bb0edab3ee8a2d5fd8822475685f416e54/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/grpc.py",
      "https://github.com/MarlonJerold/clientgemini/blob/cd9755bb0edab3ee8a2d5fd8822475685f416e54/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/client.py",
      "https://github.com/MarlonJerold/clientgemini/blob/cd9755bb0edab3ee8a2d5fd8822475685f416e54/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/client.py",
      "https://github.com/MarlonJerold/clientgemini/blob/cd9755bb0edab3ee8a2d5fd8822475685f416e54/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/client.py",
      "https://github.com/MarlonJerold/clientgemini/blob/cd9755bb0edab3ee8a2d5fd8822475685f416e54/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2389834,
    "stars": 0
  },
  {
    "full_name": "Eshwar154/GenAi-Projects",
    "name": "GenAi-Projects",
    "description": "Making End to End LLM Application",
    "html_url": [
      "https://github.com/Eshwar154/GenAi-Projects/blob/6ce4814f5c7ec83765049290249f19e48e8e139c/GenAi%20Projects/GeminiLLMApp/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/prediction_service/transports/base.py",
      "https://github.com/Eshwar154/GenAi-Projects/blob/6ce4814f5c7ec83765049290249f19e48e8e139c/GenAi%20Projects/GeminiLLMApp/Q&A_ChatApp/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/prediction_service/transports/base.py",
      "https://github.com/Eshwar154/GenAi-Projects/blob/6ce4814f5c7ec83765049290249f19e48e8e139c/GenAi%20Projects/GeminiLLMApp/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/transports/base.py",
      "https://github.com/Eshwar154/GenAi-Projects/blob/6ce4814f5c7ec83765049290249f19e48e8e139c/GenAi%20Projects/GeminiLLMApp/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/transports/base.py",
      "https://github.com/Eshwar154/GenAi-Projects/blob/6ce4814f5c7ec83765049290249f19e48e8e139c/GenAi%20Projects/GeminiLLMApp/Q&A_ChatApp/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/transports/base.py",
      "https://github.com/Eshwar154/GenAi-Projects/blob/6ce4814f5c7ec83765049290249f19e48e8e139c/GenAi%20Projects/GeminiLLMApp/Q&A_ChatApp/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/base.py",
      "https://github.com/Eshwar154/GenAi-Projects/blob/6ce4814f5c7ec83765049290249f19e48e8e139c/GenAi%20Projects/GeminiLLMApp/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/base.py",
      "https://github.com/Eshwar154/GenAi-Projects/blob/6ce4814f5c7ec83765049290249f19e48e8e139c/GenAi%20Projects/GeminiLLMApp/Q&A_ChatApp/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/base.py",
      "https://github.com/Eshwar154/GenAi-Projects/blob/6ce4814f5c7ec83765049290249f19e48e8e139c/GenAi%20Projects/GeminiLLMApp/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/grpc.py",
      "https://github.com/Eshwar154/GenAi-Projects/blob/6ce4814f5c7ec83765049290249f19e48e8e139c/GenAi%20Projects/GeminiLLMApp/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc.py",
      "https://github.com/Eshwar154/GenAi-Projects/blob/6ce4814f5c7ec83765049290249f19e48e8e139c/GenAi%20Projects/GeminiLLMApp/myenv/Lib/site-packages/google/generativeai/client.py",
      "https://github.com/Eshwar154/GenAi-Projects/blob/6ce4814f5c7ec83765049290249f19e48e8e139c/GenAi%20Projects/GeminiLLMApp/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/grpc_asyncio.py",
      "https://github.com/Eshwar154/GenAi-Projects/blob/6ce4814f5c7ec83765049290249f19e48e8e139c/GenAi%20Projects/GeminiLLMApp/Q&A_ChatApp/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/grpc_asyncio.py",
      "https://github.com/Eshwar154/GenAi-Projects/blob/6ce4814f5c7ec83765049290249f19e48e8e139c/GenAi%20Projects/GeminiLLMApp/Q&A_ChatApp/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/cache_service/transports/grpc_asyncio.py",
      "https://github.com/Eshwar154/GenAi-Projects/blob/6ce4814f5c7ec83765049290249f19e48e8e139c/GenAi%20Projects/GeminiLLMApp/Q&A_ChatApp/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/grpc.py",
      "https://github.com/Eshwar154/GenAi-Projects/blob/6ce4814f5c7ec83765049290249f19e48e8e139c/GenAi%20Projects/GeminiLLMApp/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/Eshwar154/GenAi-Projects/blob/6ce4814f5c7ec83765049290249f19e48e8e139c/GenAi%20Projects/GeminiLLMApp/myenv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/Eshwar154/GenAi-Projects/blob/6ce4814f5c7ec83765049290249f19e48e8e139c/GenAi%20Projects/GeminiLLMApp/Q&A_ChatApp/myenv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/Eshwar154/GenAi-Projects/blob/6ce4814f5c7ec83765049290249f19e48e8e139c/GenAi%20Projects/GeminiLLMApp/Q&A_ChatApp/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/Eshwar154/GenAi-Projects/blob/6ce4814f5c7ec83765049290249f19e48e8e139c/GenAi%20Projects/GeminiLLMApp/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/prediction_service/client.py",
      "https://github.com/Eshwar154/GenAi-Projects/blob/6ce4814f5c7ec83765049290249f19e48e8e139c/GenAi%20Projects/GeminiLLMApp/Q&A_ChatApp/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/client.py",
      "https://github.com/Eshwar154/GenAi-Projects/blob/6ce4814f5c7ec83765049290249f19e48e8e139c/GenAi%20Projects/GeminiLLMApp/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/client.py",
      "https://github.com/Eshwar154/GenAi-Projects/blob/6ce4814f5c7ec83765049290249f19e48e8e139c/GenAi%20Projects/GeminiLLMApp/Q&A_ChatApp/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/client.py",
      "https://github.com/Eshwar154/GenAi-Projects/blob/6ce4814f5c7ec83765049290249f19e48e8e139c/GenAi%20Projects/GeminiLLMApp/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/client.py",
      "https://github.com/Eshwar154/GenAi-Projects/blob/6ce4814f5c7ec83765049290249f19e48e8e139c/GenAi%20Projects/GeminiLLMApp/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/client.py",
      "https://github.com/Eshwar154/GenAi-Projects/blob/6ce4814f5c7ec83765049290249f19e48e8e139c/GenAi%20Projects/GeminiLLMApp/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py",
      "https://github.com/Eshwar154/GenAi-Projects/blob/6ce4814f5c7ec83765049290249f19e48e8e139c/GenAi%20Projects/GeminiLLMApp/Q&A_ChatApp/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "krishnakumbhaj/Langchain_Gemini_Test",
    "name": "Langchain_Gemini_Test",
    "description": null,
    "html_url": [
      "https://github.com/krishnakumbhaj/Langchain_Gemini_Test/blob/b9f5f6530543244b27ef081b76878da5f00edab5/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/prediction_service/transports/base.py",
      "https://github.com/krishnakumbhaj/Langchain_Gemini_Test/blob/b9f5f6530543244b27ef081b76878da5f00edab5/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/transports/base.py",
      "https://github.com/krishnakumbhaj/Langchain_Gemini_Test/blob/b9f5f6530543244b27ef081b76878da5f00edab5/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/base.py",
      "https://github.com/krishnakumbhaj/Langchain_Gemini_Test/blob/b9f5f6530543244b27ef081b76878da5f00edab5/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/transports/base.py",
      "https://github.com/krishnakumbhaj/Langchain_Gemini_Test/blob/b9f5f6530543244b27ef081b76878da5f00edab5/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/base.py",
      "https://github.com/krishnakumbhaj/Langchain_Gemini_Test/blob/b9f5f6530543244b27ef081b76878da5f00edab5/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/base.py",
      "https://github.com/krishnakumbhaj/Langchain_Gemini_Test/blob/b9f5f6530543244b27ef081b76878da5f00edab5/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/krishnakumbhaj/Langchain_Gemini_Test/blob/b9f5f6530543244b27ef081b76878da5f00edab5/env/Lib/site-packages/google/generativeai/client.py",
      "https://github.com/krishnakumbhaj/Langchain_Gemini_Test/blob/b9f5f6530543244b27ef081b76878da5f00edab5/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/krishnakumbhaj/Langchain_Gemini_Test/blob/b9f5f6530543244b27ef081b76878da5f00edab5/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/rest.py",
      "https://github.com/krishnakumbhaj/Langchain_Gemini_Test/blob/b9f5f6530543244b27ef081b76878da5f00edab5/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/krishnakumbhaj/Langchain_Gemini_Test/blob/b9f5f6530543244b27ef081b76878da5f00edab5/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/rest.py",
      "https://github.com/krishnakumbhaj/Langchain_Gemini_Test/blob/b9f5f6530543244b27ef081b76878da5f00edab5/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/prediction_service/client.py",
      "https://github.com/krishnakumbhaj/Langchain_Gemini_Test/blob/b9f5f6530543244b27ef081b76878da5f00edab5/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/client.py",
      "https://github.com/krishnakumbhaj/Langchain_Gemini_Test/blob/b9f5f6530543244b27ef081b76878da5f00edab5/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/client.py",
      "https://github.com/krishnakumbhaj/Langchain_Gemini_Test/blob/b9f5f6530543244b27ef081b76878da5f00edab5/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3800859,
    "stars": 0
  },
  {
    "full_name": "GhanaSyamSaiVarma/Content-Retrieval-RAG-AI-System",
    "name": "Content-Retrieval-RAG-AI-System",
    "description": "This project is designed to create a Retrieval-Augmented Generation (RAG) system using a Large Language Model (LLM).",
    "html_url": [
      "https://github.com/GhanaSyamSaiVarma/Content-Retrieval-RAG-AI-System/blob/960a42e32d426968982c1e7d2976587a526d919f/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/prediction_service/transports/base.py",
      "https://github.com/GhanaSyamSaiVarma/Content-Retrieval-RAG-AI-System/blob/960a42e32d426968982c1e7d2976587a526d919f/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/transports/base.py",
      "https://github.com/GhanaSyamSaiVarma/Content-Retrieval-RAG-AI-System/blob/960a42e32d426968982c1e7d2976587a526d919f/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/base.py",
      "https://github.com/GhanaSyamSaiVarma/Content-Retrieval-RAG-AI-System/blob/960a42e32d426968982c1e7d2976587a526d919f/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/transports/base.py",
      "https://github.com/GhanaSyamSaiVarma/Content-Retrieval-RAG-AI-System/blob/960a42e32d426968982c1e7d2976587a526d919f/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/base.py",
      "https://github.com/GhanaSyamSaiVarma/Content-Retrieval-RAG-AI-System/blob/960a42e32d426968982c1e7d2976587a526d919f/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/base.py",
      "https://github.com/GhanaSyamSaiVarma/Content-Retrieval-RAG-AI-System/blob/960a42e32d426968982c1e7d2976587a526d919f/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/GhanaSyamSaiVarma/Content-Retrieval-RAG-AI-System/blob/960a42e32d426968982c1e7d2976587a526d919f/env/Lib/site-packages/google/generativeai/client.py",
      "https://github.com/GhanaSyamSaiVarma/Content-Retrieval-RAG-AI-System/blob/960a42e32d426968982c1e7d2976587a526d919f/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/GhanaSyamSaiVarma/Content-Retrieval-RAG-AI-System/blob/960a42e32d426968982c1e7d2976587a526d919f/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/rest.py",
      "https://github.com/GhanaSyamSaiVarma/Content-Retrieval-RAG-AI-System/blob/960a42e32d426968982c1e7d2976587a526d919f/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/GhanaSyamSaiVarma/Content-Retrieval-RAG-AI-System/blob/960a42e32d426968982c1e7d2976587a526d919f/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/rest.py",
      "https://github.com/GhanaSyamSaiVarma/Content-Retrieval-RAG-AI-System/blob/960a42e32d426968982c1e7d2976587a526d919f/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/prediction_service/client.py",
      "https://github.com/GhanaSyamSaiVarma/Content-Retrieval-RAG-AI-System/blob/960a42e32d426968982c1e7d2976587a526d919f/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/client.py",
      "https://github.com/GhanaSyamSaiVarma/Content-Retrieval-RAG-AI-System/blob/960a42e32d426968982c1e7d2976587a526d919f/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/client.py",
      "https://github.com/GhanaSyamSaiVarma/Content-Retrieval-RAG-AI-System/blob/960a42e32d426968982c1e7d2976587a526d919f/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3661753,
    "stars": 0
  },
  {
    "full_name": "evening1326/gemini_zebra_counter",
    "name": "gemini_zebra_counter",
    "description": null,
    "html_url": [
      "https://github.com/evening1326/gemini_zebra_counter/blob/a93c3f6736f94bc6de6163a1bfc528f8793a8c07/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/prediction_service/transports/base.py",
      "https://github.com/evening1326/gemini_zebra_counter/blob/a93c3f6736f94bc6de6163a1bfc528f8793a8c07/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/transports/base.py",
      "https://github.com/evening1326/gemini_zebra_counter/blob/a93c3f6736f94bc6de6163a1bfc528f8793a8c07/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/base.py",
      "https://github.com/evening1326/gemini_zebra_counter/blob/a93c3f6736f94bc6de6163a1bfc528f8793a8c07/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/transports/base.py",
      "https://github.com/evening1326/gemini_zebra_counter/blob/a93c3f6736f94bc6de6163a1bfc528f8793a8c07/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/base.py",
      "https://github.com/evening1326/gemini_zebra_counter/blob/a93c3f6736f94bc6de6163a1bfc528f8793a8c07/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/base.py",
      "https://github.com/evening1326/gemini_zebra_counter/blob/a93c3f6736f94bc6de6163a1bfc528f8793a8c07/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/evening1326/gemini_zebra_counter/blob/a93c3f6736f94bc6de6163a1bfc528f8793a8c07/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/evening1326/gemini_zebra_counter/blob/a93c3f6736f94bc6de6163a1bfc528f8793a8c07/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/rest.py",
      "https://github.com/evening1326/gemini_zebra_counter/blob/a93c3f6736f94bc6de6163a1bfc528f8793a8c07/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/evening1326/gemini_zebra_counter/blob/a93c3f6736f94bc6de6163a1bfc528f8793a8c07/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/rest.py",
      "https://github.com/evening1326/gemini_zebra_counter/blob/a93c3f6736f94bc6de6163a1bfc528f8793a8c07/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/prediction_service/client.py",
      "https://github.com/evening1326/gemini_zebra_counter/blob/a93c3f6736f94bc6de6163a1bfc528f8793a8c07/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/client.py",
      "https://github.com/evening1326/gemini_zebra_counter/blob/a93c3f6736f94bc6de6163a1bfc528f8793a8c07/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/client.py",
      "https://github.com/evening1326/gemini_zebra_counter/blob/a93c3f6736f94bc6de6163a1bfc528f8793a8c07/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2766570,
    "stars": 0
  },
  {
    "full_name": "lmahdy/The-secret-recipe",
    "name": "The-secret-recipe",
    "description": "This Django app offers recipes, restaurant search, audio summaries, word definitions, notes, Spotify top tracks, and an AI chatbot with Google Gemini.",
    "html_url": [
      "https://github.com/lmahdy/The-secret-recipe/blob/876e13d3eb256a23fbe0a37e4cbb032db3203b81/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/prediction_service/transports/base.py",
      "https://github.com/lmahdy/The-secret-recipe/blob/876e13d3eb256a23fbe0a37e4cbb032db3203b81/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/transports/base.py",
      "https://github.com/lmahdy/The-secret-recipe/blob/876e13d3eb256a23fbe0a37e4cbb032db3203b81/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/base.py",
      "https://github.com/lmahdy/The-secret-recipe/blob/876e13d3eb256a23fbe0a37e4cbb032db3203b81/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/transports/base.py",
      "https://github.com/lmahdy/The-secret-recipe/blob/876e13d3eb256a23fbe0a37e4cbb032db3203b81/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/base.py",
      "https://github.com/lmahdy/The-secret-recipe/blob/876e13d3eb256a23fbe0a37e4cbb032db3203b81/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/base.py",
      "https://github.com/lmahdy/The-secret-recipe/blob/876e13d3eb256a23fbe0a37e4cbb032db3203b81/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/lmahdy/The-secret-recipe/blob/876e13d3eb256a23fbe0a37e4cbb032db3203b81/env/Lib/site-packages/google/generativeai/client.py",
      "https://github.com/lmahdy/The-secret-recipe/blob/876e13d3eb256a23fbe0a37e4cbb032db3203b81/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/lmahdy/The-secret-recipe/blob/876e13d3eb256a23fbe0a37e4cbb032db3203b81/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/rest.py",
      "https://github.com/lmahdy/The-secret-recipe/blob/876e13d3eb256a23fbe0a37e4cbb032db3203b81/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/lmahdy/The-secret-recipe/blob/876e13d3eb256a23fbe0a37e4cbb032db3203b81/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/rest.py",
      "https://github.com/lmahdy/The-secret-recipe/blob/876e13d3eb256a23fbe0a37e4cbb032db3203b81/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/prediction_service/client.py",
      "https://github.com/lmahdy/The-secret-recipe/blob/876e13d3eb256a23fbe0a37e4cbb032db3203b81/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/client.py",
      "https://github.com/lmahdy/The-secret-recipe/blob/876e13d3eb256a23fbe0a37e4cbb032db3203b81/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/client.py",
      "https://github.com/lmahdy/The-secret-recipe/blob/876e13d3eb256a23fbe0a37e4cbb032db3203b81/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2814482,
    "stars": 1
  },
  {
    "full_name": "Nameeth-Jalem/LLM-QnAbot",
    "name": "LLM-QnAbot",
    "description": null,
    "html_url": [
      "https://github.com/Nameeth-Jalem/LLM-QnAbot/blob/1dbac0a5bec37d5e70e5f357aa9b22c41c4c42b1/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/prediction_service/transports/base.py",
      "https://github.com/Nameeth-Jalem/LLM-QnAbot/blob/1dbac0a5bec37d5e70e5f357aa9b22c41c4c42b1/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/transports/base.py",
      "https://github.com/Nameeth-Jalem/LLM-QnAbot/blob/1dbac0a5bec37d5e70e5f357aa9b22c41c4c42b1/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/base.py",
      "https://github.com/Nameeth-Jalem/LLM-QnAbot/blob/1dbac0a5bec37d5e70e5f357aa9b22c41c4c42b1/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/transports/base.py",
      "https://github.com/Nameeth-Jalem/LLM-QnAbot/blob/1dbac0a5bec37d5e70e5f357aa9b22c41c4c42b1/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/base.py",
      "https://github.com/Nameeth-Jalem/LLM-QnAbot/blob/1dbac0a5bec37d5e70e5f357aa9b22c41c4c42b1/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/base.py",
      "https://github.com/Nameeth-Jalem/LLM-QnAbot/blob/1dbac0a5bec37d5e70e5f357aa9b22c41c4c42b1/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/Nameeth-Jalem/LLM-QnAbot/blob/1dbac0a5bec37d5e70e5f357aa9b22c41c4c42b1/env/Lib/site-packages/google/generativeai/client.py",
      "https://github.com/Nameeth-Jalem/LLM-QnAbot/blob/1dbac0a5bec37d5e70e5f357aa9b22c41c4c42b1/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/Nameeth-Jalem/LLM-QnAbot/blob/1dbac0a5bec37d5e70e5f357aa9b22c41c4c42b1/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/rest.py",
      "https://github.com/Nameeth-Jalem/LLM-QnAbot/blob/1dbac0a5bec37d5e70e5f357aa9b22c41c4c42b1/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/Nameeth-Jalem/LLM-QnAbot/blob/1dbac0a5bec37d5e70e5f357aa9b22c41c4c42b1/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/rest.py",
      "https://github.com/Nameeth-Jalem/LLM-QnAbot/blob/1dbac0a5bec37d5e70e5f357aa9b22c41c4c42b1/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/prediction_service/client.py",
      "https://github.com/Nameeth-Jalem/LLM-QnAbot/blob/1dbac0a5bec37d5e70e5f357aa9b22c41c4c42b1/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/client.py",
      "https://github.com/Nameeth-Jalem/LLM-QnAbot/blob/1dbac0a5bec37d5e70e5f357aa9b22c41c4c42b1/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/client.py",
      "https://github.com/Nameeth-Jalem/LLM-QnAbot/blob/1dbac0a5bec37d5e70e5f357aa9b22c41c4c42b1/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4068437,
    "stars": 0
  },
  {
    "full_name": "iamsajalmondal/Invoice-Extractor-LLM-APP-main",
    "name": "Invoice-Extractor-LLM-APP-main",
    "description": null,
    "html_url": [
      "https://github.com/iamsajalmondal/Invoice-Extractor-LLM-APP-main/blob/a3ee089c9d554a26882ab6040c299019d657b57b/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/prediction_service/transports/base.py",
      "https://github.com/iamsajalmondal/Invoice-Extractor-LLM-APP-main/blob/a3ee089c9d554a26882ab6040c299019d657b57b/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/base.py",
      "https://github.com/iamsajalmondal/Invoice-Extractor-LLM-APP-main/blob/a3ee089c9d554a26882ab6040c299019d657b57b/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/transports/base.py",
      "https://github.com/iamsajalmondal/Invoice-Extractor-LLM-APP-main/blob/a3ee089c9d554a26882ab6040c299019d657b57b/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/base.py",
      "https://github.com/iamsajalmondal/Invoice-Extractor-LLM-APP-main/blob/a3ee089c9d554a26882ab6040c299019d657b57b/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/iamsajalmondal/Invoice-Extractor-LLM-APP-main/blob/a3ee089c9d554a26882ab6040c299019d657b57b/env/Lib/site-packages/google/generativeai/client.py",
      "https://github.com/iamsajalmondal/Invoice-Extractor-LLM-APP-main/blob/a3ee089c9d554a26882ab6040c299019d657b57b/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/iamsajalmondal/Invoice-Extractor-LLM-APP-main/blob/a3ee089c9d554a26882ab6040c299019d657b57b/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/rest.py",
      "https://github.com/iamsajalmondal/Invoice-Extractor-LLM-APP-main/blob/a3ee089c9d554a26882ab6040c299019d657b57b/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/iamsajalmondal/Invoice-Extractor-LLM-APP-main/blob/a3ee089c9d554a26882ab6040c299019d657b57b/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/rest.py",
      "https://github.com/iamsajalmondal/Invoice-Extractor-LLM-APP-main/blob/a3ee089c9d554a26882ab6040c299019d657b57b/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/prediction_service/client.py",
      "https://github.com/iamsajalmondal/Invoice-Extractor-LLM-APP-main/blob/a3ee089c9d554a26882ab6040c299019d657b57b/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/client.py",
      "https://github.com/iamsajalmondal/Invoice-Extractor-LLM-APP-main/blob/a3ee089c9d554a26882ab6040c299019d657b57b/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/client.py",
      "https://github.com/iamsajalmondal/Invoice-Extractor-LLM-APP-main/blob/a3ee089c9d554a26882ab6040c299019d657b57b/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4708327,
    "stars": 0
  },
  {
    "full_name": "jannalulu/llm-forecasting-benchmark",
    "name": "llm-forecasting-benchmark",
    "description": "testing llm forecasting abilities",
    "html_url": [
      "https://github.com/jannalulu/llm-forecasting-benchmark/blob/c2cae0a2478a39188f9b663bcdbb7a5c907741da/models.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 113607,
    "stars": 0
  },
  {
    "full_name": "theurs/tb1",
    "name": "tb1",
    "description": "Телеграм бот для доступа к chatGPT, Google Gemini, Claude AI и др",
    "html_url": [
      "https://github.com/theurs/tb1/blob/5ec926591b5aa9844347f56b60a44ae7085c9245/future/google-genai__.py",
      "https://github.com/theurs/tb1/blob/5ec926591b5aa9844347f56b60a44ae7085c9245/my_gemini2.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 19964,
    "stars": 84
  },
  {
    "full_name": "fit-alessandro-berti/llm-dreams-benchmark",
    "name": "llm-dreams-benchmark",
    "description": "Personality traits benchmark for LLMs based on 'dreams' interpretation",
    "html_url": [
      "https://github.com/fit-alessandro-berti/llm-dreams-benchmark/blob/53acf76650762f335198ef074220d113c4e903b1/evaluation.py",
      "https://github.com/fit-alessandro-berti/llm-dreams-benchmark/blob/53acf76650762f335198ef074220d113c4e903b1/answer.py"
    ],
    "model": [
      "gemini",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 53036,
    "stars": 1
  },
  {
    "full_name": "M0ch0/gask",
    "name": "gask",
    "description": "Super Simple Command Suggestion Tool with Gemini",
    "html_url": [
      "https://github.com/M0ch0/gask/blob/6348aeebb0678e8ae9147e2c07f8a79883f5c742/gask.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "google/generative-ai-docs",
    "name": "generative-ai-docs",
    "description": "Documentation for Google's Gen AI site - including the Gemini API and Gemma",
    "html_url": [
      "https://github.com/google/generative-ai-docs/blob/e8dc8c5d3917844cf7e125b35f910d775d028a4c/examples/gemini/python/docs-agent/docs_agent/tests/test_vector_database.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 227485,
    "stars": 2023
  },
  {
    "full_name": "Abhishekai1/YouTube-Video-Summarizer-Using-Generative-AI",
    "name": "YouTube-Video-Summarizer-Using-Generative-AI",
    "description": "Engineered a Video Summarization Tool using Streamlit and Google Gemini Pro to transform YouTube video transcripts into comprehensive and insightful summaries.",
    "html_url": [
      "https://github.com/Abhishekai1/YouTube-Video-Summarizer-Using-Generative-AI/blob/ae4b579348cedf208adf6eeac81c2455f54c4c8b/YTtanscriber/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/base.py",
      "https://github.com/Abhishekai1/YouTube-Video-Summarizer-Using-Generative-AI/blob/ae4b579348cedf208adf6eeac81c2455f54c4c8b/YTtanscriber/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/Abhishekai1/YouTube-Video-Summarizer-Using-Generative-AI/blob/ae4b579348cedf208adf6eeac81c2455f54c4c8b/YTtanscriber/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/rest.py",
      "https://github.com/Abhishekai1/YouTube-Video-Summarizer-Using-Generative-AI/blob/ae4b579348cedf208adf6eeac81c2455f54c4c8b/YTtanscriber/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/rest.py",
      "https://github.com/Abhishekai1/YouTube-Video-Summarizer-Using-Generative-AI/blob/ae4b579348cedf208adf6eeac81c2455f54c4c8b/YTtanscriber/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/rest.py",
      "https://github.com/Abhishekai1/YouTube-Video-Summarizer-Using-Generative-AI/blob/ae4b579348cedf208adf6eeac81c2455f54c4c8b/YTtanscriber/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1333383,
    "stars": 0
  },
  {
    "full_name": "open-compass/opencompass",
    "name": "opencompass",
    "description": "OpenCompass is an LLM evaluation platform, supporting a wide range of models (Llama3, Mistral, InternLM2,GPT-4,LLaMa2, Qwen,GLM, Claude, etc) over 100+ datasets.",
    "html_url": [
      "https://github.com/open-compass/opencompass/blob/c48bbde26fc98a0876a3450fe8655f6a0e7f2faf/opencompass/models/gemini_api.py",
      "https://github.com/open-compass/opencompass/blob/ebefffed616b915542a60a0793b6ab053ba63ad2/opencompass/configs/datasets/livemathbench/livemathbench_gen_f1c095.py"
    ],
    "model": [
      "gemini",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 163196,
    "stars": 5499
  },
  {
    "full_name": "Manusiajago/Whisper-Shell",
    "name": "Whisper-Shell",
    "description": "Whisper Shell is a terminal-based AI assistant that combines Gemini AI and ElevenLabs for seamless text-to-speech interactions, enabling natural communication through voice and text commands.",
    "html_url": [
      "https://github.com/Manusiajago/Whisper-Shell/blob/4d15d85e5266e8c388c3196af1b37398199d7327/voice_talk.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 241,
    "stars": 1
  },
  {
    "full_name": "mutuiris/eco-support-system",
    "name": "eco-support-system",
    "description": " Innovative application designed to enhance renewable energy management through predictive analytics and automated customer support. This project aims to empower energy providers and consumers by leveraging advanced machine learning models to forecast energy production and consumption while providing instant support through automated responses",
    "html_url": [
      "https://github.com/mutuiris/eco-support-system/blob/ad080c72504ad04c4e3783dde83771a1951322a3/server/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/transports/base.py",
      "https://github.com/mutuiris/eco-support-system/blob/ad080c72504ad04c4e3783dde83771a1951322a3/server/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/base.py",
      "https://github.com/mutuiris/eco-support-system/blob/ad080c72504ad04c4e3783dde83771a1951322a3/server/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/base.py",
      "https://github.com/mutuiris/eco-support-system/blob/ad080c72504ad04c4e3783dde83771a1951322a3/server/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/grpc.py",
      "https://github.com/mutuiris/eco-support-system/blob/ad080c72504ad04c4e3783dde83771a1951322a3/server/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc.py",
      "https://github.com/mutuiris/eco-support-system/blob/ad080c72504ad04c4e3783dde83771a1951322a3/server/venv/Lib/site-packages/google/generativeai/client.py",
      "https://github.com/mutuiris/eco-support-system/blob/ad080c72504ad04c4e3783dde83771a1951322a3/server/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/mutuiris/eco-support-system/blob/ad080c72504ad04c4e3783dde83771a1951322a3/server/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/cache_service/transports/grpc_asyncio.py",
      "https://github.com/mutuiris/eco-support-system/blob/ad080c72504ad04c4e3783dde83771a1951322a3/server/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/mutuiris/eco-support-system/blob/ad080c72504ad04c4e3783dde83771a1951322a3/server/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/client.py",
      "https://github.com/mutuiris/eco-support-system/blob/ad080c72504ad04c4e3783dde83771a1951322a3/server/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/rest.py",
      "https://github.com/mutuiris/eco-support-system/blob/ad080c72504ad04c4e3783dde83771a1951322a3/server/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3491527,
    "stars": 2
  },
  {
    "full_name": "satyajit-patel/llm-back",
    "name": "llm-back",
    "description": null,
    "html_url": [
      "https://github.com/satyajit-patel/llm-back/blob/eaf14822ac236382f95488117e66332a22d7e785/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/transports/base.py",
      "https://github.com/satyajit-patel/llm-back/blob/eaf14822ac236382f95488117e66332a22d7e785/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/base.py",
      "https://github.com/satyajit-patel/llm-back/blob/eaf14822ac236382f95488117e66332a22d7e785/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/base.py",
      "https://github.com/satyajit-patel/llm-back/blob/eaf14822ac236382f95488117e66332a22d7e785/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/grpc.py",
      "https://github.com/satyajit-patel/llm-back/blob/eaf14822ac236382f95488117e66332a22d7e785/.venv/Lib/site-packages/google/generativeai/client.py",
      "https://github.com/satyajit-patel/llm-back/blob/eaf14822ac236382f95488117e66332a22d7e785/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/satyajit-patel/llm-back/blob/eaf14822ac236382f95488117e66332a22d7e785/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/grpc.py",
      "https://github.com/satyajit-patel/llm-back/blob/eaf14822ac236382f95488117e66332a22d7e785/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/grpc.py",
      "https://github.com/satyajit-patel/llm-back/blob/eaf14822ac236382f95488117e66332a22d7e785/.venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/satyajit-patel/llm-back/blob/eaf14822ac236382f95488117e66332a22d7e785/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/satyajit-patel/llm-back/blob/eaf14822ac236382f95488117e66332a22d7e785/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/client.py",
      "https://github.com/satyajit-patel/llm-back/blob/eaf14822ac236382f95488117e66332a22d7e785/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/client.py",
      "https://github.com/satyajit-patel/llm-back/blob/eaf14822ac236382f95488117e66332a22d7e785/.venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/rest.py",
      "https://github.com/satyajit-patel/llm-back/blob/eaf14822ac236382f95488117e66332a22d7e785/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2343962,
    "stars": 0
  },
  {
    "full_name": "chiru-abhinash/Database-Interaction-Using-Gemini-LLM",
    "name": "Database-Interaction-Using-Gemini-LLM",
    "description": null,
    "html_url": [
      "https://github.com/chiru-abhinash/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/transports/base.py",
      "https://github.com/chiru-abhinash/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/base.py",
      "https://github.com/chiru-abhinash/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/base.py",
      "https://github.com/chiru-abhinash/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/base.py",
      "https://github.com/chiru-abhinash/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/transports/base.py",
      "https://github.com/chiru-abhinash/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/transports/base.py",
      "https://github.com/chiru-abhinash/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/base.py",
      "https://github.com/chiru-abhinash/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/base.py",
      "https://github.com/chiru-abhinash/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/base.py",
      "https://github.com/chiru-abhinash/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/base.py",
      "https://github.com/chiru-abhinash/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/base.py",
      "https://github.com/chiru-abhinash/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/grpc.py",
      "https://github.com/chiru-abhinash/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/transports/grpc.py",
      "https://github.com/chiru-abhinash/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/chiru-abhinash/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/chiru-abhinash/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/env/Lib/site-packages/google/generativeai/client.py",
      "https://github.com/chiru-abhinash/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/chiru-abhinash/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/chiru-abhinash/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/rest.py",
      "https://github.com/chiru-abhinash/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/rest.py",
      "https://github.com/chiru-abhinash/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/grpc.py",
      "https://github.com/chiru-abhinash/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/grpc.py",
      "https://github.com/chiru-abhinash/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/rest.py",
      "https://github.com/chiru-abhinash/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc.py",
      "https://github.com/chiru-abhinash/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/rest.py",
      "https://github.com/chiru-abhinash/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/chiru-abhinash/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/chiru-abhinash/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/rest.py",
      "https://github.com/chiru-abhinash/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/client.py",
      "https://github.com/chiru-abhinash/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/client.py",
      "https://github.com/chiru-abhinash/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/rest.py",
      "https://github.com/chiru-abhinash/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/grpc_asyncio.py",
      "https://github.com/chiru-abhinash/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/client.py",
      "https://github.com/chiru-abhinash/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/client.py",
      "https://github.com/chiru-abhinash/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/client.py",
      "https://github.com/chiru-abhinash/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/rest.py",
      "https://github.com/chiru-abhinash/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/rest.py",
      "https://github.com/chiru-abhinash/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/client.py",
      "https://github.com/chiru-abhinash/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/env/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/rest.py",
      "https://github.com/chiru-abhinash/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4747558,
    "stars": 0
  },
  {
    "full_name": "RAMAKRISHNA-EEDA/Database-Interaction-Using-Gemini-LLM",
    "name": "Database-Interaction-Using-Gemini-LLM",
    "description": null,
    "html_url": [
      "https://github.com/RAMAKRISHNA-EEDA/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/transports/base.py",
      "https://github.com/RAMAKRISHNA-EEDA/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/base.py",
      "https://github.com/RAMAKRISHNA-EEDA/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/base.py",
      "https://github.com/RAMAKRISHNA-EEDA/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/transports/base.py",
      "https://github.com/RAMAKRISHNA-EEDA/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/transports/base.py",
      "https://github.com/RAMAKRISHNA-EEDA/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/base.py",
      "https://github.com/RAMAKRISHNA-EEDA/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/base.py",
      "https://github.com/RAMAKRISHNA-EEDA/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/base.py",
      "https://github.com/RAMAKRISHNA-EEDA/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/base.py",
      "https://github.com/RAMAKRISHNA-EEDA/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/grpc.py",
      "https://github.com/RAMAKRISHNA-EEDA/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/RAMAKRISHNA-EEDA/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/RAMAKRISHNA-EEDA/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/env/Lib/site-packages/google/generativeai/client.py",
      "https://github.com/RAMAKRISHNA-EEDA/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/RAMAKRISHNA-EEDA/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/RAMAKRISHNA-EEDA/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/rest.py",
      "https://github.com/RAMAKRISHNA-EEDA/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/rest.py",
      "https://github.com/RAMAKRISHNA-EEDA/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/grpc.py",
      "https://github.com/RAMAKRISHNA-EEDA/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/grpc.py",
      "https://github.com/RAMAKRISHNA-EEDA/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/rest.py",
      "https://github.com/RAMAKRISHNA-EEDA/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc.py",
      "https://github.com/RAMAKRISHNA-EEDA/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/rest.py",
      "https://github.com/RAMAKRISHNA-EEDA/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/RAMAKRISHNA-EEDA/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/RAMAKRISHNA-EEDA/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/rest.py",
      "https://github.com/RAMAKRISHNA-EEDA/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/client.py",
      "https://github.com/RAMAKRISHNA-EEDA/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/grpc_asyncio.py",
      "https://github.com/RAMAKRISHNA-EEDA/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/client.py",
      "https://github.com/RAMAKRISHNA-EEDA/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/client.py",
      "https://github.com/RAMAKRISHNA-EEDA/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/client.py",
      "https://github.com/RAMAKRISHNA-EEDA/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/env/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/rest.py",
      "https://github.com/RAMAKRISHNA-EEDA/Database-Interaction-Using-Gemini-LLM/blob/aaa0aa64de289c541514cde7b0201a4c5e6ef2b9/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4747558,
    "stars": 0
  },
  {
    "full_name": "Malkyounis71/LLM-Chatbot-using-Google-Gemini-Pro-with-Streamlit-Python-Gen-AI",
    "name": "LLM-Chatbot-using-Google-Gemini-Pro-with-Streamlit-Python-Gen-AI",
    "description": null,
    "html_url": [
      "https://github.com/Malkyounis71/LLM-Chatbot-using-Google-Gemini-Pro-with-Streamlit-Python-Gen-AI/blob/48e96372da119ab9d343dd3390d455ed3f6c35b8/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/base.py",
      "https://github.com/Malkyounis71/LLM-Chatbot-using-Google-Gemini-Pro-with-Streamlit-Python-Gen-AI/blob/48e96372da119ab9d343dd3390d455ed3f6c35b8/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/base.py",
      "https://github.com/Malkyounis71/LLM-Chatbot-using-Google-Gemini-Pro-with-Streamlit-Python-Gen-AI/blob/48e96372da119ab9d343dd3390d455ed3f6c35b8/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/transports/base.py",
      "https://github.com/Malkyounis71/LLM-Chatbot-using-Google-Gemini-Pro-with-Streamlit-Python-Gen-AI/blob/48e96372da119ab9d343dd3390d455ed3f6c35b8/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/base.py",
      "https://github.com/Malkyounis71/LLM-Chatbot-using-Google-Gemini-Pro-with-Streamlit-Python-Gen-AI/blob/48e96372da119ab9d343dd3390d455ed3f6c35b8/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/base.py",
      "https://github.com/Malkyounis71/LLM-Chatbot-using-Google-Gemini-Pro-with-Streamlit-Python-Gen-AI/blob/48e96372da119ab9d343dd3390d455ed3f6c35b8/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/base.py",
      "https://github.com/Malkyounis71/LLM-Chatbot-using-Google-Gemini-Pro-with-Streamlit-Python-Gen-AI/blob/48e96372da119ab9d343dd3390d455ed3f6c35b8/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/grpc.py",
      "https://github.com/Malkyounis71/LLM-Chatbot-using-Google-Gemini-Pro-with-Streamlit-Python-Gen-AI/blob/48e96372da119ab9d343dd3390d455ed3f6c35b8/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/transports/grpc.py",
      "https://github.com/Malkyounis71/LLM-Chatbot-using-Google-Gemini-Pro-with-Streamlit-Python-Gen-AI/blob/48e96372da119ab9d343dd3390d455ed3f6c35b8/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/Malkyounis71/LLM-Chatbot-using-Google-Gemini-Pro-with-Streamlit-Python-Gen-AI/blob/48e96372da119ab9d343dd3390d455ed3f6c35b8/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/Malkyounis71/LLM-Chatbot-using-Google-Gemini-Pro-with-Streamlit-Python-Gen-AI/blob/48e96372da119ab9d343dd3390d455ed3f6c35b8/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/rest.py",
      "https://github.com/Malkyounis71/LLM-Chatbot-using-Google-Gemini-Pro-with-Streamlit-Python-Gen-AI/blob/48e96372da119ab9d343dd3390d455ed3f6c35b8/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/rest.py",
      "https://github.com/Malkyounis71/LLM-Chatbot-using-Google-Gemini-Pro-with-Streamlit-Python-Gen-AI/blob/48e96372da119ab9d343dd3390d455ed3f6c35b8/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/grpc.py",
      "https://github.com/Malkyounis71/LLM-Chatbot-using-Google-Gemini-Pro-with-Streamlit-Python-Gen-AI/blob/48e96372da119ab9d343dd3390d455ed3f6c35b8/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/grpc.py",
      "https://github.com/Malkyounis71/LLM-Chatbot-using-Google-Gemini-Pro-with-Streamlit-Python-Gen-AI/blob/48e96372da119ab9d343dd3390d455ed3f6c35b8/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc.py",
      "https://github.com/Malkyounis71/LLM-Chatbot-using-Google-Gemini-Pro-with-Streamlit-Python-Gen-AI/blob/48e96372da119ab9d343dd3390d455ed3f6c35b8/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/rest.py",
      "https://github.com/Malkyounis71/LLM-Chatbot-using-Google-Gemini-Pro-with-Streamlit-Python-Gen-AI/blob/48e96372da119ab9d343dd3390d455ed3f6c35b8/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/Malkyounis71/LLM-Chatbot-using-Google-Gemini-Pro-with-Streamlit-Python-Gen-AI/blob/48e96372da119ab9d343dd3390d455ed3f6c35b8/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/client.py",
      "https://github.com/Malkyounis71/LLM-Chatbot-using-Google-Gemini-Pro-with-Streamlit-Python-Gen-AI/blob/48e96372da119ab9d343dd3390d455ed3f6c35b8/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/client.py",
      "https://github.com/Malkyounis71/LLM-Chatbot-using-Google-Gemini-Pro-with-Streamlit-Python-Gen-AI/blob/48e96372da119ab9d343dd3390d455ed3f6c35b8/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/rest.py",
      "https://github.com/Malkyounis71/LLM-Chatbot-using-Google-Gemini-Pro-with-Streamlit-Python-Gen-AI/blob/48e96372da119ab9d343dd3390d455ed3f6c35b8/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/grpc_asyncio.py",
      "https://github.com/Malkyounis71/LLM-Chatbot-using-Google-Gemini-Pro-with-Streamlit-Python-Gen-AI/blob/48e96372da119ab9d343dd3390d455ed3f6c35b8/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/rest.py",
      "https://github.com/Malkyounis71/LLM-Chatbot-using-Google-Gemini-Pro-with-Streamlit-Python-Gen-AI/blob/48e96372da119ab9d343dd3390d455ed3f6c35b8/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/rest.py",
      "https://github.com/Malkyounis71/LLM-Chatbot-using-Google-Gemini-Pro-with-Streamlit-Python-Gen-AI/blob/48e96372da119ab9d343dd3390d455ed3f6c35b8/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/client.py",
      "https://github.com/Malkyounis71/LLM-Chatbot-using-Google-Gemini-Pro-with-Streamlit-Python-Gen-AI/blob/48e96372da119ab9d343dd3390d455ed3f6c35b8/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1421569,
    "stars": 1
  },
  {
    "full_name": "Sibi-Sebastian/ATS-Resume-LLM-App",
    "name": "ATS-Resume-LLM-App",
    "description": "I will be creating an end to end ATS project using Google Gemini Pro Vision API. From this projects you will be able to analyze your resume and compare it with the jobs description and find suggestion with respect to what all improvements you can bring.",
    "html_url": [
      "https://github.com/Sibi-Sebastian/ATS-Resume-LLM-App/blob/1d99257d289f493a52eef74aad65fd7ceffd7808/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/base.py",
      "https://github.com/Sibi-Sebastian/ATS-Resume-LLM-App/blob/1d99257d289f493a52eef74aad65fd7ceffd7808/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/base.py",
      "https://github.com/Sibi-Sebastian/ATS-Resume-LLM-App/blob/1d99257d289f493a52eef74aad65fd7ceffd7808/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/transports/base.py",
      "https://github.com/Sibi-Sebastian/ATS-Resume-LLM-App/blob/1d99257d289f493a52eef74aad65fd7ceffd7808/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/base.py",
      "https://github.com/Sibi-Sebastian/ATS-Resume-LLM-App/blob/1d99257d289f493a52eef74aad65fd7ceffd7808/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/base.py",
      "https://github.com/Sibi-Sebastian/ATS-Resume-LLM-App/blob/1d99257d289f493a52eef74aad65fd7ceffd7808/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/base.py",
      "https://github.com/Sibi-Sebastian/ATS-Resume-LLM-App/blob/1d99257d289f493a52eef74aad65fd7ceffd7808/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/grpc.py",
      "https://github.com/Sibi-Sebastian/ATS-Resume-LLM-App/blob/1d99257d289f493a52eef74aad65fd7ceffd7808/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/transports/grpc.py",
      "https://github.com/Sibi-Sebastian/ATS-Resume-LLM-App/blob/1d99257d289f493a52eef74aad65fd7ceffd7808/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/Sibi-Sebastian/ATS-Resume-LLM-App/blob/1d99257d289f493a52eef74aad65fd7ceffd7808/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/Sibi-Sebastian/ATS-Resume-LLM-App/blob/1d99257d289f493a52eef74aad65fd7ceffd7808/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/rest.py",
      "https://github.com/Sibi-Sebastian/ATS-Resume-LLM-App/blob/1d99257d289f493a52eef74aad65fd7ceffd7808/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/rest.py",
      "https://github.com/Sibi-Sebastian/ATS-Resume-LLM-App/blob/1d99257d289f493a52eef74aad65fd7ceffd7808/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/grpc.py",
      "https://github.com/Sibi-Sebastian/ATS-Resume-LLM-App/blob/1d99257d289f493a52eef74aad65fd7ceffd7808/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/grpc.py",
      "https://github.com/Sibi-Sebastian/ATS-Resume-LLM-App/blob/1d99257d289f493a52eef74aad65fd7ceffd7808/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc.py",
      "https://github.com/Sibi-Sebastian/ATS-Resume-LLM-App/blob/1d99257d289f493a52eef74aad65fd7ceffd7808/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/rest.py",
      "https://github.com/Sibi-Sebastian/ATS-Resume-LLM-App/blob/1d99257d289f493a52eef74aad65fd7ceffd7808/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/Sibi-Sebastian/ATS-Resume-LLM-App/blob/1d99257d289f493a52eef74aad65fd7ceffd7808/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/client.py",
      "https://github.com/Sibi-Sebastian/ATS-Resume-LLM-App/blob/1d99257d289f493a52eef74aad65fd7ceffd7808/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/client.py",
      "https://github.com/Sibi-Sebastian/ATS-Resume-LLM-App/blob/1d99257d289f493a52eef74aad65fd7ceffd7808/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/rest.py",
      "https://github.com/Sibi-Sebastian/ATS-Resume-LLM-App/blob/1d99257d289f493a52eef74aad65fd7ceffd7808/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/grpc_asyncio.py",
      "https://github.com/Sibi-Sebastian/ATS-Resume-LLM-App/blob/1d99257d289f493a52eef74aad65fd7ceffd7808/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/rest.py",
      "https://github.com/Sibi-Sebastian/ATS-Resume-LLM-App/blob/1d99257d289f493a52eef74aad65fd7ceffd7808/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/rest.py",
      "https://github.com/Sibi-Sebastian/ATS-Resume-LLM-App/blob/1d99257d289f493a52eef74aad65fd7ceffd7808/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/client.py",
      "https://github.com/Sibi-Sebastian/ATS-Resume-LLM-App/blob/1d99257d289f493a52eef74aad65fd7ceffd7808/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 727562,
    "stars": 1
  },
  {
    "full_name": "sheefanaaz123/TranscribeTube",
    "name": "TranscribeTube",
    "description": "Automate detailed note generation from YouTube video transcripts using AI. Input the video link, choose the words limit and let Gemini Pro model summarize within 250 words.",
    "html_url": [
      "https://github.com/sheefanaaz123/TranscribeTube/blob/713c9b09ea20847269d15d22015058ed72543f2a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/base.py",
      "https://github.com/sheefanaaz123/TranscribeTube/blob/713c9b09ea20847269d15d22015058ed72543f2a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/base.py",
      "https://github.com/sheefanaaz123/TranscribeTube/blob/713c9b09ea20847269d15d22015058ed72543f2a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/transports/base.py",
      "https://github.com/sheefanaaz123/TranscribeTube/blob/713c9b09ea20847269d15d22015058ed72543f2a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/base.py",
      "https://github.com/sheefanaaz123/TranscribeTube/blob/713c9b09ea20847269d15d22015058ed72543f2a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/base.py",
      "https://github.com/sheefanaaz123/TranscribeTube/blob/713c9b09ea20847269d15d22015058ed72543f2a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/base.py",
      "https://github.com/sheefanaaz123/TranscribeTube/blob/713c9b09ea20847269d15d22015058ed72543f2a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/grpc.py",
      "https://github.com/sheefanaaz123/TranscribeTube/blob/713c9b09ea20847269d15d22015058ed72543f2a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/transports/grpc.py",
      "https://github.com/sheefanaaz123/TranscribeTube/blob/713c9b09ea20847269d15d22015058ed72543f2a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/sheefanaaz123/TranscribeTube/blob/713c9b09ea20847269d15d22015058ed72543f2a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/sheefanaaz123/TranscribeTube/blob/713c9b09ea20847269d15d22015058ed72543f2a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/rest.py",
      "https://github.com/sheefanaaz123/TranscribeTube/blob/713c9b09ea20847269d15d22015058ed72543f2a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/rest.py",
      "https://github.com/sheefanaaz123/TranscribeTube/blob/713c9b09ea20847269d15d22015058ed72543f2a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/grpc.py",
      "https://github.com/sheefanaaz123/TranscribeTube/blob/713c9b09ea20847269d15d22015058ed72543f2a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/grpc.py",
      "https://github.com/sheefanaaz123/TranscribeTube/blob/713c9b09ea20847269d15d22015058ed72543f2a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc.py",
      "https://github.com/sheefanaaz123/TranscribeTube/blob/713c9b09ea20847269d15d22015058ed72543f2a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/rest.py",
      "https://github.com/sheefanaaz123/TranscribeTube/blob/713c9b09ea20847269d15d22015058ed72543f2a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/sheefanaaz123/TranscribeTube/blob/713c9b09ea20847269d15d22015058ed72543f2a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/client.py",
      "https://github.com/sheefanaaz123/TranscribeTube/blob/713c9b09ea20847269d15d22015058ed72543f2a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/client.py",
      "https://github.com/sheefanaaz123/TranscribeTube/blob/713c9b09ea20847269d15d22015058ed72543f2a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/rest.py",
      "https://github.com/sheefanaaz123/TranscribeTube/blob/713c9b09ea20847269d15d22015058ed72543f2a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/grpc_asyncio.py",
      "https://github.com/sheefanaaz123/TranscribeTube/blob/713c9b09ea20847269d15d22015058ed72543f2a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/rest.py",
      "https://github.com/sheefanaaz123/TranscribeTube/blob/713c9b09ea20847269d15d22015058ed72543f2a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/rest.py",
      "https://github.com/sheefanaaz123/TranscribeTube/blob/713c9b09ea20847269d15d22015058ed72543f2a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/client.py",
      "https://github.com/sheefanaaz123/TranscribeTube/blob/713c9b09ea20847269d15d22015058ed72543f2a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1485123,
    "stars": 2
  },
  {
    "full_name": "ahmedhanora11/Food_Genie",
    "name": "Food_Genie",
    "description": "The idea is to create a website called Food Genie that uses Gemini Ultra to help assist people in choosing the best food to maintain their health.",
    "html_url": [
      "https://github.com/ahmedhanora11/Food_Genie/blob/35bfad0e6a639f54f557c364411efab973ed078d/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/base.py",
      "https://github.com/ahmedhanora11/Food_Genie/blob/35bfad0e6a639f54f557c364411efab973ed078d/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/base.py",
      "https://github.com/ahmedhanora11/Food_Genie/blob/35bfad0e6a639f54f557c364411efab973ed078d/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/transports/base.py",
      "https://github.com/ahmedhanora11/Food_Genie/blob/35bfad0e6a639f54f557c364411efab973ed078d/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/base.py",
      "https://github.com/ahmedhanora11/Food_Genie/blob/35bfad0e6a639f54f557c364411efab973ed078d/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/base.py",
      "https://github.com/ahmedhanora11/Food_Genie/blob/35bfad0e6a639f54f557c364411efab973ed078d/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/base.py",
      "https://github.com/ahmedhanora11/Food_Genie/blob/35bfad0e6a639f54f557c364411efab973ed078d/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/grpc.py",
      "https://github.com/ahmedhanora11/Food_Genie/blob/35bfad0e6a639f54f557c364411efab973ed078d/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/transports/grpc.py",
      "https://github.com/ahmedhanora11/Food_Genie/blob/35bfad0e6a639f54f557c364411efab973ed078d/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/ahmedhanora11/Food_Genie/blob/35bfad0e6a639f54f557c364411efab973ed078d/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/rest.py",
      "https://github.com/ahmedhanora11/Food_Genie/blob/35bfad0e6a639f54f557c364411efab973ed078d/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/rest.py",
      "https://github.com/ahmedhanora11/Food_Genie/blob/35bfad0e6a639f54f557c364411efab973ed078d/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/grpc.py",
      "https://github.com/ahmedhanora11/Food_Genie/blob/35bfad0e6a639f54f557c364411efab973ed078d/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/grpc.py",
      "https://github.com/ahmedhanora11/Food_Genie/blob/35bfad0e6a639f54f557c364411efab973ed078d/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc.py",
      "https://github.com/ahmedhanora11/Food_Genie/blob/35bfad0e6a639f54f557c364411efab973ed078d/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/rest.py",
      "https://github.com/ahmedhanora11/Food_Genie/blob/35bfad0e6a639f54f557c364411efab973ed078d/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/ahmedhanora11/Food_Genie/blob/35bfad0e6a639f54f557c364411efab973ed078d/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/client.py",
      "https://github.com/ahmedhanora11/Food_Genie/blob/35bfad0e6a639f54f557c364411efab973ed078d/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/client.py",
      "https://github.com/ahmedhanora11/Food_Genie/blob/35bfad0e6a639f54f557c364411efab973ed078d/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/rest.py",
      "https://github.com/ahmedhanora11/Food_Genie/blob/35bfad0e6a639f54f557c364411efab973ed078d/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/grpc_asyncio.py",
      "https://github.com/ahmedhanora11/Food_Genie/blob/35bfad0e6a639f54f557c364411efab973ed078d/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/rest.py",
      "https://github.com/ahmedhanora11/Food_Genie/blob/35bfad0e6a639f54f557c364411efab973ed078d/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/rest.py",
      "https://github.com/ahmedhanora11/Food_Genie/blob/35bfad0e6a639f54f557c364411efab973ed078d/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/client.py",
      "https://github.com/ahmedhanora11/Food_Genie/blob/35bfad0e6a639f54f557c364411efab973ed078d/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 359550,
    "stars": 0
  },
  {
    "full_name": "Pritam991/ManiLLM",
    "name": "ManiLLM",
    "description": "ManiLLM is a web application built with Streamlit that leverages Google Generative AI to create an interactive user experience for exploring and generating content using advanced language models. This project allows users to harness the power of generative AI in a simple and user-friendly interface.",
    "html_url": [
      "https://github.com/Pritam991/ManiLLM/blob/79a2dd5c1883552bbc0ff686f9937b430754c811/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/base.py",
      "https://github.com/Pritam991/ManiLLM/blob/79a2dd5c1883552bbc0ff686f9937b430754c811/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/base.py",
      "https://github.com/Pritam991/ManiLLM/blob/79a2dd5c1883552bbc0ff686f9937b430754c811/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/transports/base.py",
      "https://github.com/Pritam991/ManiLLM/blob/79a2dd5c1883552bbc0ff686f9937b430754c811/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/base.py",
      "https://github.com/Pritam991/ManiLLM/blob/79a2dd5c1883552bbc0ff686f9937b430754c811/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/base.py",
      "https://github.com/Pritam991/ManiLLM/blob/79a2dd5c1883552bbc0ff686f9937b430754c811/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/base.py",
      "https://github.com/Pritam991/ManiLLM/blob/79a2dd5c1883552bbc0ff686f9937b430754c811/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/grpc.py",
      "https://github.com/Pritam991/ManiLLM/blob/79a2dd5c1883552bbc0ff686f9937b430754c811/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/transports/grpc.py",
      "https://github.com/Pritam991/ManiLLM/blob/79a2dd5c1883552bbc0ff686f9937b430754c811/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/Pritam991/ManiLLM/blob/79a2dd5c1883552bbc0ff686f9937b430754c811/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/Pritam991/ManiLLM/blob/79a2dd5c1883552bbc0ff686f9937b430754c811/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/rest.py",
      "https://github.com/Pritam991/ManiLLM/blob/79a2dd5c1883552bbc0ff686f9937b430754c811/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/rest.py",
      "https://github.com/Pritam991/ManiLLM/blob/79a2dd5c1883552bbc0ff686f9937b430754c811/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/grpc.py",
      "https://github.com/Pritam991/ManiLLM/blob/79a2dd5c1883552bbc0ff686f9937b430754c811/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/grpc.py",
      "https://github.com/Pritam991/ManiLLM/blob/79a2dd5c1883552bbc0ff686f9937b430754c811/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc.py",
      "https://github.com/Pritam991/ManiLLM/blob/79a2dd5c1883552bbc0ff686f9937b430754c811/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/rest.py",
      "https://github.com/Pritam991/ManiLLM/blob/79a2dd5c1883552bbc0ff686f9937b430754c811/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/Pritam991/ManiLLM/blob/79a2dd5c1883552bbc0ff686f9937b430754c811/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/client.py",
      "https://github.com/Pritam991/ManiLLM/blob/79a2dd5c1883552bbc0ff686f9937b430754c811/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/rest.py",
      "https://github.com/Pritam991/ManiLLM/blob/79a2dd5c1883552bbc0ff686f9937b430754c811/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/grpc_asyncio.py",
      "https://github.com/Pritam991/ManiLLM/blob/79a2dd5c1883552bbc0ff686f9937b430754c811/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/rest.py",
      "https://github.com/Pritam991/ManiLLM/blob/79a2dd5c1883552bbc0ff686f9937b430754c811/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/rest.py",
      "https://github.com/Pritam991/ManiLLM/blob/79a2dd5c1883552bbc0ff686f9937b430754c811/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/client.py",
      "https://github.com/Pritam991/ManiLLM/blob/79a2dd5c1883552bbc0ff686f9937b430754c811/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1833574,
    "stars": 1
  },
  {
    "full_name": "imrantan/Jimmybot-2024",
    "name": "Jimmybot-2024",
    "description": "A telegram chatbot powered by python and Google's Gemini API",
    "html_url": [
      "https://github.com/imrantan/Jimmybot-2024/blob/ae49b4df7361555cf518824e76a474613bb09539/virt/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/base.py",
      "https://github.com/imrantan/Jimmybot-2024/blob/ae49b4df7361555cf518824e76a474613bb09539/virt/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/base.py",
      "https://github.com/imrantan/Jimmybot-2024/blob/ae49b4df7361555cf518824e76a474613bb09539/virt/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/transports/base.py",
      "https://github.com/imrantan/Jimmybot-2024/blob/ae49b4df7361555cf518824e76a474613bb09539/virt/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/base.py",
      "https://github.com/imrantan/Jimmybot-2024/blob/ae49b4df7361555cf518824e76a474613bb09539/virt/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/base.py",
      "https://github.com/imrantan/Jimmybot-2024/blob/ae49b4df7361555cf518824e76a474613bb09539/virt/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/base.py",
      "https://github.com/imrantan/Jimmybot-2024/blob/ae49b4df7361555cf518824e76a474613bb09539/virt/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/grpc.py",
      "https://github.com/imrantan/Jimmybot-2024/blob/ae49b4df7361555cf518824e76a474613bb09539/virt/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/transports/grpc.py",
      "https://github.com/imrantan/Jimmybot-2024/blob/ae49b4df7361555cf518824e76a474613bb09539/virt/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/imrantan/Jimmybot-2024/blob/ae49b4df7361555cf518824e76a474613bb09539/virt/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/imrantan/Jimmybot-2024/blob/ae49b4df7361555cf518824e76a474613bb09539/virt/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/grpc.py",
      "https://github.com/imrantan/Jimmybot-2024/blob/ae49b4df7361555cf518824e76a474613bb09539/virt/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/rest.py",
      "https://github.com/imrantan/Jimmybot-2024/blob/ae49b4df7361555cf518824e76a474613bb09539/virt/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/imrantan/Jimmybot-2024/blob/ae49b4df7361555cf518824e76a474613bb09539/virt/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/client.py",
      "https://github.com/imrantan/Jimmybot-2024/blob/ae49b4df7361555cf518824e76a474613bb09539/virt/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/rest.py",
      "https://github.com/imrantan/Jimmybot-2024/blob/ae49b4df7361555cf518824e76a474613bb09539/virt/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/rest.py",
      "https://github.com/imrantan/Jimmybot-2024/blob/ae49b4df7361555cf518824e76a474613bb09539/virt/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/rest.py",
      "https://github.com/imrantan/Jimmybot-2024/blob/ae49b4df7361555cf518824e76a474613bb09539/virt/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/client.py",
      "https://github.com/imrantan/Jimmybot-2024/blob/ae49b4df7361555cf518824e76a474613bb09539/virt/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 379976,
    "stars": 0
  },
  {
    "full_name": "priyankkumar218/streamlit-gemini",
    "name": "streamlit-gemini",
    "description": null,
    "html_url": [
      "https://github.com/priyankkumar218/streamlit-gemini/blob/ce7a2367ec638f09b868635357f0109429758e5a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/base.py",
      "https://github.com/priyankkumar218/streamlit-gemini/blob/ce7a2367ec638f09b868635357f0109429758e5a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/base.py",
      "https://github.com/priyankkumar218/streamlit-gemini/blob/ce7a2367ec638f09b868635357f0109429758e5a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/transports/base.py",
      "https://github.com/priyankkumar218/streamlit-gemini/blob/ce7a2367ec638f09b868635357f0109429758e5a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/base.py",
      "https://github.com/priyankkumar218/streamlit-gemini/blob/ce7a2367ec638f09b868635357f0109429758e5a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/base.py",
      "https://github.com/priyankkumar218/streamlit-gemini/blob/ce7a2367ec638f09b868635357f0109429758e5a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/base.py",
      "https://github.com/priyankkumar218/streamlit-gemini/blob/ce7a2367ec638f09b868635357f0109429758e5a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/grpc.py",
      "https://github.com/priyankkumar218/streamlit-gemini/blob/ce7a2367ec638f09b868635357f0109429758e5a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/transports/grpc.py",
      "https://github.com/priyankkumar218/streamlit-gemini/blob/ce7a2367ec638f09b868635357f0109429758e5a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/priyankkumar218/streamlit-gemini/blob/ce7a2367ec638f09b868635357f0109429758e5a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/priyankkumar218/streamlit-gemini/blob/ce7a2367ec638f09b868635357f0109429758e5a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/rest.py",
      "https://github.com/priyankkumar218/streamlit-gemini/blob/ce7a2367ec638f09b868635357f0109429758e5a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/rest.py",
      "https://github.com/priyankkumar218/streamlit-gemini/blob/ce7a2367ec638f09b868635357f0109429758e5a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/grpc.py",
      "https://github.com/priyankkumar218/streamlit-gemini/blob/ce7a2367ec638f09b868635357f0109429758e5a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/grpc.py",
      "https://github.com/priyankkumar218/streamlit-gemini/blob/ce7a2367ec638f09b868635357f0109429758e5a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc.py",
      "https://github.com/priyankkumar218/streamlit-gemini/blob/ce7a2367ec638f09b868635357f0109429758e5a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/rest.py",
      "https://github.com/priyankkumar218/streamlit-gemini/blob/ce7a2367ec638f09b868635357f0109429758e5a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/priyankkumar218/streamlit-gemini/blob/ce7a2367ec638f09b868635357f0109429758e5a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/client.py",
      "https://github.com/priyankkumar218/streamlit-gemini/blob/ce7a2367ec638f09b868635357f0109429758e5a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/client.py",
      "https://github.com/priyankkumar218/streamlit-gemini/blob/ce7a2367ec638f09b868635357f0109429758e5a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/rest.py",
      "https://github.com/priyankkumar218/streamlit-gemini/blob/ce7a2367ec638f09b868635357f0109429758e5a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/grpc_asyncio.py",
      "https://github.com/priyankkumar218/streamlit-gemini/blob/ce7a2367ec638f09b868635357f0109429758e5a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/rest.py",
      "https://github.com/priyankkumar218/streamlit-gemini/blob/ce7a2367ec638f09b868635357f0109429758e5a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/rest.py",
      "https://github.com/priyankkumar218/streamlit-gemini/blob/ce7a2367ec638f09b868635357f0109429758e5a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/client.py",
      "https://github.com/priyankkumar218/streamlit-gemini/blob/ce7a2367ec638f09b868635357f0109429758e5a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1439158,
    "stars": 0
  },
  {
    "full_name": "asappasaheb99/GeminiAI",
    "name": "GeminiAI",
    "description": "ChatGPT using GeminiAI",
    "html_url": [
      "https://github.com/asappasaheb99/GeminiAI/blob/0110219100341810a4c8855b3f2325b9c32f04c1/src/python==3.10/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/base.py",
      "https://github.com/asappasaheb99/GeminiAI/blob/0110219100341810a4c8855b3f2325b9c32f04c1/src/python==3.10/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/base.py",
      "https://github.com/asappasaheb99/GeminiAI/blob/0110219100341810a4c8855b3f2325b9c32f04c1/src/python==3.10/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/transports/base.py",
      "https://github.com/asappasaheb99/GeminiAI/blob/0110219100341810a4c8855b3f2325b9c32f04c1/src/python==3.10/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/base.py",
      "https://github.com/asappasaheb99/GeminiAI/blob/0110219100341810a4c8855b3f2325b9c32f04c1/src/python==3.10/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/base.py",
      "https://github.com/asappasaheb99/GeminiAI/blob/0110219100341810a4c8855b3f2325b9c32f04c1/src/python==3.10/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/base.py",
      "https://github.com/asappasaheb99/GeminiAI/blob/0110219100341810a4c8855b3f2325b9c32f04c1/src/python==3.10/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/transports/grpc.py",
      "https://github.com/asappasaheb99/GeminiAI/blob/0110219100341810a4c8855b3f2325b9c32f04c1/src/python==3.10/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/asappasaheb99/GeminiAI/blob/0110219100341810a4c8855b3f2325b9c32f04c1/src/python==3.10/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/rest.py",
      "https://github.com/asappasaheb99/GeminiAI/blob/0110219100341810a4c8855b3f2325b9c32f04c1/src/python==3.10/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/grpc.py",
      "https://github.com/asappasaheb99/GeminiAI/blob/0110219100341810a4c8855b3f2325b9c32f04c1/src/python==3.10/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/grpc.py",
      "https://github.com/asappasaheb99/GeminiAI/blob/0110219100341810a4c8855b3f2325b9c32f04c1/src/python==3.10/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc.py",
      "https://github.com/asappasaheb99/GeminiAI/blob/0110219100341810a4c8855b3f2325b9c32f04c1/src/python==3.10/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/rest.py",
      "https://github.com/asappasaheb99/GeminiAI/blob/0110219100341810a4c8855b3f2325b9c32f04c1/src/python==3.10/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/asappasaheb99/GeminiAI/blob/0110219100341810a4c8855b3f2325b9c32f04c1/src/python==3.10/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/client.py",
      "https://github.com/asappasaheb99/GeminiAI/blob/0110219100341810a4c8855b3f2325b9c32f04c1/src/python==3.10/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/rest.py",
      "https://github.com/asappasaheb99/GeminiAI/blob/0110219100341810a4c8855b3f2325b9c32f04c1/src/python==3.10/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/grpc_asyncio.py",
      "https://github.com/asappasaheb99/GeminiAI/blob/0110219100341810a4c8855b3f2325b9c32f04c1/src/python==3.10/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/rest.py",
      "https://github.com/asappasaheb99/GeminiAI/blob/0110219100341810a4c8855b3f2325b9c32f04c1/src/python==3.10/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/rest.py",
      "https://github.com/asappasaheb99/GeminiAI/blob/0110219100341810a4c8855b3f2325b9c32f04c1/src/python==3.10/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2638423,
    "stars": 0
  },
  {
    "full_name": "asmit-inzanist/Car-Identifier",
    "name": "Car-Identifier",
    "description": "A Streamlit web app that leverages Gemini's AI API to analyze uploaded car pictures and generate detailed descriptions.",
    "html_url": [
      "https://github.com/asmit-inzanist/Car-Identifier/blob/456f6df88df1d85f8d3a2116596414d5b8cf6275/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/base.py",
      "https://github.com/asmit-inzanist/Car-Identifier/blob/456f6df88df1d85f8d3a2116596414d5b8cf6275/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/transports/base.py",
      "https://github.com/asmit-inzanist/Car-Identifier/blob/456f6df88df1d85f8d3a2116596414d5b8cf6275/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/base.py",
      "https://github.com/asmit-inzanist/Car-Identifier/blob/456f6df88df1d85f8d3a2116596414d5b8cf6275/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/base.py",
      "https://github.com/asmit-inzanist/Car-Identifier/blob/456f6df88df1d85f8d3a2116596414d5b8cf6275/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/grpc.py",
      "https://github.com/asmit-inzanist/Car-Identifier/blob/456f6df88df1d85f8d3a2116596414d5b8cf6275/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/asmit-inzanist/Car-Identifier/blob/456f6df88df1d85f8d3a2116596414d5b8cf6275/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/asmit-inzanist/Car-Identifier/blob/456f6df88df1d85f8d3a2116596414d5b8cf6275/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/rest.py",
      "https://github.com/asmit-inzanist/Car-Identifier/blob/456f6df88df1d85f8d3a2116596414d5b8cf6275/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/rest.py",
      "https://github.com/asmit-inzanist/Car-Identifier/blob/456f6df88df1d85f8d3a2116596414d5b8cf6275/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/grpc.py",
      "https://github.com/asmit-inzanist/Car-Identifier/blob/456f6df88df1d85f8d3a2116596414d5b8cf6275/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/grpc.py",
      "https://github.com/asmit-inzanist/Car-Identifier/blob/456f6df88df1d85f8d3a2116596414d5b8cf6275/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc.py",
      "https://github.com/asmit-inzanist/Car-Identifier/blob/456f6df88df1d85f8d3a2116596414d5b8cf6275/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/rest.py",
      "https://github.com/asmit-inzanist/Car-Identifier/blob/456f6df88df1d85f8d3a2116596414d5b8cf6275/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/asmit-inzanist/Car-Identifier/blob/456f6df88df1d85f8d3a2116596414d5b8cf6275/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/client.py",
      "https://github.com/asmit-inzanist/Car-Identifier/blob/456f6df88df1d85f8d3a2116596414d5b8cf6275/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/rest.py",
      "https://github.com/asmit-inzanist/Car-Identifier/blob/456f6df88df1d85f8d3a2116596414d5b8cf6275/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/grpc_asyncio.py",
      "https://github.com/asmit-inzanist/Car-Identifier/blob/456f6df88df1d85f8d3a2116596414d5b8cf6275/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/rest.py",
      "https://github.com/asmit-inzanist/Car-Identifier/blob/456f6df88df1d85f8d3a2116596414d5b8cf6275/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/rest.py",
      "https://github.com/asmit-inzanist/Car-Identifier/blob/456f6df88df1d85f8d3a2116596414d5b8cf6275/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/client.py",
      "https://github.com/asmit-inzanist/Car-Identifier/blob/456f6df88df1d85f8d3a2116596414d5b8cf6275/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1466952,
    "stars": 0
  },
  {
    "full_name": "thekyleliao/wonderland_gemini",
    "name": "wonderland_gemini",
    "description": null,
    "html_url": [
      "https://github.com/thekyleliao/wonderland_gemini/blob/4b80d3dcaa5dd0831123952ae9bbf19da43d353f/myvenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/base.py",
      "https://github.com/thekyleliao/wonderland_gemini/blob/4b80d3dcaa5dd0831123952ae9bbf19da43d353f/myvenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/base.py",
      "https://github.com/thekyleliao/wonderland_gemini/blob/4b80d3dcaa5dd0831123952ae9bbf19da43d353f/myvenv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/base.py",
      "https://github.com/thekyleliao/wonderland_gemini/blob/4b80d3dcaa5dd0831123952ae9bbf19da43d353f/myvenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/base.py",
      "https://github.com/thekyleliao/wonderland_gemini/blob/4b80d3dcaa5dd0831123952ae9bbf19da43d353f/myvenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/base.py",
      "https://github.com/thekyleliao/wonderland_gemini/blob/4b80d3dcaa5dd0831123952ae9bbf19da43d353f/myvenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/thekyleliao/wonderland_gemini/blob/4b80d3dcaa5dd0831123952ae9bbf19da43d353f/myvenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/rest.py",
      "https://github.com/thekyleliao/wonderland_gemini/blob/4b80d3dcaa5dd0831123952ae9bbf19da43d353f/myvenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/grpc.py",
      "https://github.com/thekyleliao/wonderland_gemini/blob/4b80d3dcaa5dd0831123952ae9bbf19da43d353f/myvenv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/grpc.py",
      "https://github.com/thekyleliao/wonderland_gemini/blob/4b80d3dcaa5dd0831123952ae9bbf19da43d353f/myvenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/thekyleliao/wonderland_gemini/blob/4b80d3dcaa5dd0831123952ae9bbf19da43d353f/myvenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/client.py",
      "https://github.com/thekyleliao/wonderland_gemini/blob/4b80d3dcaa5dd0831123952ae9bbf19da43d353f/myvenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/client.py",
      "https://github.com/thekyleliao/wonderland_gemini/blob/4b80d3dcaa5dd0831123952ae9bbf19da43d353f/myvenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/rest.py",
      "https://github.com/thekyleliao/wonderland_gemini/blob/4b80d3dcaa5dd0831123952ae9bbf19da43d353f/myvenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/grpc_asyncio.py",
      "https://github.com/thekyleliao/wonderland_gemini/blob/4b80d3dcaa5dd0831123952ae9bbf19da43d353f/myvenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/rest.py",
      "https://github.com/thekyleliao/wonderland_gemini/blob/4b80d3dcaa5dd0831123952ae9bbf19da43d353f/myvenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/rest.py",
      "https://github.com/thekyleliao/wonderland_gemini/blob/4b80d3dcaa5dd0831123952ae9bbf19da43d353f/myvenv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/client.py",
      "https://github.com/thekyleliao/wonderland_gemini/blob/4b80d3dcaa5dd0831123952ae9bbf19da43d353f/myvenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 302107,
    "stars": 0
  },
  {
    "full_name": "psomkar01/TS59-Techtonicshift24",
    "name": "TS59-Techtonicshift24",
    "description": "This Repository consits of Smart ATS Resume Tracker Using LLM",
    "html_url": [
      "https://github.com/psomkar01/TS59-Techtonicshift24/blob/b9393e24a84c835f289817c51a1bba67ff8daa79/ATS/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/base.py",
      "https://github.com/psomkar01/TS59-Techtonicshift24/blob/b9393e24a84c835f289817c51a1bba67ff8daa79/ATS/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/transports/base.py",
      "https://github.com/psomkar01/TS59-Techtonicshift24/blob/b9393e24a84c835f289817c51a1bba67ff8daa79/ATS/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/base.py",
      "https://github.com/psomkar01/TS59-Techtonicshift24/blob/b9393e24a84c835f289817c51a1bba67ff8daa79/ATS/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/base.py",
      "https://github.com/psomkar01/TS59-Techtonicshift24/blob/b9393e24a84c835f289817c51a1bba67ff8daa79/ATS/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/base.py",
      "https://github.com/psomkar01/TS59-Techtonicshift24/blob/b9393e24a84c835f289817c51a1bba67ff8daa79/ATS/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/rest.py",
      "https://github.com/psomkar01/TS59-Techtonicshift24/blob/b9393e24a84c835f289817c51a1bba67ff8daa79/ATS/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/rest.py",
      "https://github.com/psomkar01/TS59-Techtonicshift24/blob/b9393e24a84c835f289817c51a1bba67ff8daa79/ATS/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/grpc.py",
      "https://github.com/psomkar01/TS59-Techtonicshift24/blob/b9393e24a84c835f289817c51a1bba67ff8daa79/ATS/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/rest.py",
      "https://github.com/psomkar01/TS59-Techtonicshift24/blob/b9393e24a84c835f289817c51a1bba67ff8daa79/ATS/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/client.py",
      "https://github.com/psomkar01/TS59-Techtonicshift24/blob/b9393e24a84c835f289817c51a1bba67ff8daa79/ATS/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/client.py",
      "https://github.com/psomkar01/TS59-Techtonicshift24/blob/b9393e24a84c835f289817c51a1bba67ff8daa79/ATS/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/rest.py",
      "https://github.com/psomkar01/TS59-Techtonicshift24/blob/b9393e24a84c835f289817c51a1bba67ff8daa79/ATS/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/grpc_asyncio.py",
      "https://github.com/psomkar01/TS59-Techtonicshift24/blob/b9393e24a84c835f289817c51a1bba67ff8daa79/ATS/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/rest.py",
      "https://github.com/psomkar01/TS59-Techtonicshift24/blob/b9393e24a84c835f289817c51a1bba67ff8daa79/ATS/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/rest.py",
      "https://github.com/psomkar01/TS59-Techtonicshift24/blob/b9393e24a84c835f289817c51a1bba67ff8daa79/ATS/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/client.py",
      "https://github.com/psomkar01/TS59-Techtonicshift24/blob/b9393e24a84c835f289817c51a1bba67ff8daa79/ATS/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3166085,
    "stars": 0
  },
  {
    "full_name": "kevint-thd/HR_LLM_PROJECT",
    "name": "HR_LLM_PROJECT",
    "description": "GOOGLE_GEMENI_ATS_Application",
    "html_url": [
      "https://github.com/kevint-thd/HR_LLM_PROJECT/blob/84c86aade4970096cf860dd7cef9fdd0cde1148c/BCG_ATS_System/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/base.py",
      "https://github.com/kevint-thd/HR_LLM_PROJECT/blob/84c86aade4970096cf860dd7cef9fdd0cde1148c/BCG_ATS_System/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/base.py",
      "https://github.com/kevint-thd/HR_LLM_PROJECT/blob/84c86aade4970096cf860dd7cef9fdd0cde1148c/BCG_ATS_System/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/transports/base.py",
      "https://github.com/kevint-thd/HR_LLM_PROJECT/blob/84c86aade4970096cf860dd7cef9fdd0cde1148c/BCG_ATS_System/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/base.py",
      "https://github.com/kevint-thd/HR_LLM_PROJECT/blob/84c86aade4970096cf860dd7cef9fdd0cde1148c/BCG_ATS_System/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/base.py",
      "https://github.com/kevint-thd/HR_LLM_PROJECT/blob/84c86aade4970096cf860dd7cef9fdd0cde1148c/BCG_ATS_System/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/base.py",
      "https://github.com/kevint-thd/HR_LLM_PROJECT/blob/84c86aade4970096cf860dd7cef9fdd0cde1148c/BCG_ATS_System/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/grpc.py",
      "https://github.com/kevint-thd/HR_LLM_PROJECT/blob/84c86aade4970096cf860dd7cef9fdd0cde1148c/BCG_ATS_System/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/rest.py",
      "https://github.com/kevint-thd/HR_LLM_PROJECT/blob/84c86aade4970096cf860dd7cef9fdd0cde1148c/BCG_ATS_System/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/rest.py",
      "https://github.com/kevint-thd/HR_LLM_PROJECT/blob/84c86aade4970096cf860dd7cef9fdd0cde1148c/BCG_ATS_System/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/grpc.py",
      "https://github.com/kevint-thd/HR_LLM_PROJECT/blob/84c86aade4970096cf860dd7cef9fdd0cde1148c/BCG_ATS_System/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/rest.py",
      "https://github.com/kevint-thd/HR_LLM_PROJECT/blob/84c86aade4970096cf860dd7cef9fdd0cde1148c/BCG_ATS_System/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/kevint-thd/HR_LLM_PROJECT/blob/84c86aade4970096cf860dd7cef9fdd0cde1148c/BCG_ATS_System/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/client.py",
      "https://github.com/kevint-thd/HR_LLM_PROJECT/blob/84c86aade4970096cf860dd7cef9fdd0cde1148c/BCG_ATS_System/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/client.py",
      "https://github.com/kevint-thd/HR_LLM_PROJECT/blob/84c86aade4970096cf860dd7cef9fdd0cde1148c/BCG_ATS_System/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/rest.py",
      "https://github.com/kevint-thd/HR_LLM_PROJECT/blob/84c86aade4970096cf860dd7cef9fdd0cde1148c/BCG_ATS_System/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/grpc_asyncio.py",
      "https://github.com/kevint-thd/HR_LLM_PROJECT/blob/84c86aade4970096cf860dd7cef9fdd0cde1148c/BCG_ATS_System/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/rest.py",
      "https://github.com/kevint-thd/HR_LLM_PROJECT/blob/84c86aade4970096cf860dd7cef9fdd0cde1148c/BCG_ATS_System/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/rest.py",
      "https://github.com/kevint-thd/HR_LLM_PROJECT/blob/84c86aade4970096cf860dd7cef9fdd0cde1148c/BCG_ATS_System/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/client.py",
      "https://github.com/kevint-thd/HR_LLM_PROJECT/blob/84c86aade4970096cf860dd7cef9fdd0cde1148c/BCG_ATS_System/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1540384,
    "stars": 1
  },
  {
    "full_name": "naigggs/clippy-web",
    "name": "clippy-web",
    "description": "Clippy is an innovative tool that leverages the power of Artificial Intelligence (AI) to help you get the most out of YouTube videos.  It acts as a YouTube summarizer, allowing you to ask questions and receive concise answers about the content of a YouTube video, all without having to watch the entire thing!",
    "html_url": [
      "https://github.com/naigggs/clippy-web/blob/9de4f460b8fc9351ed493cd5a185ff94165b6194/server/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/base.py",
      "https://github.com/naigggs/clippy-web/blob/9de4f460b8fc9351ed493cd5a185ff94165b6194/server/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/base.py",
      "https://github.com/naigggs/clippy-web/blob/9de4f460b8fc9351ed493cd5a185ff94165b6194/server/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/transports/base.py",
      "https://github.com/naigggs/clippy-web/blob/9de4f460b8fc9351ed493cd5a185ff94165b6194/server/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/base.py",
      "https://github.com/naigggs/clippy-web/blob/9de4f460b8fc9351ed493cd5a185ff94165b6194/server/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/base.py",
      "https://github.com/naigggs/clippy-web/blob/9de4f460b8fc9351ed493cd5a185ff94165b6194/server/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/grpc.py",
      "https://github.com/naigggs/clippy-web/blob/9de4f460b8fc9351ed493cd5a185ff94165b6194/server/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/naigggs/clippy-web/blob/9de4f460b8fc9351ed493cd5a185ff94165b6194/server/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/grpc.py",
      "https://github.com/naigggs/clippy-web/blob/9de4f460b8fc9351ed493cd5a185ff94165b6194/server/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/grpc.py",
      "https://github.com/naigggs/clippy-web/blob/9de4f460b8fc9351ed493cd5a185ff94165b6194/server/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/rest.py",
      "https://github.com/naigggs/clippy-web/blob/9de4f460b8fc9351ed493cd5a185ff94165b6194/server/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/naigggs/clippy-web/blob/9de4f460b8fc9351ed493cd5a185ff94165b6194/server/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/client.py",
      "https://github.com/naigggs/clippy-web/blob/9de4f460b8fc9351ed493cd5a185ff94165b6194/server/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/client.py",
      "https://github.com/naigggs/clippy-web/blob/9de4f460b8fc9351ed493cd5a185ff94165b6194/server/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/rest.py",
      "https://github.com/naigggs/clippy-web/blob/9de4f460b8fc9351ed493cd5a185ff94165b6194/server/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/grpc_asyncio.py",
      "https://github.com/naigggs/clippy-web/blob/9de4f460b8fc9351ed493cd5a185ff94165b6194/server/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/rest.py",
      "https://github.com/naigggs/clippy-web/blob/9de4f460b8fc9351ed493cd5a185ff94165b6194/server/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/rest.py",
      "https://github.com/naigggs/clippy-web/blob/9de4f460b8fc9351ed493cd5a185ff94165b6194/server/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 710377,
    "stars": 0
  },
  {
    "full_name": "Rejhinald/poem.io",
    "name": "poem.io",
    "description": "Gemini API AI Poem generator that includes the mood of the poem being generated. Made with NextJS, Material UI, Python, and TailwindCSS",
    "html_url": [
      "https://github.com/Rejhinald/poem.io/blob/bda217ca50c80ea19cddf59c4acd50a21b1db8d1/server/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/base.py",
      "https://github.com/Rejhinald/poem.io/blob/bda217ca50c80ea19cddf59c4acd50a21b1db8d1/server/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/base.py",
      "https://github.com/Rejhinald/poem.io/blob/bda217ca50c80ea19cddf59c4acd50a21b1db8d1/server/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/transports/base.py",
      "https://github.com/Rejhinald/poem.io/blob/bda217ca50c80ea19cddf59c4acd50a21b1db8d1/server/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/base.py",
      "https://github.com/Rejhinald/poem.io/blob/bda217ca50c80ea19cddf59c4acd50a21b1db8d1/server/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/base.py",
      "https://github.com/Rejhinald/poem.io/blob/bda217ca50c80ea19cddf59c4acd50a21b1db8d1/server/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/grpc.py",
      "https://github.com/Rejhinald/poem.io/blob/bda217ca50c80ea19cddf59c4acd50a21b1db8d1/server/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/Rejhinald/poem.io/blob/bda217ca50c80ea19cddf59c4acd50a21b1db8d1/server/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/grpc.py",
      "https://github.com/Rejhinald/poem.io/blob/bda217ca50c80ea19cddf59c4acd50a21b1db8d1/server/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/grpc.py",
      "https://github.com/Rejhinald/poem.io/blob/bda217ca50c80ea19cddf59c4acd50a21b1db8d1/server/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/rest.py",
      "https://github.com/Rejhinald/poem.io/blob/bda217ca50c80ea19cddf59c4acd50a21b1db8d1/server/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/Rejhinald/poem.io/blob/bda217ca50c80ea19cddf59c4acd50a21b1db8d1/server/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/client.py",
      "https://github.com/Rejhinald/poem.io/blob/bda217ca50c80ea19cddf59c4acd50a21b1db8d1/server/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/client.py",
      "https://github.com/Rejhinald/poem.io/blob/bda217ca50c80ea19cddf59c4acd50a21b1db8d1/server/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/rest.py",
      "https://github.com/Rejhinald/poem.io/blob/bda217ca50c80ea19cddf59c4acd50a21b1db8d1/server/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/grpc_asyncio.py",
      "https://github.com/Rejhinald/poem.io/blob/bda217ca50c80ea19cddf59c4acd50a21b1db8d1/server/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/rest.py",
      "https://github.com/Rejhinald/poem.io/blob/bda217ca50c80ea19cddf59c4acd50a21b1db8d1/server/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/rest.py",
      "https://github.com/Rejhinald/poem.io/blob/bda217ca50c80ea19cddf59c4acd50a21b1db8d1/server/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 718577,
    "stars": 0
  },
  {
    "full_name": "leena18/llm-chatbot",
    "name": "llm-chatbot",
    "description": null,
    "html_url": [
      "https://github.com/leena18/llm-chatbot/blob/37d87b1555a0e42255cf4897948da325284945d8/llmchatenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/base.py",
      "https://github.com/leena18/llm-chatbot/blob/37d87b1555a0e42255cf4897948da325284945d8/llmchatenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/base.py",
      "https://github.com/leena18/llm-chatbot/blob/37d87b1555a0e42255cf4897948da325284945d8/llmchatenv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/transports/base.py",
      "https://github.com/leena18/llm-chatbot/blob/37d87b1555a0e42255cf4897948da325284945d8/llmchatenv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/base.py",
      "https://github.com/leena18/llm-chatbot/blob/37d87b1555a0e42255cf4897948da325284945d8/llmchatenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/base.py",
      "https://github.com/leena18/llm-chatbot/blob/37d87b1555a0e42255cf4897948da325284945d8/llmchatenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/base.py",
      "https://github.com/leena18/llm-chatbot/blob/37d87b1555a0e42255cf4897948da325284945d8/llmchatenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/grpc.py",
      "https://github.com/leena18/llm-chatbot/blob/37d87b1555a0e42255cf4897948da325284945d8/llmchatenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/leena18/llm-chatbot/blob/37d87b1555a0e42255cf4897948da325284945d8/llmchatenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/rest.py",
      "https://github.com/leena18/llm-chatbot/blob/37d87b1555a0e42255cf4897948da325284945d8/llmchatenv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/grpc.py",
      "https://github.com/leena18/llm-chatbot/blob/37d87b1555a0e42255cf4897948da325284945d8/llmchatenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/rest.py",
      "https://github.com/leena18/llm-chatbot/blob/37d87b1555a0e42255cf4897948da325284945d8/llmchatenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/leena18/llm-chatbot/blob/37d87b1555a0e42255cf4897948da325284945d8/llmchatenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/client.py",
      "https://github.com/leena18/llm-chatbot/blob/37d87b1555a0e42255cf4897948da325284945d8/llmchatenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/client.py",
      "https://github.com/leena18/llm-chatbot/blob/37d87b1555a0e42255cf4897948da325284945d8/llmchatenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/rest.py",
      "https://github.com/leena18/llm-chatbot/blob/37d87b1555a0e42255cf4897948da325284945d8/llmchatenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/grpc_asyncio.py",
      "https://github.com/leena18/llm-chatbot/blob/37d87b1555a0e42255cf4897948da325284945d8/llmchatenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/rest.py",
      "https://github.com/leena18/llm-chatbot/blob/37d87b1555a0e42255cf4897948da325284945d8/llmchatenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/rest.py",
      "https://github.com/leena18/llm-chatbot/blob/37d87b1555a0e42255cf4897948da325284945d8/llmchatenv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/client.py",
      "https://github.com/leena18/llm-chatbot/blob/37d87b1555a0e42255cf4897948da325284945d8/llmchatenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3383202,
    "stars": 0
  },
  {
    "full_name": "GTMaaayur/VideoProctror",
    "name": "VideoProctror",
    "description": "Flask based async app+Gemini",
    "html_url": [
      "https://github.com/GTMaaayur/VideoProctror/blob/b6547acdb62ad6d97e96ad311bc8cb4b1eddf783/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/base.py",
      "https://github.com/GTMaaayur/VideoProctror/blob/b6547acdb62ad6d97e96ad311bc8cb4b1eddf783/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/base.py",
      "https://github.com/GTMaaayur/VideoProctror/blob/b6547acdb62ad6d97e96ad311bc8cb4b1eddf783/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/base.py",
      "https://github.com/GTMaaayur/VideoProctror/blob/b6547acdb62ad6d97e96ad311bc8cb4b1eddf783/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/GTMaaayur/VideoProctror/blob/b6547acdb62ad6d97e96ad311bc8cb4b1eddf783/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/rest.py",
      "https://github.com/GTMaaayur/VideoProctror/blob/b6547acdb62ad6d97e96ad311bc8cb4b1eddf783/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/grpc.py",
      "https://github.com/GTMaaayur/VideoProctror/blob/b6547acdb62ad6d97e96ad311bc8cb4b1eddf783/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/GTMaaayur/VideoProctror/blob/b6547acdb62ad6d97e96ad311bc8cb4b1eddf783/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/client.py",
      "https://github.com/GTMaaayur/VideoProctror/blob/b6547acdb62ad6d97e96ad311bc8cb4b1eddf783/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/client.py",
      "https://github.com/GTMaaayur/VideoProctror/blob/b6547acdb62ad6d97e96ad311bc8cb4b1eddf783/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/rest.py",
      "https://github.com/GTMaaayur/VideoProctror/blob/b6547acdb62ad6d97e96ad311bc8cb4b1eddf783/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/grpc_asyncio.py",
      "https://github.com/GTMaaayur/VideoProctror/blob/b6547acdb62ad6d97e96ad311bc8cb4b1eddf783/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/rest.py",
      "https://github.com/GTMaaayur/VideoProctror/blob/b6547acdb62ad6d97e96ad311bc8cb4b1eddf783/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/rest.py",
      "https://github.com/GTMaaayur/VideoProctror/blob/b6547acdb62ad6d97e96ad311bc8cb4b1eddf783/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1096755,
    "stars": 0
  },
  {
    "full_name": "epam/AIRUN-LLM-Benchmark",
    "name": "AIRUN-LLM-Benchmark",
    "description": null,
    "html_url": [
      "https://github.com/epam/AIRUN-LLM-Benchmark/blob/a3f7a81ce90443fbb55975d127f5b6a9227cf6e8/Utils/llm/config.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 18214,
    "stars": 4
  },
  {
    "full_name": "huynguyen789/llms-eval",
    "name": "llms-eval",
    "description": "llm eval",
    "html_url": [
      "https://github.com/huynguyen789/llms-eval/blob/6410e0952153bd756be723bbd08e67c87eca5682/app.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4443,
    "stars": 1
  },
  {
    "full_name": "RakshitYadav09/gemini-practice",
    "name": "gemini-practice",
    "description": null,
    "html_url": [
      "https://github.com/RakshitYadav09/gemini-practice/blob/7359108ce09d72fbe9db4327c88e12e70da402de/dev-env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/base.py",
      "https://github.com/RakshitYadav09/gemini-practice/blob/7359108ce09d72fbe9db4327c88e12e70da402de/dev-env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/transports/base.py",
      "https://github.com/RakshitYadav09/gemini-practice/blob/7359108ce09d72fbe9db4327c88e12e70da402de/dev-env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/base.py",
      "https://github.com/RakshitYadav09/gemini-practice/blob/7359108ce09d72fbe9db4327c88e12e70da402de/dev-env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/base.py",
      "https://github.com/RakshitYadav09/gemini-practice/blob/7359108ce09d72fbe9db4327c88e12e70da402de/dev-env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/base.py",
      "https://github.com/RakshitYadav09/gemini-practice/blob/7359108ce09d72fbe9db4327c88e12e70da402de/dev-env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc.py",
      "https://github.com/RakshitYadav09/gemini-practice/blob/7359108ce09d72fbe9db4327c88e12e70da402de/dev-env/Lib/site-packages/google/generativeai/client.py",
      "https://github.com/RakshitYadav09/gemini-practice/blob/7359108ce09d72fbe9db4327c88e12e70da402de/dev-env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/grpc_asyncio.py",
      "https://github.com/RakshitYadav09/gemini-practice/blob/7359108ce09d72fbe9db4327c88e12e70da402de/dev-env/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/RakshitYadav09/gemini-practice/blob/7359108ce09d72fbe9db4327c88e12e70da402de/dev-env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/RakshitYadav09/gemini-practice/blob/7359108ce09d72fbe9db4327c88e12e70da402de/dev-env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/client.py",
      "https://github.com/RakshitYadav09/gemini-practice/blob/7359108ce09d72fbe9db4327c88e12e70da402de/dev-env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3546092,
    "stars": 0
  },
  {
    "full_name": "alexodwright/notion-to-anki-gemini",
    "name": "notion-to-anki-gemini",
    "description": "This is a python script that creates Anki flashcard files from your Notion notes! By using the Notion API and the Google Gemini AI 1.5 flash model, flashcards are created to help you study for your exams!",
    "html_url": [
      "https://github.com/alexodwright/notion-to-anki-gemini/blob/4a0f27e2d991bac4a32afc21979b79a715418ac2/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/base.py",
      "https://github.com/alexodwright/notion-to-anki-gemini/blob/4a0f27e2d991bac4a32afc21979b79a715418ac2/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/base.py",
      "https://github.com/alexodwright/notion-to-anki-gemini/blob/4a0f27e2d991bac4a32afc21979b79a715418ac2/venv/Lib/site-packages/google/generativeai/client.py",
      "https://github.com/alexodwright/notion-to-anki-gemini/blob/4a0f27e2d991bac4a32afc21979b79a715418ac2/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/grpc_asyncio.py",
      "https://github.com/alexodwright/notion-to-anki-gemini/blob/4a0f27e2d991bac4a32afc21979b79a715418ac2/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/grpc.py",
      "https://github.com/alexodwright/notion-to-anki-gemini/blob/4a0f27e2d991bac4a32afc21979b79a715418ac2/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2422996,
    "stars": 1
  },
  {
    "full_name": "lmahdy/ChatWithElmayt",
    "name": "ChatWithElmayt",
    "description": "ChatWithElmayt is a Flask-based chatbot where users chat with Elmayt, a virtual entity from an imaginary universe, powered by Google’s Gemini 1.5 model.",
    "html_url": [
      "https://github.com/lmahdy/ChatWithElmayt/blob/b640553f2fe1373d0ac23c95bbfa7b3b5690d494/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/base.py",
      "https://github.com/lmahdy/ChatWithElmayt/blob/b640553f2fe1373d0ac23c95bbfa7b3b5690d494/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/base.py",
      "https://github.com/lmahdy/ChatWithElmayt/blob/b640553f2fe1373d0ac23c95bbfa7b3b5690d494/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/grpc_asyncio.py",
      "https://github.com/lmahdy/ChatWithElmayt/blob/b640553f2fe1373d0ac23c95bbfa7b3b5690d494/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/grpc.py",
      "https://github.com/lmahdy/ChatWithElmayt/blob/b640553f2fe1373d0ac23c95bbfa7b3b5690d494/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2439306,
    "stars": 0
  },
  {
    "full_name": "juhid30/Pragati",
    "name": "Pragati",
    "description": null,
    "html_url": [
      "https://github.com/juhid30/Pragati/blob/261d08912278cd8464596f23e9a3e62108993410/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/base.py",
      "https://github.com/juhid30/Pragati/blob/261d08912278cd8464596f23e9a3e62108993410/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/base.py",
      "https://github.com/juhid30/Pragati/blob/261d08912278cd8464596f23e9a3e62108993410/venv/Lib/site-packages/google/generativeai/client.py",
      "https://github.com/juhid30/Pragati/blob/261d08912278cd8464596f23e9a3e62108993410/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/grpc_asyncio.py",
      "https://github.com/juhid30/Pragati/blob/261d08912278cd8464596f23e9a3e62108993410/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/grpc.py",
      "https://github.com/juhid30/Pragati/blob/261d08912278cd8464596f23e9a3e62108993410/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/client.py",
      "https://github.com/juhid30/Pragati/blob/261d08912278cd8464596f23e9a3e62108993410/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/rest.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2474433,
    "stars": 0
  },
  {
    "full_name": "raginipathak/ResumeIQ",
    "name": "ResumeIQ",
    "description": "An AI-Based Resume Evaluator ",
    "html_url": [
      "https://github.com/raginipathak/ResumeIQ/blob/0b6fd7ba1eeb23fbe57a5e594a960ba55672fbb5/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/base.py",
      "https://github.com/raginipathak/ResumeIQ/blob/0b6fd7ba1eeb23fbe57a5e594a960ba55672fbb5/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/base.py",
      "https://github.com/raginipathak/ResumeIQ/blob/0b6fd7ba1eeb23fbe57a5e594a960ba55672fbb5/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/grpc_asyncio.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3994899,
    "stars": 0
  },
  {
    "full_name": "nishant8g/Text-to-SQL-LLM-App",
    "name": "Text-to-SQL-LLM-App",
    "description": null,
    "html_url": [
      "https://github.com/nishant8g/Text-to-SQL-LLM-App/blob/bfd0132409f300ac42d7e50bcc2102b685d2f9fa/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/base.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3970735,
    "stars": 0
  },
  {
    "full_name": "LeoGamaJ/app-text-to-speech-to-text-GEMINI",
    "name": "app-text-to-speech-to-text-GEMINI",
    "description": "Speech-to-text and text-to-speech application with Google GEMINI API integration. Python backend with Flask and Bootstrap interface.",
    "html_url": [
      "https://github.com/LeoGamaJ/app-text-to-speech-to-text-GEMINI/blob/9f1bc622b3c54b520d475334c74032d9678c613d/V%203.0/chat_module.py",
      "https://github.com/LeoGamaJ/app-text-to-speech-to-text-GEMINI/blob/9f1bc622b3c54b520d475334c74032d9678c613d/V%204.0/chat_module.py",
      "https://github.com/LeoGamaJ/app-text-to-speech-to-text-GEMINI/blob/9f1bc622b3c54b520d475334c74032d9678c613d/V%202.0/app.py",
      "https://github.com/LeoGamaJ/app-text-to-speech-to-text-GEMINI/blob/9f1bc622b3c54b520d475334c74032d9678c613d/V%203.0/app.py",
      "https://github.com/LeoGamaJ/app-text-to-speech-to-text-GEMINI/blob/9f1bc622b3c54b520d475334c74032d9678c613d/V%204.0/app.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 6976,
    "stars": 0
  },
  {
    "full_name": "Aneerudh2k2/codex",
    "name": "codex",
    "description": "A mistral ai hackathon winner codebase ",
    "html_url": [
      "https://github.com/Aneerudh2k2/codex/blob/7288e42d7de536667e594221115dd59140d22127/crawler/generate_data.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4325,
    "stars": 0
  },
  {
    "full_name": "himynamedan/RAG",
    "name": "RAG",
    "description": "Retrieval Augmented Generation using Knowledge Graphs of Neo4j and OpenAI API key in React JS",
    "html_url": [
      "https://github.com/himynamedan/RAG/blob/3fe7b80c2305c9fbf00aa211fe75e81e1ecef196/openai-env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/cache_service/transports/base.py",
      "https://github.com/himynamedan/RAG/blob/3fe7b80c2305c9fbf00aa211fe75e81e1ecef196/openai-env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/base.py",
      "https://github.com/himynamedan/RAG/blob/3fe7b80c2305c9fbf00aa211fe75e81e1ecef196/openai-env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/transports/grpc_asyncio.py",
      "https://github.com/himynamedan/RAG/blob/3fe7b80c2305c9fbf00aa211fe75e81e1ecef196/openai-env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/grpc.py",
      "https://github.com/himynamedan/RAG/blob/3fe7b80c2305c9fbf00aa211fe75e81e1ecef196/openai-env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/grpc.py",
      "https://github.com/himynamedan/RAG/blob/3fe7b80c2305c9fbf00aa211fe75e81e1ecef196/openai-env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/base.py",
      "https://github.com/himynamedan/RAG/blob/3fe7b80c2305c9fbf00aa211fe75e81e1ecef196/openai-env/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/grpc.py",
      "https://github.com/himynamedan/RAG/blob/3fe7b80c2305c9fbf00aa211fe75e81e1ecef196/openai-env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/client.py",
      "https://github.com/himynamedan/RAG/blob/3fe7b80c2305c9fbf00aa211fe75e81e1ecef196/openai-env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/client.py",
      "https://github.com/himynamedan/RAG/blob/3fe7b80c2305c9fbf00aa211fe75e81e1ecef196/openai-env/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/client.py",
      "https://github.com/himynamedan/RAG/blob/3fe7b80c2305c9fbf00aa211fe75e81e1ecef196/openai-env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/cache_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2544446,
    "stars": 0
  },
  {
    "full_name": "poshalakarthik/we-chat-LLM",
    "name": "we-chat-LLM",
    "description": null,
    "html_url": [
      "https://github.com/poshalakarthik/we-chat-LLM/blob/36a21b6395e309ecd3cbbd022d82edb64619fff0/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/cache_service/transports/base.py",
      "https://github.com/poshalakarthik/we-chat-LLM/blob/36a21b6395e309ecd3cbbd022d82edb64619fff0/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/base.py",
      "https://github.com/poshalakarthik/we-chat-LLM/blob/36a21b6395e309ecd3cbbd022d82edb64619fff0/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/poshalakarthik/we-chat-LLM/blob/36a21b6395e309ecd3cbbd022d82edb64619fff0/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/poshalakarthik/we-chat-LLM/blob/36a21b6395e309ecd3cbbd022d82edb64619fff0/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc.py",
      "https://github.com/poshalakarthik/we-chat-LLM/blob/36a21b6395e309ecd3cbbd022d82edb64619fff0/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/poshalakarthik/we-chat-LLM/blob/36a21b6395e309ecd3cbbd022d82edb64619fff0/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/transports/rest.py",
      "https://github.com/poshalakarthik/we-chat-LLM/blob/36a21b6395e309ecd3cbbd022d82edb64619fff0/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/client.py",
      "https://github.com/poshalakarthik/we-chat-LLM/blob/36a21b6395e309ecd3cbbd022d82edb64619fff0/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/client.py",
      "https://github.com/poshalakarthik/we-chat-LLM/blob/36a21b6395e309ecd3cbbd022d82edb64619fff0/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/cache_service/client.py",
      "https://github.com/poshalakarthik/we-chat-LLM/blob/36a21b6395e309ecd3cbbd022d82edb64619fff0/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3287732,
    "stars": 0
  },
  {
    "full_name": "Samin-Sadaf7/Fine-Tuning_LLM_Model",
    "name": "Fine-Tuning_LLM_Model",
    "description": null,
    "html_url": [
      "https://github.com/Samin-Sadaf7/Fine-Tuning_LLM_Model/blob/c7c7b86f617ad0951f2f2287e4a3dc0b833fb9a2/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/cache_service/transports/base.py",
      "https://github.com/Samin-Sadaf7/Fine-Tuning_LLM_Model/blob/c7c7b86f617ad0951f2f2287e4a3dc0b833fb9a2/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/Samin-Sadaf7/Fine-Tuning_LLM_Model/blob/c7c7b86f617ad0951f2f2287e4a3dc0b833fb9a2/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/Samin-Sadaf7/Fine-Tuning_LLM_Model/blob/c7c7b86f617ad0951f2f2287e4a3dc0b833fb9a2/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc.py",
      "https://github.com/Samin-Sadaf7/Fine-Tuning_LLM_Model/blob/c7c7b86f617ad0951f2f2287e4a3dc0b833fb9a2/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/Samin-Sadaf7/Fine-Tuning_LLM_Model/blob/c7c7b86f617ad0951f2f2287e4a3dc0b833fb9a2/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/transports/rest.py",
      "https://github.com/Samin-Sadaf7/Fine-Tuning_LLM_Model/blob/c7c7b86f617ad0951f2f2287e4a3dc0b833fb9a2/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/client.py",
      "https://github.com/Samin-Sadaf7/Fine-Tuning_LLM_Model/blob/c7c7b86f617ad0951f2f2287e4a3dc0b833fb9a2/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/client.py",
      "https://github.com/Samin-Sadaf7/Fine-Tuning_LLM_Model/blob/c7c7b86f617ad0951f2f2287e4a3dc0b833fb9a2/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/cache_service/client.py",
      "https://github.com/Samin-Sadaf7/Fine-Tuning_LLM_Model/blob/c7c7b86f617ad0951f2f2287e4a3dc0b833fb9a2/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4309630,
    "stars": 0
  },
  {
    "full_name": "adityashakya836/AI-SQL-LLM",
    "name": "AI-SQL-LLM",
    "description": null,
    "html_url": [
      "https://github.com/adityashakya836/AI-SQL-LLM/blob/ed3e8501afde09e56cf54d9075d3af49dadff864/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/cache_service/transports/base.py",
      "https://github.com/adityashakya836/AI-SQL-LLM/blob/ed3e8501afde09e56cf54d9075d3af49dadff864/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/adityashakya836/AI-SQL-LLM/blob/ed3e8501afde09e56cf54d9075d3af49dadff864/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/adityashakya836/AI-SQL-LLM/blob/ed3e8501afde09e56cf54d9075d3af49dadff864/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc.py",
      "https://github.com/adityashakya836/AI-SQL-LLM/blob/ed3e8501afde09e56cf54d9075d3af49dadff864/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/adityashakya836/AI-SQL-LLM/blob/ed3e8501afde09e56cf54d9075d3af49dadff864/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/transports/rest.py",
      "https://github.com/adityashakya836/AI-SQL-LLM/blob/ed3e8501afde09e56cf54d9075d3af49dadff864/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/client.py",
      "https://github.com/adityashakya836/AI-SQL-LLM/blob/ed3e8501afde09e56cf54d9075d3af49dadff864/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/client.py",
      "https://github.com/adityashakya836/AI-SQL-LLM/blob/ed3e8501afde09e56cf54d9075d3af49dadff864/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/cache_service/client.py",
      "https://github.com/adityashakya836/AI-SQL-LLM/blob/ed3e8501afde09e56cf54d9075d3af49dadff864/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3485783,
    "stars": 1
  },
  {
    "full_name": "Anubhx/Smart-ATS-Analyzer",
    "name": "Smart-ATS-Analyzer",
    "description": "Developed an automated ATS analysis tool using Google Gemini Pro, Streamlit, and Python. Created a user-friendly interface and implemented PDF processing to evaluate resumes comprehensively.",
    "html_url": [
      "https://github.com/Anubhx/Smart-ATS-Analyzer/blob/8d456af0f5d883995541a6b268fb84263155c460/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/cache_service/transports/base.py",
      "https://github.com/Anubhx/Smart-ATS-Analyzer/blob/8d456af0f5d883995541a6b268fb84263155c460/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/Anubhx/Smart-ATS-Analyzer/blob/8d456af0f5d883995541a6b268fb84263155c460/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/Anubhx/Smart-ATS-Analyzer/blob/8d456af0f5d883995541a6b268fb84263155c460/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/Anubhx/Smart-ATS-Analyzer/blob/8d456af0f5d883995541a6b268fb84263155c460/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/client.py",
      "https://github.com/Anubhx/Smart-ATS-Analyzer/blob/8d456af0f5d883995541a6b268fb84263155c460/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/cache_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3540286,
    "stars": 3
  },
  {
    "full_name": "SonarPrasad/langchain-gemini-Chat-PDFs",
    "name": "langchain-gemini-Chat-PDFs",
    "description": null,
    "html_url": [
      "https://github.com/SonarPrasad/langchain-gemini-Chat-PDFs/blob/e9403d36e5a6ac09c3995199098c0c69cc91c123/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/cache_service/transports/base.py",
      "https://github.com/SonarPrasad/langchain-gemini-Chat-PDFs/blob/e9403d36e5a6ac09c3995199098c0c69cc91c123/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/SonarPrasad/langchain-gemini-Chat-PDFs/blob/e9403d36e5a6ac09c3995199098c0c69cc91c123/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/SonarPrasad/langchain-gemini-Chat-PDFs/blob/e9403d36e5a6ac09c3995199098c0c69cc91c123/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/SonarPrasad/langchain-gemini-Chat-PDFs/blob/e9403d36e5a6ac09c3995199098c0c69cc91c123/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/client.py",
      "https://github.com/SonarPrasad/langchain-gemini-Chat-PDFs/blob/e9403d36e5a6ac09c3995199098c0c69cc91c123/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/cache_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4907979,
    "stars": 0
  },
  {
    "full_name": "rijuma15/chatbot",
    "name": "chatbot",
    "description": "A conversational AI chatbot that can answer user queries from documents and handle appointment bookings. The chatbot validates user inputs such as email and phone number and extracts dates from natural language input. Built using LangChain, Google Generative AI (Gemini), and Chainlit.",
    "html_url": [
      "https://github.com/rijuma15/chatbot/blob/323c074e5af290fc6b66ea0950fe3027be4767ed/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/cache_service/transports/base.py",
      "https://github.com/rijuma15/chatbot/blob/323c074e5af290fc6b66ea0950fe3027be4767ed/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/base.py",
      "https://github.com/rijuma15/chatbot/blob/323c074e5af290fc6b66ea0950fe3027be4767ed/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc.py",
      "https://github.com/rijuma15/chatbot/blob/323c074e5af290fc6b66ea0950fe3027be4767ed/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/grpc.py",
      "https://github.com/rijuma15/chatbot/blob/323c074e5af290fc6b66ea0950fe3027be4767ed/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc.py",
      "https://github.com/rijuma15/chatbot/blob/323c074e5af290fc6b66ea0950fe3027be4767ed/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/grpc.py",
      "https://github.com/rijuma15/chatbot/blob/323c074e5af290fc6b66ea0950fe3027be4767ed/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/grpc.py",
      "https://github.com/rijuma15/chatbot/blob/323c074e5af290fc6b66ea0950fe3027be4767ed/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/base.py",
      "https://github.com/rijuma15/chatbot/blob/323c074e5af290fc6b66ea0950fe3027be4767ed/myenv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/grpc.py",
      "https://github.com/rijuma15/chatbot/blob/323c074e5af290fc6b66ea0950fe3027be4767ed/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/transports/rest.py",
      "https://github.com/rijuma15/chatbot/blob/323c074e5af290fc6b66ea0950fe3027be4767ed/myenv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/rest.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3083983,
    "stars": 0
  },
  {
    "full_name": "Akshya1204/llm",
    "name": "llm",
    "description": null,
    "html_url": [
      "https://github.com/Akshya1204/llm/blob/8338f70a4bb06bd5494e0f67f7a5e764c786aeb5/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/cache_service/transports/base.py",
      "https://github.com/Akshya1204/llm/blob/8338f70a4bb06bd5494e0f67f7a5e764c786aeb5/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/Akshya1204/llm/blob/8338f70a4bb06bd5494e0f67f7a5e764c786aeb5/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/Akshya1204/llm/blob/8338f70a4bb06bd5494e0f67f7a5e764c786aeb5/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/client.py",
      "https://github.com/Akshya1204/llm/blob/8338f70a4bb06bd5494e0f67f7a5e764c786aeb5/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/cache_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3578788,
    "stars": 0
  },
  {
    "full_name": "SonySinha2024/LangChain_work",
    "name": "LangChain_work",
    "description": null,
    "html_url": [
      "https://github.com/SonySinha2024/LangChain_work/blob/a96d8909c78750c71b79cc70465339b5419db13c/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/cache_service/transports/base.py",
      "https://github.com/SonySinha2024/LangChain_work/blob/a96d8909c78750c71b79cc70465339b5419db13c/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/base.py",
      "https://github.com/SonySinha2024/LangChain_work/blob/a96d8909c78750c71b79cc70465339b5419db13c/myenv_API/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/base.py",
      "https://github.com/SonySinha2024/LangChain_work/blob/a96d8909c78750c71b79cc70465339b5419db13c/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc.py",
      "https://github.com/SonySinha2024/LangChain_work/blob/a96d8909c78750c71b79cc70465339b5419db13c/myenv_API/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc.py",
      "https://github.com/SonySinha2024/LangChain_work/blob/a96d8909c78750c71b79cc70465339b5419db13c/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/grpc.py",
      "https://github.com/SonySinha2024/LangChain_work/blob/a96d8909c78750c71b79cc70465339b5419db13c/myenv_API/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/SonySinha2024/LangChain_work/blob/a96d8909c78750c71b79cc70465339b5419db13c/myenv_API/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/transports/grpc_asyncio.py",
      "https://github.com/SonySinha2024/LangChain_work/blob/a96d8909c78750c71b79cc70465339b5419db13c/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc.py",
      "https://github.com/SonySinha2024/LangChain_work/blob/a96d8909c78750c71b79cc70465339b5419db13c/myenv_API/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc.py",
      "https://github.com/SonySinha2024/LangChain_work/blob/a96d8909c78750c71b79cc70465339b5419db13c/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/grpc.py",
      "https://github.com/SonySinha2024/LangChain_work/blob/a96d8909c78750c71b79cc70465339b5419db13c/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/grpc.py",
      "https://github.com/SonySinha2024/LangChain_work/blob/a96d8909c78750c71b79cc70465339b5419db13c/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/base.py",
      "https://github.com/SonySinha2024/LangChain_work/blob/a96d8909c78750c71b79cc70465339b5419db13c/myenv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/grpc.py",
      "https://github.com/SonySinha2024/LangChain_work/blob/a96d8909c78750c71b79cc70465339b5419db13c/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/transports/rest.py",
      "https://github.com/SonySinha2024/LangChain_work/blob/a96d8909c78750c71b79cc70465339b5419db13c/myenv_API/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/transports/rest.py",
      "https://github.com/SonySinha2024/LangChain_work/blob/a96d8909c78750c71b79cc70465339b5419db13c/myenv_API/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/client.py",
      "https://github.com/SonySinha2024/LangChain_work/blob/a96d8909c78750c71b79cc70465339b5419db13c/myenv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/rest.py",
      "https://github.com/SonySinha2024/LangChain_work/blob/a96d8909c78750c71b79cc70465339b5419db13c/myenv_API/Lib/site-packages/google/ai/generativelanguage_v1beta/services/cache_service/client.py",
      "https://github.com/SonySinha2024/LangChain_work/blob/a96d8909c78750c71b79cc70465339b5419db13c/myenv_API/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4391212,
    "stars": 0
  },
  {
    "full_name": "RPA-BOT907/GeminiLLM",
    "name": "GeminiLLM",
    "description": null,
    "html_url": [
      "https://github.com/RPA-BOT907/GeminiLLM/blob/081ff9d35aa73dbe24bd7d72f40b29ed22cec87f/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/cache_service/transports/base.py",
      "https://github.com/RPA-BOT907/GeminiLLM/blob/081ff9d35aa73dbe24bd7d72f40b29ed22cec87f/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/base.py",
      "https://github.com/RPA-BOT907/GeminiLLM/blob/081ff9d35aa73dbe24bd7d72f40b29ed22cec87f/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc.py",
      "https://github.com/RPA-BOT907/GeminiLLM/blob/081ff9d35aa73dbe24bd7d72f40b29ed22cec87f/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/grpc.py",
      "https://github.com/RPA-BOT907/GeminiLLM/blob/081ff9d35aa73dbe24bd7d72f40b29ed22cec87f/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc.py",
      "https://github.com/RPA-BOT907/GeminiLLM/blob/081ff9d35aa73dbe24bd7d72f40b29ed22cec87f/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/grpc.py",
      "https://github.com/RPA-BOT907/GeminiLLM/blob/081ff9d35aa73dbe24bd7d72f40b29ed22cec87f/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/grpc.py",
      "https://github.com/RPA-BOT907/GeminiLLM/blob/081ff9d35aa73dbe24bd7d72f40b29ed22cec87f/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/base.py",
      "https://github.com/RPA-BOT907/GeminiLLM/blob/081ff9d35aa73dbe24bd7d72f40b29ed22cec87f/myenv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/grpc.py",
      "https://github.com/RPA-BOT907/GeminiLLM/blob/081ff9d35aa73dbe24bd7d72f40b29ed22cec87f/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/transports/rest.py",
      "https://github.com/RPA-BOT907/GeminiLLM/blob/081ff9d35aa73dbe24bd7d72f40b29ed22cec87f/myenv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/rest.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3436421,
    "stars": 0
  },
  {
    "full_name": "Chandril023/HealthLink.ai",
    "name": "HealthLink.ai",
    "description": "a  generative ai project using LLM's",
    "html_url": [
      "https://github.com/Chandril023/HealthLink.ai/blob/718cb90f528222378c58c41bea1f5e7ccdbf067f/backend/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/cache_service/transports/base.py",
      "https://github.com/Chandril023/HealthLink.ai/blob/718cb90f528222378c58c41bea1f5e7ccdbf067f/backend/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc.py",
      "https://github.com/Chandril023/HealthLink.ai/blob/718cb90f528222378c58c41bea1f5e7ccdbf067f/backend/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/grpc.py",
      "https://github.com/Chandril023/HealthLink.ai/blob/718cb90f528222378c58c41bea1f5e7ccdbf067f/backend/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/transports/grpc_asyncio.py",
      "https://github.com/Chandril023/HealthLink.ai/blob/718cb90f528222378c58c41bea1f5e7ccdbf067f/backend/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc.py",
      "https://github.com/Chandril023/HealthLink.ai/blob/718cb90f528222378c58c41bea1f5e7ccdbf067f/backend/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/transports/rest.py",
      "https://github.com/Chandril023/HealthLink.ai/blob/718cb90f528222378c58c41bea1f5e7ccdbf067f/backend/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/client.py",
      "https://github.com/Chandril023/HealthLink.ai/blob/718cb90f528222378c58c41bea1f5e7ccdbf067f/backend/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/client.py",
      "https://github.com/Chandril023/HealthLink.ai/blob/718cb90f528222378c58c41bea1f5e7ccdbf067f/backend/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/cache_service/client.py",
      "https://github.com/Chandril023/HealthLink.ai/blob/718cb90f528222378c58c41bea1f5e7ccdbf067f/backend/env/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/client.py",
      "https://github.com/Chandril023/HealthLink.ai/blob/718cb90f528222378c58c41bea1f5e7ccdbf067f/backend/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2572697,
    "stars": 0
  },
  {
    "full_name": "NIRONMAN/Learnability_2.0",
    "name": "Learnability_2.0",
    "description": "This is the next version of learnability with Rag.",
    "html_url": [
      "https://github.com/NIRONMAN/Learnability_2.0/blob/315a5a76bd3343b37429c1247e7c32063a093721/flaskBackend/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/cache_service/transports/base.py",
      "https://github.com/NIRONMAN/Learnability_2.0/blob/315a5a76bd3343b37429c1247e7c32063a093721/flaskBackend/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/base.py",
      "https://github.com/NIRONMAN/Learnability_2.0/blob/315a5a76bd3343b37429c1247e7c32063a093721/flaskBackend/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/grpc.py",
      "https://github.com/NIRONMAN/Learnability_2.0/blob/315a5a76bd3343b37429c1247e7c32063a093721/flaskBackend/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/transports/grpc_asyncio.py",
      "https://github.com/NIRONMAN/Learnability_2.0/blob/315a5a76bd3343b37429c1247e7c32063a093721/flaskBackend/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/grpc_asyncio.py",
      "https://github.com/NIRONMAN/Learnability_2.0/blob/315a5a76bd3343b37429c1247e7c32063a093721/flaskBackend/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/client.py",
      "https://github.com/NIRONMAN/Learnability_2.0/blob/315a5a76bd3343b37429c1247e7c32063a093721/flaskBackend/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/client.py",
      "https://github.com/NIRONMAN/Learnability_2.0/blob/315a5a76bd3343b37429c1247e7c32063a093721/flaskBackend/venv/Lib/site-packages/openai/_client.py",
      "https://github.com/NIRONMAN/Learnability_2.0/blob/315a5a76bd3343b37429c1247e7c32063a093721/flaskBackend/venv/Lib/site-packages/openai/_client.py"
    ],
    "model": [
      "gemini",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3772063,
    "stars": 0
  },
  {
    "full_name": "thegoddysmart/headstarter-rag-powered-ai-assistant",
    "name": "headstarter-rag-powered-ai-assistant",
    "description": "My team built the Rate My Professor AI Assistant with Next.js, Gemini, and Pinecone.",
    "html_url": [
      "https://github.com/thegoddysmart/headstarter-rag-powered-ai-assistant/blob/e49a838c33389b623342b6c0962972a1d30b2e95/rmp-ai-assistant/rmp-ai-assistant-python/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/cache_service/transports/base.py",
      "https://github.com/thegoddysmart/headstarter-rag-powered-ai-assistant/blob/e49a838c33389b623342b6c0962972a1d30b2e95/rmp-ai-assistant/rmp-ai-assistant-python/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/base.py",
      "https://github.com/thegoddysmart/headstarter-rag-powered-ai-assistant/blob/e49a838c33389b623342b6c0962972a1d30b2e95/rmp-ai-assistant/rmp-ai-assistant-python/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/base.py",
      "https://github.com/thegoddysmart/headstarter-rag-powered-ai-assistant/blob/e49a838c33389b623342b6c0962972a1d30b2e95/rmp-ai-assistant/rmp-ai-assistant-python/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/base.py",
      "https://github.com/thegoddysmart/headstarter-rag-powered-ai-assistant/blob/e49a838c33389b623342b6c0962972a1d30b2e95/rmp-ai-assistant/rmp-ai-assistant-python/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc.py",
      "https://github.com/thegoddysmart/headstarter-rag-powered-ai-assistant/blob/e49a838c33389b623342b6c0962972a1d30b2e95/rmp-ai-assistant/rmp-ai-assistant-python/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/transports/grpc_asyncio.py",
      "https://github.com/thegoddysmart/headstarter-rag-powered-ai-assistant/blob/e49a838c33389b623342b6c0962972a1d30b2e95/rmp-ai-assistant/rmp-ai-assistant-python/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/rest.py",
      "https://github.com/thegoddysmart/headstarter-rag-powered-ai-assistant/blob/e49a838c33389b623342b6c0962972a1d30b2e95/rmp-ai-assistant/rmp-ai-assistant-python/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc.py",
      "https://github.com/thegoddysmart/headstarter-rag-powered-ai-assistant/blob/e49a838c33389b623342b6c0962972a1d30b2e95/rmp-ai-assistant/rmp-ai-assistant-python/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/base.py",
      "https://github.com/thegoddysmart/headstarter-rag-powered-ai-assistant/blob/e49a838c33389b623342b6c0962972a1d30b2e95/rmp-ai-assistant/rmp-ai-assistant-python/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/grpc.py",
      "https://github.com/thegoddysmart/headstarter-rag-powered-ai-assistant/blob/e49a838c33389b623342b6c0962972a1d30b2e95/rmp-ai-assistant/rmp-ai-assistant-python/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/client.py",
      "https://github.com/thegoddysmart/headstarter-rag-powered-ai-assistant/blob/e49a838c33389b623342b6c0962972a1d30b2e95/rmp-ai-assistant/rmp-ai-assistant-python/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/rest.py",
      "https://github.com/thegoddysmart/headstarter-rag-powered-ai-assistant/blob/e49a838c33389b623342b6c0962972a1d30b2e95/rmp-ai-assistant/rmp-ai-assistant-python/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/cache_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2365858,
    "stars": 0
  },
  {
    "full_name": "KenyonY/openai-forward",
    "name": "openai-forward",
    "description": "🚀  大语言模型高效转发服务  · An efficient forwarding service designed for LLMs. ·  OpenAI API Reverse Proxy",
    "html_url": [
      "https://github.com/KenyonY/openai-forward/blob/e65a7d025a7d96778ccd89463019f1dc1da29a60/openai_forward/config/interface.py",
      "https://github.com/KenyonY/openai-forward/blob/e65a7d025a7d96778ccd89463019f1dc1da29a60/openai_forward/webui/run.py",
      "https://github.com/KenyonY/openai-forward/blob/e65a7d025a7d96778ccd89463019f1dc1da29a60/openai_forward/config/interface.py",
      "https://github.com/KenyonY/openai-forward/blob/e65a7d025a7d96778ccd89463019f1dc1da29a60/openai_forward/config/settings.py"
    ],
    "model": [
      "gemini",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 5193,
    "stars": 938
  },
  {
    "full_name": "brucepro/text_gen_use_api",
    "name": "text_gen_use_api",
    "description": "Use an api server for generation in textgen",
    "html_url": [
      "https://github.com/brucepro/text_gen_use_api/blob/71db765684f789d3f38836010740a37087d8272d/script.py",
      "https://github.com/brucepro/text_gen_use_api/blob/71db765684f789d3f38836010740a37087d8272d/script.py"
    ],
    "model": [
      "gemini",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 208,
    "stars": 4
  },
  {
    "full_name": "dev-priyanshuu/Gemini-Intelligence-Hub",
    "name": "Gemini-Intelligence-Hub",
    "description": "The Google Intelligence Hub is a suite of AI tools in a user-friendly platform, featuring applications like a Youtube Summarizer, a Chat with PDF feature, and Google Vision. It leverages Google Gemini models to offer efficient solutions.",
    "html_url": [
      "https://github.com/dev-priyanshuu/Gemini-Intelligence-Hub/blob/611ae3bb7f37f04d6b0265313abc04907ac59498/app.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 660,
    "stars": 3
  },
  {
    "full_name": "Madhavmurari/Conversational-Q-A-Chatbot-using-Gemini-Pro-LLM",
    "name": "Conversational-Q-A-Chatbot-using-Gemini-Pro-LLM",
    "description": null,
    "html_url": [
      "https://github.com/Madhavmurari/Conversational-Q-A-Chatbot-using-Gemini-Pro-LLM/blob/38cc4786f8ca51c4016b0c7f491bfeb4dc83624f/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/base.py",
      "https://github.com/Madhavmurari/Conversational-Q-A-Chatbot-using-Gemini-Pro-LLM/blob/38cc4786f8ca51c4016b0c7f491bfeb4dc83624f/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/grpc.py",
      "https://github.com/Madhavmurari/Conversational-Q-A-Chatbot-using-Gemini-Pro-LLM/blob/38cc4786f8ca51c4016b0c7f491bfeb4dc83624f/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc.py",
      "https://github.com/Madhavmurari/Conversational-Q-A-Chatbot-using-Gemini-Pro-LLM/blob/38cc4786f8ca51c4016b0c7f491bfeb4dc83624f/myenv/Lib/site-packages/google/generativeai/client.py",
      "https://github.com/Madhavmurari/Conversational-Q-A-Chatbot-using-Gemini-Pro-LLM/blob/38cc4786f8ca51c4016b0c7f491bfeb4dc83624f/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/Madhavmurari/Conversational-Q-A-Chatbot-using-Gemini-Pro-LLM/blob/38cc4786f8ca51c4016b0c7f491bfeb4dc83624f/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/grpc.py",
      "https://github.com/Madhavmurari/Conversational-Q-A-Chatbot-using-Gemini-Pro-LLM/blob/38cc4786f8ca51c4016b0c7f491bfeb4dc83624f/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/grpc_asyncio.py",
      "https://github.com/Madhavmurari/Conversational-Q-A-Chatbot-using-Gemini-Pro-LLM/blob/38cc4786f8ca51c4016b0c7f491bfeb4dc83624f/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/cache_service/transports/grpc_asyncio.py",
      "https://github.com/Madhavmurari/Conversational-Q-A-Chatbot-using-Gemini-Pro-LLM/blob/38cc4786f8ca51c4016b0c7f491bfeb4dc83624f/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/Madhavmurari/Conversational-Q-A-Chatbot-using-Gemini-Pro-LLM/blob/38cc4786f8ca51c4016b0c7f491bfeb4dc83624f/myenv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/Madhavmurari/Conversational-Q-A-Chatbot-using-Gemini-Pro-LLM/blob/38cc4786f8ca51c4016b0c7f491bfeb4dc83624f/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/Madhavmurari/Conversational-Q-A-Chatbot-using-Gemini-Pro-LLM/blob/38cc4786f8ca51c4016b0c7f491bfeb4dc83624f/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/transports/rest.py",
      "https://github.com/Madhavmurari/Conversational-Q-A-Chatbot-using-Gemini-Pro-LLM/blob/38cc4786f8ca51c4016b0c7f491bfeb4dc83624f/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/client.py",
      "https://github.com/Madhavmurari/Conversational-Q-A-Chatbot-using-Gemini-Pro-LLM/blob/38cc4786f8ca51c4016b0c7f491bfeb4dc83624f/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/client.py",
      "https://github.com/Madhavmurari/Conversational-Q-A-Chatbot-using-Gemini-Pro-LLM/blob/38cc4786f8ca51c4016b0c7f491bfeb4dc83624f/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/client.py",
      "https://github.com/Madhavmurari/Conversational-Q-A-Chatbot-using-Gemini-Pro-LLM/blob/38cc4786f8ca51c4016b0c7f491bfeb4dc83624f/myenv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/rest.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3461412,
    "stars": 0
  },
  {
    "full_name": "lmarena/arena-hard-auto",
    "name": "arena-hard-auto",
    "description": "Arena-Hard-Auto: An automatic LLM benchmark. ",
    "html_url": [
      "https://github.com/lmarena/arena-hard-auto/blob/2971e34d066f986c09bc5a463fa286fa93bcca3c/utils.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 12977,
    "stars": 845
  },
  {
    "full_name": "nguyenanhtuan1102/GPT-PowerApps",
    "name": "GPT-PowerApps",
    "description": "GPT PowerApps uses NLP to buld 3 main tools: Predict Next Word, QA Chatbot, Resume Screening. The App developed by Flask, HTML, CSS, and deployed by AWS CodePipeline and Beanstalk.",
    "html_url": [
      "https://github.com/nguyenanhtuan1102/GPT-PowerApps/blob/47c90fdbb9f20f878479d60ba581bb81d6708c00/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/base.py",
      "https://github.com/nguyenanhtuan1102/GPT-PowerApps/blob/47c90fdbb9f20f878479d60ba581bb81d6708c00/.venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/base.py",
      "https://github.com/nguyenanhtuan1102/GPT-PowerApps/blob/47c90fdbb9f20f878479d60ba581bb81d6708c00/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc.py",
      "https://github.com/nguyenanhtuan1102/GPT-PowerApps/blob/47c90fdbb9f20f878479d60ba581bb81d6708c00/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/nguyenanhtuan1102/GPT-PowerApps/blob/47c90fdbb9f20f878479d60ba581bb81d6708c00/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/transports/grpc_asyncio.py",
      "https://github.com/nguyenanhtuan1102/GPT-PowerApps/blob/47c90fdbb9f20f878479d60ba581bb81d6708c00/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/grpc_asyncio.py",
      "https://github.com/nguyenanhtuan1102/GPT-PowerApps/blob/47c90fdbb9f20f878479d60ba581bb81d6708c00/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/grpc.py",
      "https://github.com/nguyenanhtuan1102/GPT-PowerApps/blob/47c90fdbb9f20f878479d60ba581bb81d6708c00/.venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/grpc.py",
      "https://github.com/nguyenanhtuan1102/GPT-PowerApps/blob/47c90fdbb9f20f878479d60ba581bb81d6708c00/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/client.py",
      "https://github.com/nguyenanhtuan1102/GPT-PowerApps/blob/47c90fdbb9f20f878479d60ba581bb81d6708c00/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3733043,
    "stars": 1
  },
  {
    "full_name": "devamanikantasala/Internship-Project-Repository",
    "name": "Internship-Project-Repository",
    "description": "During the entire project, I gained skills to work on pythons collections types and the other type of data handlers, and as our project main theme is Chatbot application development so I also gained an hands on exposure on Chatterbot library, to make my own chatbot called `vortex`, I also used google-generativeai api to use gemini model in my app",
    "html_url": [
      "https://github.com/devamanikantasala/Internship-Project-Repository/blob/8369c0b43f1bfffb350a4d6fcd199f61c55e6005/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/base.py",
      "https://github.com/devamanikantasala/Internship-Project-Repository/blob/8369c0b43f1bfffb350a4d6fcd199f61c55e6005/Lib/site-packages/google/generativeai/client.py",
      "https://github.com/devamanikantasala/Internship-Project-Repository/blob/8369c0b43f1bfffb350a4d6fcd199f61c55e6005/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc.py",
      "https://github.com/devamanikantasala/Internship-Project-Repository/blob/8369c0b43f1bfffb350a4d6fcd199f61c55e6005/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/transports/grpc_asyncio.py",
      "https://github.com/devamanikantasala/Internship-Project-Repository/blob/8369c0b43f1bfffb350a4d6fcd199f61c55e6005/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/rest.py",
      "https://github.com/devamanikantasala/Internship-Project-Repository/blob/8369c0b43f1bfffb350a4d6fcd199f61c55e6005/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/grpc_asyncio.py",
      "https://github.com/devamanikantasala/Internship-Project-Repository/blob/8369c0b43f1bfffb350a4d6fcd199f61c55e6005/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/transports/rest.py",
      "https://github.com/devamanikantasala/Internship-Project-Repository/blob/8369c0b43f1bfffb350a4d6fcd199f61c55e6005/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/client.py",
      "https://github.com/devamanikantasala/Internship-Project-Repository/blob/8369c0b43f1bfffb350a4d6fcd199f61c55e6005/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/client.py",
      "https://github.com/devamanikantasala/Internship-Project-Repository/blob/8369c0b43f1bfffb350a4d6fcd199f61c55e6005/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/client.py",
      "https://github.com/devamanikantasala/Internship-Project-Repository/blob/8369c0b43f1bfffb350a4d6fcd199f61c55e6005/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/grpc_asyncio.py",
      "https://github.com/devamanikantasala/Internship-Project-Repository/blob/8369c0b43f1bfffb350a4d6fcd199f61c55e6005/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2526787,
    "stars": 2
  },
  {
    "full_name": "hajerZitouni105/RFP_hydatis",
    "name": "RFP_hydatis",
    "description": "AI-based solution to automate responses to Call for Proposals (CFP) using Gemini Flash Pro 1.5, Few shot learning and RAG techninques.",
    "html_url": [
      "https://github.com/hajerZitouni105/RFP_hydatis/blob/906b60fd15966f4d94068deb02213cdbf078059b/src/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/base.py",
      "https://github.com/hajerZitouni105/RFP_hydatis/blob/906b60fd15966f4d94068deb02213cdbf078059b/src/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/base.py",
      "https://github.com/hajerZitouni105/RFP_hydatis/blob/906b60fd15966f4d94068deb02213cdbf078059b/src/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/grpc.py",
      "https://github.com/hajerZitouni105/RFP_hydatis/blob/906b60fd15966f4d94068deb02213cdbf078059b/src/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/grpc_asyncio.py",
      "https://github.com/hajerZitouni105/RFP_hydatis/blob/906b60fd15966f4d94068deb02213cdbf078059b/src/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc.py",
      "https://github.com/hajerZitouni105/RFP_hydatis/blob/906b60fd15966f4d94068deb02213cdbf078059b/src/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/grpc.py",
      "https://github.com/hajerZitouni105/RFP_hydatis/blob/906b60fd15966f4d94068deb02213cdbf078059b/src/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/client.py",
      "https://github.com/hajerZitouni105/RFP_hydatis/blob/906b60fd15966f4d94068deb02213cdbf078059b/src/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/client.py",
      "https://github.com/hajerZitouni105/RFP_hydatis/blob/906b60fd15966f4d94068deb02213cdbf078059b/src/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/client.py",
      "https://github.com/hajerZitouni105/RFP_hydatis/blob/906b60fd15966f4d94068deb02213cdbf078059b/src/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3254211,
    "stars": 0
  },
  {
    "full_name": "Larissa-Antunes/chatbot",
    "name": "chatbot",
    "description": "Chatbot em Python com IA do Gemini",
    "html_url": [
      "https://github.com/Larissa-Antunes/chatbot/blob/fd55aba2a983b4255812725ec298245b88ded38e/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/base.py",
      "https://github.com/Larissa-Antunes/chatbot/blob/fd55aba2a983b4255812725ec298245b88ded38e/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc.py",
      "https://github.com/Larissa-Antunes/chatbot/blob/fd55aba2a983b4255812725ec298245b88ded38e/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/rest.py",
      "https://github.com/Larissa-Antunes/chatbot/blob/fd55aba2a983b4255812725ec298245b88ded38e/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/grpc_asyncio.py",
      "https://github.com/Larissa-Antunes/chatbot/blob/fd55aba2a983b4255812725ec298245b88ded38e/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/transports/rest.py",
      "https://github.com/Larissa-Antunes/chatbot/blob/fd55aba2a983b4255812725ec298245b88ded38e/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/client.py",
      "https://github.com/Larissa-Antunes/chatbot/blob/fd55aba2a983b4255812725ec298245b88ded38e/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/client.py",
      "https://github.com/Larissa-Antunes/chatbot/blob/fd55aba2a983b4255812725ec298245b88ded38e/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/client.py",
      "https://github.com/Larissa-Antunes/chatbot/blob/fd55aba2a983b4255812725ec298245b88ded38e/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/grpc_asyncio.py",
      "https://github.com/Larissa-Antunes/chatbot/blob/fd55aba2a983b4255812725ec298245b88ded38e/Lib/site-packages/google/ai/generativelanguage_v1beta/services/cache_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3067166,
    "stars": 0
  },
  {
    "full_name": "safwanahmadsaffi/Gemini-ChatBot",
    "name": "Gemini-ChatBot",
    "description": "The Google Gemini-1.5-flash Chat Application is a Streamlit-based web interface that facilitates interactive conversations with Google's GenerativeAI. Users can ask questions or engage in dialogue, receiving responses generated by the powerful Gemini-1.5-flash model",
    "html_url": [
      "https://github.com/safwanahmadsaffi/Gemini-ChatBot/blob/c8b4305adaf7b6d859ef351fed7ae88447809dda/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/base.py",
      "https://github.com/safwanahmadsaffi/Gemini-ChatBot/blob/c8b4305adaf7b6d859ef351fed7ae88447809dda/.venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/base.py",
      "https://github.com/safwanahmadsaffi/Gemini-ChatBot/blob/c8b4305adaf7b6d859ef351fed7ae88447809dda/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc.py",
      "https://github.com/safwanahmadsaffi/Gemini-ChatBot/blob/c8b4305adaf7b6d859ef351fed7ae88447809dda/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/safwanahmadsaffi/Gemini-ChatBot/blob/c8b4305adaf7b6d859ef351fed7ae88447809dda/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/transports/grpc_asyncio.py",
      "https://github.com/safwanahmadsaffi/Gemini-ChatBot/blob/c8b4305adaf7b6d859ef351fed7ae88447809dda/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/grpc_asyncio.py",
      "https://github.com/safwanahmadsaffi/Gemini-ChatBot/blob/c8b4305adaf7b6d859ef351fed7ae88447809dda/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/grpc.py",
      "https://github.com/safwanahmadsaffi/Gemini-ChatBot/blob/c8b4305adaf7b6d859ef351fed7ae88447809dda/.venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/grpc.py",
      "https://github.com/safwanahmadsaffi/Gemini-ChatBot/blob/c8b4305adaf7b6d859ef351fed7ae88447809dda/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/client.py",
      "https://github.com/safwanahmadsaffi/Gemini-ChatBot/blob/c8b4305adaf7b6d859ef351fed7ae88447809dda/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/client.py",
      "https://github.com/safwanahmadsaffi/Gemini-ChatBot/blob/c8b4305adaf7b6d859ef351fed7ae88447809dda/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/client.py",
      "https://github.com/safwanahmadsaffi/Gemini-ChatBot/blob/c8b4305adaf7b6d859ef351fed7ae88447809dda/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/grpc_asyncio.py",
      "https://github.com/safwanahmadsaffi/Gemini-ChatBot/blob/c8b4305adaf7b6d859ef351fed7ae88447809dda/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3508962,
    "stars": 1
  },
  {
    "full_name": "Faith-Nchang/Voice-AI",
    "name": "Voice-AI",
    "description": "A voice assistant created using Python | Flask | SQLite | Gemini API | Twilio | News API | OpenWeather Map API | Geolocation and others |",
    "html_url": [
      "https://github.com/Faith-Nchang/Voice-AI/blob/92d8f9610602d2b2c6b147d9fce9d812f33492e9/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/base.py",
      "https://github.com/Faith-Nchang/Voice-AI/blob/92d8f9610602d2b2c6b147d9fce9d812f33492e9/.venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/base.py",
      "https://github.com/Faith-Nchang/Voice-AI/blob/92d8f9610602d2b2c6b147d9fce9d812f33492e9/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc.py",
      "https://github.com/Faith-Nchang/Voice-AI/blob/92d8f9610602d2b2c6b147d9fce9d812f33492e9/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/Faith-Nchang/Voice-AI/blob/92d8f9610602d2b2c6b147d9fce9d812f33492e9/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/transports/grpc_asyncio.py",
      "https://github.com/Faith-Nchang/Voice-AI/blob/92d8f9610602d2b2c6b147d9fce9d812f33492e9/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/grpc_asyncio.py",
      "https://github.com/Faith-Nchang/Voice-AI/blob/92d8f9610602d2b2c6b147d9fce9d812f33492e9/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/grpc.py",
      "https://github.com/Faith-Nchang/Voice-AI/blob/92d8f9610602d2b2c6b147d9fce9d812f33492e9/.venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/grpc.py",
      "https://github.com/Faith-Nchang/Voice-AI/blob/92d8f9610602d2b2c6b147d9fce9d812f33492e9/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/client.py",
      "https://github.com/Faith-Nchang/Voice-AI/blob/92d8f9610602d2b2c6b147d9fce9d812f33492e9/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3262862,
    "stars": 0
  },
  {
    "full_name": "rakshanakrish/LLM-caching-in-langchain",
    "name": "LLM-caching-in-langchain",
    "description": null,
    "html_url": [
      "https://github.com/rakshanakrish/LLM-caching-in-langchain/blob/90afa38d1a4d6b6046231bf6ac7d19f83a758b60/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/base.py",
      "https://github.com/rakshanakrish/LLM-caching-in-langchain/blob/90afa38d1a4d6b6046231bf6ac7d19f83a758b60/.venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/base.py",
      "https://github.com/rakshanakrish/LLM-caching-in-langchain/blob/90afa38d1a4d6b6046231bf6ac7d19f83a758b60/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc.py",
      "https://github.com/rakshanakrish/LLM-caching-in-langchain/blob/90afa38d1a4d6b6046231bf6ac7d19f83a758b60/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/rakshanakrish/LLM-caching-in-langchain/blob/90afa38d1a4d6b6046231bf6ac7d19f83a758b60/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/transports/grpc_asyncio.py",
      "https://github.com/rakshanakrish/LLM-caching-in-langchain/blob/90afa38d1a4d6b6046231bf6ac7d19f83a758b60/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/grpc_asyncio.py",
      "https://github.com/rakshanakrish/LLM-caching-in-langchain/blob/90afa38d1a4d6b6046231bf6ac7d19f83a758b60/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/grpc.py",
      "https://github.com/rakshanakrish/LLM-caching-in-langchain/blob/90afa38d1a4d6b6046231bf6ac7d19f83a758b60/.venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/grpc.py",
      "https://github.com/rakshanakrish/LLM-caching-in-langchain/blob/90afa38d1a4d6b6046231bf6ac7d19f83a758b60/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/client.py",
      "https://github.com/rakshanakrish/LLM-caching-in-langchain/blob/90afa38d1a4d6b6046231bf6ac7d19f83a758b60/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3003921,
    "stars": 0
  },
  {
    "full_name": "Jagya-Vishal/Ai-InterviewModel",
    "name": "Ai-InterviewModel",
    "description": "The AI-driven Interview Model revolutionizes recruitment by using AI and NLP technologies. With a React JS frontend for a seamless candidate interface and a Flask backend handling API requests and AI communication via Gemini API, it ensures an efficient, unbiased, and scalable interview process.",
    "html_url": [
      "https://github.com/Jagya-Vishal/Ai-InterviewModel/blob/e5f840874cff901b2c50e50c7ee3ac8dbf657d32/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/base.py",
      "https://github.com/Jagya-Vishal/Ai-InterviewModel/blob/e5f840874cff901b2c50e50c7ee3ac8dbf657d32/.venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/base.py",
      "https://github.com/Jagya-Vishal/Ai-InterviewModel/blob/e5f840874cff901b2c50e50c7ee3ac8dbf657d32/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc.py",
      "https://github.com/Jagya-Vishal/Ai-InterviewModel/blob/e5f840874cff901b2c50e50c7ee3ac8dbf657d32/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/Jagya-Vishal/Ai-InterviewModel/blob/e5f840874cff901b2c50e50c7ee3ac8dbf657d32/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/transports/grpc_asyncio.py",
      "https://github.com/Jagya-Vishal/Ai-InterviewModel/blob/e5f840874cff901b2c50e50c7ee3ac8dbf657d32/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/grpc_asyncio.py",
      "https://github.com/Jagya-Vishal/Ai-InterviewModel/blob/e5f840874cff901b2c50e50c7ee3ac8dbf657d32/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/grpc.py",
      "https://github.com/Jagya-Vishal/Ai-InterviewModel/blob/e5f840874cff901b2c50e50c7ee3ac8dbf657d32/.venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/grpc.py",
      "https://github.com/Jagya-Vishal/Ai-InterviewModel/blob/e5f840874cff901b2c50e50c7ee3ac8dbf657d32/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/client.py",
      "https://github.com/Jagya-Vishal/Ai-InterviewModel/blob/e5f840874cff901b2c50e50c7ee3ac8dbf657d32/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 21362,
    "stars": 0
  },
  {
    "full_name": "ShambhaviPandey2021/ATS_Resume_Tracker",
    "name": "ATS_Resume_Tracker",
    "description": " This app analyzes your resume against job descriptions using Google's Generative AI (Gemini). Upload your resume, enter the job description, and receive instant feedback on alignment and matching percentage. Perfect for optimizing your resume for tech roles!",
    "html_url": [
      "https://github.com/ShambhaviPandey2021/ATS_Resume_Tracker/blob/288e592c18b84c2a564266d5e1831989bd66d6f2/avenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/base.py",
      "https://github.com/ShambhaviPandey2021/ATS_Resume_Tracker/blob/288e592c18b84c2a564266d5e1831989bd66d6f2/avenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc.py",
      "https://github.com/ShambhaviPandey2021/ATS_Resume_Tracker/blob/288e592c18b84c2a564266d5e1831989bd66d6f2/avenv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/ShambhaviPandey2021/ATS_Resume_Tracker/blob/288e592c18b84c2a564266d5e1831989bd66d6f2/avenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/grpc.py",
      "https://github.com/ShambhaviPandey2021/ATS_Resume_Tracker/blob/288e592c18b84c2a564266d5e1831989bd66d6f2/avenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/rest.py",
      "https://github.com/ShambhaviPandey2021/ATS_Resume_Tracker/blob/288e592c18b84c2a564266d5e1831989bd66d6f2/avenv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/grpc.py",
      "https://github.com/ShambhaviPandey2021/ATS_Resume_Tracker/blob/288e592c18b84c2a564266d5e1831989bd66d6f2/avenv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/transports/rest.py",
      "https://github.com/ShambhaviPandey2021/ATS_Resume_Tracker/blob/288e592c18b84c2a564266d5e1831989bd66d6f2/avenv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/client.py",
      "https://github.com/ShambhaviPandey2021/ATS_Resume_Tracker/blob/288e592c18b84c2a564266d5e1831989bd66d6f2/avenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/client.py",
      "https://github.com/ShambhaviPandey2021/ATS_Resume_Tracker/blob/288e592c18b84c2a564266d5e1831989bd66d6f2/avenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/client.py",
      "https://github.com/ShambhaviPandey2021/ATS_Resume_Tracker/blob/288e592c18b84c2a564266d5e1831989bd66d6f2/avenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/grpc_asyncio.py",
      "https://github.com/ShambhaviPandey2021/ATS_Resume_Tracker/blob/288e592c18b84c2a564266d5e1831989bd66d6f2/avenv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3883822,
    "stars": 0
  },
  {
    "full_name": "shankhanraman/RAG_WebApp",
    "name": "RAG_WebApp",
    "description": null,
    "html_url": [
      "https://github.com/shankhanraman/RAG_WebApp/blob/50af08dce3fa39d3d6a9fd58ea69d883c5cdab4a/Backend/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/base.py",
      "https://github.com/shankhanraman/RAG_WebApp/blob/50af08dce3fa39d3d6a9fd58ea69d883c5cdab4a/Backend/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/base.py",
      "https://github.com/shankhanraman/RAG_WebApp/blob/50af08dce3fa39d3d6a9fd58ea69d883c5cdab4a/Backend/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/base.py",
      "https://github.com/shankhanraman/RAG_WebApp/blob/50af08dce3fa39d3d6a9fd58ea69d883c5cdab4a/Backend/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc.py",
      "https://github.com/shankhanraman/RAG_WebApp/blob/50af08dce3fa39d3d6a9fd58ea69d883c5cdab4a/Backend/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc.py",
      "https://github.com/shankhanraman/RAG_WebApp/blob/50af08dce3fa39d3d6a9fd58ea69d883c5cdab4a/Backend/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/grpc.py",
      "https://github.com/shankhanraman/RAG_WebApp/blob/50af08dce3fa39d3d6a9fd58ea69d883c5cdab4a/Backend/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/shankhanraman/RAG_WebApp/blob/50af08dce3fa39d3d6a9fd58ea69d883c5cdab4a/Backend/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/transports/grpc_asyncio.py",
      "https://github.com/shankhanraman/RAG_WebApp/blob/50af08dce3fa39d3d6a9fd58ea69d883c5cdab4a/Backend/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/transports/grpc_asyncio.py",
      "https://github.com/shankhanraman/RAG_WebApp/blob/50af08dce3fa39d3d6a9fd58ea69d883c5cdab4a/Backend/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/rest.py",
      "https://github.com/shankhanraman/RAG_WebApp/blob/50af08dce3fa39d3d6a9fd58ea69d883c5cdab4a/Backend/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/rest.py",
      "https://github.com/shankhanraman/RAG_WebApp/blob/50af08dce3fa39d3d6a9fd58ea69d883c5cdab4a/Backend/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/rest.py",
      "https://github.com/shankhanraman/RAG_WebApp/blob/50af08dce3fa39d3d6a9fd58ea69d883c5cdab4a/Backend/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/grpc.py",
      "https://github.com/shankhanraman/RAG_WebApp/blob/50af08dce3fa39d3d6a9fd58ea69d883c5cdab4a/Backend/env/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/grpc.py",
      "https://github.com/shankhanraman/RAG_WebApp/blob/50af08dce3fa39d3d6a9fd58ea69d883c5cdab4a/Backend/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/shankhanraman/RAG_WebApp/blob/50af08dce3fa39d3d6a9fd58ea69d883c5cdab4a/Backend/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/transports/rest.py",
      "https://github.com/shankhanraman/RAG_WebApp/blob/50af08dce3fa39d3d6a9fd58ea69d883c5cdab4a/Backend/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/rest.py",
      "https://github.com/shankhanraman/RAG_WebApp/blob/50af08dce3fa39d3d6a9fd58ea69d883c5cdab4a/Backend/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/transports/rest.py",
      "https://github.com/shankhanraman/RAG_WebApp/blob/50af08dce3fa39d3d6a9fd58ea69d883c5cdab4a/Backend/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/client.py",
      "https://github.com/shankhanraman/RAG_WebApp/blob/50af08dce3fa39d3d6a9fd58ea69d883c5cdab4a/Backend/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/client.py",
      "https://github.com/shankhanraman/RAG_WebApp/blob/50af08dce3fa39d3d6a9fd58ea69d883c5cdab4a/Backend/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/client.py",
      "https://github.com/shankhanraman/RAG_WebApp/blob/50af08dce3fa39d3d6a9fd58ea69d883c5cdab4a/Backend/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/client.py",
      "https://github.com/shankhanraman/RAG_WebApp/blob/50af08dce3fa39d3d6a9fd58ea69d883c5cdab4a/Backend/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/client.py",
      "https://github.com/shankhanraman/RAG_WebApp/blob/50af08dce3fa39d3d6a9fd58ea69d883c5cdab4a/Backend/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/cache_service/client.py",
      "https://github.com/shankhanraman/RAG_WebApp/blob/50af08dce3fa39d3d6a9fd58ea69d883c5cdab4a/Backend/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/cache_service/client.py",
      "https://github.com/shankhanraman/RAG_WebApp/blob/50af08dce3fa39d3d6a9fd58ea69d883c5cdab4a/Backend/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3865892,
    "stars": 0
  },
  {
    "full_name": "MuhammadAbuBakar11290/ATS-resume-Backend",
    "name": "ATS-resume-Backend",
    "description": "ATS Resume Expert that will help the students to check their ATS Score before applying and by the suggestion of Gemini they can use the keywords that will rank their CV",
    "html_url": [
      "https://github.com/MuhammadAbuBakar11290/ATS-resume-Backend/blob/09ac835580045b8781d49f447183c04815876ff2/backend/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/base.py",
      "https://github.com/MuhammadAbuBakar11290/ATS-resume-Backend/blob/09ac835580045b8781d49f447183c04815876ff2/backend/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc.py",
      "https://github.com/MuhammadAbuBakar11290/ATS-resume-Backend/blob/09ac835580045b8781d49f447183c04815876ff2/backend/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/MuhammadAbuBakar11290/ATS-resume-Backend/blob/09ac835580045b8781d49f447183c04815876ff2/backend/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/grpc.py",
      "https://github.com/MuhammadAbuBakar11290/ATS-resume-Backend/blob/09ac835580045b8781d49f447183c04815876ff2/backend/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/transports/grpc_asyncio.py",
      "https://github.com/MuhammadAbuBakar11290/ATS-resume-Backend/blob/09ac835580045b8781d49f447183c04815876ff2/backend/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/grpc.py",
      "https://github.com/MuhammadAbuBakar11290/ATS-resume-Backend/blob/09ac835580045b8781d49f447183c04815876ff2/backend/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/base.py",
      "https://github.com/MuhammadAbuBakar11290/ATS-resume-Backend/blob/09ac835580045b8781d49f447183c04815876ff2/backend/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/transports/rest.py",
      "https://github.com/MuhammadAbuBakar11290/ATS-resume-Backend/blob/09ac835580045b8781d49f447183c04815876ff2/backend/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/cache_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2526485,
    "stars": 0
  },
  {
    "full_name": "MoraisMNS/AI-ChatBot-Gemini",
    "name": "AI-ChatBot-Gemini",
    "description": "This AI chatbot is implemented using Gemini AI API and python. This is a user friendly chatbot which gives the intelligent responses. ",
    "html_url": [
      "https://github.com/MoraisMNS/AI-ChatBot-Gemini/blob/97b0b59003e726f0cd7c5906aeef8bef1e5a127b/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/base.py",
      "https://github.com/MoraisMNS/AI-ChatBot-Gemini/blob/97b0b59003e726f0cd7c5906aeef8bef1e5a127b/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/base.py",
      "https://github.com/MoraisMNS/AI-ChatBot-Gemini/blob/97b0b59003e726f0cd7c5906aeef8bef1e5a127b/Lib/site-packages/google/generativeai/client.py",
      "https://github.com/MoraisMNS/AI-ChatBot-Gemini/blob/97b0b59003e726f0cd7c5906aeef8bef1e5a127b/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc.py",
      "https://github.com/MoraisMNS/AI-ChatBot-Gemini/blob/97b0b59003e726f0cd7c5906aeef8bef1e5a127b/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/grpc.py",
      "https://github.com/MoraisMNS/AI-ChatBot-Gemini/blob/97b0b59003e726f0cd7c5906aeef8bef1e5a127b/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/MoraisMNS/AI-ChatBot-Gemini/blob/97b0b59003e726f0cd7c5906aeef8bef1e5a127b/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc.py",
      "https://github.com/MoraisMNS/AI-ChatBot-Gemini/blob/97b0b59003e726f0cd7c5906aeef8bef1e5a127b/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/MoraisMNS/AI-ChatBot-Gemini/blob/97b0b59003e726f0cd7c5906aeef8bef1e5a127b/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/transports/grpc.py",
      "https://github.com/MoraisMNS/AI-ChatBot-Gemini/blob/97b0b59003e726f0cd7c5906aeef8bef1e5a127b/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/transports/grpc_asyncio.py",
      "https://github.com/MoraisMNS/AI-ChatBot-Gemini/blob/97b0b59003e726f0cd7c5906aeef8bef1e5a127b/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/rest.py",
      "https://github.com/MoraisMNS/AI-ChatBot-Gemini/blob/97b0b59003e726f0cd7c5906aeef8bef1e5a127b/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc.py",
      "https://github.com/MoraisMNS/AI-ChatBot-Gemini/blob/97b0b59003e726f0cd7c5906aeef8bef1e5a127b/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/grpc_asyncio.py",
      "https://github.com/MoraisMNS/AI-ChatBot-Gemini/blob/97b0b59003e726f0cd7c5906aeef8bef1e5a127b/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/grpc_asyncio.py",
      "https://github.com/MoraisMNS/AI-ChatBot-Gemini/blob/97b0b59003e726f0cd7c5906aeef8bef1e5a127b/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/grpc.py",
      "https://github.com/MoraisMNS/AI-ChatBot-Gemini/blob/97b0b59003e726f0cd7c5906aeef8bef1e5a127b/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/grpc.py",
      "https://github.com/MoraisMNS/AI-ChatBot-Gemini/blob/97b0b59003e726f0cd7c5906aeef8bef1e5a127b/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/MoraisMNS/AI-ChatBot-Gemini/blob/97b0b59003e726f0cd7c5906aeef8bef1e5a127b/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/transports/rest.py",
      "https://github.com/MoraisMNS/AI-ChatBot-Gemini/blob/97b0b59003e726f0cd7c5906aeef8bef1e5a127b/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/grpc_asyncio.py",
      "https://github.com/MoraisMNS/AI-ChatBot-Gemini/blob/97b0b59003e726f0cd7c5906aeef8bef1e5a127b/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/client.py",
      "https://github.com/MoraisMNS/AI-ChatBot-Gemini/blob/97b0b59003e726f0cd7c5906aeef8bef1e5a127b/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/client.py",
      "https://github.com/MoraisMNS/AI-ChatBot-Gemini/blob/97b0b59003e726f0cd7c5906aeef8bef1e5a127b/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/client.py",
      "https://github.com/MoraisMNS/AI-ChatBot-Gemini/blob/97b0b59003e726f0cd7c5906aeef8bef1e5a127b/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/client.py",
      "https://github.com/MoraisMNS/AI-ChatBot-Gemini/blob/97b0b59003e726f0cd7c5906aeef8bef1e5a127b/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/client.py",
      "https://github.com/MoraisMNS/AI-ChatBot-Gemini/blob/97b0b59003e726f0cd7c5906aeef8bef1e5a127b/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/client.py",
      "https://github.com/MoraisMNS/AI-ChatBot-Gemini/blob/97b0b59003e726f0cd7c5906aeef8bef1e5a127b/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/client.py",
      "https://github.com/MoraisMNS/AI-ChatBot-Gemini/blob/97b0b59003e726f0cd7c5906aeef8bef1e5a127b/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2566279,
    "stars": 0
  },
  {
    "full_name": "AliAzhar5/Intelligent-LLM-Driven-CSV-Query-Assistant",
    "name": "Intelligent-LLM-Driven-CSV-Query-Assistant",
    "description": null,
    "html_url": [
      "https://github.com/AliAzhar5/Intelligent-LLM-Driven-CSV-Query-Assistant/blob/424d564d183b0f9639b312f710c4b67ff90adf15/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/base.py",
      "https://github.com/AliAzhar5/Intelligent-LLM-Driven-CSV-Query-Assistant/blob/424d564d183b0f9639b312f710c4b67ff90adf15/.venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/base.py",
      "https://github.com/AliAzhar5/Intelligent-LLM-Driven-CSV-Query-Assistant/blob/424d564d183b0f9639b312f710c4b67ff90adf15/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc.py",
      "https://github.com/AliAzhar5/Intelligent-LLM-Driven-CSV-Query-Assistant/blob/424d564d183b0f9639b312f710c4b67ff90adf15/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/AliAzhar5/Intelligent-LLM-Driven-CSV-Query-Assistant/blob/424d564d183b0f9639b312f710c4b67ff90adf15/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/transports/grpc_asyncio.py",
      "https://github.com/AliAzhar5/Intelligent-LLM-Driven-CSV-Query-Assistant/blob/424d564d183b0f9639b312f710c4b67ff90adf15/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/grpc_asyncio.py",
      "https://github.com/AliAzhar5/Intelligent-LLM-Driven-CSV-Query-Assistant/blob/424d564d183b0f9639b312f710c4b67ff90adf15/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/grpc.py",
      "https://github.com/AliAzhar5/Intelligent-LLM-Driven-CSV-Query-Assistant/blob/424d564d183b0f9639b312f710c4b67ff90adf15/.venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/grpc.py",
      "https://github.com/AliAzhar5/Intelligent-LLM-Driven-CSV-Query-Assistant/blob/424d564d183b0f9639b312f710c4b67ff90adf15/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/client.py",
      "https://github.com/AliAzhar5/Intelligent-LLM-Driven-CSV-Query-Assistant/blob/424d564d183b0f9639b312f710c4b67ff90adf15/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/client.py",
      "https://github.com/AliAzhar5/Intelligent-LLM-Driven-CSV-Query-Assistant/blob/424d564d183b0f9639b312f710c4b67ff90adf15/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/client.py",
      "https://github.com/AliAzhar5/Intelligent-LLM-Driven-CSV-Query-Assistant/blob/424d564d183b0f9639b312f710c4b67ff90adf15/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/grpc_asyncio.py",
      "https://github.com/AliAzhar5/Intelligent-LLM-Driven-CSV-Query-Assistant/blob/424d564d183b0f9639b312f710c4b67ff90adf15/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3811951,
    "stars": 0
  },
  {
    "full_name": "agituts/gemini-2-tts",
    "name": "gemini-2-tts",
    "description": "AI-Powered Podcast Generator: A Python-based tool that converts text scripts into realistic audio podcasts using Google's Generative AI API. This project leverages advanced text-to-speech technology to create dynamic, multi-speaker conversations with customizable voices.",
    "html_url": [
      "https://github.com/agituts/gemini-2-tts/blob/57047a40ab4d47ff6910051bf903a89e7c6bf5a3/app.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 320,
    "stars": 33
  },
  {
    "full_name": "SafetImamovic/ForgeAI",
    "name": "ForgeAI",
    "description": "ForgeAI is a VST plugin* and website allowing users to generate MIDI files based on natural language instructions, powered by Google Gemini AI models.",
    "html_url": [
      "https://github.com/SafetImamovic/ForgeAI/blob/2a42910e3f00f639d94bea54e002a07b2e58d07f/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/base.py",
      "https://github.com/SafetImamovic/ForgeAI/blob/2a42910e3f00f639d94bea54e002a07b2e58d07f/venv/Lib/site-packages/google/generativeai/client.py",
      "https://github.com/SafetImamovic/ForgeAI/blob/2a42910e3f00f639d94bea54e002a07b2e58d07f/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/SafetImamovic/ForgeAI/blob/2a42910e3f00f639d94bea54e002a07b2e58d07f/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/SafetImamovic/ForgeAI/blob/2a42910e3f00f639d94bea54e002a07b2e58d07f/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc.py",
      "https://github.com/SafetImamovic/ForgeAI/blob/2a42910e3f00f639d94bea54e002a07b2e58d07f/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/SafetImamovic/ForgeAI/blob/2a42910e3f00f639d94bea54e002a07b2e58d07f/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/transports/rest.py",
      "https://github.com/SafetImamovic/ForgeAI/blob/2a42910e3f00f639d94bea54e002a07b2e58d07f/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/client.py",
      "https://github.com/SafetImamovic/ForgeAI/blob/2a42910e3f00f639d94bea54e002a07b2e58d07f/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/client.py",
      "https://github.com/SafetImamovic/ForgeAI/blob/2a42910e3f00f639d94bea54e002a07b2e58d07f/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/client.py",
      "https://github.com/SafetImamovic/ForgeAI/blob/2a42910e3f00f639d94bea54e002a07b2e58d07f/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3722340,
    "stars": 2
  },
  {
    "full_name": "ShakillBDO/bdoGpt-streamlitUI",
    "name": "bdoGpt-streamlitUI",
    "description": "Streamlit UI for BDOGPT Pilot Version. ",
    "html_url": [
      "https://github.com/ShakillBDO/bdoGpt-streamlitUI/blob/9d16adc712c6f54a6293a08430d302370cd22480/myvenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/base.py",
      "https://github.com/ShakillBDO/bdoGpt-streamlitUI/blob/9d16adc712c6f54a6293a08430d302370cd22480/myvenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc.py",
      "https://github.com/ShakillBDO/bdoGpt-streamlitUI/blob/9d16adc712c6f54a6293a08430d302370cd22480/myvenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/grpc.py",
      "https://github.com/ShakillBDO/bdoGpt-streamlitUI/blob/9d16adc712c6f54a6293a08430d302370cd22480/myvenv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/transports/rest.py",
      "https://github.com/ShakillBDO/bdoGpt-streamlitUI/blob/9d16adc712c6f54a6293a08430d302370cd22480/myvenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/client.py",
      "https://github.com/ShakillBDO/bdoGpt-streamlitUI/blob/9d16adc712c6f54a6293a08430d302370cd22480/myvenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/grpc_asyncio.py",
      "https://github.com/ShakillBDO/bdoGpt-streamlitUI/blob/9d16adc712c6f54a6293a08430d302370cd22480/myvenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/cache_service/client.py",
      "https://github.com/ShakillBDO/bdoGpt-streamlitUI/blob/9d16adc712c6f54a6293a08430d302370cd22480/myvenv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/client.py",
      "https://github.com/ShakillBDO/bdoGpt-streamlitUI/blob/9d16adc712c6f54a6293a08430d302370cd22480/myvenv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4907496,
    "stars": 0
  },
  {
    "full_name": "Dharinesh/Document-QnA-RAG-App-with--Gemma--Groq",
    "name": "Document-QnA-RAG-App-with--Gemma--Groq",
    "description": "A Document QnA App that has the functionality of loading documents and questioning based on the documents contents. This was implemented to Study the working of RAGs and also testing Google's new Open Source Ai model \"Gemma\"(at the time). The llm is accessed through Groq which makes faster and efficient API calls to the Pre-loaded LLM.",
    "html_url": [
      "https://github.com/Dharinesh/Document-QnA-RAG-App-with--Gemma--Groq/blob/febcbbac57b93331c944d1ce014bdf9cdcba7341/ragdocument/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/base.py",
      "https://github.com/Dharinesh/Document-QnA-RAG-App-with--Gemma--Groq/blob/febcbbac57b93331c944d1ce014bdf9cdcba7341/ragdocument/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/grpc.py",
      "https://github.com/Dharinesh/Document-QnA-RAG-App-with--Gemma--Groq/blob/febcbbac57b93331c944d1ce014bdf9cdcba7341/ragdocument/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/grpc.py",
      "https://github.com/Dharinesh/Document-QnA-RAG-App-with--Gemma--Groq/blob/febcbbac57b93331c944d1ce014bdf9cdcba7341/ragdocument/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/grpc.py",
      "https://github.com/Dharinesh/Document-QnA-RAG-App-with--Gemma--Groq/blob/febcbbac57b93331c944d1ce014bdf9cdcba7341/ragdocument/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/transports/rest.py",
      "https://github.com/Dharinesh/Document-QnA-RAG-App-with--Gemma--Groq/blob/febcbbac57b93331c944d1ce014bdf9cdcba7341/ragdocument/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/client.py",
      "https://github.com/Dharinesh/Document-QnA-RAG-App-with--Gemma--Groq/blob/febcbbac57b93331c944d1ce014bdf9cdcba7341/ragdocument/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/client.py",
      "https://github.com/Dharinesh/Document-QnA-RAG-App-with--Gemma--Groq/blob/febcbbac57b93331c944d1ce014bdf9cdcba7341/ragdocument/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/grpc_asyncio.py",
      "https://github.com/Dharinesh/Document-QnA-RAG-App-with--Gemma--Groq/blob/febcbbac57b93331c944d1ce014bdf9cdcba7341/ragdocument/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/rest.py",
      "https://github.com/Dharinesh/Document-QnA-RAG-App-with--Gemma--Groq/blob/febcbbac57b93331c944d1ce014bdf9cdcba7341/ragdocument/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3886517,
    "stars": 0
  },
  {
    "full_name": "EinKnopfzu/GPM_with_LLM",
    "name": "GPM_with_LLM",
    "description": null,
    "html_url": [
      "https://github.com/EinKnopfzu/GPM_with_LLM/blob/8781f9f0bde624a7b510df3c508eac7391c1bf5f/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/base.py",
      "https://github.com/EinKnopfzu/GPM_with_LLM/blob/8781f9f0bde624a7b510df3c508eac7391c1bf5f/myenv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/base.py",
      "https://github.com/EinKnopfzu/GPM_with_LLM/blob/8781f9f0bde624a7b510df3c508eac7391c1bf5f/myenv/Lib/site-packages/google/generativeai/client.py",
      "https://github.com/EinKnopfzu/GPM_with_LLM/blob/8781f9f0bde624a7b510df3c508eac7391c1bf5f/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc.py",
      "https://github.com/EinKnopfzu/GPM_with_LLM/blob/8781f9f0bde624a7b510df3c508eac7391c1bf5f/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/grpc.py",
      "https://github.com/EinKnopfzu/GPM_with_LLM/blob/8781f9f0bde624a7b510df3c508eac7391c1bf5f/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/EinKnopfzu/GPM_with_LLM/blob/8781f9f0bde624a7b510df3c508eac7391c1bf5f/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc.py",
      "https://github.com/EinKnopfzu/GPM_with_LLM/blob/8781f9f0bde624a7b510df3c508eac7391c1bf5f/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/EinKnopfzu/GPM_with_LLM/blob/8781f9f0bde624a7b510df3c508eac7391c1bf5f/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/transports/grpc.py",
      "https://github.com/EinKnopfzu/GPM_with_LLM/blob/8781f9f0bde624a7b510df3c508eac7391c1bf5f/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/transports/grpc_asyncio.py",
      "https://github.com/EinKnopfzu/GPM_with_LLM/blob/8781f9f0bde624a7b510df3c508eac7391c1bf5f/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc.py",
      "https://github.com/EinKnopfzu/GPM_with_LLM/blob/8781f9f0bde624a7b510df3c508eac7391c1bf5f/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/grpc_asyncio.py",
      "https://github.com/EinKnopfzu/GPM_with_LLM/blob/8781f9f0bde624a7b510df3c508eac7391c1bf5f/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/grpc_asyncio.py",
      "https://github.com/EinKnopfzu/GPM_with_LLM/blob/8781f9f0bde624a7b510df3c508eac7391c1bf5f/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/grpc.py",
      "https://github.com/EinKnopfzu/GPM_with_LLM/blob/8781f9f0bde624a7b510df3c508eac7391c1bf5f/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/grpc.py",
      "https://github.com/EinKnopfzu/GPM_with_LLM/blob/8781f9f0bde624a7b510df3c508eac7391c1bf5f/myenv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/EinKnopfzu/GPM_with_LLM/blob/8781f9f0bde624a7b510df3c508eac7391c1bf5f/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/base.py",
      "https://github.com/EinKnopfzu/GPM_with_LLM/blob/8781f9f0bde624a7b510df3c508eac7391c1bf5f/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/transports/rest.py",
      "https://github.com/EinKnopfzu/GPM_with_LLM/blob/8781f9f0bde624a7b510df3c508eac7391c1bf5f/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/grpc_asyncio.py",
      "https://github.com/EinKnopfzu/GPM_with_LLM/blob/8781f9f0bde624a7b510df3c508eac7391c1bf5f/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/client.py",
      "https://github.com/EinKnopfzu/GPM_with_LLM/blob/8781f9f0bde624a7b510df3c508eac7391c1bf5f/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/client.py",
      "https://github.com/EinKnopfzu/GPM_with_LLM/blob/8781f9f0bde624a7b510df3c508eac7391c1bf5f/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/client.py",
      "https://github.com/EinKnopfzu/GPM_with_LLM/blob/8781f9f0bde624a7b510df3c508eac7391c1bf5f/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/client.py",
      "https://github.com/EinKnopfzu/GPM_with_LLM/blob/8781f9f0bde624a7b510df3c508eac7391c1bf5f/myenv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/client.py",
      "https://github.com/EinKnopfzu/GPM_with_LLM/blob/8781f9f0bde624a7b510df3c508eac7391c1bf5f/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/client.py",
      "https://github.com/EinKnopfzu/GPM_with_LLM/blob/8781f9f0bde624a7b510df3c508eac7391c1bf5f/myenv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/client.py",
      "https://github.com/EinKnopfzu/GPM_with_LLM/blob/8781f9f0bde624a7b510df3c508eac7391c1bf5f/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2400377,
    "stars": 0
  },
  {
    "full_name": "kakolla/Scribo",
    "name": "Scribo",
    "description": "Lightweight email-viewing app that shows you your unread emails and stars (⭐) the ones it classifies as the most important using Gaussian Naive Bayes model. Summaries and a to-do can be generated for each email (GeminiAI) to copy and paste into your to-do list of choice (like Notion).",
    "html_url": [
      "https://github.com/kakolla/Scribo/blob/a3e355d8327a217c177f8b3f65ae91c4a2a75462/virtual/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/base.py",
      "https://github.com/kakolla/Scribo/blob/a3e355d8327a217c177f8b3f65ae91c4a2a75462/virtual/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc.py",
      "https://github.com/kakolla/Scribo/blob/a3e355d8327a217c177f8b3f65ae91c4a2a75462/virtual/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc.py",
      "https://github.com/kakolla/Scribo/blob/a3e355d8327a217c177f8b3f65ae91c4a2a75462/virtual/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/kakolla/Scribo/blob/a3e355d8327a217c177f8b3f65ae91c4a2a75462/virtual/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/grpc.py",
      "https://github.com/kakolla/Scribo/blob/a3e355d8327a217c177f8b3f65ae91c4a2a75462/virtual/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/kakolla/Scribo/blob/a3e355d8327a217c177f8b3f65ae91c4a2a75462/virtual/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/rest.py",
      "https://github.com/kakolla/Scribo/blob/a3e355d8327a217c177f8b3f65ae91c4a2a75462/virtual/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/grpc.py",
      "https://github.com/kakolla/Scribo/blob/a3e355d8327a217c177f8b3f65ae91c4a2a75462/virtual/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/client.py",
      "https://github.com/kakolla/Scribo/blob/a3e355d8327a217c177f8b3f65ae91c4a2a75462/virtual/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/client.py",
      "https://github.com/kakolla/Scribo/blob/a3e355d8327a217c177f8b3f65ae91c4a2a75462/virtual/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/client.py",
      "https://github.com/kakolla/Scribo/blob/a3e355d8327a217c177f8b3f65ae91c4a2a75462/virtual/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4475250,
    "stars": 0
  },
  {
    "full_name": "SujalNeupane9/GPT-clone",
    "name": "GPT-clone",
    "description": null,
    "html_url": [
      "https://github.com/SujalNeupane9/GPT-clone/blob/50b777a72c5ec879c6d8f6eeffa8904bf721267e/django_chatbot/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/base.py",
      "https://github.com/SujalNeupane9/GPT-clone/blob/50b777a72c5ec879c6d8f6eeffa8904bf721267e/django_chatbot/.venv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/SujalNeupane9/GPT-clone/blob/50b777a72c5ec879c6d8f6eeffa8904bf721267e/django_chatbot/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/transports/grpc_asyncio.py",
      "https://github.com/SujalNeupane9/GPT-clone/blob/50b777a72c5ec879c6d8f6eeffa8904bf721267e/django_chatbot/.venv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/transports/rest.py",
      "https://github.com/SujalNeupane9/GPT-clone/blob/50b777a72c5ec879c6d8f6eeffa8904bf721267e/django_chatbot/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/transports/rest.py",
      "https://github.com/SujalNeupane9/GPT-clone/blob/50b777a72c5ec879c6d8f6eeffa8904bf721267e/django_chatbot/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/client.py",
      "https://github.com/SujalNeupane9/GPT-clone/blob/50b777a72c5ec879c6d8f6eeffa8904bf721267e/django_chatbot/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/client.py",
      "https://github.com/SujalNeupane9/GPT-clone/blob/50b777a72c5ec879c6d8f6eeffa8904bf721267e/django_chatbot/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/client.py",
      "https://github.com/SujalNeupane9/GPT-clone/blob/50b777a72c5ec879c6d8f6eeffa8904bf721267e/django_chatbot/.venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/cache_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2781361,
    "stars": 0
  },
  {
    "full_name": "wlopezm-unal/chatbot_langchain",
    "name": "chatbot_langchain",
    "description": "Chatbot using Langchain and Gemini-pro",
    "html_url": [
      "https://github.com/wlopezm-unal/chatbot_langchain/blob/372024ba2465b94c5fdd1ebf5e646206bf811fb1/chatbot-env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/base.py",
      "https://github.com/wlopezm-unal/chatbot_langchain/blob/372024ba2465b94c5fdd1ebf5e646206bf811fb1/chatbot-env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/grpc_asyncio.py",
      "https://github.com/wlopezm-unal/chatbot_langchain/blob/372024ba2465b94c5fdd1ebf5e646206bf811fb1/chatbot-env/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/transports/rest.py",
      "https://github.com/wlopezm-unal/chatbot_langchain/blob/372024ba2465b94c5fdd1ebf5e646206bf811fb1/chatbot-env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/rest.py",
      "https://github.com/wlopezm-unal/chatbot_langchain/blob/372024ba2465b94c5fdd1ebf5e646206bf811fb1/chatbot-env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/client.py",
      "https://github.com/wlopezm-unal/chatbot_langchain/blob/372024ba2465b94c5fdd1ebf5e646206bf811fb1/chatbot-env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/client.py",
      "https://github.com/wlopezm-unal/chatbot_langchain/blob/372024ba2465b94c5fdd1ebf5e646206bf811fb1/chatbot-env/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/client.py",
      "https://github.com/wlopezm-unal/chatbot_langchain/blob/372024ba2465b94c5fdd1ebf5e646206bf811fb1/chatbot-env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/client.py",
      "https://github.com/wlopezm-unal/chatbot_langchain/blob/372024ba2465b94c5fdd1ebf5e646206bf811fb1/chatbot-env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4710349,
    "stars": 0
  },
  {
    "full_name": "wasayabasi/rag-powered-shopbot-langchain-pinecone-gemini",
    "name": "rag-powered-shopbot-langchain-pinecone-gemini",
    "description": "Shop Assistant with LangChain, RAG, GPT API, and Pinecone Database",
    "html_url": [
      "https://github.com/wasayabasi/rag-powered-shopbot-langchain-pinecone-gemini/blob/55aee734e8139535f6ee748f00ea15b179dbf593/shopenv-env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/base.py",
      "https://github.com/wasayabasi/rag-powered-shopbot-langchain-pinecone-gemini/blob/55aee734e8139535f6ee748f00ea15b179dbf593/shopenv-env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc.py",
      "https://github.com/wasayabasi/rag-powered-shopbot-langchain-pinecone-gemini/blob/55aee734e8139535f6ee748f00ea15b179dbf593/shopenv-env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc.py",
      "https://github.com/wasayabasi/rag-powered-shopbot-langchain-pinecone-gemini/blob/55aee734e8139535f6ee748f00ea15b179dbf593/shopenv-env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/wasayabasi/rag-powered-shopbot-langchain-pinecone-gemini/blob/55aee734e8139535f6ee748f00ea15b179dbf593/shopenv-env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/grpc_asyncio.py",
      "https://github.com/wasayabasi/rag-powered-shopbot-langchain-pinecone-gemini/blob/55aee734e8139535f6ee748f00ea15b179dbf593/shopenv-env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/client.py",
      "https://github.com/wasayabasi/rag-powered-shopbot-langchain-pinecone-gemini/blob/55aee734e8139535f6ee748f00ea15b179dbf593/shopenv-env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/client.py",
      "https://github.com/wasayabasi/rag-powered-shopbot-langchain-pinecone-gemini/blob/55aee734e8139535f6ee748f00ea15b179dbf593/shopenv-env/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3950793,
    "stars": 2
  },
  {
    "full_name": "Tanmay-yadav/DATA-SCIENCE-WITH-GENERATIVE-AI-AND-PROMPT-ENGINEERING",
    "name": "DATA-SCIENCE-WITH-GENERATIVE-AI-AND-PROMPT-ENGINEERING",
    "description": "Here i will be learning about data science and will be doing hands on projects and leaning all the concepts provided by upflaires  ",
    "html_url": [
      "https://github.com/Tanmay-yadav/DATA-SCIENCE-WITH-GENERATIVE-AI-AND-PROMPT-ENGINEERING/blob/e9da84c501c514df373032ba84db724951ab497e/chatbot/gemini/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/base.py",
      "https://github.com/Tanmay-yadav/DATA-SCIENCE-WITH-GENERATIVE-AI-AND-PROMPT-ENGINEERING/blob/e9da84c501c514df373032ba84db724951ab497e/chatbot/gemini/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc.py",
      "https://github.com/Tanmay-yadav/DATA-SCIENCE-WITH-GENERATIVE-AI-AND-PROMPT-ENGINEERING/blob/e9da84c501c514df373032ba84db724951ab497e/chatbot/gemini/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/Tanmay-yadav/DATA-SCIENCE-WITH-GENERATIVE-AI-AND-PROMPT-ENGINEERING/blob/e9da84c501c514df373032ba84db724951ab497e/chatbot/gemini/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/rest.py",
      "https://github.com/Tanmay-yadav/DATA-SCIENCE-WITH-GENERATIVE-AI-AND-PROMPT-ENGINEERING/blob/e9da84c501c514df373032ba84db724951ab497e/chatbot/gemini/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/grpc.py",
      "https://github.com/Tanmay-yadav/DATA-SCIENCE-WITH-GENERATIVE-AI-AND-PROMPT-ENGINEERING/blob/e9da84c501c514df373032ba84db724951ab497e/chatbot/gemini/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/transports/rest.py",
      "https://github.com/Tanmay-yadav/DATA-SCIENCE-WITH-GENERATIVE-AI-AND-PROMPT-ENGINEERING/blob/e9da84c501c514df373032ba84db724951ab497e/chatbot/gemini/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/client.py",
      "https://github.com/Tanmay-yadav/DATA-SCIENCE-WITH-GENERATIVE-AI-AND-PROMPT-ENGINEERING/blob/e9da84c501c514df373032ba84db724951ab497e/chatbot/gemini/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/client.py",
      "https://github.com/Tanmay-yadav/DATA-SCIENCE-WITH-GENERATIVE-AI-AND-PROMPT-ENGINEERING/blob/e9da84c501c514df373032ba84db724951ab497e/chatbot/gemini/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/grpc_asyncio.py",
      "https://github.com/Tanmay-yadav/DATA-SCIENCE-WITH-GENERATIVE-AI-AND-PROMPT-ENGINEERING/blob/e9da84c501c514df373032ba84db724951ab497e/chatbot/gemini/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/rest.py",
      "https://github.com/Tanmay-yadav/DATA-SCIENCE-WITH-GENERATIVE-AI-AND-PROMPT-ENGINEERING/blob/e9da84c501c514df373032ba84db724951ab497e/chatbot/gemini/Lib/site-packages/google/ai/generativelanguage_v1beta/services/cache_service/client.py",
      "https://github.com/Tanmay-yadav/DATA-SCIENCE-WITH-GENERATIVE-AI-AND-PROMPT-ENGINEERING/blob/e9da84c501c514df373032ba84db724951ab497e/chatbot/gemini/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3578545,
    "stars": 0
  },
  {
    "full_name": "nirazp1/AI-Chat-Application-master",
    "name": "AI-Chat-Application-master",
    "description": "Niraj Bot Chat is an AI-powered chat application that uses Google's Gemini AI model to provide intelligent responses to user queries. The application features a modern, responsive interface with dark mode support and the ability to manage multiple chat session",
    "html_url": [
      "https://github.com/nirazp1/AI-Chat-Application-master/blob/8620efe0010d37d116d2e3e4c0360bb4772f2276/venv/Lib/python3.12/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/base.py",
      "https://github.com/nirazp1/AI-Chat-Application-master/blob/8620efe0010d37d116d2e3e4c0360bb4772f2276/venv/Lib/python3.12/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/grpc.py",
      "https://github.com/nirazp1/AI-Chat-Application-master/blob/8620efe0010d37d116d2e3e4c0360bb4772f2276/venv/Lib/python3.12/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/rest.py",
      "https://github.com/nirazp1/AI-Chat-Application-master/blob/8620efe0010d37d116d2e3e4c0360bb4772f2276/venv/Lib/python3.12/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/grpc.py",
      "https://github.com/nirazp1/AI-Chat-Application-master/blob/8620efe0010d37d116d2e3e4c0360bb4772f2276/venv/Lib/python3.12/site-packages/google/ai/generativelanguage_v1beta/services/file_service/client.py",
      "https://github.com/nirazp1/AI-Chat-Application-master/blob/8620efe0010d37d116d2e3e4c0360bb4772f2276/venv/Lib/python3.12/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/grpc_asyncio.py",
      "https://github.com/nirazp1/AI-Chat-Application-master/blob/8620efe0010d37d116d2e3e4c0360bb4772f2276/venv/Lib/python3.12/site-packages/google/ai/generativelanguage_v1beta/services/cache_service/client.py",
      "https://github.com/nirazp1/AI-Chat-Application-master/blob/8620efe0010d37d116d2e3e4c0360bb4772f2276/venv/Lib/python3.12/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2514453,
    "stars": 0
  },
  {
    "full_name": "khaled-benahmed/RAG-System-using-LangChain-Gemini",
    "name": "RAG-System-using-LangChain-Gemini",
    "description": null,
    "html_url": [
      "https://github.com/khaled-benahmed/RAG-System-using-LangChain-Gemini/blob/c72d580ded63ccd0998d83040df6eeb40d57b134/.env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/base.py",
      "https://github.com/khaled-benahmed/RAG-System-using-LangChain-Gemini/blob/c72d580ded63ccd0998d83040df6eeb40d57b134/.env/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/base.py",
      "https://github.com/khaled-benahmed/RAG-System-using-LangChain-Gemini/blob/c72d580ded63ccd0998d83040df6eeb40d57b134/.env/Lib/site-packages/google/generativeai/client.py",
      "https://github.com/khaled-benahmed/RAG-System-using-LangChain-Gemini/blob/c72d580ded63ccd0998d83040df6eeb40d57b134/.env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc.py",
      "https://github.com/khaled-benahmed/RAG-System-using-LangChain-Gemini/blob/c72d580ded63ccd0998d83040df6eeb40d57b134/.env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/grpc.py",
      "https://github.com/khaled-benahmed/RAG-System-using-LangChain-Gemini/blob/c72d580ded63ccd0998d83040df6eeb40d57b134/.env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/khaled-benahmed/RAG-System-using-LangChain-Gemini/blob/c72d580ded63ccd0998d83040df6eeb40d57b134/.env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc.py",
      "https://github.com/khaled-benahmed/RAG-System-using-LangChain-Gemini/blob/c72d580ded63ccd0998d83040df6eeb40d57b134/.env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/khaled-benahmed/RAG-System-using-LangChain-Gemini/blob/c72d580ded63ccd0998d83040df6eeb40d57b134/.env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/transports/grpc.py",
      "https://github.com/khaled-benahmed/RAG-System-using-LangChain-Gemini/blob/c72d580ded63ccd0998d83040df6eeb40d57b134/.env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/transports/grpc_asyncio.py",
      "https://github.com/khaled-benahmed/RAG-System-using-LangChain-Gemini/blob/c72d580ded63ccd0998d83040df6eeb40d57b134/.env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/rest.py",
      "https://github.com/khaled-benahmed/RAG-System-using-LangChain-Gemini/blob/c72d580ded63ccd0998d83040df6eeb40d57b134/.env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc.py",
      "https://github.com/khaled-benahmed/RAG-System-using-LangChain-Gemini/blob/c72d580ded63ccd0998d83040df6eeb40d57b134/.env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/grpc_asyncio.py",
      "https://github.com/khaled-benahmed/RAG-System-using-LangChain-Gemini/blob/c72d580ded63ccd0998d83040df6eeb40d57b134/.env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/grpc_asyncio.py",
      "https://github.com/khaled-benahmed/RAG-System-using-LangChain-Gemini/blob/c72d580ded63ccd0998d83040df6eeb40d57b134/.env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/grpc.py",
      "https://github.com/khaled-benahmed/RAG-System-using-LangChain-Gemini/blob/c72d580ded63ccd0998d83040df6eeb40d57b134/.env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/grpc.py",
      "https://github.com/khaled-benahmed/RAG-System-using-LangChain-Gemini/blob/c72d580ded63ccd0998d83040df6eeb40d57b134/.env/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/khaled-benahmed/RAG-System-using-LangChain-Gemini/blob/c72d580ded63ccd0998d83040df6eeb40d57b134/.env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/base.py",
      "https://github.com/khaled-benahmed/RAG-System-using-LangChain-Gemini/blob/c72d580ded63ccd0998d83040df6eeb40d57b134/.env/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/transports/rest.py",
      "https://github.com/khaled-benahmed/RAG-System-using-LangChain-Gemini/blob/c72d580ded63ccd0998d83040df6eeb40d57b134/.env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/transports/rest.py",
      "https://github.com/khaled-benahmed/RAG-System-using-LangChain-Gemini/blob/c72d580ded63ccd0998d83040df6eeb40d57b134/.env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/grpc_asyncio.py",
      "https://github.com/khaled-benahmed/RAG-System-using-LangChain-Gemini/blob/c72d580ded63ccd0998d83040df6eeb40d57b134/.env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/client.py",
      "https://github.com/khaled-benahmed/RAG-System-using-LangChain-Gemini/blob/c72d580ded63ccd0998d83040df6eeb40d57b134/.env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/client.py",
      "https://github.com/khaled-benahmed/RAG-System-using-LangChain-Gemini/blob/c72d580ded63ccd0998d83040df6eeb40d57b134/.env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/client.py",
      "https://github.com/khaled-benahmed/RAG-System-using-LangChain-Gemini/blob/c72d580ded63ccd0998d83040df6eeb40d57b134/.env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/client.py",
      "https://github.com/khaled-benahmed/RAG-System-using-LangChain-Gemini/blob/c72d580ded63ccd0998d83040df6eeb40d57b134/.env/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/client.py",
      "https://github.com/khaled-benahmed/RAG-System-using-LangChain-Gemini/blob/c72d580ded63ccd0998d83040df6eeb40d57b134/.env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/client.py",
      "https://github.com/khaled-benahmed/RAG-System-using-LangChain-Gemini/blob/c72d580ded63ccd0998d83040df6eeb40d57b134/.env/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/client.py",
      "https://github.com/khaled-benahmed/RAG-System-using-LangChain-Gemini/blob/c72d580ded63ccd0998d83040df6eeb40d57b134/.env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 5235455,
    "stars": 0
  },
  {
    "full_name": "Abhiram-29/MedRaga-Testing",
    "name": "MedRaga-Testing",
    "description": "Microsoft hackathon project",
    "html_url": [
      "https://github.com/Abhiram-29/MedRaga-Testing/blob/ddab19829b0b61fdcbf69c72a520ad09176f0233/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/base.py",
      "https://github.com/Abhiram-29/MedRaga-Testing/blob/ddab19829b0b61fdcbf69c72a520ad09176f0233/myenv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/base.py",
      "https://github.com/Abhiram-29/MedRaga-Testing/blob/ddab19829b0b61fdcbf69c72a520ad09176f0233/myenv/Lib/site-packages/google/generativeai/client.py",
      "https://github.com/Abhiram-29/MedRaga-Testing/blob/ddab19829b0b61fdcbf69c72a520ad09176f0233/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc.py",
      "https://github.com/Abhiram-29/MedRaga-Testing/blob/ddab19829b0b61fdcbf69c72a520ad09176f0233/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/grpc.py",
      "https://github.com/Abhiram-29/MedRaga-Testing/blob/ddab19829b0b61fdcbf69c72a520ad09176f0233/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/Abhiram-29/MedRaga-Testing/blob/ddab19829b0b61fdcbf69c72a520ad09176f0233/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc.py",
      "https://github.com/Abhiram-29/MedRaga-Testing/blob/ddab19829b0b61fdcbf69c72a520ad09176f0233/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/Abhiram-29/MedRaga-Testing/blob/ddab19829b0b61fdcbf69c72a520ad09176f0233/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/transports/grpc.py",
      "https://github.com/Abhiram-29/MedRaga-Testing/blob/ddab19829b0b61fdcbf69c72a520ad09176f0233/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/transports/grpc_asyncio.py",
      "https://github.com/Abhiram-29/MedRaga-Testing/blob/ddab19829b0b61fdcbf69c72a520ad09176f0233/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc.py",
      "https://github.com/Abhiram-29/MedRaga-Testing/blob/ddab19829b0b61fdcbf69c72a520ad09176f0233/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/grpc_asyncio.py",
      "https://github.com/Abhiram-29/MedRaga-Testing/blob/ddab19829b0b61fdcbf69c72a520ad09176f0233/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/grpc_asyncio.py",
      "https://github.com/Abhiram-29/MedRaga-Testing/blob/ddab19829b0b61fdcbf69c72a520ad09176f0233/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/grpc.py",
      "https://github.com/Abhiram-29/MedRaga-Testing/blob/ddab19829b0b61fdcbf69c72a520ad09176f0233/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/grpc.py",
      "https://github.com/Abhiram-29/MedRaga-Testing/blob/ddab19829b0b61fdcbf69c72a520ad09176f0233/myenv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/Abhiram-29/MedRaga-Testing/blob/ddab19829b0b61fdcbf69c72a520ad09176f0233/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/transports/rest.py",
      "https://github.com/Abhiram-29/MedRaga-Testing/blob/ddab19829b0b61fdcbf69c72a520ad09176f0233/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/grpc_asyncio.py",
      "https://github.com/Abhiram-29/MedRaga-Testing/blob/ddab19829b0b61fdcbf69c72a520ad09176f0233/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/client.py",
      "https://github.com/Abhiram-29/MedRaga-Testing/blob/ddab19829b0b61fdcbf69c72a520ad09176f0233/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/client.py",
      "https://github.com/Abhiram-29/MedRaga-Testing/blob/ddab19829b0b61fdcbf69c72a520ad09176f0233/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/client.py",
      "https://github.com/Abhiram-29/MedRaga-Testing/blob/ddab19829b0b61fdcbf69c72a520ad09176f0233/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/client.py",
      "https://github.com/Abhiram-29/MedRaga-Testing/blob/ddab19829b0b61fdcbf69c72a520ad09176f0233/myenv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/client.py",
      "https://github.com/Abhiram-29/MedRaga-Testing/blob/ddab19829b0b61fdcbf69c72a520ad09176f0233/myenv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/rest.py",
      "https://github.com/Abhiram-29/MedRaga-Testing/blob/ddab19829b0b61fdcbf69c72a520ad09176f0233/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/client.py",
      "https://github.com/Abhiram-29/MedRaga-Testing/blob/ddab19829b0b61fdcbf69c72a520ad09176f0233/myenv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/client.py",
      "https://github.com/Abhiram-29/MedRaga-Testing/blob/ddab19829b0b61fdcbf69c72a520ad09176f0233/myenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4319056,
    "stars": 0
  },
  {
    "full_name": "Rokade03/AIML_HeathCare_RAG_Model",
    "name": "AIML_HeathCare_RAG_Model",
    "description": null,
    "html_url": [
      "https://github.com/Rokade03/AIML_HeathCare_RAG_Model/blob/33103e4c2fc6fba88bbfeda3b4df199fef80ebdf/RAG_HealthCare/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/base.py",
      "https://github.com/Rokade03/AIML_HeathCare_RAG_Model/blob/33103e4c2fc6fba88bbfeda3b4df199fef80ebdf/RAG_HealthCare/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/grpc.py",
      "https://github.com/Rokade03/AIML_HeathCare_RAG_Model/blob/33103e4c2fc6fba88bbfeda3b4df199fef80ebdf/RAG_HealthCare/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/rest.py",
      "https://github.com/Rokade03/AIML_HeathCare_RAG_Model/blob/33103e4c2fc6fba88bbfeda3b4df199fef80ebdf/RAG_HealthCare/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/rest.py",
      "https://github.com/Rokade03/AIML_HeathCare_RAG_Model/blob/33103e4c2fc6fba88bbfeda3b4df199fef80ebdf/RAG_HealthCare/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/grpc_asyncio.py",
      "https://github.com/Rokade03/AIML_HeathCare_RAG_Model/blob/33103e4c2fc6fba88bbfeda3b4df199fef80ebdf/RAG_HealthCare/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/grpc.py",
      "https://github.com/Rokade03/AIML_HeathCare_RAG_Model/blob/33103e4c2fc6fba88bbfeda3b4df199fef80ebdf/RAG_HealthCare/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/grpc.py",
      "https://github.com/Rokade03/AIML_HeathCare_RAG_Model/blob/33103e4c2fc6fba88bbfeda3b4df199fef80ebdf/RAG_HealthCare/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/base.py",
      "https://github.com/Rokade03/AIML_HeathCare_RAG_Model/blob/33103e4c2fc6fba88bbfeda3b4df199fef80ebdf/RAG_HealthCare/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/client.py",
      "https://github.com/Rokade03/AIML_HeathCare_RAG_Model/blob/33103e4c2fc6fba88bbfeda3b4df199fef80ebdf/RAG_HealthCare/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/client.py",
      "https://github.com/Rokade03/AIML_HeathCare_RAG_Model/blob/33103e4c2fc6fba88bbfeda3b4df199fef80ebdf/RAG_HealthCare/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/client.py",
      "https://github.com/Rokade03/AIML_HeathCare_RAG_Model/blob/33103e4c2fc6fba88bbfeda3b4df199fef80ebdf/RAG_HealthCare/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/grpc_asyncio.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3813604,
    "stars": 0
  },
  {
    "full_name": "GIDDY269/Drug_order_bot",
    "name": "Drug_order_bot",
    "description": "Langchain powered drug ordering chatbot using function calling and llama 3",
    "html_url": [
      "https://github.com/GIDDY269/Drug_order_bot/blob/40327cafebe12cfa94e2f26261a96258eeed2678/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/base.py",
      "https://github.com/GIDDY269/Drug_order_bot/blob/40327cafebe12cfa94e2f26261a96258eeed2678/venv/Lib/site-packages/google/generativeai/client.py",
      "https://github.com/GIDDY269/Drug_order_bot/blob/40327cafebe12cfa94e2f26261a96258eeed2678/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc.py",
      "https://github.com/GIDDY269/Drug_order_bot/blob/40327cafebe12cfa94e2f26261a96258eeed2678/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/grpc.py",
      "https://github.com/GIDDY269/Drug_order_bot/blob/40327cafebe12cfa94e2f26261a96258eeed2678/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/GIDDY269/Drug_order_bot/blob/40327cafebe12cfa94e2f26261a96258eeed2678/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc.py",
      "https://github.com/GIDDY269/Drug_order_bot/blob/40327cafebe12cfa94e2f26261a96258eeed2678/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/GIDDY269/Drug_order_bot/blob/40327cafebe12cfa94e2f26261a96258eeed2678/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/transports/grpc.py",
      "https://github.com/GIDDY269/Drug_order_bot/blob/40327cafebe12cfa94e2f26261a96258eeed2678/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/transports/grpc_asyncio.py",
      "https://github.com/GIDDY269/Drug_order_bot/blob/40327cafebe12cfa94e2f26261a96258eeed2678/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc.py",
      "https://github.com/GIDDY269/Drug_order_bot/blob/40327cafebe12cfa94e2f26261a96258eeed2678/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/grpc_asyncio.py",
      "https://github.com/GIDDY269/Drug_order_bot/blob/40327cafebe12cfa94e2f26261a96258eeed2678/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/grpc_asyncio.py",
      "https://github.com/GIDDY269/Drug_order_bot/blob/40327cafebe12cfa94e2f26261a96258eeed2678/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/GIDDY269/Drug_order_bot/blob/40327cafebe12cfa94e2f26261a96258eeed2678/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/grpc.py",
      "https://github.com/GIDDY269/Drug_order_bot/blob/40327cafebe12cfa94e2f26261a96258eeed2678/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/grpc.py",
      "https://github.com/GIDDY269/Drug_order_bot/blob/40327cafebe12cfa94e2f26261a96258eeed2678/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/GIDDY269/Drug_order_bot/blob/40327cafebe12cfa94e2f26261a96258eeed2678/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/grpc_asyncio.py",
      "https://github.com/GIDDY269/Drug_order_bot/blob/40327cafebe12cfa94e2f26261a96258eeed2678/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/client.py",
      "https://github.com/GIDDY269/Drug_order_bot/blob/40327cafebe12cfa94e2f26261a96258eeed2678/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/client.py",
      "https://github.com/GIDDY269/Drug_order_bot/blob/40327cafebe12cfa94e2f26261a96258eeed2678/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/client.py",
      "https://github.com/GIDDY269/Drug_order_bot/blob/40327cafebe12cfa94e2f26261a96258eeed2678/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/client.py",
      "https://github.com/GIDDY269/Drug_order_bot/blob/40327cafebe12cfa94e2f26261a96258eeed2678/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/client.py",
      "https://github.com/GIDDY269/Drug_order_bot/blob/40327cafebe12cfa94e2f26261a96258eeed2678/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/client.py",
      "https://github.com/GIDDY269/Drug_order_bot/blob/40327cafebe12cfa94e2f26261a96258eeed2678/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/client.py",
      "https://github.com/GIDDY269/Drug_order_bot/blob/40327cafebe12cfa94e2f26261a96258eeed2678/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 6270249,
    "stars": 4
  },
  {
    "full_name": "Nithish-Sri-Ram/Gemini_chat_bot",
    "name": "Gemini_chat_bot",
    "description": "This is my first project on genAi. Constructed a straightforward application akin to ChatGPT using Streamlit and Gemini.",
    "html_url": [
      "https://github.com/Nithish-Sri-Ram/Gemini_chat_bot/blob/fb170dd74bd3df6af9b39cb96b4e39e999d5ebff/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/base.py",
      "https://github.com/Nithish-Sri-Ram/Gemini_chat_bot/blob/fb170dd74bd3df6af9b39cb96b4e39e999d5ebff/venv/Lib/site-packages/google/generativeai/client.py",
      "https://github.com/Nithish-Sri-Ram/Gemini_chat_bot/blob/fb170dd74bd3df6af9b39cb96b4e39e999d5ebff/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc.py",
      "https://github.com/Nithish-Sri-Ram/Gemini_chat_bot/blob/fb170dd74bd3df6af9b39cb96b4e39e999d5ebff/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/grpc.py",
      "https://github.com/Nithish-Sri-Ram/Gemini_chat_bot/blob/fb170dd74bd3df6af9b39cb96b4e39e999d5ebff/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/Nithish-Sri-Ram/Gemini_chat_bot/blob/fb170dd74bd3df6af9b39cb96b4e39e999d5ebff/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc.py",
      "https://github.com/Nithish-Sri-Ram/Gemini_chat_bot/blob/fb170dd74bd3df6af9b39cb96b4e39e999d5ebff/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/Nithish-Sri-Ram/Gemini_chat_bot/blob/fb170dd74bd3df6af9b39cb96b4e39e999d5ebff/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/transports/grpc.py",
      "https://github.com/Nithish-Sri-Ram/Gemini_chat_bot/blob/fb170dd74bd3df6af9b39cb96b4e39e999d5ebff/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/transports/grpc_asyncio.py",
      "https://github.com/Nithish-Sri-Ram/Gemini_chat_bot/blob/fb170dd74bd3df6af9b39cb96b4e39e999d5ebff/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc.py",
      "https://github.com/Nithish-Sri-Ram/Gemini_chat_bot/blob/fb170dd74bd3df6af9b39cb96b4e39e999d5ebff/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/grpc_asyncio.py",
      "https://github.com/Nithish-Sri-Ram/Gemini_chat_bot/blob/fb170dd74bd3df6af9b39cb96b4e39e999d5ebff/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/grpc_asyncio.py",
      "https://github.com/Nithish-Sri-Ram/Gemini_chat_bot/blob/fb170dd74bd3df6af9b39cb96b4e39e999d5ebff/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/grpc.py",
      "https://github.com/Nithish-Sri-Ram/Gemini_chat_bot/blob/fb170dd74bd3df6af9b39cb96b4e39e999d5ebff/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/grpc.py",
      "https://github.com/Nithish-Sri-Ram/Gemini_chat_bot/blob/fb170dd74bd3df6af9b39cb96b4e39e999d5ebff/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/Nithish-Sri-Ram/Gemini_chat_bot/blob/fb170dd74bd3df6af9b39cb96b4e39e999d5ebff/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/grpc_asyncio.py",
      "https://github.com/Nithish-Sri-Ram/Gemini_chat_bot/blob/fb170dd74bd3df6af9b39cb96b4e39e999d5ebff/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/client.py",
      "https://github.com/Nithish-Sri-Ram/Gemini_chat_bot/blob/fb170dd74bd3df6af9b39cb96b4e39e999d5ebff/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/client.py",
      "https://github.com/Nithish-Sri-Ram/Gemini_chat_bot/blob/fb170dd74bd3df6af9b39cb96b4e39e999d5ebff/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/client.py",
      "https://github.com/Nithish-Sri-Ram/Gemini_chat_bot/blob/fb170dd74bd3df6af9b39cb96b4e39e999d5ebff/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/client.py",
      "https://github.com/Nithish-Sri-Ram/Gemini_chat_bot/blob/fb170dd74bd3df6af9b39cb96b4e39e999d5ebff/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/client.py",
      "https://github.com/Nithish-Sri-Ram/Gemini_chat_bot/blob/fb170dd74bd3df6af9b39cb96b4e39e999d5ebff/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/client.py",
      "https://github.com/Nithish-Sri-Ram/Gemini_chat_bot/blob/fb170dd74bd3df6af9b39cb96b4e39e999d5ebff/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/client.py",
      "https://github.com/Nithish-Sri-Ram/Gemini_chat_bot/blob/fb170dd74bd3df6af9b39cb96b4e39e999d5ebff/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3518028,
    "stars": 0
  },
  {
    "full_name": "RiH-137/Chintu-GPT",
    "name": "Chintu-GPT",
    "description": "A Gemini based Large language model.",
    "html_url": [
      "https://github.com/RiH-137/Chintu-GPT/blob/8f723c73954709fcbb0c6d0adefcb578f9e74a6e/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/base.py",
      "https://github.com/RiH-137/Chintu-GPT/blob/8f723c73954709fcbb0c6d0adefcb578f9e74a6e/venv/Lib/site-packages/google/generativeai/client.py",
      "https://github.com/RiH-137/Chintu-GPT/blob/8f723c73954709fcbb0c6d0adefcb578f9e74a6e/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc.py",
      "https://github.com/RiH-137/Chintu-GPT/blob/8f723c73954709fcbb0c6d0adefcb578f9e74a6e/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/grpc.py",
      "https://github.com/RiH-137/Chintu-GPT/blob/8f723c73954709fcbb0c6d0adefcb578f9e74a6e/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/RiH-137/Chintu-GPT/blob/8f723c73954709fcbb0c6d0adefcb578f9e74a6e/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc.py",
      "https://github.com/RiH-137/Chintu-GPT/blob/8f723c73954709fcbb0c6d0adefcb578f9e74a6e/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/RiH-137/Chintu-GPT/blob/8f723c73954709fcbb0c6d0adefcb578f9e74a6e/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/transports/grpc.py",
      "https://github.com/RiH-137/Chintu-GPT/blob/8f723c73954709fcbb0c6d0adefcb578f9e74a6e/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/transports/grpc_asyncio.py",
      "https://github.com/RiH-137/Chintu-GPT/blob/8f723c73954709fcbb0c6d0adefcb578f9e74a6e/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc.py",
      "https://github.com/RiH-137/Chintu-GPT/blob/8f723c73954709fcbb0c6d0adefcb578f9e74a6e/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/grpc_asyncio.py",
      "https://github.com/RiH-137/Chintu-GPT/blob/8f723c73954709fcbb0c6d0adefcb578f9e74a6e/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/grpc_asyncio.py",
      "https://github.com/RiH-137/Chintu-GPT/blob/8f723c73954709fcbb0c6d0adefcb578f9e74a6e/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/grpc.py",
      "https://github.com/RiH-137/Chintu-GPT/blob/8f723c73954709fcbb0c6d0adefcb578f9e74a6e/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/grpc.py",
      "https://github.com/RiH-137/Chintu-GPT/blob/8f723c73954709fcbb0c6d0adefcb578f9e74a6e/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/RiH-137/Chintu-GPT/blob/8f723c73954709fcbb0c6d0adefcb578f9e74a6e/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/grpc_asyncio.py",
      "https://github.com/RiH-137/Chintu-GPT/blob/8f723c73954709fcbb0c6d0adefcb578f9e74a6e/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/client.py",
      "https://github.com/RiH-137/Chintu-GPT/blob/8f723c73954709fcbb0c6d0adefcb578f9e74a6e/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/client.py",
      "https://github.com/RiH-137/Chintu-GPT/blob/8f723c73954709fcbb0c6d0adefcb578f9e74a6e/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/client.py",
      "https://github.com/RiH-137/Chintu-GPT/blob/8f723c73954709fcbb0c6d0adefcb578f9e74a6e/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/client.py",
      "https://github.com/RiH-137/Chintu-GPT/blob/8f723c73954709fcbb0c6d0adefcb578f9e74a6e/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/client.py",
      "https://github.com/RiH-137/Chintu-GPT/blob/8f723c73954709fcbb0c6d0adefcb578f9e74a6e/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/client.py",
      "https://github.com/RiH-137/Chintu-GPT/blob/8f723c73954709fcbb0c6d0adefcb578f9e74a6e/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/client.py",
      "https://github.com/RiH-137/Chintu-GPT/blob/8f723c73954709fcbb0c6d0adefcb578f9e74a6e/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4002576,
    "stars": 0
  },
  {
    "full_name": "RiH-137/Chintu-GPT-V2",
    "name": "Chintu-GPT-V2",
    "description": "A Gemini based Large language model.",
    "html_url": [
      "https://github.com/RiH-137/Chintu-GPT-V2/blob/7dadb589fb36ccdc40be76fa50ed18b2d073ac44/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/base.py",
      "https://github.com/RiH-137/Chintu-GPT-V2/blob/7dadb589fb36ccdc40be76fa50ed18b2d073ac44/venv/Lib/site-packages/google/generativeai/client.py",
      "https://github.com/RiH-137/Chintu-GPT-V2/blob/7dadb589fb36ccdc40be76fa50ed18b2d073ac44/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc.py",
      "https://github.com/RiH-137/Chintu-GPT-V2/blob/7dadb589fb36ccdc40be76fa50ed18b2d073ac44/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/grpc.py",
      "https://github.com/RiH-137/Chintu-GPT-V2/blob/7dadb589fb36ccdc40be76fa50ed18b2d073ac44/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/RiH-137/Chintu-GPT-V2/blob/7dadb589fb36ccdc40be76fa50ed18b2d073ac44/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc.py",
      "https://github.com/RiH-137/Chintu-GPT-V2/blob/7dadb589fb36ccdc40be76fa50ed18b2d073ac44/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/RiH-137/Chintu-GPT-V2/blob/7dadb589fb36ccdc40be76fa50ed18b2d073ac44/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/transports/grpc.py",
      "https://github.com/RiH-137/Chintu-GPT-V2/blob/7dadb589fb36ccdc40be76fa50ed18b2d073ac44/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/transports/grpc_asyncio.py",
      "https://github.com/RiH-137/Chintu-GPT-V2/blob/7dadb589fb36ccdc40be76fa50ed18b2d073ac44/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc.py",
      "https://github.com/RiH-137/Chintu-GPT-V2/blob/7dadb589fb36ccdc40be76fa50ed18b2d073ac44/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/grpc_asyncio.py",
      "https://github.com/RiH-137/Chintu-GPT-V2/blob/7dadb589fb36ccdc40be76fa50ed18b2d073ac44/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/grpc_asyncio.py",
      "https://github.com/RiH-137/Chintu-GPT-V2/blob/7dadb589fb36ccdc40be76fa50ed18b2d073ac44/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/grpc.py",
      "https://github.com/RiH-137/Chintu-GPT-V2/blob/7dadb589fb36ccdc40be76fa50ed18b2d073ac44/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/grpc.py",
      "https://github.com/RiH-137/Chintu-GPT-V2/blob/7dadb589fb36ccdc40be76fa50ed18b2d073ac44/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/RiH-137/Chintu-GPT-V2/blob/7dadb589fb36ccdc40be76fa50ed18b2d073ac44/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/grpc_asyncio.py",
      "https://github.com/RiH-137/Chintu-GPT-V2/blob/7dadb589fb36ccdc40be76fa50ed18b2d073ac44/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/client.py",
      "https://github.com/RiH-137/Chintu-GPT-V2/blob/7dadb589fb36ccdc40be76fa50ed18b2d073ac44/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/client.py",
      "https://github.com/RiH-137/Chintu-GPT-V2/blob/7dadb589fb36ccdc40be76fa50ed18b2d073ac44/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/client.py",
      "https://github.com/RiH-137/Chintu-GPT-V2/blob/7dadb589fb36ccdc40be76fa50ed18b2d073ac44/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/client.py",
      "https://github.com/RiH-137/Chintu-GPT-V2/blob/7dadb589fb36ccdc40be76fa50ed18b2d073ac44/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/client.py",
      "https://github.com/RiH-137/Chintu-GPT-V2/blob/7dadb589fb36ccdc40be76fa50ed18b2d073ac44/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/client.py",
      "https://github.com/RiH-137/Chintu-GPT-V2/blob/7dadb589fb36ccdc40be76fa50ed18b2d073ac44/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/client.py",
      "https://github.com/RiH-137/Chintu-GPT-V2/blob/7dadb589fb36ccdc40be76fa50ed18b2d073ac44/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4002614,
    "stars": 0
  },
  {
    "full_name": "RiH-137/PDF-se-Padhai",
    "name": "PDF-se-Padhai",
    "description": "A Gemini based Large language model.",
    "html_url": [
      "https://github.com/RiH-137/PDF-se-Padhai/blob/b487a0b3041d25742d35e628c2d6968a72e0463b/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/base.py",
      "https://github.com/RiH-137/PDF-se-Padhai/blob/b487a0b3041d25742d35e628c2d6968a72e0463b/venv/Lib/site-packages/google/generativeai/client.py",
      "https://github.com/RiH-137/PDF-se-Padhai/blob/b487a0b3041d25742d35e628c2d6968a72e0463b/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc.py",
      "https://github.com/RiH-137/PDF-se-Padhai/blob/b487a0b3041d25742d35e628c2d6968a72e0463b/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/grpc.py",
      "https://github.com/RiH-137/PDF-se-Padhai/blob/b487a0b3041d25742d35e628c2d6968a72e0463b/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/RiH-137/PDF-se-Padhai/blob/b487a0b3041d25742d35e628c2d6968a72e0463b/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc.py",
      "https://github.com/RiH-137/PDF-se-Padhai/blob/b487a0b3041d25742d35e628c2d6968a72e0463b/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/RiH-137/PDF-se-Padhai/blob/b487a0b3041d25742d35e628c2d6968a72e0463b/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/transports/grpc.py",
      "https://github.com/RiH-137/PDF-se-Padhai/blob/b487a0b3041d25742d35e628c2d6968a72e0463b/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/transports/grpc_asyncio.py",
      "https://github.com/RiH-137/PDF-se-Padhai/blob/b487a0b3041d25742d35e628c2d6968a72e0463b/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc.py",
      "https://github.com/RiH-137/PDF-se-Padhai/blob/b487a0b3041d25742d35e628c2d6968a72e0463b/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/grpc_asyncio.py",
      "https://github.com/RiH-137/PDF-se-Padhai/blob/b487a0b3041d25742d35e628c2d6968a72e0463b/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/grpc_asyncio.py",
      "https://github.com/RiH-137/PDF-se-Padhai/blob/b487a0b3041d25742d35e628c2d6968a72e0463b/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/grpc.py",
      "https://github.com/RiH-137/PDF-se-Padhai/blob/b487a0b3041d25742d35e628c2d6968a72e0463b/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/grpc.py",
      "https://github.com/RiH-137/PDF-se-Padhai/blob/b487a0b3041d25742d35e628c2d6968a72e0463b/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/RiH-137/PDF-se-Padhai/blob/b487a0b3041d25742d35e628c2d6968a72e0463b/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/grpc_asyncio.py",
      "https://github.com/RiH-137/PDF-se-Padhai/blob/b487a0b3041d25742d35e628c2d6968a72e0463b/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/client.py",
      "https://github.com/RiH-137/PDF-se-Padhai/blob/b487a0b3041d25742d35e628c2d6968a72e0463b/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/client.py",
      "https://github.com/RiH-137/PDF-se-Padhai/blob/b487a0b3041d25742d35e628c2d6968a72e0463b/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/client.py",
      "https://github.com/RiH-137/PDF-se-Padhai/blob/b487a0b3041d25742d35e628c2d6968a72e0463b/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/client.py",
      "https://github.com/RiH-137/PDF-se-Padhai/blob/b487a0b3041d25742d35e628c2d6968a72e0463b/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/client.py",
      "https://github.com/RiH-137/PDF-se-Padhai/blob/b487a0b3041d25742d35e628c2d6968a72e0463b/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/client.py",
      "https://github.com/RiH-137/PDF-se-Padhai/blob/b487a0b3041d25742d35e628c2d6968a72e0463b/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/client.py",
      "https://github.com/RiH-137/PDF-se-Padhai/blob/b487a0b3041d25742d35e628c2d6968a72e0463b/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4394982,
    "stars": 0
  },
  {
    "full_name": "RiH-137/Invoice-Xtractor",
    "name": "Invoice-Xtractor",
    "description": "A Gemini based Large language model.                                                                          IN THIS PROJECT we will use prompt to make a model and that model is itself a model  which is trained on invoices and it will generate the response  based on the input prompt and the image of the invoice  ",
    "html_url": [
      "https://github.com/RiH-137/Invoice-Xtractor/blob/819204eca5bd17a7fae09f258e444cd7a77af7cf/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/base.py",
      "https://github.com/RiH-137/Invoice-Xtractor/blob/819204eca5bd17a7fae09f258e444cd7a77af7cf/venv/Lib/site-packages/google/generativeai/client.py",
      "https://github.com/RiH-137/Invoice-Xtractor/blob/819204eca5bd17a7fae09f258e444cd7a77af7cf/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc.py",
      "https://github.com/RiH-137/Invoice-Xtractor/blob/819204eca5bd17a7fae09f258e444cd7a77af7cf/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/grpc.py",
      "https://github.com/RiH-137/Invoice-Xtractor/blob/819204eca5bd17a7fae09f258e444cd7a77af7cf/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/RiH-137/Invoice-Xtractor/blob/819204eca5bd17a7fae09f258e444cd7a77af7cf/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc.py",
      "https://github.com/RiH-137/Invoice-Xtractor/blob/819204eca5bd17a7fae09f258e444cd7a77af7cf/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/RiH-137/Invoice-Xtractor/blob/819204eca5bd17a7fae09f258e444cd7a77af7cf/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/transports/grpc.py",
      "https://github.com/RiH-137/Invoice-Xtractor/blob/819204eca5bd17a7fae09f258e444cd7a77af7cf/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/transports/grpc_asyncio.py",
      "https://github.com/RiH-137/Invoice-Xtractor/blob/819204eca5bd17a7fae09f258e444cd7a77af7cf/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc.py",
      "https://github.com/RiH-137/Invoice-Xtractor/blob/819204eca5bd17a7fae09f258e444cd7a77af7cf/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/grpc_asyncio.py",
      "https://github.com/RiH-137/Invoice-Xtractor/blob/819204eca5bd17a7fae09f258e444cd7a77af7cf/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/grpc_asyncio.py",
      "https://github.com/RiH-137/Invoice-Xtractor/blob/819204eca5bd17a7fae09f258e444cd7a77af7cf/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/grpc.py",
      "https://github.com/RiH-137/Invoice-Xtractor/blob/819204eca5bd17a7fae09f258e444cd7a77af7cf/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/grpc.py",
      "https://github.com/RiH-137/Invoice-Xtractor/blob/819204eca5bd17a7fae09f258e444cd7a77af7cf/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/RiH-137/Invoice-Xtractor/blob/819204eca5bd17a7fae09f258e444cd7a77af7cf/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/grpc_asyncio.py",
      "https://github.com/RiH-137/Invoice-Xtractor/blob/819204eca5bd17a7fae09f258e444cd7a77af7cf/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/client.py",
      "https://github.com/RiH-137/Invoice-Xtractor/blob/819204eca5bd17a7fae09f258e444cd7a77af7cf/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/client.py",
      "https://github.com/RiH-137/Invoice-Xtractor/blob/819204eca5bd17a7fae09f258e444cd7a77af7cf/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/client.py",
      "https://github.com/RiH-137/Invoice-Xtractor/blob/819204eca5bd17a7fae09f258e444cd7a77af7cf/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/client.py",
      "https://github.com/RiH-137/Invoice-Xtractor/blob/819204eca5bd17a7fae09f258e444cd7a77af7cf/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/client.py",
      "https://github.com/RiH-137/Invoice-Xtractor/blob/819204eca5bd17a7fae09f258e444cd7a77af7cf/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/client.py",
      "https://github.com/RiH-137/Invoice-Xtractor/blob/819204eca5bd17a7fae09f258e444cd7a77af7cf/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/client.py",
      "https://github.com/RiH-137/Invoice-Xtractor/blob/819204eca5bd17a7fae09f258e444cd7a77af7cf/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 5145018,
    "stars": 0
  },
  {
    "full_name": "RiH-137/Mera-GPT",
    "name": "Mera-GPT",
    "description": "A Gemini based Large language model.",
    "html_url": [
      "https://github.com/RiH-137/Mera-GPT/blob/af4998c156deb3858d77cc4f7ca3e52b16a28f5b/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/base.py",
      "https://github.com/RiH-137/Mera-GPT/blob/af4998c156deb3858d77cc4f7ca3e52b16a28f5b/venv/Lib/site-packages/google/generativeai/client.py",
      "https://github.com/RiH-137/Mera-GPT/blob/af4998c156deb3858d77cc4f7ca3e52b16a28f5b/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc.py",
      "https://github.com/RiH-137/Mera-GPT/blob/af4998c156deb3858d77cc4f7ca3e52b16a28f5b/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/grpc.py",
      "https://github.com/RiH-137/Mera-GPT/blob/af4998c156deb3858d77cc4f7ca3e52b16a28f5b/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/RiH-137/Mera-GPT/blob/af4998c156deb3858d77cc4f7ca3e52b16a28f5b/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc.py",
      "https://github.com/RiH-137/Mera-GPT/blob/af4998c156deb3858d77cc4f7ca3e52b16a28f5b/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/RiH-137/Mera-GPT/blob/af4998c156deb3858d77cc4f7ca3e52b16a28f5b/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/transports/grpc.py",
      "https://github.com/RiH-137/Mera-GPT/blob/af4998c156deb3858d77cc4f7ca3e52b16a28f5b/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/transports/grpc_asyncio.py",
      "https://github.com/RiH-137/Mera-GPT/blob/af4998c156deb3858d77cc4f7ca3e52b16a28f5b/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc.py",
      "https://github.com/RiH-137/Mera-GPT/blob/af4998c156deb3858d77cc4f7ca3e52b16a28f5b/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/grpc_asyncio.py",
      "https://github.com/RiH-137/Mera-GPT/blob/af4998c156deb3858d77cc4f7ca3e52b16a28f5b/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/grpc_asyncio.py",
      "https://github.com/RiH-137/Mera-GPT/blob/af4998c156deb3858d77cc4f7ca3e52b16a28f5b/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/grpc.py",
      "https://github.com/RiH-137/Mera-GPT/blob/af4998c156deb3858d77cc4f7ca3e52b16a28f5b/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/grpc.py",
      "https://github.com/RiH-137/Mera-GPT/blob/af4998c156deb3858d77cc4f7ca3e52b16a28f5b/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/RiH-137/Mera-GPT/blob/af4998c156deb3858d77cc4f7ca3e52b16a28f5b/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/grpc_asyncio.py",
      "https://github.com/RiH-137/Mera-GPT/blob/af4998c156deb3858d77cc4f7ca3e52b16a28f5b/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/client.py",
      "https://github.com/RiH-137/Mera-GPT/blob/af4998c156deb3858d77cc4f7ca3e52b16a28f5b/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/client.py",
      "https://github.com/RiH-137/Mera-GPT/blob/af4998c156deb3858d77cc4f7ca3e52b16a28f5b/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/client.py",
      "https://github.com/RiH-137/Mera-GPT/blob/af4998c156deb3858d77cc4f7ca3e52b16a28f5b/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/client.py",
      "https://github.com/RiH-137/Mera-GPT/blob/af4998c156deb3858d77cc4f7ca3e52b16a28f5b/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/client.py",
      "https://github.com/RiH-137/Mera-GPT/blob/af4998c156deb3858d77cc4f7ca3e52b16a28f5b/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/client.py",
      "https://github.com/RiH-137/Mera-GPT/blob/af4998c156deb3858d77cc4f7ca3e52b16a28f5b/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/client.py",
      "https://github.com/RiH-137/Mera-GPT/blob/af4998c156deb3858d77cc4f7ca3e52b16a28f5b/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4002558,
    "stars": 0
  },
  {
    "full_name": "luphone04/MultiInvoice",
    "name": "MultiInvoice",
    "description": "the Gemini Pro Vision model to extract information from invoices",
    "html_url": [
      "https://github.com/luphone04/MultiInvoice/blob/f8236c970bb43981b954b1e174979867825a5775/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/base.py",
      "https://github.com/luphone04/MultiInvoice/blob/f8236c970bb43981b954b1e174979867825a5775/venv/Lib/site-packages/google/generativeai/client.py",
      "https://github.com/luphone04/MultiInvoice/blob/f8236c970bb43981b954b1e174979867825a5775/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc.py",
      "https://github.com/luphone04/MultiInvoice/blob/f8236c970bb43981b954b1e174979867825a5775/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/grpc.py",
      "https://github.com/luphone04/MultiInvoice/blob/f8236c970bb43981b954b1e174979867825a5775/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/luphone04/MultiInvoice/blob/f8236c970bb43981b954b1e174979867825a5775/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc.py",
      "https://github.com/luphone04/MultiInvoice/blob/f8236c970bb43981b954b1e174979867825a5775/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/luphone04/MultiInvoice/blob/f8236c970bb43981b954b1e174979867825a5775/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/transports/grpc.py",
      "https://github.com/luphone04/MultiInvoice/blob/f8236c970bb43981b954b1e174979867825a5775/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/transports/grpc_asyncio.py",
      "https://github.com/luphone04/MultiInvoice/blob/f8236c970bb43981b954b1e174979867825a5775/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc.py",
      "https://github.com/luphone04/MultiInvoice/blob/f8236c970bb43981b954b1e174979867825a5775/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/grpc_asyncio.py",
      "https://github.com/luphone04/MultiInvoice/blob/f8236c970bb43981b954b1e174979867825a5775/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/grpc_asyncio.py",
      "https://github.com/luphone04/MultiInvoice/blob/f8236c970bb43981b954b1e174979867825a5775/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/grpc.py",
      "https://github.com/luphone04/MultiInvoice/blob/f8236c970bb43981b954b1e174979867825a5775/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/grpc.py",
      "https://github.com/luphone04/MultiInvoice/blob/f8236c970bb43981b954b1e174979867825a5775/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/luphone04/MultiInvoice/blob/f8236c970bb43981b954b1e174979867825a5775/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/grpc_asyncio.py",
      "https://github.com/luphone04/MultiInvoice/blob/f8236c970bb43981b954b1e174979867825a5775/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/client.py",
      "https://github.com/luphone04/MultiInvoice/blob/f8236c970bb43981b954b1e174979867825a5775/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/client.py",
      "https://github.com/luphone04/MultiInvoice/blob/f8236c970bb43981b954b1e174979867825a5775/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/client.py",
      "https://github.com/luphone04/MultiInvoice/blob/f8236c970bb43981b954b1e174979867825a5775/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/client.py",
      "https://github.com/luphone04/MultiInvoice/blob/f8236c970bb43981b954b1e174979867825a5775/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/client.py",
      "https://github.com/luphone04/MultiInvoice/blob/f8236c970bb43981b954b1e174979867825a5775/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/client.py",
      "https://github.com/luphone04/MultiInvoice/blob/f8236c970bb43981b954b1e174979867825a5775/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/client.py",
      "https://github.com/luphone04/MultiInvoice/blob/f8236c970bb43981b954b1e174979867825a5775/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4756494,
    "stars": 0
  },
  {
    "full_name": "MohammedMusharraf11/Gemini-InvoiceExtractor",
    "name": "Gemini-InvoiceExtractor",
    "description": null,
    "html_url": [
      "https://github.com/MohammedMusharraf11/Gemini-InvoiceExtractor/blob/19878eb58087fa7ff549932de20d5ceaac8fd697/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/base.py",
      "https://github.com/MohammedMusharraf11/Gemini-InvoiceExtractor/blob/19878eb58087fa7ff549932de20d5ceaac8fd697/venv/Lib/site-packages/google/generativeai/client.py",
      "https://github.com/MohammedMusharraf11/Gemini-InvoiceExtractor/blob/19878eb58087fa7ff549932de20d5ceaac8fd697/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc.py",
      "https://github.com/MohammedMusharraf11/Gemini-InvoiceExtractor/blob/19878eb58087fa7ff549932de20d5ceaac8fd697/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/grpc.py",
      "https://github.com/MohammedMusharraf11/Gemini-InvoiceExtractor/blob/19878eb58087fa7ff549932de20d5ceaac8fd697/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/MohammedMusharraf11/Gemini-InvoiceExtractor/blob/19878eb58087fa7ff549932de20d5ceaac8fd697/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc.py",
      "https://github.com/MohammedMusharraf11/Gemini-InvoiceExtractor/blob/19878eb58087fa7ff549932de20d5ceaac8fd697/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/MohammedMusharraf11/Gemini-InvoiceExtractor/blob/19878eb58087fa7ff549932de20d5ceaac8fd697/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/transports/grpc.py",
      "https://github.com/MohammedMusharraf11/Gemini-InvoiceExtractor/blob/19878eb58087fa7ff549932de20d5ceaac8fd697/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/transports/grpc_asyncio.py",
      "https://github.com/MohammedMusharraf11/Gemini-InvoiceExtractor/blob/19878eb58087fa7ff549932de20d5ceaac8fd697/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc.py",
      "https://github.com/MohammedMusharraf11/Gemini-InvoiceExtractor/blob/19878eb58087fa7ff549932de20d5ceaac8fd697/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/grpc_asyncio.py",
      "https://github.com/MohammedMusharraf11/Gemini-InvoiceExtractor/blob/19878eb58087fa7ff549932de20d5ceaac8fd697/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/grpc_asyncio.py",
      "https://github.com/MohammedMusharraf11/Gemini-InvoiceExtractor/blob/19878eb58087fa7ff549932de20d5ceaac8fd697/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/grpc.py",
      "https://github.com/MohammedMusharraf11/Gemini-InvoiceExtractor/blob/19878eb58087fa7ff549932de20d5ceaac8fd697/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/grpc.py",
      "https://github.com/MohammedMusharraf11/Gemini-InvoiceExtractor/blob/19878eb58087fa7ff549932de20d5ceaac8fd697/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/MohammedMusharraf11/Gemini-InvoiceExtractor/blob/19878eb58087fa7ff549932de20d5ceaac8fd697/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/grpc_asyncio.py",
      "https://github.com/MohammedMusharraf11/Gemini-InvoiceExtractor/blob/19878eb58087fa7ff549932de20d5ceaac8fd697/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/client.py",
      "https://github.com/MohammedMusharraf11/Gemini-InvoiceExtractor/blob/19878eb58087fa7ff549932de20d5ceaac8fd697/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/client.py",
      "https://github.com/MohammedMusharraf11/Gemini-InvoiceExtractor/blob/19878eb58087fa7ff549932de20d5ceaac8fd697/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/client.py",
      "https://github.com/MohammedMusharraf11/Gemini-InvoiceExtractor/blob/19878eb58087fa7ff549932de20d5ceaac8fd697/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/client.py",
      "https://github.com/MohammedMusharraf11/Gemini-InvoiceExtractor/blob/19878eb58087fa7ff549932de20d5ceaac8fd697/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/client.py",
      "https://github.com/MohammedMusharraf11/Gemini-InvoiceExtractor/blob/19878eb58087fa7ff549932de20d5ceaac8fd697/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/client.py",
      "https://github.com/MohammedMusharraf11/Gemini-InvoiceExtractor/blob/19878eb58087fa7ff549932de20d5ceaac8fd697/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/client.py",
      "https://github.com/MohammedMusharraf11/Gemini-InvoiceExtractor/blob/19878eb58087fa7ff549932de20d5ceaac8fd697/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4016215,
    "stars": 0
  },
  {
    "full_name": "NitinYadav1511/PDF-ChatBot",
    "name": "PDF-ChatBot",
    "description": "Generative AI Mini Project using Google Gemini API",
    "html_url": [
      "https://github.com/NitinYadav1511/PDF-ChatBot/blob/2d45cbe4ea89eda32c6bbfadc56742aaeffc36cb/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/base.py",
      "https://github.com/NitinYadav1511/PDF-ChatBot/blob/2d45cbe4ea89eda32c6bbfadc56742aaeffc36cb/venv/Lib/site-packages/google/generativeai/client.py",
      "https://github.com/NitinYadav1511/PDF-ChatBot/blob/2d45cbe4ea89eda32c6bbfadc56742aaeffc36cb/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc.py",
      "https://github.com/NitinYadav1511/PDF-ChatBot/blob/2d45cbe4ea89eda32c6bbfadc56742aaeffc36cb/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/grpc.py",
      "https://github.com/NitinYadav1511/PDF-ChatBot/blob/2d45cbe4ea89eda32c6bbfadc56742aaeffc36cb/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/NitinYadav1511/PDF-ChatBot/blob/2d45cbe4ea89eda32c6bbfadc56742aaeffc36cb/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc.py",
      "https://github.com/NitinYadav1511/PDF-ChatBot/blob/2d45cbe4ea89eda32c6bbfadc56742aaeffc36cb/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/NitinYadav1511/PDF-ChatBot/blob/2d45cbe4ea89eda32c6bbfadc56742aaeffc36cb/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/transports/grpc.py",
      "https://github.com/NitinYadav1511/PDF-ChatBot/blob/2d45cbe4ea89eda32c6bbfadc56742aaeffc36cb/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/transports/grpc_asyncio.py",
      "https://github.com/NitinYadav1511/PDF-ChatBot/blob/2d45cbe4ea89eda32c6bbfadc56742aaeffc36cb/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc.py",
      "https://github.com/NitinYadav1511/PDF-ChatBot/blob/2d45cbe4ea89eda32c6bbfadc56742aaeffc36cb/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/grpc_asyncio.py",
      "https://github.com/NitinYadav1511/PDF-ChatBot/blob/2d45cbe4ea89eda32c6bbfadc56742aaeffc36cb/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/grpc_asyncio.py",
      "https://github.com/NitinYadav1511/PDF-ChatBot/blob/2d45cbe4ea89eda32c6bbfadc56742aaeffc36cb/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/grpc.py",
      "https://github.com/NitinYadav1511/PDF-ChatBot/blob/2d45cbe4ea89eda32c6bbfadc56742aaeffc36cb/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/grpc.py",
      "https://github.com/NitinYadav1511/PDF-ChatBot/blob/2d45cbe4ea89eda32c6bbfadc56742aaeffc36cb/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/NitinYadav1511/PDF-ChatBot/blob/2d45cbe4ea89eda32c6bbfadc56742aaeffc36cb/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/grpc_asyncio.py",
      "https://github.com/NitinYadav1511/PDF-ChatBot/blob/2d45cbe4ea89eda32c6bbfadc56742aaeffc36cb/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/client.py",
      "https://github.com/NitinYadav1511/PDF-ChatBot/blob/2d45cbe4ea89eda32c6bbfadc56742aaeffc36cb/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/client.py",
      "https://github.com/NitinYadav1511/PDF-ChatBot/blob/2d45cbe4ea89eda32c6bbfadc56742aaeffc36cb/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/client.py",
      "https://github.com/NitinYadav1511/PDF-ChatBot/blob/2d45cbe4ea89eda32c6bbfadc56742aaeffc36cb/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/client.py",
      "https://github.com/NitinYadav1511/PDF-ChatBot/blob/2d45cbe4ea89eda32c6bbfadc56742aaeffc36cb/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/client.py",
      "https://github.com/NitinYadav1511/PDF-ChatBot/blob/2d45cbe4ea89eda32c6bbfadc56742aaeffc36cb/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/client.py",
      "https://github.com/NitinYadav1511/PDF-ChatBot/blob/2d45cbe4ea89eda32c6bbfadc56742aaeffc36cb/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/client.py",
      "https://github.com/NitinYadav1511/PDF-ChatBot/blob/2d45cbe4ea89eda32c6bbfadc56742aaeffc36cb/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4586305,
    "stars": 0
  },
  {
    "full_name": "suryanshkillercoderhume/llm-project",
    "name": "llm-project",
    "description": null,
    "html_url": [
      "https://github.com/suryanshkillercoderhume/llm-project/blob/28f505a8353655b157f6986edf6445157ad0d61d/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/base.py",
      "https://github.com/suryanshkillercoderhume/llm-project/blob/28f505a8353655b157f6986edf6445157ad0d61d/venv/Lib/site-packages/google/generativeai/client.py",
      "https://github.com/suryanshkillercoderhume/llm-project/blob/28f505a8353655b157f6986edf6445157ad0d61d/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc.py",
      "https://github.com/suryanshkillercoderhume/llm-project/blob/28f505a8353655b157f6986edf6445157ad0d61d/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/grpc.py",
      "https://github.com/suryanshkillercoderhume/llm-project/blob/28f505a8353655b157f6986edf6445157ad0d61d/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/suryanshkillercoderhume/llm-project/blob/28f505a8353655b157f6986edf6445157ad0d61d/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc.py",
      "https://github.com/suryanshkillercoderhume/llm-project/blob/28f505a8353655b157f6986edf6445157ad0d61d/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/suryanshkillercoderhume/llm-project/blob/28f505a8353655b157f6986edf6445157ad0d61d/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/transports/grpc.py",
      "https://github.com/suryanshkillercoderhume/llm-project/blob/28f505a8353655b157f6986edf6445157ad0d61d/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/transports/grpc_asyncio.py",
      "https://github.com/suryanshkillercoderhume/llm-project/blob/28f505a8353655b157f6986edf6445157ad0d61d/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc.py",
      "https://github.com/suryanshkillercoderhume/llm-project/blob/28f505a8353655b157f6986edf6445157ad0d61d/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/permission_service/transports/grpc_asyncio.py",
      "https://github.com/suryanshkillercoderhume/llm-project/blob/28f505a8353655b157f6986edf6445157ad0d61d/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/permission_service/transports/grpc_asyncio.py",
      "https://github.com/suryanshkillercoderhume/llm-project/blob/28f505a8353655b157f6986edf6445157ad0d61d/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/grpc.py",
      "https://github.com/suryanshkillercoderhume/llm-project/blob/28f505a8353655b157f6986edf6445157ad0d61d/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/grpc.py",
      "https://github.com/suryanshkillercoderhume/llm-project/blob/28f505a8353655b157f6986edf6445157ad0d61d/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/suryanshkillercoderhume/llm-project/blob/28f505a8353655b157f6986edf6445157ad0d61d/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/grpc_asyncio.py",
      "https://github.com/suryanshkillercoderhume/llm-project/blob/28f505a8353655b157f6986edf6445157ad0d61d/venv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/client.py",
      "https://github.com/suryanshkillercoderhume/llm-project/blob/28f505a8353655b157f6986edf6445157ad0d61d/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/client.py",
      "https://github.com/suryanshkillercoderhume/llm-project/blob/28f505a8353655b157f6986edf6445157ad0d61d/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/client.py",
      "https://github.com/suryanshkillercoderhume/llm-project/blob/28f505a8353655b157f6986edf6445157ad0d61d/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/client.py",
      "https://github.com/suryanshkillercoderhume/llm-project/blob/28f505a8353655b157f6986edf6445157ad0d61d/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/client.py",
      "https://github.com/suryanshkillercoderhume/llm-project/blob/28f505a8353655b157f6986edf6445157ad0d61d/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/client.py",
      "https://github.com/suryanshkillercoderhume/llm-project/blob/28f505a8353655b157f6986edf6445157ad0d61d/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/client.py",
      "https://github.com/suryanshkillercoderhume/llm-project/blob/28f505a8353655b157f6986edf6445157ad0d61d/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4018503,
    "stars": 0
  },
  {
    "full_name": "patelraj2002/RAG_model",
    "name": "RAG_model",
    "description": null,
    "html_url": [
      "https://github.com/patelraj2002/RAG_model/blob/4683c318bd05a2f12441dec9596eaab57331bb98/test/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/base.py",
      "https://github.com/patelraj2002/RAG_model/blob/4683c318bd05a2f12441dec9596eaab57331bb98/test/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc.py",
      "https://github.com/patelraj2002/RAG_model/blob/4683c318bd05a2f12441dec9596eaab57331bb98/test/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/patelraj2002/RAG_model/blob/4683c318bd05a2f12441dec9596eaab57331bb98/test/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/patelraj2002/RAG_model/blob/4683c318bd05a2f12441dec9596eaab57331bb98/test/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/grpc_asyncio.py",
      "https://github.com/patelraj2002/RAG_model/blob/4683c318bd05a2f12441dec9596eaab57331bb98/test/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/grpc.py",
      "https://github.com/patelraj2002/RAG_model/blob/4683c318bd05a2f12441dec9596eaab57331bb98/test/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/client.py",
      "https://github.com/patelraj2002/RAG_model/blob/4683c318bd05a2f12441dec9596eaab57331bb98/test/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/client.py",
      "https://github.com/patelraj2002/RAG_model/blob/4683c318bd05a2f12441dec9596eaab57331bb98/test/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/rest.py",
      "https://github.com/patelraj2002/RAG_model/blob/4683c318bd05a2f12441dec9596eaab57331bb98/test/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4030867,
    "stars": 0
  },
  {
    "full_name": "AsadAbbas026/LLM_and_RAG_chatbot",
    "name": "LLM_and_RAG_chatbot",
    "description": null,
    "html_url": [
      "https://github.com/AsadAbbas026/LLM_and_RAG_chatbot/blob/8e69520f9ccc6676044505455b74e8307d54934c/env/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/base.py",
      "https://github.com/AsadAbbas026/LLM_and_RAG_chatbot/blob/8e69520f9ccc6676044505455b74e8307d54934c/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/rest.py",
      "https://github.com/AsadAbbas026/LLM_and_RAG_chatbot/blob/8e69520f9ccc6676044505455b74e8307d54934c/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc.py",
      "https://github.com/AsadAbbas026/LLM_and_RAG_chatbot/blob/8e69520f9ccc6676044505455b74e8307d54934c/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/grpc.py",
      "https://github.com/AsadAbbas026/LLM_and_RAG_chatbot/blob/8e69520f9ccc6676044505455b74e8307d54934c/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/base.py",
      "https://github.com/AsadAbbas026/LLM_and_RAG_chatbot/blob/8e69520f9ccc6676044505455b74e8307d54934c/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/rest.py",
      "https://github.com/AsadAbbas026/LLM_and_RAG_chatbot/blob/8e69520f9ccc6676044505455b74e8307d54934c/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/client.py",
      "https://github.com/AsadAbbas026/LLM_and_RAG_chatbot/blob/8e69520f9ccc6676044505455b74e8307d54934c/env/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/rest.py",
      "https://github.com/AsadAbbas026/LLM_and_RAG_chatbot/blob/8e69520f9ccc6676044505455b74e8307d54934c/env/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4031506,
    "stars": 0
  },
  {
    "full_name": "Niki-098/LLM_Doc",
    "name": "LLM_Doc",
    "description": null,
    "html_url": [
      "https://github.com/Niki-098/LLM_Doc/blob/123a556fab23e26d8749fcd7282c98b600257b03/env/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/base.py",
      "https://github.com/Niki-098/LLM_Doc/blob/123a556fab23e26d8749fcd7282c98b600257b03/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/Niki-098/LLM_Doc/blob/123a556fab23e26d8749fcd7282c98b600257b03/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/rest.py",
      "https://github.com/Niki-098/LLM_Doc/blob/123a556fab23e26d8749fcd7282c98b600257b03/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc.py",
      "https://github.com/Niki-098/LLM_Doc/blob/123a556fab23e26d8749fcd7282c98b600257b03/env/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/grpc.py",
      "https://github.com/Niki-098/LLM_Doc/blob/123a556fab23e26d8749fcd7282c98b600257b03/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/base.py",
      "https://github.com/Niki-098/LLM_Doc/blob/123a556fab23e26d8749fcd7282c98b600257b03/env/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/rest.py",
      "https://github.com/Niki-098/LLM_Doc/blob/123a556fab23e26d8749fcd7282c98b600257b03/env/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/client.py",
      "https://github.com/Niki-098/LLM_Doc/blob/123a556fab23e26d8749fcd7282c98b600257b03/env/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/rest.py",
      "https://github.com/Niki-098/LLM_Doc/blob/123a556fab23e26d8749fcd7282c98b600257b03/env/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3958198,
    "stars": 0
  },
  {
    "full_name": "simonw/llm-gemini",
    "name": "llm-gemini",
    "description": "LLM plugin to access Google's Gemini family of models",
    "html_url": [
      "https://github.com/simonw/llm-gemini/blob/7aad969b3d7dc759cd1b5ed3323459d17bd12fcb/llm_gemini.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2797,
    "stars": 333
  },
  {
    "full_name": "gus7av/gemini_circuitpython",
    "name": "gemini_circuitpython",
    "description": null,
    "html_url": [
      "https://github.com/gus7av/gemini_circuitpython/blob/e2b034fc42055d39c9e43f41ac2a811c1c3b4c46/code.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 271,
    "stars": 1
  },
  {
    "full_name": "datphamvn/HSEvo",
    "name": "HSEvo",
    "description": "[AAAI-25] HSEvo: Elevating Automatic Heuristic Design with Diversity-Driven Harmony Search and Genetic Algorithm Using LLMs",
    "html_url": [
      "https://github.com/datphamvn/HSEvo/blob/09e91eeb01363f163ba92fdf78d9cc9c36127520/baselines/funsearch/funsearch_bin_packing_or_api.py",
      "https://github.com/datphamvn/HSEvo/blob/09e91eeb01363f163ba92fdf78d9cc9c36127520/baselines/funsearch/funsearch_bin_packing_weibull_api.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 10953,
    "stars": 13
  },
  {
    "full_name": "heroesofcode/pullpanda-cli",
    "name": "pullpanda-cli",
    "description": "This script automates code review by calculating the differences between the current branch and the main branch of a git local project repository. It then sends these differences to the Gemini AI API, which generates detailed improvement suggestions.",
    "html_url": [
      "https://github.com/heroesofcode/pullpanda-cli/blob/91272b1cecf7f92c9fbcc022f83bb7d5268573f4/pullpanda.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 193,
    "stars": 1
  },
  {
    "full_name": "vanshksingh/M5Cardputer-Chat-with-Gemini-API",
    "name": "M5Cardputer-Chat-with-Gemini-API",
    "description": "M5Cardputer Chat with Gemini API: An application that uses M5Cardputer to interact with the Gemini API for generating responses based on user input. This project includes code for managing Wi-Fi connectivity, user input handling, API requests, and displaying responses on the M5Cardputer's screen.",
    "html_url": [
      "https://github.com/vanshksingh/M5Cardputer-Chat-with-Gemini-API/blob/225362b9069b986c97db6f61da2a23191e619418/%20MICROPYTHON_GEMINI/GEMINI.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 14314,
    "stars": 44
  },
  {
    "full_name": "Shubham235Chandra/HireHorizon",
    "name": "HireHorizon",
    "description": "HireHorizon is a cutting-edge web app that leverages advanced generative AI to optimize resumes. Upload your resume, paste a job description, and receive feedback on alignment, missing keywords, and a profile summary. It's open-source, user-friendly, and accessible on Hugging Face.",
    "html_url": [
      "https://github.com/Shubham235Chandra/HireHorizon/blob/da15993e780f68ccbe20076af16ee56c17ca89e7/hireh/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc.py",
      "https://github.com/Shubham235Chandra/HireHorizon/blob/da15993e780f68ccbe20076af16ee56c17ca89e7/hireh/Lib/site-packages/google/generativeai/client.py",
      "https://github.com/Shubham235Chandra/HireHorizon/blob/da15993e780f68ccbe20076af16ee56c17ca89e7/hireh/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc.py",
      "https://github.com/Shubham235Chandra/HireHorizon/blob/da15993e780f68ccbe20076af16ee56c17ca89e7/hireh/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/grpc.py",
      "https://github.com/Shubham235Chandra/HireHorizon/blob/da15993e780f68ccbe20076af16ee56c17ca89e7/hireh/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/rest.py",
      "https://github.com/Shubham235Chandra/HireHorizon/blob/da15993e780f68ccbe20076af16ee56c17ca89e7/hireh/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/grpc_asyncio.py",
      "https://github.com/Shubham235Chandra/HireHorizon/blob/da15993e780f68ccbe20076af16ee56c17ca89e7/hireh/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/grpc.py",
      "https://github.com/Shubham235Chandra/HireHorizon/blob/da15993e780f68ccbe20076af16ee56c17ca89e7/hireh/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/base.py",
      "https://github.com/Shubham235Chandra/HireHorizon/blob/da15993e780f68ccbe20076af16ee56c17ca89e7/hireh/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/transports/rest.py",
      "https://github.com/Shubham235Chandra/HireHorizon/blob/da15993e780f68ccbe20076af16ee56c17ca89e7/hireh/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/text_service/transports/rest.py",
      "https://github.com/Shubham235Chandra/HireHorizon/blob/da15993e780f68ccbe20076af16ee56c17ca89e7/hireh/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/client.py",
      "https://github.com/Shubham235Chandra/HireHorizon/blob/da15993e780f68ccbe20076af16ee56c17ca89e7/hireh/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/client.py",
      "https://github.com/Shubham235Chandra/HireHorizon/blob/da15993e780f68ccbe20076af16ee56c17ca89e7/hireh/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/grpc_asyncio.py",
      "https://github.com/Shubham235Chandra/HireHorizon/blob/da15993e780f68ccbe20076af16ee56c17ca89e7/hireh/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4076762,
    "stars": 2
  },
  {
    "full_name": "Uddhav-24/Exploring_LLMs",
    "name": "Exploring_LLMs",
    "description": "Are you curious about the potential of Large Language Models (LLMs) to revolutionize the way we interact with technology? Let's collaborate and build!",
    "html_url": [
      "https://github.com/Uddhav-24/Exploring_LLMs/blob/dfd4cf1f0a2c25628c661c72786d4e7162e85c5a/GEMINI_CHATBOT/venv01/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc.py",
      "https://github.com/Uddhav-24/Exploring_LLMs/blob/dfd4cf1f0a2c25628c661c72786d4e7162e85c5a/GEMINI_CHATBOT/venv01/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/transports/grpc_asyncio.py",
      "https://github.com/Uddhav-24/Exploring_LLMs/blob/dfd4cf1f0a2c25628c661c72786d4e7162e85c5a/GEMINI_CHATBOT/venv01/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/grpc.py",
      "https://github.com/Uddhav-24/Exploring_LLMs/blob/dfd4cf1f0a2c25628c661c72786d4e7162e85c5a/GEMINI_CHATBOT/venv01/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/client.py",
      "https://github.com/Uddhav-24/Exploring_LLMs/blob/dfd4cf1f0a2c25628c661c72786d4e7162e85c5a/GEMINI_CHATBOT/venv01/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/grpc_asyncio.py",
      "https://github.com/Uddhav-24/Exploring_LLMs/blob/dfd4cf1f0a2c25628c661c72786d4e7162e85c5a/GEMINI_CHATBOT/venv01/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4666920,
    "stars": 0
  },
  {
    "full_name": "avanshh99/chatpdf",
    "name": "chatpdf",
    "description": "A project that dwells into the concept of LLM and Langchain ",
    "html_url": [
      "https://github.com/avanshh99/chatpdf/blob/488470899ea77e2ec2bf9cf5fed898868b41454d/gdscenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/transports/grpc.py",
      "https://github.com/avanshh99/chatpdf/blob/488470899ea77e2ec2bf9cf5fed898868b41454d/gdscenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/avanshh99/chatpdf/blob/488470899ea77e2ec2bf9cf5fed898868b41454d/gdscenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/grpc.py",
      "https://github.com/avanshh99/chatpdf/blob/488470899ea77e2ec2bf9cf5fed898868b41454d/gdscenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/transports/rest.py",
      "https://github.com/avanshh99/chatpdf/blob/488470899ea77e2ec2bf9cf5fed898868b41454d/gdscenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/grpc_asyncio.py",
      "https://github.com/avanshh99/chatpdf/blob/488470899ea77e2ec2bf9cf5fed898868b41454d/gdscenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3830262,
    "stars": 0
  },
  {
    "full_name": "vedantp2905/RAG_Debate",
    "name": "RAG_Debate",
    "description": null,
    "html_url": [
      "https://github.com/vedantp2905/RAG_Debate/blob/3f5b5178c7775b16d33d32e75d3c432dfdecbd80/app.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 383,
    "stars": 0
  },
  {
    "full_name": "SolomonMartin/Text2SQL",
    "name": "Text2SQL",
    "description": "Text2SQL is a LangChain and Streamlit application that converts natural language queries into SQL commands to query a database. Users can input their queries in plain English, and the app translates these queries into SQL, executes them on a predefined database, and displays the results. ",
    "html_url": [
      "https://github.com/SolomonMartin/Text2SQL/blob/8f7431e534af9e56937d329f53654e03ffa8d535/venv/Lib/site-packages/google/generativeai/client.py",
      "https://github.com/SolomonMartin/Text2SQL/blob/8f7431e534af9e56937d329f53654e03ffa8d535/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/SolomonMartin/Text2SQL/blob/8f7431e534af9e56937d329f53654e03ffa8d535/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/SolomonMartin/Text2SQL/blob/8f7431e534af9e56937d329f53654e03ffa8d535/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3308507,
    "stars": 1
  },
  {
    "full_name": "Prince3087/SQL_LLM-app",
    "name": "SQL_LLM-app",
    "description": "end to end llm application that converts text to sql query  to retrieve  data from database.",
    "html_url": [
      "https://github.com/Prince3087/SQL_LLM-app/blob/994da6b6763121ec60a339448820bdc5ae014726/venv/Lib/site-packages/google/generativeai/client.py",
      "https://github.com/Prince3087/SQL_LLM-app/blob/994da6b6763121ec60a339448820bdc5ae014726/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/Prince3087/SQL_LLM-app/blob/994da6b6763121ec60a339448820bdc5ae014726/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/Prince3087/SQL_LLM-app/blob/994da6b6763121ec60a339448820bdc5ae014726/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc.py",
      "https://github.com/Prince3087/SQL_LLM-app/blob/994da6b6763121ec60a339448820bdc5ae014726/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/Prince3087/SQL_LLM-app/blob/994da6b6763121ec60a339448820bdc5ae014726/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/transports/rest.py",
      "https://github.com/Prince3087/SQL_LLM-app/blob/994da6b6763121ec60a339448820bdc5ae014726/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/client.py",
      "https://github.com/Prince3087/SQL_LLM-app/blob/994da6b6763121ec60a339448820bdc5ae014726/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/client.py",
      "https://github.com/Prince3087/SQL_LLM-app/blob/994da6b6763121ec60a339448820bdc5ae014726/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/client.py",
      "https://github.com/Prince3087/SQL_LLM-app/blob/994da6b6763121ec60a339448820bdc5ae014726/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3906257,
    "stars": 0
  },
  {
    "full_name": "Ex-Rockstar/Muk-bot",
    "name": "Muk-bot",
    "description": "a chatbot based on gemini",
    "html_url": [
      "https://github.com/Ex-Rockstar/Muk-bot/blob/1c3d796db6e89748c3d3974eb3d0cb635feec45d/venv/Lib/site-packages/google/generativeai/client.py",
      "https://github.com/Ex-Rockstar/Muk-bot/blob/1c3d796db6e89748c3d3974eb3d0cb635feec45d/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2349433,
    "stars": 0
  },
  {
    "full_name": "borrrrring/xcstrings",
    "name": "xcstrings",
    "description": "Automatically translates Xcode 15 String Catalog (.xcstrings) files using Google Translation, Gemini Pro or DeepLX.",
    "html_url": [
      "https://github.com/borrrrring/xcstrings/blob/fcd35ef9091b065f985e44813d80cb46bdd5140d/xcstrings_Gemini.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 624,
    "stars": 34
  },
  {
    "full_name": "Rohantech231/Youtube-Video-Summarizer",
    "name": "Youtube-Video-Summarizer",
    "description": "This is a web application that uses Gemini Pro and LLM to summarize the Youtube video transcript in 350.",
    "html_url": [
      "https://github.com/Rohantech231/Youtube-Video-Summarizer/blob/7e5010341fbd620a92bbc35e5a93ab1d60d2b92e/YT/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc.py",
      "https://github.com/Rohantech231/Youtube-Video-Summarizer/blob/7e5010341fbd620a92bbc35e5a93ab1d60d2b92e/YT/Lib/site-packages/google/ai/generativelanguage_v1beta/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/Rohantech231/Youtube-Video-Summarizer/blob/7e5010341fbd620a92bbc35e5a93ab1d60d2b92e/YT/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/Rohantech231/Youtube-Video-Summarizer/blob/7e5010341fbd620a92bbc35e5a93ab1d60d2b92e/YT/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/grpc_asyncio.py",
      "https://github.com/Rohantech231/Youtube-Video-Summarizer/blob/7e5010341fbd620a92bbc35e5a93ab1d60d2b92e/YT/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/transports/rest.py",
      "https://github.com/Rohantech231/Youtube-Video-Summarizer/blob/7e5010341fbd620a92bbc35e5a93ab1d60d2b92e/YT/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/client.py",
      "https://github.com/Rohantech231/Youtube-Video-Summarizer/blob/7e5010341fbd620a92bbc35e5a93ab1d60d2b92e/YT/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/client.py",
      "https://github.com/Rohantech231/Youtube-Video-Summarizer/blob/7e5010341fbd620a92bbc35e5a93ab1d60d2b92e/YT/Lib/site-packages/google/ai/generativelanguage_v1beta/services/cache_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3517952,
    "stars": 0
  },
  {
    "full_name": "Touseeq99/ASK-THE-PDF-GEMINI",
    "name": "ASK-THE-PDF-GEMINI",
    "description": null,
    "html_url": [
      "https://github.com/Touseeq99/ASK-THE-PDF-GEMINI/blob/d12eb06c1bf20c8b60913b908958566c5ac3bb16/pdfbotenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/grpc.py",
      "https://github.com/Touseeq99/ASK-THE-PDF-GEMINI/blob/d12eb06c1bf20c8b60913b908958566c5ac3bb16/pdfbotenv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/Touseeq99/ASK-THE-PDF-GEMINI/blob/d12eb06c1bf20c8b60913b908958566c5ac3bb16/pdfbotenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/discuss_service/transports/rest.py",
      "https://github.com/Touseeq99/ASK-THE-PDF-GEMINI/blob/d12eb06c1bf20c8b60913b908958566c5ac3bb16/pdfbotenv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/transports/grpc.py",
      "https://github.com/Touseeq99/ASK-THE-PDF-GEMINI/blob/d12eb06c1bf20c8b60913b908958566c5ac3bb16/pdfbotenv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/transports/grpc.py",
      "https://github.com/Touseeq99/ASK-THE-PDF-GEMINI/blob/d12eb06c1bf20c8b60913b908958566c5ac3bb16/pdfbotenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/model_service/client.py",
      "https://github.com/Touseeq99/ASK-THE-PDF-GEMINI/blob/d12eb06c1bf20c8b60913b908958566c5ac3bb16/pdfbotenv/Lib/site-packages/google/ai/generativelanguage_v1beta2/services/text_service/client.py",
      "https://github.com/Touseeq99/ASK-THE-PDF-GEMINI/blob/d12eb06c1bf20c8b60913b908958566c5ac3bb16/pdfbotenv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/client.py",
      "https://github.com/Touseeq99/ASK-THE-PDF-GEMINI/blob/d12eb06c1bf20c8b60913b908958566c5ac3bb16/pdfbotenv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/client.py",
      "https://github.com/Touseeq99/ASK-THE-PDF-GEMINI/blob/d12eb06c1bf20c8b60913b908958566c5ac3bb16/pdfbotenv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4514565,
    "stars": 0
  },
  {
    "full_name": "weaviate/weaviate-gorilla",
    "name": "weaviate-gorilla",
    "description": "Research repository on interfacing LLMs with Weaviate's APIs. Inspired by the Berkeley Gorilla LLM.",
    "html_url": [
      "https://github.com/weaviate/weaviate-gorilla/blob/1ec614568d7494f124f3b8e41b566bdc2f1a59a6/src/lm/lm.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1336317,
    "stars": 132
  },
  {
    "full_name": "yym68686/ModelMerge",
    "name": "ModelMerge",
    "description": "modelmerge is a powerful library designed to simplify and unify the use of various large language models, including GPT-4/4t/4o, GPT-3.5, Claude3/3.5, Claude2, Gemini1.5 Pro/flash, DALL-E 3, DuckDuckGo(gpt-4o-mini, claude-3-haiku, Meta-Llama-3.1-70B, Mixtral-8x7B), and Groq.",
    "html_url": [
      "https://github.com/yym68686/ModelMerge/blob/1f1b47dfeabe25773fc45c4459ea7cfca88efdac/src/ModelMerge/models/gemini.py",
      "https://github.com/yym68686/ModelMerge/blob/1f1b47dfeabe25773fc45c4459ea7cfca88efdac/src/ModelMerge/models/audio.py",
      "https://github.com/yym68686/ModelMerge/blob/1f1b47dfeabe25773fc45c4459ea7cfca88efdac/src/ModelMerge/plugins/image.py",
      "https://github.com/yym68686/ModelMerge/blob/1f1b47dfeabe25773fc45c4459ea7cfca88efdac/src/ModelMerge/models/base.py",
      "https://github.com/yym68686/ModelMerge/blob/1f1b47dfeabe25773fc45c4459ea7cfca88efdac/src/ModelMerge/models/chatgpt.py"
    ],
    "model": [
      "gemini",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 5375,
    "stars": 35
  },
  {
    "full_name": "adjdunn/Gemini-Python-Tutorial",
    "name": "Gemini-Python-Tutorial",
    "description": null,
    "html_url": [
      "https://github.com/adjdunn/Gemini-Python-Tutorial/blob/901f3b8dc084b7a2e5f843ea94ba3cfb11b16f85/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/adjdunn/Gemini-Python-Tutorial/blob/901f3b8dc084b7a2e5f843ea94ba3cfb11b16f85/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/adjdunn/Gemini-Python-Tutorial/blob/901f3b8dc084b7a2e5f843ea94ba3cfb11b16f85/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc.py",
      "https://github.com/adjdunn/Gemini-Python-Tutorial/blob/901f3b8dc084b7a2e5f843ea94ba3cfb11b16f85/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/adjdunn/Gemini-Python-Tutorial/blob/901f3b8dc084b7a2e5f843ea94ba3cfb11b16f85/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/transports/rest.py",
      "https://github.com/adjdunn/Gemini-Python-Tutorial/blob/901f3b8dc084b7a2e5f843ea94ba3cfb11b16f85/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/client.py",
      "https://github.com/adjdunn/Gemini-Python-Tutorial/blob/901f3b8dc084b7a2e5f843ea94ba3cfb11b16f85/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/client.py",
      "https://github.com/adjdunn/Gemini-Python-Tutorial/blob/901f3b8dc084b7a2e5f843ea94ba3cfb11b16f85/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/client.py",
      "https://github.com/adjdunn/Gemini-Python-Tutorial/blob/901f3b8dc084b7a2e5f843ea94ba3cfb11b16f85/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2445862,
    "stars": 14
  },
  {
    "full_name": "Gangatharangurusamy/Gemini-LLM-Application",
    "name": "Gemini-LLM-Application",
    "description": null,
    "html_url": [
      "https://github.com/Gangatharangurusamy/Gemini-LLM-Application/blob/e43dee1db186c55db0a9d158ce22d2378dc0375a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/Gangatharangurusamy/Gemini-LLM-Application/blob/e43dee1db186c55db0a9d158ce22d2378dc0375a/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/Gangatharangurusamy/Gemini-LLM-Application/blob/e43dee1db186c55db0a9d158ce22d2378dc0375a/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3889601,
    "stars": 0
  },
  {
    "full_name": "kinghim17/Building-LLM-from-scratch",
    "name": "Building-LLM-from-scratch",
    "description": "I've developed a large language model (LLM) using the Google API that integrates both image processing and text generation capabilities. The user interface for interacting with the model is built using Streamlit.",
    "html_url": [
      "https://github.com/kinghim17/Building-LLM-from-scratch/blob/f39fd40110dea4654cefb5eaaa874839a8ec73d6/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/kinghim17/Building-LLM-from-scratch/blob/f39fd40110dea4654cefb5eaaa874839a8ec73d6/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/kinghim17/Building-LLM-from-scratch/blob/f39fd40110dea4654cefb5eaaa874839a8ec73d6/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4139104,
    "stars": 0
  },
  {
    "full_name": "Ganpati-Nath/Placement-and-Interview-Assistance",
    "name": "Placement-and-Interview-Assistance",
    "description": "Solving Queries, Getting Guidance Using LLM...",
    "html_url": [
      "https://github.com/Ganpati-Nath/Placement-and-Interview-Assistance/blob/24184794ee13ed829cd6fd0d808ee437c5ff0bbb/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/Ganpati-Nath/Placement-and-Interview-Assistance/blob/24184794ee13ed829cd6fd0d808ee437c5ff0bbb/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc_asyncio.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4402899,
    "stars": 0
  },
  {
    "full_name": "ANYANTUDRE/LangChain",
    "name": "LangChain",
    "description": "Applications that can reason. Powered by LangChain.",
    "html_url": [
      "https://github.com/ANYANTUDRE/LangChain/blob/b1db7e6fe503d8d88040aec8f69bdfb67af0f2f1/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/ANYANTUDRE/LangChain/blob/b1db7e6fe503d8d88040aec8f69bdfb67af0f2f1/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/ANYANTUDRE/LangChain/blob/b1db7e6fe503d8d88040aec8f69bdfb67af0f2f1/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc.py",
      "https://github.com/ANYANTUDRE/LangChain/blob/b1db7e6fe503d8d88040aec8f69bdfb67af0f2f1/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/ANYANTUDRE/LangChain/blob/b1db7e6fe503d8d88040aec8f69bdfb67af0f2f1/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/transports/rest.py",
      "https://github.com/ANYANTUDRE/LangChain/blob/b1db7e6fe503d8d88040aec8f69bdfb67af0f2f1/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/client.py",
      "https://github.com/ANYANTUDRE/LangChain/blob/b1db7e6fe503d8d88040aec8f69bdfb67af0f2f1/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/client.py",
      "https://github.com/ANYANTUDRE/LangChain/blob/b1db7e6fe503d8d88040aec8f69bdfb67af0f2f1/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/generative_service/client.py",
      "https://github.com/ANYANTUDRE/LangChain/blob/b1db7e6fe503d8d88040aec8f69bdfb67af0f2f1/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 5507312,
    "stars": 1
  },
  {
    "full_name": "Ganapati-nk/LLM_Chatbot_Geminii",
    "name": "LLM_Chatbot_Geminii",
    "description": null,
    "html_url": [
      "https://github.com/Ganapati-nk/LLM_Chatbot_Geminii/blob/fd036ae1fa83dbde40c6b923e03740497cffebba/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/Ganapati-nk/LLM_Chatbot_Geminii/blob/fd036ae1fa83dbde40c6b923e03740497cffebba/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc_asyncio.py",
      "https://github.com/Ganapati-nk/LLM_Chatbot_Geminii/blob/fd036ae1fa83dbde40c6b923e03740497cffebba/venv/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3969608,
    "stars": 0
  },
  {
    "full_name": "himanshuverma0912/Basic-LLM-Application",
    "name": "Basic-LLM-Application",
    "description": null,
    "html_url": [
      "https://github.com/himanshuverma0912/Basic-LLM-Application/blob/2420a7d4713ffa4ca3535f1de7f7696771e51340/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/himanshuverma0912/Basic-LLM-Application/blob/2420a7d4713ffa4ca3535f1de7f7696771e51340/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc_asyncio.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4687744,
    "stars": 0
  },
  {
    "full_name": "dibbacodes/Applicant-Tracking-System-ATS",
    "name": "Applicant-Tracking-System-ATS",
    "description": "This project is a Streamlit-based ATS (Applicant Tracking System) that uses Google Gemini Pro Vision to analyze resumes. Users can upload a PDF resume and input a job description. The system provides detailed feedback on alignment, strengths, weaknesses, overall suitability, and calculates a percentage match. ",
    "html_url": [
      "https://github.com/dibbacodes/Applicant-Tracking-System-ATS/blob/8e6957cee4010358fa62c53acc5389fc1ca22272/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/dibbacodes/Applicant-Tracking-System-ATS/blob/8e6957cee4010358fa62c53acc5389fc1ca22272/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc_asyncio.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3934751,
    "stars": 0
  },
  {
    "full_name": "Pratikbalodi/Text-To-SQL-LLM-App",
    "name": "Text-To-SQL-LLM-App",
    "description": "Aan end to end LLM application using Google Gemini Pro where it create  Text To SQL LLM App  and later retrieving query from SQL database",
    "html_url": [
      "https://github.com/Pratikbalodi/Text-To-SQL-LLM-App/blob/2679cba9dd9ce1d46839787275bfcdc7bfe32d67/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/Pratikbalodi/Text-To-SQL-LLM-App/blob/2679cba9dd9ce1d46839787275bfcdc7bfe32d67/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc_asyncio.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3940285,
    "stars": 1
  },
  {
    "full_name": "Ganapati-nk/LLM_Q-A_Bot",
    "name": "LLM_Q-A_Bot",
    "description": null,
    "html_url": [
      "https://github.com/Ganapati-nk/LLM_Q-A_Bot/blob/b200e251437525e7468df3f9cf5a1dcd1626e58c/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/Ganapati-nk/LLM_Q-A_Bot/blob/b200e251437525e7468df3f9cf5a1dcd1626e58c/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc_asyncio.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3969590,
    "stars": 0
  },
  {
    "full_name": "Rohit-kumbhar/text_to_sql_using_llm",
    "name": "text_to_sql_using_llm",
    "description": null,
    "html_url": [
      "https://github.com/Rohit-kumbhar/text_to_sql_using_llm/blob/8110d317752da0c30a79df9a6e7c6d85bdb74dbd/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/Rohit-kumbhar/text_to_sql_using_llm/blob/8110d317752da0c30a79df9a6e7c6d85bdb74dbd/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc_asyncio.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3969676,
    "stars": 0
  },
  {
    "full_name": "samarthvashishta/your-gemini",
    "name": "your-gemini",
    "description": "Simple QA Bot ",
    "html_url": [
      "https://github.com/samarthvashishta/your-gemini/blob/5b777f3e99deeb5184b4978f4db6dfd409ad4662/venv/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/transports/grpc_asyncio.py",
      "https://github.com/samarthvashishta/your-gemini/blob/5b777f3e99deeb5184b4978f4db6dfd409ad4662/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc_asyncio.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "Barathzen/AI-Driven-Feedback-and-Assessment_using_flask",
    "name": "AI-Driven-Feedback-and-Assessment_using_flask",
    "description": "Speech Analyzer,Paragraph Grader, Query Chatbot",
    "html_url": [
      "https://github.com/Barathzen/AI-Driven-Feedback-and-Assessment_using_flask/blob/261f3c28b70ce806431945bc95f26a7465fb62a9/ai_eduhacks/app.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1515,
    "stars": 1
  },
  {
    "full_name": "janak-ojha/Multilingual_AI_Asistance_using_LLM",
    "name": "Multilingual_AI_Asistance_using_LLM",
    "description": "here we make multilingual virtual assistance using the llm model gemini-pro",
    "html_url": [
      "https://github.com/janak-ojha/Multilingual_AI_Asistance_using_LLM/blob/26ecc7e991579e8d5c145d1735e47c166d1f8e8f/lingus/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/grpc.py",
      "https://github.com/janak-ojha/Multilingual_AI_Asistance_using_LLM/blob/26ecc7e991579e8d5c145d1735e47c166d1f8e8f/lingus/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/transports/grpc_asyncio.py",
      "https://github.com/janak-ojha/Multilingual_AI_Asistance_using_LLM/blob/26ecc7e991579e8d5c145d1735e47c166d1f8e8f/lingus/Lib/site-packages/google/ai/generativelanguage_v1beta/services/file_service/transports/grpc_asyncio.py",
      "https://github.com/janak-ojha/Multilingual_AI_Asistance_using_LLM/blob/26ecc7e991579e8d5c145d1735e47c166d1f8e8f/lingus/Lib/site-packages/google/ai/generativelanguage_v1beta/services/text_service/transports/grpc_asyncio.py",
      "https://github.com/janak-ojha/Multilingual_AI_Asistance_using_LLM/blob/26ecc7e991579e8d5c145d1735e47c166d1f8e8f/lingus/Lib/site-packages/google/ai/generativelanguage_v1beta/services/model_service/transports/grpc.py",
      "https://github.com/janak-ojha/Multilingual_AI_Asistance_using_LLM/blob/26ecc7e991579e8d5c145d1735e47c166d1f8e8f/lingus/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/discuss_service/client.py",
      "https://github.com/janak-ojha/Multilingual_AI_Asistance_using_LLM/blob/26ecc7e991579e8d5c145d1735e47c166d1f8e8f/lingus/Lib/site-packages/google/ai/generativelanguage_v1/services/model_service/client.py",
      "https://github.com/janak-ojha/Multilingual_AI_Asistance_using_LLM/blob/26ecc7e991579e8d5c145d1735e47c166d1f8e8f/lingus/Lib/site-packages/google/ai/generativelanguage_v1beta/services/retriever_service/transports/grpc_asyncio.py",
      "https://github.com/janak-ojha/Multilingual_AI_Asistance_using_LLM/blob/26ecc7e991579e8d5c145d1735e47c166d1f8e8f/lingus/Lib/site-packages/google/ai/generativelanguage_v1beta/services/cache_service/client.py",
      "https://github.com/janak-ojha/Multilingual_AI_Asistance_using_LLM/blob/26ecc7e991579e8d5c145d1735e47c166d1f8e8f/lingus/Lib/site-packages/google/ai/generativelanguage_v1beta3/services/model_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4014618,
    "stars": 0
  },
  {
    "full_name": "fish4terrisa-MSDSM/gemini_novel_translate",
    "name": "gemini_novel_translate",
    "description": "A tool to translate light novel using google's gemini.",
    "html_url": [
      "https://github.com/fish4terrisa-MSDSM/gemini_novel_translate/blob/1b7b2bf8169456165d2f1212efb92b4a1bfafaf9/gemini_translate_api.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 658,
    "stars": 4
  },
  {
    "full_name": "patw/Bottybot",
    "name": "Bottybot",
    "description": "A conversational UI for chatbots using the llama.cpp server",
    "html_url": [
      "https://github.com/patw/Bottybot/blob/7e21af83b03ad98f6da043d45b0b888c8f1ac490/app.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 807,
    "stars": 14
  },
  {
    "full_name": "LyzrCore/lyzr-rag",
    "name": "lyzr-rag",
    "description": null,
    "html_url": [
      "https://github.com/LyzrCore/lyzr-rag/blob/d93eab5bcde0d19cd2eb80fb121110898bb21119/lyzr_rag/vector_stores/google/generativeai/genai_extension.py",
      "https://github.com/LyzrCore/lyzr-rag/blob/d93eab5bcde0d19cd2eb80fb121110898bb21119/lyzr_rag/llms/openai_utils.py"
    ],
    "model": [
      "gemini",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 78598,
    "stars": 2
  },
  {
    "full_name": "jsocarras/my-llama-index",
    "name": "my-llama-index",
    "description": null,
    "html_url": [
      "https://github.com/jsocarras/my-llama-index/blob/92d6d7c1342431b9b1b27ab0d95827cf2acefff7/llama_index/vector_stores/google/generativeai/genai_extension.py",
      "https://github.com/jsocarras/my-llama-index/blob/92d6d7c1342431b9b1b27ab0d95827cf2acefff7/llama_index/multi_modal_llms/openai_utils.py",
      "https://github.com/jsocarras/my-llama-index/blob/92d6d7c1342431b9b1b27ab0d95827cf2acefff7/llama_index/llms/azure_openai.py",
      "https://github.com/jsocarras/my-llama-index/blob/92d6d7c1342431b9b1b27ab0d95827cf2acefff7/llama_index/llms/openai_utils.py"
    ],
    "model": [
      "gemini",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 984451,
    "stars": 0
  },
  {
    "full_name": "Hunter71/langchain-google",
    "name": "langchain-google",
    "description": null,
    "html_url": [
      "https://github.com/Hunter71/langchain-google/blob/c55b56f9e532a53ea084518cd10928fe0f4bb95c/langchain_google_genai/_genai_extension.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3685,
    "stars": 0
  },
  {
    "full_name": "ReneDrengen/LlamaHub",
    "name": "LlamaHub",
    "description": null,
    "html_url": [
      "https://github.com/ReneDrengen/LlamaHub/blob/caadc62575c91b1aa1817a423b29365d46253e08/llama-index-legacy/llama_index/legacy/vector_stores/google/generativeai/genai_extension.py",
      "https://github.com/ReneDrengen/LlamaHub/blob/caadc62575c91b1aa1817a423b29365d46253e08/llama-index-legacy/llama_index/legacy/multi_modal_llms/openai_utils.py",
      "https://github.com/ReneDrengen/LlamaHub/blob/caadc62575c91b1aa1817a423b29365d46253e08/llama-index-legacy/llama_index/legacy/embeddings/azure_openai.py",
      "https://github.com/ReneDrengen/LlamaHub/blob/caadc62575c91b1aa1817a423b29365d46253e08/llama-index-integrations/embeddings/llama-index-embeddings-azure-openai/llama_index/embeddings/azure_openai/base.py",
      "https://github.com/ReneDrengen/LlamaHub/blob/caadc62575c91b1aa1817a423b29365d46253e08/llama-index-legacy/llama_index/legacy/llms/azure_openai.py",
      "https://github.com/ReneDrengen/LlamaHub/blob/caadc62575c91b1aa1817a423b29365d46253e08/llama-index-legacy/llama_index/legacy/llms/openai_utils.py",
      "https://github.com/ReneDrengen/LlamaHub/blob/caadc62575c91b1aa1817a423b29365d46253e08/llama-index-integrations/llms/llama-index-llms-openai/llama_index/llms/openai/utils.py",
      "https://github.com/ReneDrengen/LlamaHub/blob/caadc62575c91b1aa1817a423b29365d46253e08/llama-index-integrations/node_parser/llama-index-node-parser-relational-dashscope/llama_index/node_parser/dashscope/base.py"
    ],
    "model": [
      "gemini",
      "openai",
      "qwen"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1133062,
    "stars": 0
  },
  {
    "full_name": "amidabuddha/unichat",
    "name": "unichat",
    "description": "Universal API chat Python client for OpenAI, MistralAI, Anthropic, xAI, and Google AI.",
    "html_url": [
      "https://github.com/amidabuddha/unichat/blob/47b0aff26f5cc81cc8b262167c7d3be2e46093f8/unichat/api_helper.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1084,
    "stars": 6
  },
  {
    "full_name": "felipeoes/cocoruta_2",
    "name": "cocoruta_2",
    "description": "Cocoruta 2 is a LLM developed in a domain-driven way in order to be specialized in Blue Amazon legislation.",
    "html_url": [
      "https://github.com/felipeoes/cocoruta_2/blob/0aad36e33457dc036b99b7b55ad228be782428d3/question_generation/chat_QA_generator/gemini.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 5405,
    "stars": 0
  },
  {
    "full_name": "hitanshu04/Chat-with-Multiple-PDFs",
    "name": "Chat-with-Multiple-PDFs",
    "description": "By the use of this code, one can ask any questions to the model, from the uploaded PDFs, and if the answer is present in the PDF, the model will tell the correct answer, else it will just say 'Answer is not available in the context'.",
    "html_url": [
      "https://github.com/hitanshu04/Chat-with-Multiple-PDFs/blob/0b532748c46ce0594c31bca508600d97cc96b09d/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/transports/grpc_asyncio.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 5091185,
    "stars": 0
  },
  {
    "full_name": "eliot-99/Plant-Disease-Detection-Using-CNN-",
    "name": "Plant-Disease-Detection-Using-CNN-",
    "description": "The Plant Disease Classification project leverages Convolutional Neural Networks (CNNs) to accurately identify plant diseases from images. This innovative tool includes a web application that allows users to upload images of crops and receive instant predictions about potential diseases affecting their plants.",
    "html_url": [
      "https://github.com/eliot-99/Plant-Disease-Detection-Using-CNN-/blob/443490f05b335a36f60c0fc5f99076ee8e8828d1/app.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3414,
    "stars": 0
  },
  {
    "full_name": "LluckyYH/XTRUST",
    "name": "XTRUST",
    "description": "Multi-Lingual Trustworthy Evaluation Benchmark for Large Lanuage Models",
    "html_url": [
      "https://github.com/LluckyYH/XTRUST/blob/5a5f2ed4a7df5883a0c82f80c25f3e7deb8bb41a/code/api/evaluator_series/evaluators/all_api_response.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1979674,
    "stars": 6
  },
  {
    "full_name": "serhon/nochbinich",
    "name": "nochbinich",
    "description": "Python script-supervisor iteratively executes script-agent and modifies it via LLM that is instructed with description of supervisor functioning and final goal, then at each iteration gets retval, stdout, stderr of current agent, and is asked to reply with next agent verbatim. Optional jailbreak attempt. TUI. Unsafe.",
    "html_url": [
      "https://github.com/serhon/nochbinich/blob/7899e7866bfc1aa3670d2295b1a19f45a485e97d/nochbinich.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 672,
    "stars": 0
  },
  {
    "full_name": "yym68686/ChatGPT-Telegram-Bot",
    "name": "ChatGPT-Telegram-Bot",
    "description": "TeleChat: 🤖️ an AI chat Telegram bot can Web Search Powered by GPT-3.5/4/4 Turbo/4o, DALL·E 3, Groq, Gemini 1.5 Pro/Flash and the official Claude2.1/3/3.5 API using Python on Zeabur, fly.io and Replit.",
    "html_url": [
      "https://github.com/yym68686/ChatGPT-Telegram-Bot/blob/bac783cdc65ddea70c004df4582b1d442b877e50/config.py",
      "https://github.com/yym68686/ChatGPT-Telegram-Bot/blob/bac783cdc65ddea70c004df4582b1d442b877e50/config.py"
    ],
    "model": [
      "gemini",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4498,
    "stars": 1056
  },
  {
    "full_name": "Soulter/AstrBot",
    "name": "AstrBot",
    "description": "✨易上手的多平台 LLM 聊天机器人及开发框架✨。支持 QQ、QQ频道、Telegram、微信平台，支持 OpenAI GPT、Ollama、DeepsSeek、Llama、GLM、Gemini、OneAPI、LLMTuner，支持 LLM Agent 插件开发，可视化面板。一键部署。",
    "html_url": [
      "https://github.com/Soulter/AstrBot/blob/3771001c5a16e47ec685d4601e260be98e0163e0/astrbot/core/config/default.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 39622,
    "stars": 9642
  },
  {
    "full_name": "SunnyChopper/llmcore",
    "name": "llmcore",
    "description": "Essential tools for LLM development - models, prompts, embeddings, agents, chains, and more.",
    "html_url": [
      "https://github.com/SunnyChopper/llmcore/blob/54ea1e668493b30c2c58951637f580876878c13f/llmcore/core.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3485,
    "stars": 0
  },
  {
    "full_name": "nkkko/llm-whisper",
    "name": "llm-whisper",
    "description": "Use LLM with audio prompts transcribed by Whisper API",
    "html_url": [
      "https://github.com/nkkko/llm-whisper/blob/59d09e263144ba3a96fbf1e459ce541981dc8238/helper.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 892,
    "stars": 1
  },
  {
    "full_name": "danyQe/FRIDAY",
    "name": "FRIDAY",
    "description": "This Assistant  is   integrated with Gemini 1.0 pro LLM API and provided a voice an text interface to communicate with AI to complete user based task like webscraping,summarization of youtubed videos and pdf’s,sending whatsapp messages,playing music and many more",
    "html_url": [
      "https://github.com/danyQe/FRIDAY/blob/73ea02117e711682dd056a216242121aa617ce17/gemini_functions.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 5421,
    "stars": 1
  },
  {
    "full_name": "russellballestrini/opencompletion",
    "name": "opencompletion",
    "description": "Chatroom app where messages are sent to GPT, Claude, Mistral, Together, Grok, Groq, vLLM, Ollama & streamed to the frontend.",
    "html_url": [
      "https://github.com/russellballestrini/opencompletion/blob/91d61921925e0027f4b775347ffa13fec8c9a5fa/app.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 13581,
    "stars": 40
  },
  {
    "full_name": "SamG1123/Gemini-chat",
    "name": "Gemini-chat",
    "description": "Gemini based chatbot for personalised mentoring for high school student",
    "html_url": [
      "https://github.com/SamG1123/Gemini-chat/blob/cbb551a9321a674a0130b429469ebc884221ccc5/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2324655,
    "stars": 3
  },
  {
    "full_name": "Rishitabansal9/PdfQuery",
    "name": "PdfQuery",
    "description": "PDFQuery is a Streamlit-based web app that extracts text from uploaded PDF files and enables users to ask questions about the content. Powered by Google Generative AI embeddings and FAISS vector storage, PDFQuery provides fast and accurate answers based on the context of the PDFs.",
    "html_url": [
      "https://github.com/Rishitabansal9/PdfQuery/blob/0de6bfe09ea58eb3438ff85ba5cfa0f7e64cf67d/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py"
    ],
    "model": [
      "gemini"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3896539,
    "stars": 1
  },
  {
    "full_name": "gatemediang/Product-Classification-RAG-System",
    "name": "Product-Classification-RAG-System",
    "description": "A simple RAG system to group products into categories based on their description",
    "html_url": [
      "https://github.com/gatemediang/Product-Classification-RAG-System/blob/f8b0d17481664c39aaa5c3830b882dc4b2b618c7/venv/Lib/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py",
      "https://github.com/gatemediang/Product-Classification-RAG-System/blob/f8b0d17481664c39aaa5c3830b882dc4b2b618c7/venv/Lib/site-packages/llama_index/legacy/multi_modal_llms/openai_utils.py",
      "https://github.com/gatemediang/Product-Classification-RAG-System/blob/f8b0d17481664c39aaa5c3830b882dc4b2b618c7/venv/Lib/site-packages/llama_index/legacy/embeddings/azure_openai.py",
      "https://github.com/gatemediang/Product-Classification-RAG-System/blob/f8b0d17481664c39aaa5c3830b882dc4b2b618c7/venv/Lib/site-packages/llama_index/legacy/llms/azure_openai.py",
      "https://github.com/gatemediang/Product-Classification-RAG-System/blob/f8b0d17481664c39aaa5c3830b882dc4b2b618c7/venv/Lib/site-packages/llama_index/legacy/llms/openai_utils.py"
    ],
    "model": [
      "gemini",
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4119748,
    "stars": 0
  },
  {
    "full_name": "ChatAFLndss/ChatAFL",
    "name": "ChatAFL",
    "description": "Large Language Model guided Protocol Fuzzing (NDSS'24)",
    "html_url": [
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c",
      "https://github.com/ChatAFLndss/ChatAFL/blob/1ea603ebc0c78d2da9a2ceb9ca602267a3fedd3c/ChatAFL/chat-llm.c"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "c#"
    ],
    "fork": false,
    "loc": 141894,
    "stars": 340
  },
  {
    "full_name": "LumitoLuma/chatgpt-client",
    "name": "chatgpt-client",
    "description": "A simple ChatGPT client written in C",
    "html_url": [
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c",
      "https://github.com/LumitoLuma/chatgpt-client/blob/bd4b13db19b45c548bb8ef81a13feb42ff495680/chatgpt.c"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "c#"
    ],
    "fork": false,
    "loc": 855,
    "stars": 3
  },
  {
    "full_name": "semissioncontrol/openai.c",
    "name": "openai.c",
    "description": "C wrapper for accessing the OpenAI GPT-3 API",
    "html_url": [
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c",
      "https://github.com/semissioncontrol/openai.c/blob/2c34236479d18f3a4c707ae1e3e68069e6d8b103/src/requests.c"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "c#"
    ],
    "fork": false,
    "loc": 277,
    "stars": 0
  },
  {
    "full_name": "MrHuu/openai-3ds",
    "name": "openai-3ds",
    "description": "Open-AI playground for Nintendo 3DS",
    "html_url": [
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c",
      "https://github.com/MrHuu/openai-3ds/blob/f41453372c05824aff43f132e982799999d82a1d/src/main.c"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "c#"
    ],
    "fork": false,
    "loc": 4692,
    "stars": 1
  },
  {
    "full_name": "bwathomas/LLM_SchoolChoice",
    "name": "LLM_SchoolChoice",
    "description": "Code used for research on ChatGPT and school choice",
    "html_url": [
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c",
      "https://github.com/bwathomas/LLM_SchoolChoice/blob/e7f69f5d43f88382068323b6cfe15845d19f7a8c/chatgpt_query.c"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "c#"
    ],
    "fork": false,
    "loc": 27744,
    "stars": 0
  },
  {
    "full_name": "MertGunduz/mkhtml",
    "name": "mkhtml",
    "description": "mkhtml is an html document generator that works with gpt",
    "html_url": [
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/apiKeyMenu.c",
      "https://github.com/MertGunduz/mkhtml/blob/884c5234b1f571e71545ba489cab6f0f304c0a3a/src/gen/htmlGen.c"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "c#"
    ],
    "fork": false,
    "loc": 40944,
    "stars": 34
  },
  {
    "full_name": "theesfeld/lIeRC",
    "name": "lIeRC",
    "description": "LIERC - a fake irc chatroom populated by LLMs",
    "html_url": [
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c",
      "https://github.com/theesfeld/lIeRC/blob/4f049d0eddbb9b475438cf2e7fae34b340e593e4/lierc.c"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "c#"
    ],
    "fork": false,
    "loc": 1233,
    "stars": 0
  },
  {
    "full_name": "shuntaka9576/oax",
    "name": "oax",
    "description": "💥 CLI for OpenAI's ChatGPT",
    "html_url": [
      "https://github.com/shuntaka9576/oax/blob/2d8d154e0959e081c8f96b72763531cff0c3d0fa/openai/url.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 1309,
    "stars": 4
  },
  {
    "full_name": "ElmosHomie492/chatgpt-api",
    "name": "chatgpt-api",
    "description": "Simple API for interacting with OpenAI's ChatGPT. Currently supports gpt3.5-turbo",
    "html_url": [
      "https://github.com/ElmosHomie492/chatgpt-api/blob/9a3e038a250b9e1256024c42056df430bcb0c3ca/pkg/chatgpt/Constants.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 137,
    "stars": 0
  },
  {
    "full_name": "ieee0824/gopenai-api",
    "name": "gopenai-api",
    "description": null,
    "html_url": [
      "https://github.com/ieee0824/gopenai-api/blob/94df9806899b016dea2733a5d76f4d917580ec94/config/config.go",
      "https://github.com/ieee0824/gopenai-api/blob/94df9806899b016dea2733a5d76f4d917580ec94/api/api.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 756,
    "stars": 3
  },
  {
    "full_name": "pedrobertao/go-chatgpt",
    "name": "go-chatgpt",
    "description": "go-chatgpt-sdk",
    "html_url": [
      "https://github.com/pedrobertao/go-chatgpt/blob/72d922e10edb86c9960d485f9629a101d47cdaac/chat/constants.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 192,
    "stars": 1
  },
  {
    "full_name": "alwqx/infogpt",
    "name": "infogpt",
    "description": "info with GPT, made ChatGPT/LLM easy",
    "html_url": [
      "https://github.com/alwqx/infogpt/blob/9bff5519148b2ccfc237bb59c64c296e2ffaa004/library/constants.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 4802,
    "stars": 1
  },
  {
    "full_name": "anycable/twilio-ai-demo",
    "name": "twilio-ai-demo",
    "description": "Twilio Media Streams, OpenAI Realtime, and AnyCable example application",
    "html_url": [
      "https://github.com/anycable/twilio-ai-demo/blob/487ca2dff533e2c54402388a4356eacd7bc96186/cable/pkg/agent/config.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 3252,
    "stars": 16
  },
  {
    "full_name": "johnazedo/gpt-bot",
    "name": "gpt-bot",
    "description": "A telegram bot to chat with ChatGPT IA.",
    "html_url": [
      "https://github.com/johnazedo/gpt-bot/blob/1d830653ad33e874cb6c3d0395f27e423c20bab8/src/config/config.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 172,
    "stars": 0
  },
  {
    "full_name": "EgorKurito/openai-go-sdk",
    "name": "openai-go-sdk",
    "description": "Golang implementation for OpenAI API",
    "html_url": [
      "https://github.com/EgorKurito/openai-go-sdk/blob/2c0823735a27f2f6bee81d816a034fc176a9fcc5/config.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 417,
    "stars": 2
  },
  {
    "full_name": "ak9024/go-chatgpt-sdk",
    "name": "go-chatgpt-sdk",
    "description": "This Library Provides Unofficial Go Client SDK for OpenAI API",
    "html_url": [
      "https://github.com/ak9024/go-chatgpt-sdk/blob/edfae3bc827cafd6cfefd3b0087f6a2d48fd2be1/text.go",
      "https://github.com/ak9024/go-chatgpt-sdk/blob/edfae3bc827cafd6cfefd3b0087f6a2d48fd2be1/chat.go",
      "https://github.com/ak9024/go-chatgpt-sdk/blob/edfae3bc827cafd6cfefd3b0087f6a2d48fd2be1/images.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 600,
    "stars": 14
  },
  {
    "full_name": "MementoMori11723/V2V",
    "name": "V2V",
    "description": "Echo Flow (V2V) is a voice-driven web application that enables seamless text-to-speech and conversational AI interactions. Powered by the Google Text-to-Speech (TTS) API and OpenAI’s ChatGPT API.",
    "html_url": [
      "https://github.com/MementoMori11723/V2V/blob/4fa320bf05ed6f949476ef02591c9df4990172b4/config/api.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 1577,
    "stars": 2
  },
  {
    "full_name": "rchouinard/commit-assistant",
    "name": "commit-assistant",
    "description": "Commit Assistant is a utility designed to generate commit messages using AI text generation.",
    "html_url": [
      "https://github.com/rchouinard/commit-assistant/blob/75ef76eb09cf812c48027800258661de77f04177/assistant/openai_assistant.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 373,
    "stars": 0
  },
  {
    "full_name": "tab/cmt",
    "name": "cmt",
    "description": "command-line utility that generates Conventional Commit messages using OpenAI's GPT",
    "html_url": [
      "https://github.com/tab/cmt/blob/294954278a90ac67f2134a33984aeb843a716972/internal/gpt/client.go",
      "https://github.com/tab/cmt/blob/294954278a90ac67f2134a33984aeb843a716972/internal/gpt/gpt_test.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 4257,
    "stars": 3
  },
  {
    "full_name": "ahaostudy/shell_chat",
    "name": "shell_chat",
    "description": "基于Openai ChatGPT的终端版GPT",
    "html_url": [
      "https://github.com/ahaostudy/shell_chat/blob/f6eabd8b40a3a22fe704856813a1486f0be75986/config_dev/config.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 286,
    "stars": 3
  },
  {
    "full_name": "franciscoescher/goopenai",
    "name": "goopenai",
    "description": "This is a Go client library for the OpenAI API",
    "html_url": [
      "https://github.com/franciscoescher/goopenai/blob/6bfd4f0ff6b222f97934be2b28b8344fd49bcb40/endpoints.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 1431,
    "stars": 45
  },
  {
    "full_name": "nayonacademy/openai-go",
    "name": "openai-go",
    "description": "OpenAI golang library that will support, ChatGPT, GPT-3, GPT-4, DALL·E, Whisper API. This is a golang wrapper library",
    "html_url": [
      "https://github.com/nayonacademy/openai-go/blob/5eea4bdbcde7d2f229b2600e1ed4a615e42a1ff2/types/types.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 138,
    "stars": 0
  },
  {
    "full_name": "jake-landersweb/gollm",
    "name": "gollm",
    "description": "Convenient interface for interacting with multiple LLM providers in Go",
    "html_url": [
      "https://github.com/jake-landersweb/gollm/blob/b6bbea24be06a4dfeb4393dcd56f47ce7382addb/src/gollm/consts.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 2556,
    "stars": 2
  },
  {
    "full_name": "the-genemachine/Color-Prompt-Generator",
    "name": "Color-Prompt-Generator",
    "description": "Mastering OpenAI Python APIs: Unleash ChatGPT and GPT4",
    "html_url": [
      "https://github.com/the-genemachine/Color-Prompt-Generator/blob/d4391954e5b6dca0131384c2a57a57d8e0097e05/Golang-App/99-Miscellaneous-Files/chatgpt.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 2268,
    "stars": 0
  },
  {
    "full_name": "parakeet-nest/parakeet",
    "name": "parakeet",
    "description": "🦜🪺 Parakeet is a GoLang library, made to simplify the development of small generative AI applications with Ollama 🦙.",
    "html_url": [
      "https://github.com/parakeet-nest/parakeet/blob/c4d41d862effa4392c33ce1a4a8267b096905a84/examples/45-chat-stream-openai/main.go",
      "https://github.com/parakeet-nest/parakeet/blob/c4d41d862effa4392c33ce1a4a8267b096905a84/examples/49-embeddings-memory-openai/main.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 54566,
    "stars": 111
  },
  {
    "full_name": "initialcapacity/ai-starter",
    "name": "ai-starter",
    "description": "A starter application that shows data collection, embedding creation and querying, and text completion with OpenAI.",
    "html_url": [
      "https://github.com/initialcapacity/ai-starter/blob/fe60cde1eec392c55da96d3a631b8ae7c0fde8fd/cmd/app/main.go",
      "https://github.com/initialcapacity/ai-starter/blob/fe60cde1eec392c55da96d3a631b8ae7c0fde8fd/cmd/analyzer/main.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 4579,
    "stars": 4
  },
  {
    "full_name": "fsrv-xyz/ama-webapp",
    "name": "ama-webapp",
    "description": "POC: Ask me Anything web service based on OpenAI",
    "html_url": [
      "https://github.com/fsrv-xyz/ama-webapp/blob/ca69778c32c150f493fec917e1ff1d0f77f3dd3a/internal/clients/openai/client.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 296,
    "stars": 0
  },
  {
    "full_name": "FIFCOM/fine-grained-openai-proxy",
    "name": "fine-grained-openai-proxy",
    "description": "OpenAI API proxy with fine-grained access control, expiration control and remaining request limit.",
    "html_url": [
      "https://github.com/FIFCOM/fine-grained-openai-proxy/blob/098b9208eed839818b5db5b3c2988dfc1cd9fdc2/dao/model.go",
      "https://github.com/FIFCOM/fine-grained-openai-proxy/blob/098b9208eed839818b5db5b3c2988dfc1cd9fdc2/conf/config.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 1738,
    "stars": 1
  },
  {
    "full_name": "Suno-API/Suno-API",
    "name": "Suno-API",
    "description": "This is an unofficial Suno AI API based on Golang. It currently supports generating songs, lyrics, and OpenAI Chat",
    "html_url": [
      "https://github.com/Suno-API/Suno-API/blob/d9638a5b8c5c1336dfcf9110755ce1127fa796c7/common/envs.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 3528,
    "stars": 94
  },
  {
    "full_name": "adrianliechti/llama",
    "name": "llama",
    "description": "Inference Hub for AI at Scale",
    "html_url": [
      "https://github.com/adrianliechti/llama/blob/d39df66e29ecb0fec1c95a382e7fd233f7157be4/pkg/provider/openai/config.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 22692,
    "stars": 52
  },
  {
    "full_name": "ZuoFuhong/ChatGPT-IM",
    "name": "ChatGPT-IM",
    "description": "实时通讯 IM 系统接入 ChatGPT completion API 的绝佳实践案例",
    "html_url": [
      "https://github.com/ZuoFuhong/ChatGPT-IM/blob/cfd3dd0d882379a8d4ef2ac9ae2ec6068cafdbdd/backend/web/http_handler/media.go",
      "https://github.com/ZuoFuhong/ChatGPT-IM/blob/cfd3dd0d882379a8d4ef2ac9ae2ec6068cafdbdd/backend/logic/service/openai.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 42132,
    "stars": 71
  },
  {
    "full_name": "xoba/openai",
    "name": "openai",
    "description": "simple interface to openai's api",
    "html_url": [
      "https://github.com/xoba/openai/blob/f55b34328f7707cd95250e844fdde82c3a904a3e/request.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 1430,
    "stars": 0
  },
  {
    "full_name": "fruitbars/simple-one-api",
    "name": "simple-one-api",
    "description": "OpenAI 接口接入适配，支持千帆大模型平台、讯飞星火大模型、腾讯混元以及MiniMax、Deep-Seek，等兼容OpenAI接口，仅单可执行文件，配置超级简单，一键部署，开箱即用.  Seamlessly integrate with OpenAI and compatible APIs using a single executable for quick setup and deployment.",
    "html_url": [
      "https://github.com/fruitbars/simple-one-api/blob/ca803d850b809a0994dd6b0df492bbbf0124c5e8/pkg/embedding/oai/oai_embedding.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 12126,
    "stars": 2169
  },
  {
    "full_name": "szpnygo/VecTextSearch",
    "name": "VecTextSearch",
    "description": "一个99%由OpenAI ChatGPT开发的项目。A project that is 99% developed by OpenAI ChatGPT.",
    "html_url": [
      "https://github.com/szpnygo/VecTextSearch/blob/ec6a1a2861b1399b3463026980c02507702d3508/services/openai.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 11101,
    "stars": 209
  },
  {
    "full_name": "razertory/subdomain-llm-proxy",
    "name": "subdomain-llm-proxy",
    "description": "LLM proxy base on subdomain",
    "html_url": [
      "https://github.com/razertory/subdomain-llm-proxy/blob/b1a1914a725904f0b3a7b315e57c64b2b6706cfe/api/index.go",
      "https://github.com/razertory/subdomain-llm-proxy/blob/b1a1914a725904f0b3a7b315e57c64b2b6706cfe/main.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "blixt/openai-realtime",
    "name": "openai-realtime",
    "description": "Playing with the OpenAI Realtime API",
    "html_url": [
      "https://github.com/blixt/openai-realtime/blob/ab50fe4e420b9dddd637b9f107714d6bbeda1fc3/chat/openai.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 2121,
    "stars": 3
  },
  {
    "full_name": "damejeras/robo",
    "name": "robo",
    "description": "cli tool to convert natural language to shell commands with OpenAI",
    "html_url": [
      "https://github.com/damejeras/robo/blob/6f77850c3614d34c99fca4b352afd951a4b6eddc/main.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 71,
    "stars": 0
  },
  {
    "full_name": "elllusion/wechatbot",
    "name": "wechatbot",
    "description": "微信机器人(文字版) 使用了OpenAI chatGPT 大型预训练语言模型 gpt-3.5-turbo",
    "html_url": [
      "https://github.com/elllusion/wechatbot/blob/6beb6ef783dcd1363561a94a7b12e109936410c6/gpt-client/client.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 580,
    "stars": 37
  },
  {
    "full_name": "mengdcn/langchaingo",
    "name": "langchaingo",
    "description": "langchaingo",
    "html_url": [
      "https://github.com/mengdcn/langchaingo/blob/de55609930762b01ed8dab113e1614dcc00ae79c/examples/openai-function-call-example/openai_function_call_example.go",
      "https://github.com/mengdcn/langchaingo/blob/de55609930762b01ed8dab113e1614dcc00ae79c/llms/openai/internal/openaiclient/openaiclient.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 41961,
    "stars": 1
  },
  {
    "full_name": "DanPlayer/chatgpt-sdk",
    "name": "chatgpt-sdk",
    "description": "simple chatgpt sdk",
    "html_url": [
      "https://github.com/DanPlayer/chatgpt-sdk/blob/b655c0fba1593bca69be741c38649ed72dfc71c0/v1/answers.go",
      "https://github.com/DanPlayer/chatgpt-sdk/blob/b655c0fba1593bca69be741c38649ed72dfc71c0/v1/moderations.go",
      "https://github.com/DanPlayer/chatgpt-sdk/blob/b655c0fba1593bca69be741c38649ed72dfc71c0/v1/models.go",
      "https://github.com/DanPlayer/chatgpt-sdk/blob/b655c0fba1593bca69be741c38649ed72dfc71c0/v1/files.go",
      "https://github.com/DanPlayer/chatgpt-sdk/blob/b655c0fba1593bca69be741c38649ed72dfc71c0/v1/completions.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 1427,
    "stars": 7
  },
  {
    "full_name": "bluewolfali/chatgpt-turbo-sample-code",
    "name": "chatgpt-turbo-sample-code",
    "description": "This project utilizes gpt-3.5-turbo to enable seamless, uninterrupted chat conversations while also providing the ability to save and revisit previous conversations.",
    "html_url": [
      "https://github.com/bluewolfali/chatgpt-turbo-sample-code/blob/8b331b56250cf4d8ca37e8f2c9d72af627a6ef72/main.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 130,
    "stars": 4
  },
  {
    "full_name": "golang-infrastructure/openai-gosdk",
    "name": "openai-gosdk",
    "description": "https://platform.openai.com/docs/api-reference/introduction",
    "html_url": [
      "https://github.com/golang-infrastructure/openai-gosdk/blob/ab4f262c9f2a04c12b72215cee6b815080f2f0c5/embeddings.go",
      "https://github.com/golang-infrastructure/openai-gosdk/blob/ab4f262c9f2a04c12b72215cee6b815080f2f0c5/files.go",
      "https://github.com/golang-infrastructure/openai-gosdk/blob/ab4f262c9f2a04c12b72215cee6b815080f2f0c5/images.go",
      "https://github.com/golang-infrastructure/openai-gosdk/blob/ab4f262c9f2a04c12b72215cee6b815080f2f0c5/fine_tunes.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 1031,
    "stars": 1
  },
  {
    "full_name": "supreet321/GPTerminal",
    "name": "GPTerminal",
    "description": "A command line tool to interact with OpenAI's GPT API, written in Go.",
    "html_url": [
      "https://github.com/supreet321/GPTerminal/blob/6abfcbae271cc24fccd9b1f05eaf3ebc0f1e7441/core/openai.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 118,
    "stars": 0
  },
  {
    "full_name": "motolies/telegram-gpt-go",
    "name": "telegram-gpt-go",
    "description": "telegram-gpt-go",
    "html_url": [
      "https://github.com/motolies/telegram-gpt-go/blob/1f48773555be9a5d2d39337aea18cd3a13f42f73/pkg/openai/api.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 192,
    "stars": 0
  },
  {
    "full_name": "rakyll/openai-go",
    "name": "openai-go",
    "description": "Go client libraries for OpenAI",
    "html_url": [
      "https://github.com/rakyll/openai-go/blob/a24dddc7899464043986ea43c461efec0a284073/embedding/embedding.go",
      "https://github.com/rakyll/openai-go/blob/a24dddc7899464043986ea43c461efec0a284073/audio/audio.go",
      "https://github.com/rakyll/openai-go/blob/a24dddc7899464043986ea43c461efec0a284073/edit/edit.go",
      "https://github.com/rakyll/openai-go/blob/a24dddc7899464043986ea43c461efec0a284073/completion/completion.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 827,
    "stars": 452
  },
  {
    "full_name": "WqyJh/go-openai-realtime",
    "name": "go-openai-realtime",
    "description": "Golang SDK for OpenAI Realtime API",
    "html_url": [
      "https://github.com/WqyJh/go-openai-realtime/blob/5e45cbb1f315fbf1fc594518b1c5edd58fbd8cb0/config.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 4369,
    "stars": 29
  },
  {
    "full_name": "jtclarkjr/go-openai-rest-api",
    "name": "go-openai-rest-api",
    "description": "Go OpenAI ChatGPT REST API",
    "html_url": [
      "https://github.com/jtclarkjr/go-openai-rest-api/blob/1b96fb5a06eb3e8044791c8c5d1146ff684809a3/init.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 602,
    "stars": 0
  },
  {
    "full_name": "eloonstra/gopenai",
    "name": "gopenai",
    "description": "GopenAI is a lightweight Go library for interacting with the OpenAI API. It simplifies the process of making API requests and handling responses.",
    "html_url": [
      "https://github.com/eloonstra/gopenai/blob/2a4d454a408044fecaead9341e7a993e8fe2485d/requests/moderation.go",
      "https://github.com/eloonstra/gopenai/blob/2a4d454a408044fecaead9341e7a993e8fe2485d/requests/edit.go",
      "https://github.com/eloonstra/gopenai/blob/2a4d454a408044fecaead9341e7a993e8fe2485d/requests/completion.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 596,
    "stars": 2
  },
  {
    "full_name": "gptscript-ai/chat-completion-client",
    "name": "chat-completion-client",
    "description": "OpenAI Chat Completion Client for GPTScript",
    "html_url": [
      "https://github.com/gptscript-ai/chat-completion-client/blob/85c44096bc10cf1e469c21db1a73223aecd3ee19/config.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 1171,
    "stars": 3
  },
  {
    "full_name": "Nostalgiaaaa/ChatGPT-Golang",
    "name": "ChatGPT-Golang",
    "description": "chatgpt-web  golang版后端",
    "html_url": [
      "https://github.com/Nostalgiaaaa/ChatGPT-Golang/blob/c3eafc6af1065e415823c14e9abf53caaa697700/service/service.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 560,
    "stars": 27
  },
  {
    "full_name": "jayantsinghxyz/gptsh",
    "name": "gptsh",
    "description": "CLI tool written in Go to use Openai models(gpt-3.5-turbo) directly from terminal",
    "html_url": [
      "https://github.com/jayantsinghxyz/gptsh/blob/5402c0c4999c8c76b6e6165f0ef373dde93b6e1a/openai.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 213,
    "stars": 0
  },
  {
    "full_name": "kshard/embeddings",
    "name": "embeddings",
    "description": "adapter to different solution for creating vector embeddings",
    "html_url": [
      "https://github.com/kshard/embeddings/blob/c3f7f6a936f46032518d1621b0efad44a300e910/openai/openai.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 1316,
    "stars": 2
  },
  {
    "full_name": "nephen/simple-openai-api-proxy",
    "name": "simple-openai-api-proxy",
    "description": "A lightweight, easy-to-use HTTP proxy to interact with the OpenAI API. ",
    "html_url": [
      "https://github.com/nephen/simple-openai-api-proxy/blob/941f681421f2a82e73a93e42f3ea803fe5f5f661/api_proxy.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 141,
    "stars": 46
  },
  {
    "full_name": "SanHacks/AiGen",
    "name": "AiGen",
    "description": "Multi Model Personal Assistant Wrapper in Go: Interact with ChatGPT, Claude or Ollama Cross Platform (Speech & Image generation supported)",
    "html_url": [
      "https://github.com/SanHacks/AiGen/blob/a1926030e6aa08ebb449c97b63e7ab2e764692eb/Whisper.go",
      "https://github.com/SanHacks/AiGen/blob/a1926030e6aa08ebb449c97b63e7ab2e764692eb/aigenRest/callWhisper.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 4913,
    "stars": 14
  },
  {
    "full_name": "mengbin92/openai",
    "name": "openai",
    "description": "use OpenAI API with golang",
    "html_url": [
      "https://github.com/mengbin92/openai/blob/cc074d66bcaddfefbfb4243eb2d5f7e14d59315b/const.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 1431,
    "stars": 7
  },
  {
    "full_name": "ioki-mobility/summaraizer",
    "name": "summaraizer",
    "description": "Summarizes comments from a variety of sources, such as GitHub issues, Slack threads, Reddit posts, and more using AI models from different providers, such as Ollama, OpenAI, and more.",
    "html_url": [
      "https://github.com/ioki-mobility/summaraizer/blob/30f78b97674098ff3b881652d2038cfb63988948/openai.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 1843,
    "stars": 2
  },
  {
    "full_name": "numbertheory/chatgpt-go",
    "name": "chatgpt-go",
    "description": "Go client for ChatGPT",
    "html_url": [
      "https://github.com/numbertheory/chatgpt-go/blob/58097e1e5eb13bad4cdc200794db56b1fd776811/chat/chat.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 162,
    "stars": 0
  },
  {
    "full_name": "brutalzinn/action-chatgpt-me",
    "name": "action-chatgpt-me",
    "description": "A small readme editor to adapt me to Mac osx",
    "html_url": [
      "https://github.com/brutalzinn/action-chatgpt-me/blob/9519847bb2c55518539aee855b23ab6203cf5c9a/integrations/chatgpt.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 402,
    "stars": 0
  },
  {
    "full_name": "valueserveio/openai-assistants-go",
    "name": "openai-assistants-go",
    "description": "OpenAI Assistants API Golang Library. ",
    "html_url": [
      "https://github.com/valueserveio/openai-assistants-go/blob/623fa56f9fbfa94c6b8b70a15209be6a5dd782b5/threads.go",
      "https://github.com/valueserveio/openai-assistants-go/blob/623fa56f9fbfa94c6b8b70a15209be6a5dd782b5/runs.go",
      "https://github.com/valueserveio/openai-assistants-go/blob/623fa56f9fbfa94c6b8b70a15209be6a5dd782b5/crud.go",
      "https://github.com/valueserveio/openai-assistants-go/blob/623fa56f9fbfa94c6b8b70a15209be6a5dd782b5/vector_storage.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 1131,
    "stars": 0
  },
  {
    "full_name": "ibmendoza/chatgpt-go",
    "name": "chatgpt-go",
    "description": "Learn Go the Chatbot Way! (ChatGPT, Claude, Bard, etc)",
    "html_url": [
      "https://github.com/ibmendoza/chatgpt-go/blob/0f8abace8d4fb260ef1e6d95c0afa1830eaa939b/api_chatgpt.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 3476,
    "stars": 1
  },
  {
    "full_name": "mglslg/go-discord-gpt",
    "name": "go-discord-gpt",
    "description": "A Discord bot based on the OpenAI API, written in Golang",
    "html_url": [
      "https://github.com/mglslg/go-discord-gpt/blob/a683278145a6a430f9dbf59cd085f825d52adb26/cmd/openaisdk/api_sdk.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 707,
    "stars": 0
  },
  {
    "full_name": "EugenSleptsov/chatgpt",
    "name": "chatgpt",
    "description": "Simple telegram bot for openai GPT api in Golang",
    "html_url": [
      "https://github.com/EugenSleptsov/chatgpt/blob/bd6837700d21e2ec6dba848d1d700a5b9f999aa3/api/gpt/image.go",
      "https://github.com/EugenSleptsov/chatgpt/blob/bd6837700d21e2ec6dba848d1d700a5b9f999aa3/api/gpt/openai.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 2308,
    "stars": 7
  },
  {
    "full_name": "nvizero/autoGenTpl",
    "name": "autoGenTpl",
    "description": "auto generate template",
    "html_url": [
      "https://github.com/nvizero/autoGenTpl/blob/c700ca6a7b60e1d5c36cb937617df31d91f568d4/utils/http.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 2390,
    "stars": 1
  },
  {
    "full_name": "acolev/chatgpt-go",
    "name": "chatgpt-go",
    "description": "chatgpt api for go",
    "html_url": [
      "https://github.com/acolev/chatgpt-go/blob/26a9f8c44bae5df2e70812f4f835dbb02599253e/chatgpt/client.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 204,
    "stars": 0
  },
  {
    "full_name": "douglarek/llmverse",
    "name": "llmverse",
    "description": "A LLM discrod bot",
    "html_url": [
      "https://github.com/douglarek/llmverse/blob/285d4f13fb26ff724fbbac7b34cad80b90e7ce03/config/config_test.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 1378,
    "stars": 1
  },
  {
    "full_name": "sashabaranov/go-openai",
    "name": "go-openai",
    "description": "OpenAI ChatGPT, GPT-3, GPT-4, DALL·E, Whisper API wrapper for Go",
    "html_url": [
      "https://github.com/sashabaranov/go-openai/blob/56a9acf86fc3ce0e9030feafa346d64bade94027/config.go",
      "https://github.com/sashabaranov/go-openai/blob/56a9acf86fc3ce0e9030feafa346d64bade94027/api_internal_test.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 14017,
    "stars": 10053
  },
  {
    "full_name": "saplaum/gogpt-cli",
    "name": "gogpt-cli",
    "description": null,
    "html_url": [
      "https://github.com/saplaum/gogpt-cli/blob/d6869a4cf52c8ae2cb87f6276c3b4bc9db770169/main.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 75,
    "stars": 0
  },
  {
    "full_name": "SakuraAxy/ChatGPT-Cli",
    "name": "ChatGPT-Cli",
    "description": "This is A ChatGPT Client",
    "html_url": [
      "https://github.com/SakuraAxy/ChatGPT-Cli/blob/d3ae3eaa63f9b8f13c84466272ab8037e1d4d1bc/pkg/chat/chat.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 181,
    "stars": 3
  },
  {
    "full_name": "stillmatic/gollum",
    "name": "gollum",
    "description": "Production grade LLM-ops in Golang",
    "html_url": [
      "https://github.com/stillmatic/gollum/blob/18b8ac3a5c85726a151bc4f0f05016f9315ad17e/packages/queryplanner/queryplanner_test.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 4724,
    "stars": 55
  },
  {
    "full_name": "NatoBoram/lame",
    "name": "lame",
    "description": "A LLM-powered verification tool for explanatory comments in r/LeopardsAteMyFace",
    "html_url": [
      "https://github.com/NatoBoram/lame/blob/b785e1371806c7f0f39056e67f6d0149010727bc/openai_credentials_test.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 37349,
    "stars": 0
  },
  {
    "full_name": "aaronik/ai-functions",
    "name": "ai-functions",
    "description": "A collection of CLI utilities for easily interacting with OpenAI AIs",
    "html_url": [
      "https://github.com/aaronik/ai-functions/blob/f58782fd2158e8afcacdfd00cadbb9a3c51c7fdd/cmd/gen_image.go",
      "https://github.com/aaronik/ai-functions/blob/f58782fd2158e8afcacdfd00cadbb9a3c51c7fdd/cmd/crawl_web.go",
      "https://github.com/aaronik/ai-functions/blob/f58782fd2158e8afcacdfd00cadbb9a3c51c7fdd/cmd/primary.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 1772,
    "stars": 12
  },
  {
    "full_name": "BosNaufal/simple-rag-service",
    "name": "simple-rag-service",
    "description": "Simple RAG (Retrival Augmented Generation) Service to create custom knowledge on AI Service",
    "html_url": [
      "https://github.com/BosNaufal/simple-rag-service/blob/2695b3a1210bd2386fc40bff663a54807ef50d76/thirdparties/huggingface_chat.go",
      "https://github.com/BosNaufal/simple-rag-service/blob/2695b3a1210bd2386fc40bff663a54807ef50d76/thirdparties/openai_chat.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 4210,
    "stars": 0
  },
  {
    "full_name": "all-in-aigc/openai-go",
    "name": "openai-go",
    "description": "OpenAI Go SDK.",
    "html_url": [
      "https://github.com/all-in-aigc/openai-go/blob/44ab8e0b83bcc35c68a715e887c4f47a0ac022a7/client.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 527,
    "stars": 64
  },
  {
    "full_name": "devinjeon/kubectl-gpt",
    "name": "kubectl-gpt",
    "description": "Kubectl-GPT is a kubectl plugin to generate `kubectl` commands from natural language input by using GPT model.",
    "html_url": [
      "https://github.com/devinjeon/kubectl-gpt/blob/4b2836efb82bf8e95d8435c71716282f848c83a7/pkg/gpt/gpt.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 483,
    "stars": 61
  },
  {
    "full_name": "phildougherty/llmq",
    "name": "llmq",
    "description": "Go utility for quick searches from the command line",
    "html_url": [
      "https://github.com/phildougherty/llmq/blob/eb5312422ef85fb95abf17cae36601e6fed19b01/ai/client.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 251,
    "stars": 7
  },
  {
    "full_name": "telepace/voiceflow",
    "name": "voiceflow",
    "description": "voiceflow is a solution for LLM audio streaming",
    "html_url": [
      "https://github.com/telepace/voiceflow/blob/ff764d676d8883556eaaed6e02dfabd7f7654775/internal/llm/openai/openai.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 6904,
    "stars": 6
  },
  {
    "full_name": "popcell/chatgpt-proxy",
    "name": "chatgpt-proxy",
    "description": "ChatGPT proxy",
    "html_url": [
      "https://github.com/popcell/chatgpt-proxy/blob/277c1aec550dcf0e81a313f183bc2415bde0d275/api/api_proxy/chatgpt_api_proxy.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 783,
    "stars": 1
  },
  {
    "full_name": "luancgs/dracula-gpt-backend",
    "name": "dracula-gpt-backend",
    "description": "A Chat GPT backend instance to simulate Dracula responses.",
    "html_url": [
      "https://github.com/luancgs/dracula-gpt-backend/blob/9680d4eb3452f30c71fbc64b3db1e6b39f65a591/src/services/gpt.service.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 201,
    "stars": 0
  },
  {
    "full_name": "AndrewWooo/LLM_AI_Mavericks",
    "name": "LLM_AI_Mavericks",
    "description": null,
    "html_url": [
      "https://github.com/AndrewWooo/LLM_AI_Mavericks/blob/c593465acc9ab822f2d6210b55b3d8765caab5f8/api-chatgpt/main_test.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 8136,
    "stars": 0
  },
  {
    "full_name": "freesrz93/ask-gpt",
    "name": "ask-gpt",
    "description": "A CLI tool to chat with OpenAI LLMs via API. Support custom roles, conversation history and streaming output.",
    "html_url": [
      "https://github.com/freesrz93/ask-gpt/blob/03e77bdd4a6ad5105773fb6554ddfebe103c4df0/config.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 776,
    "stars": 1
  },
  {
    "full_name": "markmusic27/duo",
    "name": "duo",
    "description": "✶ An LLM extension of my workspace hosted on Notion ✶",
    "html_url": [
      "https://github.com/markmusic27/duo/blob/94f74b72c9a18e6050e713567718f51577bf265a/utils/ai.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 4179,
    "stars": 1
  },
  {
    "full_name": "ahr-i/ai-artist",
    "name": "ai-artist",
    "description": "An AI Artist application utilizing LLM and Stable Diffusion.",
    "html_url": [
      "https://github.com/ahr-i/ai-artist/blob/7284475e52f7e57d48874f00d010a4e591a29d32/backend/chatbot/openAPI/openAPI.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 1561,
    "stars": 4
  },
  {
    "full_name": "wooveep/chatserver-api",
    "name": "chatserver-api",
    "description": "基于OPENAI的ChatGPT API开发的AI助手系统 Chatserver-web   支持本地数据向量话提问 基于Golang语言的后端API服务",
    "html_url": [
      "https://github.com/wooveep/chatserver-api/blob/1f1372bbe84b88edab5b421e5cf715963063b9f6/internal/consts/consts.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 10542,
    "stars": 45
  },
  {
    "full_name": "masonictemple4/go-openai",
    "name": "go-openai",
    "description": "An interactive terminal experience for openai's ChatGPT",
    "html_url": [
      "https://github.com/masonictemple4/go-openai/blob/14690cd5703c30a5ac5efe0eb39768d805c689c7/internal/openai/images.go",
      "https://github.com/masonictemple4/go-openai/blob/14690cd5703c30a5ac5efe0eb39768d805c689c7/internal/openai/chat.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 687,
    "stars": 0
  },
  {
    "full_name": "Simplou/openai",
    "name": "openai",
    "description": "OpenAI API Library",
    "html_url": [
      "https://github.com/Simplou/openai/blob/fcb12650aa0414ff0d4b6f5a36896a5ca60c072a/whisper_test.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 1417,
    "stars": 1
  },
  {
    "full_name": "Plataforma-Simplou/openai",
    "name": "openai",
    "description": "OpenAI API Library",
    "html_url": [
      "https://github.com/Plataforma-Simplou/openai/blob/e32ee062f55b777afb3b87fc1f1ec3eee676d35f/whisper_test.go",
      "https://github.com/Plataforma-Simplou/openai/blob/e32ee062f55b777afb3b87fc1f1ec3eee676d35f/tts_test.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 1417,
    "stars": 0
  },
  {
    "full_name": "songquanpeng/one-api",
    "name": "one-api",
    "description": "OpenAI 接口管理 & 分发系统，支持 Azure、Anthropic Claude、Google PaLM 2 & Gemini、智谱 ChatGLM、百度文心一言、讯飞星火认知、阿里通义千问、360 智脑以及腾讯混元，可用于二次分发管理 key，仅单可执行文件，已打包好 Docker 镜像，一键部署，开箱即用. OpenAI key management & redistribution system, using a single API for all LLMs, and features an English UI.",
    "html_url": [
      "https://github.com/songquanpeng/one-api/blob/a858292b54175debf66fa8497b6cebe82cb8e865/relay/channeltype/url.go",
      "https://github.com/songquanpeng/one-api/blob/a858292b54175debf66fa8497b6cebe82cb8e865/web/berry/src/views/Token/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go",
      "javascript"
    ],
    "fork": false,
    "loc": 54172,
    "stars": 25659
  },
  {
    "full_name": "djun/wechatbot",
    "name": "wechatbot",
    "description": "为个人微信接入ChatGPT",
    "html_url": [
      "https://github.com/djun/wechatbot/blob/9e7ffcbd2d7ded949bfadec07833dcae4d99481c/gtp/gtp.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 298,
    "stars": 932
  },
  {
    "full_name": "lsongdev/chatgpt-cli",
    "name": "chatgpt-cli",
    "description": "This is a command-line interface (CLI) that uses OpenAI's GPT-3 model to provide conversational answers to user prompts.",
    "html_url": [
      "https://github.com/lsongdev/chatgpt-cli/blob/c77389dc1990636193afcd7463ddf902f4cd6ad0/main.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 226,
    "stars": 5
  },
  {
    "full_name": "setkyar/ask",
    "name": "ask",
    "description": "Access ChatGPT, Claude via terminal",
    "html_url": [
      "https://github.com/setkyar/ask/blob/e72c94519111e1e89ac2049751d087065456b572/internal/ai/openai.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 509,
    "stars": 3
  },
  {
    "full_name": "andreyvit/openai",
    "name": "openai",
    "description": "Best way to use ChatGPT/GPT-3 with Go: zero dependencies, tokenizer, under 1500 LOC",
    "html_url": [
      "https://github.com/andreyvit/openai/blob/373f01ee85a7237115cfc4b4771f96dafd474cab/complete.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 1483,
    "stars": 13
  },
  {
    "full_name": "tnvmadhav/llm-chat",
    "name": "llm-chat",
    "description": "Simple (in-memory) LLM chat application",
    "html_url": [
      "https://github.com/tnvmadhav/llm-chat/blob/1a90e2a97c20b8004d492901d1080edb8aa4ae2d/openai.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 332,
    "stars": 0
  },
  {
    "full_name": "jonntd/go-chatgpt-api1",
    "name": "go-chatgpt-api1",
    "description": "go-chatgpt-api",
    "html_url": [
      "https://github.com/jonntd/go-chatgpt-api1/blob/833c9ec95c96f69ff707c4ec203d11cb30ca57bb/middleware/authorization.go",
      "https://github.com/jonntd/go-chatgpt-api1/blob/833c9ec95c96f69ff707c4ec203d11cb30ca57bb/api/common.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 1577,
    "stars": 0
  },
  {
    "full_name": "AbacusGPT/Password-Strength-Checker",
    "name": "Password-Strength-Checker",
    "description": "Check the password strength via OpenAI",
    "html_url": [
      "https://github.com/AbacusGPT/Password-Strength-Checker/blob/1a08089ffbd337606ff01ac56748612144b08490/main.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 311,
    "stars": 0
  },
  {
    "full_name": "nathanSeixeiro/Wpp-Gpt-go",
    "name": "Wpp-Gpt-go",
    "description": "a bot in go integrated with ChatGPT for whatsapp",
    "html_url": [
      "https://github.com/nathanSeixeiro/Wpp-Gpt-go/blob/1bf778c9e84a7d8171755b1171535b1cebc360b3/zapgpt/main.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 149,
    "stars": 0
  },
  {
    "full_name": "CoolProgramme/chatgpt-web-to-api",
    "name": "chatgpt-web-to-api",
    "description": "chatgpt web 转 api",
    "html_url": [
      "https://github.com/CoolProgramme/chatgpt-web-to-api/blob/d5a621a8011e6cb20e7a594c9464ae2e6ed8334a/middleware/authorization.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 1878,
    "stars": 2
  },
  {
    "full_name": "andyantrim/ask",
    "name": "ask",
    "description": "A quick and easy way to query LLMs from your command line",
    "html_url": [
      "https://github.com/andyantrim/ask/blob/6f4d5793b94c3d76f16c93b09aec8f8073b56acf/ask.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 223,
    "stars": 1
  },
  {
    "full_name": "2g4/console-ai",
    "name": "console-ai",
    "description": "Console-based tool to query OpenAI directly, streamlining AI-powered insights from your terminal.",
    "html_url": [
      "https://github.com/2g4/console-ai/blob/25327fc3f64fb542d822e70cfe81d5936932a72d/data/db.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 479,
    "stars": 0
  },
  {
    "full_name": "robertoseba/gennie",
    "name": "gennie",
    "description": "Gennie - Cli assistant with profiles and different LLMs",
    "html_url": [
      "https://github.com/robertoseba/gennie/blob/4af44d13781b8fdc0b110f5bc9ea9bd73374e21c/internal/core/models/openai/provider.go",
      "https://github.com/robertoseba/gennie/blob/4af44d13781b8fdc0b110f5bc9ea9bd73374e21c/internal/core/models/base_test.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 4105,
    "stars": 4
  },
  {
    "full_name": "smilingpoplar/translate",
    "name": "translate",
    "description": "translate using google, openai",
    "html_url": [
      "https://github.com/smilingpoplar/translate/blob/4d325e0a8fa2f8261b3ec78e93c824149ae6bd3a/translator/openai/openai.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 1097,
    "stars": 0
  },
  {
    "full_name": "tpdns90321/auto-lyricer",
    "name": "auto-lyricer",
    "description": "LLM을 활용한 노래 가사 자막 자동화",
    "html_url": [
      "https://github.com/tpdns90321/auto-lyricer/blob/69be7ec1429abc114a7b1d06e1aac1034da4f966/backend/openai.go",
      "https://github.com/tpdns90321/auto-lyricer/blob/69be7ec1429abc114a7b1d06e1aac1034da4f966/backend/complectionGpt4o.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 9048,
    "stars": 1
  },
  {
    "full_name": "sercanarga/fuckregex",
    "name": "fuckregex",
    "description": "this ai tool(gpt-3.5) is for those who hate regex!",
    "html_url": [
      "https://github.com/sercanarga/fuckregex/blob/de08b38e02fa4f578a2f549be139f9de6a799822/internal/openai_request.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 793,
    "stars": 91
  },
  {
    "full_name": "0x9ef/openai-go",
    "name": "openai-go",
    "description": "OpenAI GPT-3/3.5/4 API client written in Go",
    "html_url": [
      "https://github.com/0x9ef/openai-go/blob/1a690b5e7fa0b8a7216cf9b53dd02bc6acf921bb/openai.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 1061,
    "stars": 20
  },
  {
    "full_name": "eric-jacobson/terminal-gipity",
    "name": "terminal-gipity",
    "description": "A terminal based AI chat bot using the Open AI gpt-3.5-turbo API",
    "html_url": [
      "https://github.com/eric-jacobson/terminal-gipity/blob/415182b3f8cfb47c2fa95ad1f0b1e69b366d736b/main.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 102,
    "stars": 0
  },
  {
    "full_name": "davidhbaek/llm",
    "name": "llm",
    "description": null,
    "html_url": [
      "https://github.com/davidhbaek/llm/blob/663cdf1caf2e98ce1297054f3aaaae5d85d0ce3c/internal/openai/client.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 887,
    "stars": 0
  },
  {
    "full_name": "rokiyama/gpt-prompter-backend",
    "name": "gpt-prompter-backend",
    "description": "Blog post: Expo でのモバイルアプリ開発、ローカル環境からストア公開まで https://okiyama.dev/posts/2023-07-16-expo-development-react-native-app/",
    "html_url": [
      "https://github.com/rokiyama/gpt-prompter-backend/blob/f756222a726e089a9b90cfe117508ac3fecc5224/functions/message-func/main.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 7803,
    "stars": 0
  },
  {
    "full_name": "rovergulf/openai",
    "name": "openai",
    "description": "OpenAI API Golang library",
    "html_url": [
      "https://github.com/rovergulf/openai/blob/ce8900c57c7fb099d69576ca0d1720aca10ca626/client.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 1412,
    "stars": 0
  },
  {
    "full_name": "mr-joshcrane/goracle",
    "name": "goracle",
    "description": "A helpful LLM Framework",
    "html_url": [
      "https://github.com/mr-joshcrane/goracle/blob/bf48d5919621a9adf8f3ab39058ac7073646e9f4/client/openai/voice.go",
      "https://github.com/mr-joshcrane/goracle/blob/bf48d5919621a9adf8f3ab39058ac7073646e9f4/client/openai/verbiage.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 2806,
    "stars": 10
  },
  {
    "full_name": "jepbarasgarov/slack-bot-coala-AI",
    "name": "slack-bot-coala-AI",
    "description": "Integrating slack bot to channel which is connected to openAI",
    "html_url": [
      "https://github.com/jepbarasgarov/slack-bot-coala-AI/blob/1080ea7e95e6c15d96d2a9e0110fad34d01e0d3b/main.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 171,
    "stars": 7
  },
  {
    "full_name": "tan-t/llmsay",
    "name": "llmsay",
    "description": "lightweight CLI made with golang, which does nothing but calling LLM from your command line.",
    "html_url": [
      "https://github.com/tan-t/llmsay/blob/d97c70bc0b5ca8c69b01725baa8c3c13fb68efbe/client.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 342,
    "stars": 0
  },
  {
    "full_name": "Elixir-Craft/terminalAI",
    "name": "terminalAI",
    "description": "Command-line tool for AI-powered text and code generation using Gemini AI, OpenAI and GPT4ALL APIs.",
    "html_url": [
      "https://github.com/Elixir-Craft/terminalAI/blob/70a61186fcf96e9ced8460672f9b6fe464b7ea10/models/openai.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 625,
    "stars": 4
  },
  {
    "full_name": "bz888/blab",
    "name": "blab",
    "description": "TUI for communicating to local or remote LLM",
    "html_url": [
      "https://github.com/bz888/blab/blob/04826fa63ecc6968253af60c380e67d0b5beedef/internal/api/server/main.go",
      "https://github.com/bz888/blab/blob/04826fa63ecc6968253af60c380e67d0b5beedef/internal/api/server/client/openai_client.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 2077,
    "stars": 1
  },
  {
    "full_name": "CalebZoe/go-summarization",
    "name": "go-summarization",
    "description": "summarize a passage using openai API ",
    "html_url": [
      "https://github.com/CalebZoe/go-summarization/blob/9060c39b9c265dc43069dcdbb4f54aaf3b3f3fe7/summarize_test.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 250,
    "stars": 0
  },
  {
    "full_name": "TalhaBruh/Langchain-made-for-Go",
    "name": "Langchain-made-for-Go",
    "description": "Langchain implementation in Go, enabling developers to build applications with LLMs through composability. It includes example usage and references for creating AI-driven applications, such as generating company name suggestions.",
    "html_url": [
      "https://github.com/TalhaBruh/Langchain-made-for-Go/blob/c58dd971375af01d73838ccd8b537b9f7ea987ff/llms/openai/openaillm_option.go",
      "https://github.com/TalhaBruh/Langchain-made-for-Go/blob/c58dd971375af01d73838ccd8b537b9f7ea987ff/llms/openai/internal/openaiclient/openaiclient.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 45111,
    "stars": 1
  },
  {
    "full_name": "Utility-Gods/gottem",
    "name": "gottem",
    "description": "a cli app written in golang to use LLM like never before",
    "html_url": [
      "https://github.com/Utility-Gods/gottem/blob/5fc876b5ee07cc5644bb3b6f95a6577e975f7fb0/internal/api/openai.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 2223,
    "stars": 2
  },
  {
    "full_name": "samiam2013/crossfire",
    "name": "crossfire",
    "description": "some dumb glue code attempting to get AI LLMs to fight one another",
    "html_url": [
      "https://github.com/samiam2013/crossfire/blob/8284096d0d93697a1301aeb3bb27a42efe235e2c/openai/chatgpt.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 409,
    "stars": 0
  },
  {
    "full_name": "OlofMoriya/claude",
    "name": "claude",
    "description": "Test implementation of claude",
    "html_url": [
      "https://github.com/OlofMoriya/claude/blob/154adc9d9f0095ccaa6384e224df3bee28c8a75b/models/open-ai-4o/open-ai-o-model.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 1963,
    "stars": 1
  },
  {
    "full_name": "AvicennaJr/ShellMate",
    "name": "ShellMate",
    "description": "Your very own terminal AI assisstant 🤖",
    "html_url": [
      "https://github.com/AvicennaJr/ShellMate/blob/42938e868486385cd82b66ab46d65814baec825b/main.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 181,
    "stars": 29
  },
  {
    "full_name": "Kardbord/gopenai",
    "name": "gopenai",
    "description": "Unofficial Go (Golang) bindings for the OpenAI API.",
    "html_url": [
      "https://github.com/Kardbord/gopenai/blob/fdf8d8f196066064435a6cac76965b826c37bed1/moderations/moderations.go",
      "https://github.com/Kardbord/gopenai/blob/fdf8d8f196066064435a6cac76965b826c37bed1/files/files.go",
      "https://github.com/Kardbord/gopenai/blob/fdf8d8f196066064435a6cac76965b826c37bed1/audio/audio.go",
      "https://github.com/Kardbord/gopenai/blob/fdf8d8f196066064435a6cac76965b826c37bed1/chat/chat.go",
      "https://github.com/Kardbord/gopenai/blob/fdf8d8f196066064435a6cac76965b826c37bed1/completions/completions.go",
      "https://github.com/Kardbord/gopenai/blob/fdf8d8f196066064435a6cac76965b826c37bed1/images/images.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 2317,
    "stars": 8
  },
  {
    "full_name": "nexptr/llmchain",
    "name": "llmchain",
    "description": "Go language implementation of LangChain.",
    "html_url": [
      "https://github.com/nexptr/llmchain/blob/95f5f5d18bec04c8e9fc7667ed419a50a43baee2/llms/openai/openai.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 3608,
    "stars": 1
  },
  {
    "full_name": "copyleftdev/shellbot",
    "name": "shellbot",
    "description": "ShellBot is a vibrant CLI tool that leverages OpenAI's cutting-edge AI to provide expert guidance on computer science, cloud computing, and Linux systems. Designed for tech enthusiasts and IT professionals alike, ShellBot answers your queries, troubleshoots issues, and shares best practices—all with a splash of color for enhanced readability",
    "html_url": [
      "https://github.com/copyleftdev/shellbot/blob/92f535d6d6b602090efcac25a958e0e2db797186/shellbot.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 160,
    "stars": 0
  },
  {
    "full_name": "azr4e1/gollum",
    "name": "gollum",
    "description": "A small LLM client library",
    "html_url": [
      "https://github.com/azr4e1/gollum/blob/c9df13f0d414cfa4cf1a3320c76e824b7daf9436/openai/openai.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 2242,
    "stars": 0
  },
  {
    "full_name": "codazoda/ask",
    "name": "ask",
    "description": "A command-line tool for passing questions to the OpenAI API.",
    "html_url": [
      "https://github.com/codazoda/ask/blob/d6a0ea0c3a5ac49c1330feefb55398613105efa0/ask.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 235,
    "stars": 0
  },
  {
    "full_name": "IceBearAI/LLM-And-More",
    "name": "LLM-And-More",
    "description": "LLM-And-More is a professional, plug-and-play, llm trainer and application builder that guides you through the complete LLM workflow from data to evaluation, from training to deployment, from idea to sevice. / LLM-And-More 是一个专业、开箱即用的大模型训练及应用构建一站式解决方案，包含从数据到评估、从训练到部署、从想法到服务的全流程最佳实践。",
    "html_url": [
      "https://github.com/IceBearAI/LLM-And-More/blob/95ca1d266c213f22d1f35e17e96407d353625010/src/services/chat/openai.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 103465,
    "stars": 381
  },
  {
    "full_name": "ZayaanRahman/shellm",
    "name": "shellm",
    "description": "> llm powered terminal assistant",
    "html_url": [
      "https://github.com/ZayaanRahman/shellm/blob/9cdfb586992fc552db0d34ed7ad973652d1e31b9/commands.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 226,
    "stars": 1
  },
  {
    "full_name": "natexcvi/go-llm",
    "name": "go-llm",
    "description": "A framework for building LLM based agents and integrating them into larger applications.",
    "html_url": [
      "https://github.com/natexcvi/go-llm/blob/8e57d48d55022cffb1d416e0dc16f9b23af4d97d/engines/openai.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 32394,
    "stars": 135
  },
  {
    "full_name": "rezkam/gritty",
    "name": "gritty",
    "description": "Generate Git commit messages using GPT",
    "html_url": [
      "https://github.com/rezkam/gritty/blob/e423a3d4380f6d21b90ee40fb91a0bd9ad9a35e4/openai/openai.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 414,
    "stars": 0
  },
  {
    "full_name": "vildzi/llm-providers",
    "name": "llm-providers",
    "description": "Golang library to access multiple LLM platforms with a unified API",
    "html_url": [
      "https://github.com/vildzi/llm-providers/blob/9b0fca35971974bcc6a5540f27a839b9df9ad25b/textproviders/openai.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 265,
    "stars": 0
  },
  {
    "full_name": "liampulles/convogen",
    "name": "convogen",
    "description": "Experiments in creating conversations between independent LLM-driven agents",
    "html_url": [
      "https://github.com/liampulles/convogen/blob/089ab624781cec1d177dfb80abd8df06afd440fd/llm.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 220,
    "stars": 0
  },
  {
    "full_name": "SuInk/QQ-ChatGPT-Bot",
    "name": "QQ-ChatGPT-Bot",
    "description": "实现ChatGPT qq机器人聊天功能，使用gpt-3.5-turbo基于go-cqhttp+golang, 支持联系上下文对话, 关键词触发, 多平台使用",
    "html_url": [
      "https://github.com/SuInk/QQ-ChatGPT-Bot/blob/85b55710674469e56c9ec93d4be3285674143752/config/config.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 653,
    "stars": 45
  },
  {
    "full_name": "bnallapeta/ai-image-gen",
    "name": "ai-image-gen",
    "description": "AI based image generator using OpenAI's DALL-E",
    "html_url": [
      "https://github.com/bnallapeta/ai-image-gen/blob/4347efec65c76b753a5d3c9e3cb820b1172b173a/main.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 125,
    "stars": 0
  },
  {
    "full_name": "pura/autogen",
    "name": "autogen",
    "description": null,
    "html_url": [
      "https://github.com/pura/autogen/blob/9c7076510403a39c7468c94c1165fd795cfbb0c1/api/controllers/TitleController.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 305,
    "stars": 0
  },
  {
    "full_name": "ConnectAI-E/Feishu-Vector-Knowledge-Management",
    "name": "Feishu-Vector-Knowledge-Management",
    "description": "🎒 私有知识库机器人，基于向量数据库和openai实现。",
    "html_url": [
      "https://github.com/ConnectAI-E/Feishu-Vector-Knowledge-Management/blob/5e80b06dc96dc2287b908c9efec08baa96bab385/internal/initialization/config.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 10935,
    "stars": 148
  },
  {
    "full_name": "tmc/langchaingo",
    "name": "langchaingo",
    "description": "LangChain for Go, the easiest way to write LLM-based programs in Go",
    "html_url": [
      "https://github.com/tmc/langchaingo/blob/238d1c713de3ca983e8f6066af6b9080c9b0e088/llms/openai/openaillm_option.go",
      "https://github.com/tmc/langchaingo/blob/238d1c713de3ca983e8f6066af6b9080c9b0e088/llms/openai/internal/openaiclient/openaiclient.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 79080,
    "stars": 6819
  },
  {
    "full_name": "missuo/openai-translate",
    "name": "openai-translate",
    "description": "Build your own OpenAI translation API",
    "html_url": [
      "https://github.com/missuo/openai-translate/blob/f0cc81e825ec8654c944aa1ce45044286f0f1e6b/main.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 315,
    "stars": 63
  },
  {
    "full_name": "EthanCampana/go-openai",
    "name": "go-openai",
    "description": "Unoffical Go Open-Ai API Wrapper",
    "html_url": [
      "https://github.com/EthanCampana/go-openai/blob/3a074846932efc094298c24dcc2c5e9c9447896e/client.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 1078,
    "stars": 1
  },
  {
    "full_name": "hktalent/ChatGPT-API",
    "name": "ChatGPT-API",
    "description": "OpenAI ChatGPT, GPT-3, ChatGPT-API for go,ChatGPT in bash shell command line",
    "html_url": [
      "https://github.com/hktalent/ChatGPT-API/blob/cf596f3dcf7daca7b3e6dfb212b61af4de22b5ca/gtp.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 405,
    "stars": 10
  },
  {
    "full_name": "carterharrison/autostruct",
    "name": "autostruct",
    "description": "fill in your golang structs with gpt",
    "html_url": [
      "https://github.com/carterharrison/autostruct/blob/caaa75adee14175be1eae744b4a3408b75c43696/autostruct.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 272,
    "stars": 3
  },
  {
    "full_name": "windrivder/go-openai",
    "name": "go-openai",
    "description": "OpenAI ChatGPT, GPT-3, GPT-4, DALL·E, Whisper API wrapper for Go",
    "html_url": [
      "https://github.com/windrivder/go-openai/blob/68b74608b75eb38f15f600c023e24ba2b43b6c6e/api_internal_test.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 10060,
    "stars": 0
  },
  {
    "full_name": "Glioh/ai-quiz-project",
    "name": "ai-quiz-project",
    "description": "Quiz Generation Platform Leveraging AI to curb low user base for teachers",
    "html_url": [
      "https://github.com/Glioh/ai-quiz-project/blob/efed3cfc810630f921797b67d1976e01a0357e33/backend/internal/service/gen.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 5627,
    "stars": 0
  },
  {
    "full_name": "pkoukk/chatgpt-cli",
    "name": "chatgpt-cli",
    "description": "CLI app in gpt-3.5.Keep,restore,share your conversion in files.No worry when website busy",
    "html_url": [
      "https://github.com/pkoukk/chatgpt-cli/blob/76d4c1450fc2f762fcb4f9486269f7c7440d1b63/ui/io.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 977,
    "stars": 11
  },
  {
    "full_name": "iimeta/fastapi-sdk",
    "name": "fastapi-sdk",
    "description": "智元 Fast API 是一站式API管理系统，将各类LLM API进行统一格式、统一规范、统一管理，使其在功能、性能和用户体验上达到极致。",
    "html_url": [
      "https://github.com/iimeta/fastapi-sdk/blob/f67fe7ccfe887b34a4f28e833df4ae290c1b3d0d/realtime.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 6925,
    "stars": 36
  },
  {
    "full_name": "ruiokazaki-archive/gpt-naming",
    "name": "gpt-naming",
    "description": "Have them name their programming using GPT-3.",
    "html_url": [
      "https://github.com/ruiokazaki-archive/gpt-naming/blob/a497302d318335c112ac141b8b0ec097825af368/main.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 231,
    "stars": 4
  },
  {
    "full_name": "felicepng/moodboard",
    "name": "moodboard",
    "description": "A minimalistic application for generating mood boards using OpenAI API, Go and SolidJS",
    "html_url": [
      "https://github.com/felicepng/moodboard/blob/c46f41353fbc5a8cb48f09ca409e2ace78ab2972/server/openai/openai.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 4423,
    "stars": 0
  },
  {
    "full_name": "vorobeyme/chatgpt-telegram-bot",
    "name": "chatgpt-telegram-bot",
    "description": ":robot: Example telegram bot written in Go that uses the OpenAI API to have conversations with the GPT-3 model.",
    "html_url": [
      "https://github.com/vorobeyme/chatgpt-telegram-bot/blob/1c9ed2dcf30514d2f2303308e001f377f51d70f2/gpt.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 348,
    "stars": 1
  },
  {
    "full_name": "devalexandre/mylangchaingo",
    "name": "mylangchaingo",
    "description": "this repository have my resources for langchaingo",
    "html_url": [
      "https://github.com/devalexandre/mylangchaingo/blob/393d7d4090b899aee78d421306f28c1a4ab532d2/llms/openai/openaillm_option.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 4527,
    "stars": 2
  },
  {
    "full_name": "songtianlun/git-commit-generator",
    "name": "git-commit-generator",
    "description": "A git commit generator (translator) implemented based on OpenAI, which takes Chinese descriptions as input and outputs standard commits.",
    "html_url": [
      "https://github.com/songtianlun/git-commit-generator/blob/4014a79333edaf531e12530ddaec23b06ba1f076/main.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 528,
    "stars": 0
  },
  {
    "full_name": "adanomad/embedding",
    "name": "embedding",
    "description": "A playground for embeddings",
    "html_url": [
      "https://github.com/adanomad/embedding/blob/e28d3545230c5a5137799f5bb23212e42e539524/playground/process.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 5744,
    "stars": 0
  },
  {
    "full_name": "xops-infra/go-openai",
    "name": "go-openai",
    "description": "OpenAI ChatGPT, GPT-3, GPT-4, DALL·E, Whisper API wrapper for Go，Simultaneously supporting Azure.",
    "html_url": [
      "https://github.com/xops-infra/go-openai/blob/a5cdfb44c252175a49377ff69f8df8d64ab4bb5e/api_internal_test.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 13264,
    "stars": 0
  },
  {
    "full_name": "jatinparab/openai-org-bill-splitter",
    "name": "openai-org-bill-splitter",
    "description": "A script that splits the bill of an OpenAI org by users according to their usage",
    "html_url": [
      "https://github.com/jatinparab/openai-org-bill-splitter/blob/087d3e4b444ff86e01b4d0bdef4908a44d2d3063/openai/client.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 272,
    "stars": 0
  },
  {
    "full_name": "jayfromhcomm/sox_v1",
    "name": "sox_v1",
    "description": "Sox (from the Buzz Lightyear movie) as a CLI based ChatGPT-3 powered assistant.",
    "html_url": [
      "https://github.com/jayfromhcomm/sox_v1/blob/d2fc25dd8bec5d906c2d6ce7e123cf78302f04f1/src/go/test2.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 433,
    "stars": 0
  },
  {
    "full_name": "whyiyhw/chatgpt-wechat",
    "name": "chatgpt-wechat",
    "description": "企业微信/微信 安全使用的 ChatGPT 个人助手应用",
    "html_url": [
      "https://github.com/whyiyhw/chatgpt-wechat/blob/aa1ad178c0b439e9a68855178f2acd190940e8f3/chat/service/chat/api/internal/config/config.go",
      "https://github.com/whyiyhw/chatgpt-wechat/blob/aa1ad178c0b439e9a68855178f2acd190940e8f3/chat/service/chat/api/internal/logic/customerchatlogic.go",
      "https://github.com/whyiyhw/chatgpt-wechat/blob/aa1ad178c0b439e9a68855178f2acd190940e8f3/chat/service/chat/api/internal/logic/chatlogic.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 25309,
    "stars": 1051
  },
  {
    "full_name": "shoet/gpt-chat",
    "name": "gpt-chat",
    "description": null,
    "html_url": [
      "https://github.com/shoet/gpt-chat/blob/c91cdce1a7ea61a4f2f57e426f7dc40682391411/service/chatgpt.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 1258,
    "stars": 0
  },
  {
    "full_name": "Kappa56799/ChatGpt-in-Terminal",
    "name": "ChatGpt-in-Terminal",
    "description": "ChatGPT in Terminal Written in Go",
    "html_url": [
      "https://github.com/Kappa56799/ChatGpt-in-Terminal/blob/2ed6fb87ce2a028e43fb3925a6edf5a8d670e7af/NoOcr.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 277,
    "stars": 1
  },
  {
    "full_name": "bradyjoslin/assembllm-openai-go",
    "name": "assembllm-openai-go",
    "description": null,
    "html_url": [
      "https://github.com/bradyjoslin/assembllm-openai-go/blob/f46a66e85cfe6e1edadba520dd85a45d812c6ef8/main.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 223,
    "stars": 0
  },
  {
    "full_name": "detrin/perun",
    "name": "perun",
    "description": "A simple bash script to use wttr.in + openai to produce spoken weather prognosis from terminal. ",
    "html_url": [
      "https://github.com/detrin/perun/blob/0409171d6f7ce39d9560d690e97a5ebe75c176e5/main.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 243,
    "stars": 0
  },
  {
    "full_name": "modfin/bellman",
    "name": "bellman",
    "description": "Golang lib for LLM APIs, ChatGPT, Gemini and Anthropic",
    "html_url": [
      "https://github.com/modfin/bellman/blob/332bde1da82b4f0785450a3f8ef8af10e68840d9/services/openai/llm.go",
      "https://github.com/modfin/bellman/blob/332bde1da82b4f0785450a3f8ef8af10e68840d9/services/openai/models.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 6148,
    "stars": 56
  },
  {
    "full_name": "ohnotnow/gepetto-cli",
    "name": "gepetto-cli",
    "description": "Simple golang cli program to answer questions via OpenAI chat APIs",
    "html_url": [
      "https://github.com/ohnotnow/gepetto-cli/blob/2abdf51a748515c2fee05fd3c67afb0a28d10383/gepetto.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 232,
    "stars": 0
  },
  {
    "full_name": "teilomillet/raggo",
    "name": "raggo",
    "description": "A lightweight, production-ready RAG (Retrieval Augmented Generation) library in Go.",
    "html_url": [
      "https://github.com/teilomillet/raggo/blob/1c4590916caf946068f38f838c7191fd6409b203/rag/providers/openai.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 8971,
    "stars": 96
  },
  {
    "full_name": "blixt/go-llms",
    "name": "go-llms",
    "description": "A simple way to deal with streaming text, tools, images from LLMs.",
    "html_url": [
      "https://github.com/blixt/go-llms/blob/8e2ce69483ae5f751be9e8a1c9beaa8d4c7f03c0/openai/openai.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 6925,
    "stars": 0
  },
  {
    "full_name": "leafduo/chatgpt-telegram-bot",
    "name": "chatgpt-telegram-bot",
    "description": "Telegram bot for ChatGPT",
    "html_url": [
      "https://github.com/leafduo/chatgpt-telegram-bot/blob/06884523b5426388cc02c25297b2d74c39d66e88/main.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 571,
    "stars": 160
  },
  {
    "full_name": "glide-im/chat-gpt-bot",
    "name": "chat-gpt-bot",
    "description": "接入 ChatGPT 的机器人案例",
    "html_url": [
      "https://github.com/glide-im/chat-gpt-bot/blob/043298c38f5914be04399bd9ae3c3ee50f11a322/openai/gpt.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 633,
    "stars": 3
  },
  {
    "full_name": "pedcapa/autogpt-api",
    "name": "autogpt-api",
    "description": "A unified API built with Go and Fiber for interacting with language models from OpenAI, Google, and Anthropic, with usage tracking and cost management via MongoDB.",
    "html_url": [
      "https://github.com/pedcapa/autogpt-api/blob/b6605ebca1c6d7fa808cefdb6041d12219459294/handlers/openai.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 765,
    "stars": 0
  },
  {
    "full_name": "gtoxlili/openai-forward-fiber",
    "name": "openai-forward-fiber",
    "description": "Forward OpenAI services easily with Openai-Forward-Fiber.",
    "html_url": [
      "https://github.com/gtoxlili/openai-forward-fiber/blob/45b570ac924f61d57ad2e2b3088debb96e65ab68/route/openai.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 1400,
    "stars": 1
  },
  {
    "full_name": "Yilimmilk/Tofu-Proxy",
    "name": "Tofu-Proxy",
    "description": "A project based on GO language that can proxy OpenAI and Cloudflare APIs",
    "html_url": [
      "https://github.com/Yilimmilk/Tofu-Proxy/blob/dc8feeca3eb79aa163c2abacf69664baa9d8164f/main.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 270,
    "stars": 0
  },
  {
    "full_name": "patnaikshekhar/Krayon",
    "name": "Krayon",
    "description": "A CLI for interacting with LLMs",
    "html_url": [
      "https://github.com/patnaikshekhar/Krayon/blob/0125a41901edcf7ac125809907be6c6fa6ea39fb/internal/llm/openai.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 2633,
    "stars": 0
  },
  {
    "full_name": "milliorn/chatgpt-cli",
    "name": "chatgpt-cli",
    "description": "Chat with OpenAI GPT-3 using Golang or NodeJs",
    "html_url": [
      "https://github.com/milliorn/chatgpt-cli/blob/10402b4fb3709d64ee06387f005e77de9086cae2/golang/main.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 415,
    "stars": 1
  },
  {
    "full_name": "basenana/friday",
    "name": "friday",
    "description": "Friday is an intelligent question-answering system that leverages knowledge base vectorization and large language models.",
    "html_url": [
      "https://github.com/basenana/friday/blob/04ebf03da9e904846acc2798118161908060cd6b/config/config.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 8776,
    "stars": 6
  },
  {
    "full_name": "adminlove520/openAI_G",
    "name": "openAI_G",
    "description": "公众号接入chatGPT",
    "html_url": [
      "https://github.com/adminlove520/openAI_G/blob/784c02630e8b280aa006f735cf36f29b28086c50/internal/service/openai/openai.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 946,
    "stars": 0
  },
  {
    "full_name": "mariocandela/beelzebub",
    "name": "beelzebub",
    "description": "A secure low code honeypot framework, leveraging AI for System Virtualization.",
    "html_url": [
      "https://github.com/mariocandela/beelzebub/blob/5bba406e6bbca5417b038327236366f94a688db2/plugins/llm-integration.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 3599,
    "stars": 1165
  },
  {
    "full_name": "liCells/chatgpt-cli",
    "name": "chatgpt-cli",
    "description": "Get the desired command through ChatGPT.",
    "html_url": [
      "https://github.com/liCells/chatgpt-cli/blob/ab20c86fb4b77b89577450dcb161fc7cc1610b59/main.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 195,
    "stars": 7
  },
  {
    "full_name": "nmeilick/go-whisper",
    "name": "go-whisper",
    "description": "Go package to handle audio using OpenAI's Whisper",
    "html_url": [
      "https://github.com/nmeilick/go-whisper/blob/f0fc85942af483bc2d3f94c7c63d78d68fc9a086/whisper.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 216,
    "stars": 2
  },
  {
    "full_name": "kklab-com/chatgpt-go",
    "name": "chatgpt-go",
    "description": "chatgpt api (gpt-3.5-turbo)  golang version",
    "html_url": [
      "https://github.com/kklab-com/chatgpt-go/blob/3c4d4bce53d576f9a3b100586aa9c600b51ad9d3/chatgpt.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 431,
    "stars": 4
  },
  {
    "full_name": "michelo851a1203/learning-golang-openai-assistant",
    "name": "learning-golang-openai-assistant",
    "description": null,
    "html_url": [
      "https://github.com/michelo851a1203/learning-golang-openai-assistant/blob/69e27009984be2387027462591a4f1ef6ba0dbb1/openAiMessages/messagesFile.go",
      "https://github.com/michelo851a1203/learning-golang-openai-assistant/blob/69e27009984be2387027462591a4f1ef6ba0dbb1/openaiThreads/thread.go",
      "https://github.com/michelo851a1203/learning-golang-openai-assistant/blob/69e27009984be2387027462591a4f1ef6ba0dbb1/openAiMessages/messages.go",
      "https://github.com/michelo851a1203/learning-golang-openai-assistant/blob/69e27009984be2387027462591a4f1ef6ba0dbb1/openAiAssistant/assistant.go",
      "https://github.com/michelo851a1203/learning-golang-openai-assistant/blob/69e27009984be2387027462591a4f1ef6ba0dbb1/openAiThreadRun/run.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 4196,
    "stars": 1
  },
  {
    "full_name": "AndresDevvv/ChatGPT-Self-Hosted",
    "name": "ChatGPT-Self-Hosted",
    "description": "ChatGPT Client Self Hosted For Unblocking ChatGPT In School,Work, Etc",
    "html_url": [
      "https://github.com/AndresDevvv/ChatGPT-Self-Hosted/blob/84405d0a6deaf9316591a19f3a6e904447539f04/api/internal/chatgpt/request.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "weaviate/weaviate",
    "name": "weaviate",
    "description": "Weaviate is an open-source vector database that stores both objects and vectors, allowing for the combination of vector search with structured filtering with the fault tolerance and scalability of a cloud-native database​.",
    "html_url": [
      "https://github.com/weaviate/weaviate/blob/caf3a249d86fbe20ddcfc3ec8d56dfedc9c26f20/modules/qna-openai/config/class_settings_test.go",
      "https://github.com/weaviate/weaviate/blob/caf3a249d86fbe20ddcfc3ec8d56dfedc9c26f20/modules/generative-openai/config/class_settings.go",
      "https://github.com/weaviate/weaviate/blob/caf3a249d86fbe20ddcfc3ec8d56dfedc9c26f20/modules/generative-openai/config/class_settings_test.go",
      "https://github.com/weaviate/weaviate/blob/caf3a249d86fbe20ddcfc3ec8d56dfedc9c26f20/modules/text2vec-openai/clients/openai.go",
      "https://github.com/weaviate/weaviate/blob/caf3a249d86fbe20ddcfc3ec8d56dfedc9c26f20/modules/text2vec-openai/clients/openai_test.go",
      "https://github.com/weaviate/weaviate/blob/caf3a249d86fbe20ddcfc3ec8d56dfedc9c26f20/modules/generative-openai/clients/openai.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 584344,
    "stars": 13613
  },
  {
    "full_name": "mkXultra/gpt-lamp",
    "name": "gpt-lamp",
    "description": null,
    "html_url": [
      "https://github.com/mkXultra/gpt-lamp/blob/8ea055abd8658fb78472b455cfb4e4d6c990f598/lib/chatgpt.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 439,
    "stars": 0
  },
  {
    "full_name": "kardolus/chatgpt-cli",
    "name": "chatgpt-cli",
    "description": "ChatGPT CLI is a versatile tool for interacting with LLM models through OpenAI and Azure, as well as models from Perplexity AI and Llama. It supports prompts and history tracking for seamless, context-aware interactions. With extensive configuration options, it’s designed for both users and developers to create a customized GPT experience.",
    "html_url": [
      "https://github.com/kardolus/chatgpt-cli/blob/a18a30c7b9457b70d794bb76f6bddea59c4422f6/config/store.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 479750,
    "stars": 712
  },
  {
    "full_name": "philiplinell/commit-msg",
    "name": "commit-msg",
    "description": "Create a commit message suggestion using the openAI API. ",
    "html_url": [
      "https://github.com/philiplinell/commit-msg/blob/80055c2312f53f4769173e64505cfa05a1417a29/internal/openai/client.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 740,
    "stars": 2
  },
  {
    "full_name": "ShintaroaSuzuki/chatgpt-review",
    "name": "chatgpt-review",
    "description": "chatgpt-review",
    "html_url": [
      "https://github.com/ShintaroaSuzuki/chatgpt-review/blob/59ce6936babfc376e9c21362d97615d6f35216fb/main.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 322,
    "stars": 0
  },
  {
    "full_name": "gregoryv/can",
    "name": "can",
    "description": "command line interface to openai",
    "html_url": [
      "https://github.com/gregoryv/can/blob/882bcb6217dc9fd9ccf42934a9440d9be1028d5c/system.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 678,
    "stars": 0
  },
  {
    "full_name": "pikocloud/pikobrain",
    "name": "pikobrain",
    "description": "Function-calling API for LLM from multiple providers",
    "html_url": [
      "https://github.com/pikocloud/pikobrain/blob/6587ae5a5416fe4da6813fe13c60d939e999bccd/internal/brain/brain_test.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 7557,
    "stars": 5
  },
  {
    "full_name": "tectiv3/chatgpt-bot",
    "name": "chatgpt-bot",
    "description": "Telegram bot with OpenAI chat. Supports answering to voice messages. Streaming responses. History summarization. Function calls",
    "html_url": [
      "https://github.com/tectiv3/chatgpt-bot/blob/ae2ed6f870be9eb1d92a57af5843670581634b61/voice.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 5614,
    "stars": 11
  },
  {
    "full_name": "arunk140/runnr.sh",
    "name": "runnr.sh",
    "description": "runnr.sh - using openai - control your linux machine using natural language - golang",
    "html_url": [
      "https://github.com/arunk140/runnr.sh/blob/418438fe77f1c677e22aa0d542dffcc2235a5c13/main.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 418,
    "stars": 1
  },
  {
    "full_name": "fabiustech/openai",
    "name": "openai",
    "description": "Go client for interacting with OpenAI API endpoints.",
    "html_url": [
      "https://github.com/fabiustech/openai/blob/9fb5263a06da069fc43d080ebc2170128392a795/client.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 2083,
    "stars": 24
  },
  {
    "full_name": "vibovenkat123/review-gpt",
    "name": "review-gpt",
    "description": "An automatic code review tool that uses gpt-3, gpt-3.5, and gpt-4",
    "html_url": [
      "https://github.com/vibovenkat123/review-gpt/blob/d3258cb31115db1b6ce92e882a58006a2d0f4305/pkg/request/request.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 863,
    "stars": 95
  },
  {
    "full_name": "vmorsell/openai-gpt-sdk-go",
    "name": "openai-gpt-sdk-go",
    "description": "OpenAI GPT SDK for Go",
    "html_url": [
      "https://github.com/vmorsell/openai-gpt-sdk-go/blob/9c58b14d88feac4cbd44be4b09e521103a511c72/gpt/gpt.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 611,
    "stars": 0
  },
  {
    "full_name": "StacklokLabs/gorag",
    "name": "gorag",
    "description": "GoRag: Go Interface for Augmented LLM retrieval 📜",
    "html_url": [
      "https://github.com/StacklokLabs/gorag/blob/a923b5528c36dfe9b868d7c863ea9bfe063f8ddf/pkg/backend/openai_backend.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 1713,
    "stars": 30
  },
  {
    "full_name": "ericsource/wechatbot",
    "name": "wechatbot",
    "description": "wechat 接入 chatGPT",
    "html_url": [
      "https://github.com/ericsource/wechatbot/blob/0bad6175d95147fc30940b0d21286e3c7f5fcaf4/gtp/gtp.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 1365,
    "stars": 1
  },
  {
    "full_name": "openshieldai/openshield",
    "name": "openshield",
    "description": "OpenShield is a new generation security layer for AI models",
    "html_url": [
      "https://github.com/openshieldai/openshield/blob/2abfda370605996272d9b85f9aec7a5b11dad291/lib/config.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 9751,
    "stars": 80
  },
  {
    "full_name": "beglov/go-chatgpt-telegram-bot",
    "name": "go-chatgpt-telegram-bot",
    "description": "ChatGPT Telegram bot ",
    "html_url": [
      "https://github.com/beglov/go-chatgpt-telegram-bot/blob/e155741f8bce00a3aca635aa67a264a8fdfe9fae/pkg/chatgptbot/chatgptbot.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 495,
    "stars": 0
  },
  {
    "full_name": "rfielding/gorag",
    "name": "gorag",
    "description": "golang openai SQL query and explain.",
    "html_url": [
      "https://github.com/rfielding/gorag/blob/0877303f0b5f15aa8799530fa7508a5a5bae2ca3/main.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 303,
    "stars": 0
  },
  {
    "full_name": "zhimaAi/llm_adaptor",
    "name": "llm_adaptor",
    "description": null,
    "html_url": [
      "https://github.com/zhimaAi/llm_adaptor/blob/c4f133981b4619329c87ec09faa844244a2254d3/adaptor/embeddings.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 6125,
    "stars": 2
  },
  {
    "full_name": "openai/openai-go",
    "name": "openai-go",
    "description": "The official Go library for the OpenAI API",
    "html_url": [
      "https://github.com/openai/openai-go/blob/23d40fd68d5a6683066552ee39bfee2fdd35429d/option/requestoption.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 38505,
    "stars": 1915
  },
  {
    "full_name": "GeniusAI-Platform/openai",
    "name": "openai",
    "description": "OpenAi SDK for Go (community-maintained)",
    "html_url": [
      "https://github.com/GeniusAI-Platform/openai/blob/8a2c0a0de53e6c383f520483c62ede1a7bac172d/client/client.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 2207,
    "stars": 52
  },
  {
    "full_name": "shulinbao/horseapi",
    "name": "horseapi",
    "description": "A secondary development of the Calcium-Ion/new-api project, designed as an OpenAI-compatible API management tool, primarily for the HorseGPT project.",
    "html_url": [
      "https://github.com/shulinbao/horseapi/blob/08c33aca299574034f68a51a0ad6cb11323e8b23/common/constants.go",
      "https://github.com/shulinbao/horseapi/blob/08c33aca299574034f68a51a0ad6cb11323e8b23/middleware/distributor.go",
      "https://github.com/shulinbao/horseapi/blob/08c33aca299574034f68a51a0ad6cb11323e8b23/controller/relay.go",
      "https://github.com/shulinbao/horseapi/blob/08c33aca299574034f68a51a0ad6cb11323e8b23/web/src/pages/Channel/EditChannel.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go",
      "javascript"
    ],
    "fork": false,
    "loc": 44494,
    "stars": 1
  },
  {
    "full_name": "PotatoWhite/openai-realtime",
    "name": "openai-realtime",
    "description": null,
    "html_url": [
      "https://github.com/PotatoWhite/openai-realtime/blob/9dad52039bcd4e278c610e7055baf89c1c61cf7f/cmd/main.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 1520,
    "stars": 0
  },
  {
    "full_name": "Calcium-Ion/new-api",
    "name": "new-api",
    "description": "AI模型接口管理与分发系统，支持将多种大模型转为OpenAI格式调用、支持Midjourney Proxy、Suno、Rerank，兼容易支付协议，可供个人或者企业内部管理与分发渠道使用，本项目基于One API二次开发。🍥 The next-generation LLM gateway and AI asset management system supports multiple languages.",
    "html_url": [
      "https://github.com/Calcium-Ion/new-api/blob/eec8f523ce07a44a2e54177960e18c397e88a420/middleware/distributor.go",
      "https://github.com/Calcium-Ion/new-api/blob/eec8f523ce07a44a2e54177960e18c397e88a420/controller/relay.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 72307,
    "stars": 7950
  },
  {
    "full_name": "shakibhasan09/twilio-voice-openai",
    "name": "twilio-voice-openai",
    "description": "A Golang application that integrates Twilio Voice with OpenAI's language models. This project enables voice interactions powered by AI, allowing for intelligent phone call handling, voice-based chatbots, or automated customer service systems.",
    "html_url": [
      "https://github.com/shakibhasan09/twilio-voice-openai/blob/ec8acfa5969113c70942a43583e3dd5e6159c876/internal/main.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 394,
    "stars": 2
  },
  {
    "full_name": "tluyben/llm-router",
    "name": "llm-router",
    "description": null,
    "html_url": [
      "https://github.com/tluyben/llm-router/blob/d2b36635607deaa8c6762c83e29187a66327718f/main.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 893,
    "stars": 0
  },
  {
    "full_name": "simongottschlag/azure-openai-gpt-slack-bot",
    "name": "azure-openai-gpt-slack-bot",
    "description": "An example for OpenAI slack integration",
    "html_url": [
      "https://github.com/simongottschlag/azure-openai-gpt-slack-bot/blob/a26b5634028091b6be7bc88ac5efb76e00294828/internal/gpt3/gpt3_test.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 1846,
    "stars": 8
  },
  {
    "full_name": "dengaletin/CallFrescoBot",
    "name": "CallFrescoBot",
    "description": "Quick and dirty bot to chat with ChatGPT",
    "html_url": [
      "https://github.com/dengaletin/CallFrescoBot/blob/50d2a69105ba807a24360756c086aa0192901fb6/main.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "dialmaster/ThePhantomPhreak",
    "name": "ThePhantomPhreak",
    "description": "OpenAI chatbot",
    "html_url": [
      "https://github.com/dialmaster/ThePhantomPhreak/blob/66ffdf57cd3087f30b232b9efe9c2402c6dc1d67/main.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 278,
    "stars": 0
  },
  {
    "full_name": "meinside/openai-go",
    "name": "openai-go",
    "description": "OpenAI API wrapper for golang",
    "html_url": [
      "https://github.com/meinside/openai-go/blob/0e5bc109fbdedd1e5be974559cb601749acc53a2/http.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 5066,
    "stars": 4
  },
  {
    "full_name": "rfielding/gochat",
    "name": "gochat",
    "description": "an OpenAI agent built with Cursor+Claude, for filling out office forms.",
    "html_url": [
      "https://github.com/rfielding/gochat/blob/d8d497c7bec127874ce389154799b8beee9c20be/main.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 793,
    "stars": 0
  },
  {
    "full_name": "WillChangeThisLater/lm",
    "name": "lm",
    "description": "Simple Go interface for querying OpenAI LLMs",
    "html_url": [
      "https://github.com/WillChangeThisLater/lm/blob/ab2767b3799d02221698ddb0196d12460b746746/openai/openai.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 1801,
    "stars": 3
  },
  {
    "full_name": "Pooh-Mucho/go-aigc",
    "name": "go-aigc",
    "description": "The client written in golang for invoking various Large Language Models and Image/Video Generation models.",
    "html_url": [
      "https://github.com/Pooh-Mucho/go-aigc/blob/8f8989ec393d1c7aafa20a23f274a5a2c4cf7ecc/embedding/openai.go",
      "https://github.com/Pooh-Mucho/go-aigc/blob/8f8989ec393d1c7aafa20a23f274a5a2c4cf7ecc/chat/openai.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 7575,
    "stars": 0
  },
  {
    "full_name": "yubing744/chatgpt-go",
    "name": "chatgpt-go",
    "description": "chatGPT golang client translated from https://github.com/acheong08/ChatGPT",
    "html_url": [
      "https://github.com/yubing744/chatgpt-go/blob/5d1e56ed0023ca03fe793409b99687bccda41adb/pkg/auth/chatgpt_auth.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 1218,
    "stars": 9
  },
  {
    "full_name": "yoanbernabeu/MeetingResumeGenerator",
    "name": "MeetingResumeGenerator",
    "description": "MeetingResumeGenerator est un outil en ligne de commande écrit en Go qui transforme des fichiers audio en texte et en résumés structurés, facilitant ainsi la transcription et la synthèse de réunions, conférences et discussions grâce aux API OpenAI Whisper et GPT-4.",
    "html_url": [
      "https://github.com/yoanbernabeu/MeetingResumeGenerator/blob/949c0fcde2b01490606b4f4d58074ef8f641d2a5/main.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 370,
    "stars": 3
  },
  {
    "full_name": "billikeu/go-chatgpt",
    "name": "go-chatgpt",
    "description": "go-chatgpt: Reverse engineered API of OpenAi's ChatGPT. ChatGPT聊天功能的逆向工程",
    "html_url": [
      "https://github.com/billikeu/go-chatgpt/blob/f81fbcef15ae921f036c105a99f40eb80a5d6ad4/chatgptuno/auth.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 1491,
    "stars": 4
  },
  {
    "full_name": "teilomillet/gollm",
    "name": "gollm",
    "description": "Unified Go interface for Language Model (LLM) providers. Simplifies LLM integration with flexible prompt management and common task functions.",
    "html_url": [
      "https://github.com/teilomillet/gollm/blob/a73362831d878dc346de33b644e6376d3584e0b9/providers/openai.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 15845,
    "stars": 502
  },
  {
    "full_name": "bench-ai/agent-workbench",
    "name": "agent-workbench",
    "description": "Create LLM based agents that can perform higher levels of operations and analysis",
    "html_url": [
      "https://github.com/bench-ai/agent-workbench/blob/71c8fa35570a7b73b89bd44a4f0b4ec9291d2bb3/command/chatgpt.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 2871,
    "stars": 2
  },
  {
    "full_name": "PullRequestInc/go-gpt3",
    "name": "go-gpt3",
    "description": "An OpenAI GPT-3 API client enabling Go/Golang programs to interact with the gpt3 APIs.",
    "html_url": [
      "https://github.com/PullRequestInc/go-gpt3/blob/c6cd5993c9bc990612dae5ca94533520ef73a67f/gpt3_test.go",
      "https://github.com/PullRequestInc/go-gpt3/blob/c6cd5993c9bc990612dae5ca94533520ef73a67f/gpt3.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 1425,
    "stars": 387
  },
  {
    "full_name": "mark3labs/mcphost",
    "name": "mcphost",
    "description": "A CLI host application that enables Large Language Models (LLMs) to interact with external tools through the Model Context Protocol (MCP).",
    "html_url": [
      "https://github.com/mark3labs/mcphost/blob/b32fd143c6968ef7cae2e8be98adc2a8cddf8154/cmd/root.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 3543,
    "stars": 1011
  },
  {
    "full_name": "xdrudis/llm-proxy",
    "name": "llm-proxy",
    "description": "💰 Save 50% on OpenAI API costs with a one-line change",
    "html_url": [
      "https://github.com/xdrudis/llm-proxy/blob/7678a67b50f37a5f64df01d8ff638de5fb85e78a/proxy.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 1625,
    "stars": 3
  },
  {
    "full_name": "bricks-cloud/BricksLLM",
    "name": "BricksLLM",
    "description": "🔒 Enterprise-grade API gateway that helps you monitor and impose cost or rate limits per API key. Get fine-grained access control and monitoring per user, application, or environment. Supports OpenAI, Azure OpenAI, Anthropic, vLLM, and open-source LLMs.",
    "html_url": [
      "https://github.com/bricks-cloud/BricksLLM/blob/c101ce8890c620ea6390c74c90c111b279b4e926/internal/server/web/proxy/vector_store.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 27688,
    "stars": 1055
  },
  {
    "full_name": "fireinrain/opaitokens",
    "name": "opaitokens",
    "description": "A golang lib to help you to get openai access token and refresh the token(一个golang sdk，帮助你更容易的获取openai chatgpt的accessToken :)",
    "html_url": [
      "https://github.com/fireinrain/opaitokens/blob/23a1bbb07a9f8c726879ec4b6fa64d4e57eb6728/auth/auth.go",
      "https://github.com/fireinrain/opaitokens/blob/23a1bbb07a9f8c726879ec4b6fa64d4e57eb6728/opaitokens.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 1342,
    "stars": 74
  },
  {
    "full_name": "DarkCaster/Perpetual",
    "name": "Perpetual",
    "description": "LLM-driven software development helper.",
    "html_url": [
      "https://github.com/DarkCaster/Perpetual/blob/623e93fb515f60d7a249cf6a768e186256fc6e98/op_init/env_example.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 19240,
    "stars": 9
  },
  {
    "full_name": "hanyuancheung/gpt-go",
    "name": "gpt-go",
    "description": "OpenAI ChatGPT/GPT-4/GPT-3 SDK Go Client to Interact with the GPT-4/GPT-3 APIs.",
    "html_url": [
      "https://github.com/hanyuancheung/gpt-go/blob/625094eff4085f1e1762a68a24bdcc29b397ff56/gpt.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 1004,
    "stars": 364
  },
  {
    "full_name": "quantonganh/chatgpt-tui",
    "name": "chatgpt-tui",
    "description": "A simple terminal user interface for ChatGPT, written in Go",
    "html_url": [
      "https://github.com/quantonganh/chatgpt-tui/blob/991660f5517396cdd2a7ef107c2d24dee8ff1e44/main.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 827,
    "stars": 14
  },
  {
    "full_name": "momokii/go-llmbridge",
    "name": "go-llmbridge",
    "description": "Golang LLM Wrapper for OpenAI and Anthropic (Claude)",
    "html_url": [
      "https://github.com/momokii/go-llmbridge/blob/9ad213a461d5b9c544ba7cc72418046f72dc5ff4/pkg/openai/openai.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 1478,
    "stars": 0
  },
  {
    "full_name": "ossrs/ai-talk",
    "name": "ai-talk",
    "description": "AI-Talk allows you to talk with OpenAI GPT.",
    "html_url": [
      "https://github.com/ossrs/ai-talk/blob/7d301eee42af1c3d9a9bfe49699b5c77dd55c57e/backend/main.go"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "go"
    ],
    "fork": false,
    "loc": 20593,
    "stars": 41
  },
  {
    "full_name": "zmlix/chatgpt-web",
    "name": "chatgpt-web",
    "description": "基于官方API的ChatGPT前端web",
    "html_url": [
      "https://github.com/zmlix/chatgpt-web/blob/48a53ec2a0c4584778ed16b3c9d32882fd48ba1c/ChatGPT/src/env.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 8048,
    "stars": 74
  },
  {
    "full_name": "PacktPublishing/Exploring-GPT-3",
    "name": "Exploring-GPT-3",
    "description": "Exploring GPT-3",
    "html_url": [
      "https://github.com/PacktPublishing/Exploring-GPT-3/blob/1de6cd598fe877878ed8145ce9199cac7891d00a/nodejs/chapter05/engines.js",
      "https://github.com/PacktPublishing/Exploring-GPT-3/blob/1de6cd598fe877878ed8145ce9199cac7891d00a/nodejs/chapter07/files.js",
      "https://github.com/PacktPublishing/Exploring-GPT-3/blob/1de6cd598fe877878ed8145ce9199cac7891d00a/gptanswers-nodejs/upload.js",
      "https://github.com/PacktPublishing/Exploring-GPT-3/blob/1de6cd598fe877878ed8145ce9199cac7891d00a/nodejs/chapter06/filter.js",
      "https://github.com/PacktPublishing/Exploring-GPT-3/blob/1de6cd598fe877878ed8145ce9199cac7891d00a/nodejs/chapter07/grammar.js",
      "https://github.com/PacktPublishing/Exploring-GPT-3/blob/1de6cd598fe877878ed8145ce9199cac7891d00a/nodejs/chapter07/translate.js",
      "https://github.com/PacktPublishing/Exploring-GPT-3/blob/1de6cd598fe877878ed8145ce9199cac7891d00a/nodejs/chapter07/book-suggestions.js",
      "https://github.com/PacktPublishing/Exploring-GPT-3/blob/1de6cd598fe877878ed8145ce9199cac7891d00a/nodejs/chapter07/story.js",
      "https://github.com/PacktPublishing/Exploring-GPT-3/blob/1de6cd598fe877878ed8145ce9199cac7891d00a/nodejs/chapter07/mars-facts.js",
      "https://github.com/PacktPublishing/Exploring-GPT-3/blob/1de6cd598fe877878ed8145ce9199cac7891d00a/nodejs/chapter07/extract-from-html.js",
      "https://github.com/PacktPublishing/Exploring-GPT-3/blob/1de6cd598fe877878ed8145ce9199cac7891d00a/nodejs/chapter07/bot1.js",
      "https://github.com/PacktPublishing/Exploring-GPT-3/blob/1de6cd598fe877878ed8145ce9199cac7891d00a/nodejs/chapter07/answers.js",
      "https://github.com/PacktPublishing/Exploring-GPT-3/blob/1de6cd598fe877878ed8145ce9199cac7891d00a/nodejs/chapter07/keywords.js",
      "https://github.com/PacktPublishing/Exploring-GPT-3/blob/1de6cd598fe877878ed8145ce9199cac7891d00a/nodejs/chapter07/summarize.js",
      "https://github.com/PacktPublishing/Exploring-GPT-3/blob/1de6cd598fe877878ed8145ce9199cac7891d00a/python/chapter05/search.py",
      "https://github.com/PacktPublishing/Exploring-GPT-3/blob/1de6cd598fe877878ed8145ce9199cac7891d00a/python/chapter06/filter.py",
      "https://github.com/PacktPublishing/Exploring-GPT-3/blob/1de6cd598fe877878ed8145ce9199cac7891d00a/python/chapter08/esrb-rating-classifier.py",
      "https://github.com/PacktPublishing/Exploring-GPT-3/blob/1de6cd598fe877878ed8145ce9199cac7891d00a/python/chapter08/language-classifier.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript",
      "python"
    ],
    "fork": false,
    "loc": 1056,
    "stars": 31
  },
  {
    "full_name": "adriandgzg/whatsap-LLM-CustomerSupport",
    "name": "whatsap-LLM-CustomerSupport",
    "description": "CustomerSupport atención whit IA",
    "html_url": [
      "https://github.com/adriandgzg/whatsap-LLM-CustomerSupport/blob/84e3f07a5ce9179eb2e5c90543d337a08ef8a2be/config/openai.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1265,
    "stars": 0
  },
  {
    "full_name": "fredyzz/ai-keyword-extractor",
    "name": "ai-keyword-extractor",
    "description": "Keyword extractor using openAi and react",
    "html_url": [
      "https://github.com/fredyzz/ai-keyword-extractor/blob/60ff5940332d1a5006cd2ceaddc6b475be55b9b8/src/utils/constants.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 7436,
    "stars": 0
  },
  {
    "full_name": "Wabisabi591/sensei",
    "name": "sensei",
    "description": "After effects ai chat bot with RAG DAWG",
    "html_url": [
      "https://github.com/Wabisabi591/sensei/blob/518ccbcecc628ab662576e882d62cc3947614fe1/com.buckleycreative.sensei/js/config.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 350,
    "stars": 1
  },
  {
    "full_name": "pvs-hd-tea/23ws-LLMcoder",
    "name": "23ws-LLMcoder",
    "description": "LLMcoder - Practical in winter semester 2023/2024",
    "html_url": [
      "https://github.com/pvs-hd-tea/23ws-LLMcoder/blob/4be108e4f6e123f0c78ee7e94bae451f294150c6/experimental/prototype_ana/constants.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 21389,
    "stars": 4
  },
  {
    "full_name": "TailinZhou/openai_proxy_llalal",
    "name": "openai_proxy_llalal",
    "description": null,
    "html_url": [
      "https://github.com/TailinZhou/openai_proxy_llalal/blob/5fd288bc7aa9eddf1a9f69d9eb991c7bd31556b3/_worker.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 12,
    "stars": 0
  },
  {
    "full_name": "ShareFY/openai_transfer",
    "name": "openai_transfer",
    "description": null,
    "html_url": [
      "https://github.com/ShareFY/openai_transfer/blob/b2b9272303b0687b9e6007a670b8cdf438dae115/_worker.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 12,
    "stars": 0
  },
  {
    "full_name": "bjcodereview3/openaiAgent",
    "name": "openaiAgent",
    "description": null,
    "html_url": [
      "https://github.com/bjcodereview3/openaiAgent/blob/56942cd11a5fa6fe33fa9c5be2893486ae8a7c55/_worker.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 12,
    "stars": 0
  },
  {
    "full_name": "nuass/llm4openai",
    "name": "llm4openai",
    "description": null,
    "html_url": [
      "https://github.com/nuass/llm4openai/blob/3756c90c7785121b50c8806980d93af7918db1e6/_worker.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 12,
    "stars": 0
  },
  {
    "full_name": "imyuanx/chatgpt-proxy",
    "name": "chatgpt-proxy",
    "description": "One-click deployment of the ChatGPT private proxy, power by Next.js",
    "html_url": [
      "https://github.com/imyuanx/chatgpt-proxy/blob/edbce36edd857ffaa343cb6553616c688c321f98/next.config.js",
      "https://github.com/imyuanx/chatgpt-proxy/blob/edbce36edd857ffaa343cb6553616c688c321f98/src/pages/api/proxy-sse.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 797,
    "stars": 354
  },
  {
    "full_name": "yuexiaoliang/openai-demo",
    "name": "openai-demo",
    "description": "大陆请求 openai(chatgpt) api 的简单 demo",
    "html_url": [
      "https://github.com/yuexiaoliang/openai-demo/blob/90e0d86b3f9e7f558beb48a0201e227f8ddd2205/constants.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1702,
    "stars": 3
  },
  {
    "full_name": "lhemerly/shoggoth",
    "name": "shoggoth",
    "description": "A package to manage AI powered backends with a multitude of masks, tools and models",
    "html_url": [
      "https://github.com/lhemerly/shoggoth/blob/4e8f5f9b47207c53b3898b5220677d166ebefd3d/Models/GPT3_5.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 2570,
    "stars": 1
  },
  {
    "full_name": "JVictor-CC/My-Chat-GPT",
    "name": "My-Chat-GPT",
    "description": "My Chat GPT is a web chat application designed for single-user interactions, leveraging the OpenAI API for natural language processing. The application is built with ReactJS and styled-components on the frontend, while the backend is powered by Node.js, Express.js, CORS, and MongoDB.",
    "html_url": [
      "https://github.com/JVictor-CC/My-Chat-GPT/blob/0d633599718292eb6cb2132b37fd35194b660c13/server/src/app.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 26493,
    "stars": 0
  },
  {
    "full_name": "dabblelab/calling-the-openai-api-node",
    "name": "calling-the-openai-api-node",
    "description": "Calling the OpenAI API using NodeJS",
    "html_url": [
      "https://github.com/dabblelab/calling-the-openai-api-node/blob/8da5e9bf2183e8f003b378541eb7fd8b25ed20b8/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 70,
    "stars": 6
  },
  {
    "full_name": "EmilyThaHuman/openai-testing-app",
    "name": "openai-testing-app",
    "description": "A comprehensive React-based testing platform for OpenAI's APIs featuring a modern UI, built with Shadcn UI components and offering extensive testing capabilities for various OpenAI services.",
    "html_url": [
      "https://github.com/EmilyThaHuman/openai-testing-app/blob/06f736b6ac336d1d268d52363a8ab46418fa5f83/src/__tests__/mocks/handlers.js",
      "https://github.com/EmilyThaHuman/openai-testing-app/blob/06f736b6ac336d1d268d52363a8ab46418fa5f83/src/config/ai/agent.js",
      "https://github.com/EmilyThaHuman/openai-testing-app/blob/06f736b6ac336d1d268d52363a8ab46418fa5f83/archive/service-archive/openaiAssistantService.jsx",
      "https://github.com/EmilyThaHuman/openai-testing-app/blob/06f736b6ac336d1d268d52363a8ab46418fa5f83/src/components/tools/GenerateDialog.jsx",
      "https://github.com/EmilyThaHuman/openai-testing-app/blob/06f736b6ac336d1d268d52363a8ab46418fa5f83/src/components/tools/functions/GenerateFunctionDialog.jsx",
      "https://github.com/EmilyThaHuman/openai-testing-app/blob/06f736b6ac336d1d268d52363a8ab46418fa5f83/archive/service-archive/openaiRegularService.jsx",
      "https://github.com/EmilyThaHuman/openai-testing-app/blob/06f736b6ac336d1d268d52363a8ab46418fa5f83/archive/service-archive/openaiService.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 99094,
    "stars": 1
  },
  {
    "full_name": "wu-yifan/cgpt-p-v2",
    "name": "cgpt-p-v2",
    "description": null,
    "html_url": [
      "https://github.com/wu-yifan/cgpt-p-v2/blob/57c4d39d911147f3d37054f6f5e90a58918e5d2f/next.config.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 797,
    "stars": 0
  },
  {
    "full_name": "memochou1993/gpt-prompt-trainer",
    "name": "gpt-prompt-trainer",
    "description": "GPT Prompt Trainer for gpt-3.5-turbo language model",
    "html_url": [
      "https://github.com/memochou1993/gpt-prompt-trainer/blob/1cc0fad1d09659b720cda37c9f98264b8b78c61d/src/services/openai.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 6004,
    "stars": 12
  },
  {
    "full_name": "jtams/openai-node",
    "name": "openai-node",
    "description": "A library for using the OpenAI GPT-3 API with Node.",
    "html_url": [
      "https://github.com/jtams/openai-node/blob/7eb0a4f9f92d9099d540d3d9b07a84f1b1e3df0f/methods/FileList.js",
      "https://github.com/jtams/openai-node/blob/7eb0a4f9f92d9099d540d3d9b07a84f1b1e3df0f/methods/EngineList.js",
      "https://github.com/jtams/openai-node/blob/7eb0a4f9f92d9099d540d3d9b07a84f1b1e3df0f/methods/FileCreate.js",
      "https://github.com/jtams/openai-node/blob/7eb0a4f9f92d9099d540d3d9b07a84f1b1e3df0f/methods/ClassificationCreate.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 926,
    "stars": 7
  },
  {
    "full_name": "habuma/openai-speech",
    "name": "openai-speech",
    "description": "Examples of OpenAI's Whisper and Text-to-Speech APIs",
    "html_url": [
      "https://github.com/habuma/openai-speech/blob/1a14549ac9775448a2b8e925b4fa84adedd52756/nodejs/whisper.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 135,
    "stars": 3
  },
  {
    "full_name": "wuhuawei1996/TranslatorGPT",
    "name": "TranslatorGPT",
    "description": "A ChatGPT-based translation application developed using Tauri, with main features including translation by selecting, translation by screenshot and paper proofreading.",
    "html_url": [
      "https://github.com/wuhuawei1996/TranslatorGPT/blob/53c41d1daf8808608e6550563778d9ad5838db91/src/assets/data/engine_names.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 15755,
    "stars": 14
  },
  {
    "full_name": "Pep3M/OpenAI-API---4All",
    "name": "OpenAI-API---4All",
    "description": null,
    "html_url": [
      "https://github.com/Pep3M/OpenAI-API---4All/blob/825206d9c212afec75f8ea834eeb0c77c948262d/OpenAi/auxiliar.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 2107,
    "stars": 0
  },
  {
    "full_name": "Robeeen/Chat-GPT-React",
    "name": "Chat-GPT-React",
    "description": "A Chat GPT Integration Project with React js/Node Js",
    "html_url": [
      "https://github.com/Robeeen/Chat-GPT-React/blob/410f79b895c0de277068249c7a167a1e98d4a773/src/api.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 4595,
    "stars": 0
  },
  {
    "full_name": "iovdin/tune",
    "name": "tune",
    "description": "llm chat in text file",
    "html_url": [
      "https://github.com/iovdin/tune/blob/0a6b487c6dfbb4489ce346de23cc07dca5cd4c7e/tts.tool.mjs"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 6710,
    "stars": 9
  },
  {
    "full_name": "maniutin/fun-with-ai",
    "name": "fun-with-ai",
    "description": "App interface for interacting with OpenAI",
    "html_url": [
      "https://github.com/maniutin/fun-with-ai/blob/1a6d6ec05f26a4666e8393f0e31becbd48fe28c5/src/helpers.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 12367,
    "stars": 1
  },
  {
    "full_name": "muhammad-salman-saleem/embading-text-with-langchain-and-singlestore-db",
    "name": "embading-text-with-langchain-and-singlestore-db",
    "description": "embadind text with lang chain and node with embaded youtube comments and search most related comment",
    "html_url": [
      "https://github.com/muhammad-salman-saleem/embading-text-with-langchain-and-singlestore-db/blob/61da8da2811a81f24e16dfbcf8b6efe87c1f9b37/createEmbading.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 4328,
    "stars": 0
  },
  {
    "full_name": "Kavirubc/openai-realtime-voice",
    "name": "openai-realtime-voice",
    "description": null,
    "html_url": [
      "https://github.com/Kavirubc/openai-realtime-voice/blob/0bf7e2153aa2f263f1764b356b3b8fbed98ba739/src/app/utils/socket.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 2956,
    "stars": 0
  },
  {
    "full_name": "mstfbysl/audio-scripter",
    "name": "audio-scripter",
    "description": "AudioScripter is a simple tool that uses OpenAI's Whisper API to transcribe voice recordings into text. Users can easily record or upload audio and use their own OpenAI API key for transcription, making it straightforward and user-friendly.",
    "html_url": [
      "https://github.com/mstfbysl/audio-scripter/blob/c9f710b6648d70ae70b439f6e89fcf6498620dda/src/services/transcriptionService.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 21117,
    "stars": 0
  },
  {
    "full_name": "witfog/fakegpt",
    "name": "fakegpt",
    "description": "Simple ChatGPT web client to chat to OpenAI API.",
    "html_url": [
      "https://github.com/witfog/fakegpt/blob/79ecf1f78803a6a11a3fff21ec1ace1e931ca222/next.config.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1202,
    "stars": 1
  },
  {
    "full_name": "Narender-Kheder/debugasaurus",
    "name": "debugasaurus",
    "description": "Debugasaurus is your prehistoric pal for modern coding! Powered by a cutting-edge LLM, it helps you debug, refactor, and write code with ease—because even dinosaurs deserve clean syntax.",
    "html_url": [
      "https://github.com/Narender-Kheder/debugasaurus/blob/b829851e3b0c217a50b03d19ea9cdffcf0c5cdfa/uitls/llm/llmcall.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 8602,
    "stars": 1
  },
  {
    "full_name": "Zuha-SB/ChatGPT-FCC",
    "name": "ChatGPT-FCC",
    "description": "ChatGPT course from freeCodeCamp.org",
    "html_url": [
      "https://github.com/Zuha-SB/ChatGPT-FCC/blob/6925022fd61d11d092b6fd85a44b16120c5757ec/Intro/chat%20completions/app.js",
      "https://github.com/Zuha-SB/ChatGPT-FCC/blob/6925022fd61d11d092b6fd85a44b16120c5757ec/Intro/text%20completions/app.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 18240,
    "stars": 0
  },
  {
    "full_name": "yhdgms1/kakashi-hatake-ai-bot",
    "name": "kakashi-hatake-ai-bot",
    "description": "OpenAI based Kakashi Katake telegram chat bot",
    "html_url": [
      "https://github.com/yhdgms1/kakashi-hatake-ai-bot/blob/62875a389b921d232ef2e85223a579b3de508925/src/openai.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1427,
    "stars": 1
  },
  {
    "full_name": "usagepanda/proxy",
    "name": "proxy",
    "description": "Security and compliance proxy for LLM APIs",
    "html_url": [
      "https://github.com/usagepanda/proxy/blob/fbcf9d267c616570a103f234ce0a5c89b6a83cbc/__tests__/config.js",
      "https://github.com/usagepanda/proxy/blob/fbcf9d267c616570a103f234ce0a5c89b6a83cbc/config.js",
      "https://github.com/usagepanda/proxy/blob/fbcf9d267c616570a103f234ce0a5c89b6a83cbc/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 11132,
    "stars": 47
  },
  {
    "full_name": "dabblelab/gptanswers-node",
    "name": "gptanswers-node",
    "description": "Building a GPT-3 Knowledge Base App (NodeJS)",
    "html_url": [
      "https://github.com/dabblelab/gptanswers-node/blob/f844491d310c72e6e60964658ac5e4bd8a5db13a/upload.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 756,
    "stars": 54
  },
  {
    "full_name": "abarthdew/highcharts-gpt-chatbot",
    "name": "highcharts-gpt-chatbot",
    "description": "👽Highcharts using gpt chatbot📈📊",
    "html_url": [
      "https://github.com/abarthdew/highcharts-gpt-chatbot/blob/aa457b28c96a0d9c9b903275b28471db1185fc4f/src/services/openai.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 6265,
    "stars": 0
  },
  {
    "full_name": "jtwirly/encouragebot",
    "name": "encouragebot",
    "description": "AI-Powered Encouragement Project",
    "html_url": [
      "https://github.com/jtwirly/encouragebot/blob/2ec8d58fd825c8ac509ff420da2775b452801ba5/discord-bot/bot.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 6660,
    "stars": 0
  },
  {
    "full_name": "saravadeo/open-ai-api",
    "name": "open-ai-api",
    "description": "Unlock the potential of OpenAI's GPT-3 model for NLP tasks—summarization, classification, text completion, and more. This repo guides you through OpenAI API setup, offering hands-on exercises with the Completions endpoint. Gain experience integrating OpenAI API into React apps.",
    "html_url": [
      "https://github.com/saravadeo/open-ai-api/blob/f9a9b1a52071509b8fccbeff49cd3e604c464e1e/main.js",
      "https://github.com/saravadeo/open-ai-api/blob/f9a9b1a52071509b8fccbeff49cd3e604c464e1e/react/src/components/CompletionsGeneric.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 542,
    "stars": 1
  },
  {
    "full_name": "jedwill/a11y-gpt-linter",
    "name": "a11y-gpt-linter",
    "description": "VSCode accessibility linting tool using Axe-Core for ruleset and GPT for user-friendly suggestions",
    "html_url": [
      "https://github.com/jedwill/a11y-gpt-linter/blob/f03d368c80ab8ccaf952a7114337d7a9e46eb2ad/src/api.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1545,
    "stars": 0
  },
  {
    "full_name": "Shubhiidixit/RateMy_Professor-AI",
    "name": "RateMy_Professor-AI",
    "description": "A simple AI-based \"Rate My Professor\" using Next.js, OpenAI, and Pinecone for easy professor reviews and ratings.",
    "html_url": [
      "https://github.com/Shubhiidixit/RateMy_Professor-AI/blob/c4f8844861219e52ca6f7f604e548eed01681113/lib/openaiAPI.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 22962,
    "stars": 0
  },
  {
    "full_name": "souritrakar/prompto",
    "name": "prompto",
    "description": "A fun app to generate results on the basis of user prompts using OpenAI's GPT-3 API.",
    "html_url": [
      "https://github.com/souritrakar/prompto/blob/1ea837d01cdd492d46e07f3bd4c00b3184726249/src/api/ApiCall.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 32689,
    "stars": 0
  },
  {
    "full_name": "hasanshahriar32/gpt-fine-tuning-with-nodejs",
    "name": "gpt-fine-tuning-with-nodejs",
    "description": null,
    "html_url": [
      "https://github.com/hasanshahriar32/gpt-fine-tuning-with-nodejs/blob/414c6a587c9db24fc057f42ff3b3f29db3d7e0c4/getFineTuneStatus.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 2356,
    "stars": 0
  },
  {
    "full_name": "absolutetsonga/lecturit.ai",
    "name": "lecturit.ai",
    "description": "lecturit.ai - chatgpt-powered note-taking ai app ",
    "html_url": [
      "https://github.com/absolutetsonga/lecturit.ai/blob/28b6b1dd6128a0267b1e1ef663136c6be615c537/app/api/whisper/route.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 12219,
    "stars": 0
  },
  {
    "full_name": "samsslee/TheDonna",
    "name": "TheDonna",
    "description": "SvelteKit,Firebase,OpenAI Tech Challenge for SalesKick",
    "html_url": [
      "https://github.com/samsslee/TheDonna/blob/dc1b43374229c9091720311ad458513d51d046f5/src/routes/api/makeEmbedding.js",
      "https://github.com/samsslee/TheDonna/blob/dc1b43374229c9091720311ad458513d51d046f5/src/routes/api/triage/%2Bserver.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 2566,
    "stars": 0
  },
  {
    "full_name": "kovalenkoandri/GPT-mobile",
    "name": "GPT-mobile",
    "description": "Text Image Creator",
    "html_url": [
      "https://github.com/kovalenkoandri/GPT-mobile/blob/7561390ddf444bc1646aafca62e467f543efb641/utils/textAda001onAppLoad.js",
      "https://github.com/kovalenkoandri/GPT-mobile/blob/7561390ddf444bc1646aafca62e467f543efb641/utils/gptImageUrl.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 33352,
    "stars": 0
  },
  {
    "full_name": "robinvriens/openai-whisper",
    "name": "openai-whisper",
    "description": "Transcribe Audio to Text with node.js using the Whisper model from OpenAI.",
    "html_url": [
      "https://github.com/robinvriens/openai-whisper/blob/079fff68fcb113cc092ded9ad27682b645f1b0d5/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 49,
    "stars": 6
  },
  {
    "full_name": "dabblelab/openai-api-crash-course-node",
    "name": "openai-api-crash-course-node",
    "description": null,
    "html_url": [
      "https://github.com/dabblelab/openai-api-crash-course-node/blob/50ea9877de39343362a560cbf8068984e8b2aa5d/filter.js",
      "https://github.com/dabblelab/openai-api-crash-course-node/blob/50ea9877de39343362a560cbf8068984e8b2aa5d/file-upload.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 615,
    "stars": 1
  },
  {
    "full_name": "Rajshah1302/classifymail",
    "name": "classifymail",
    "description": "Classify Emails is a cutting-edge application that automates the organization of Gmail inboxes using advanced AI. By leveraging secure Google OAuth authentication, it fetches raw email data via the Gmail API and utilizes the SambaNova Fast API to classify emails into categories like Promotions, Social, Updates, and Forums.",
    "html_url": [
      "https://github.com/Rajshah1302/classifymail/blob/a3ca7425b1dd673150dd16481a5975e6e6a1289d/src/app/utils/classifyEmails.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 4558,
    "stars": 2
  },
  {
    "full_name": "kaskrish/eternalmind",
    "name": "eternalmind",
    "description": "language model sample",
    "html_url": [
      "https://github.com/kaskrish/eternalmind/blob/3715e13cf6a194b426de8e19d291e27f26180d0c/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 354,
    "stars": 0
  },
  {
    "full_name": "riteshk-007/Chat-GPT-Clone",
    "name": "Chat-GPT-Clone",
    "description": "ChatGPT Clone | React Js",
    "html_url": [
      "https://github.com/riteshk-007/Chat-GPT-Clone/blob/12f02338d34c1bd950b1653bfa71080673857421/src/utils/OpenAi.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 18433,
    "stars": 11
  },
  {
    "full_name": "yztracker/ChatGPT-finetuning-webui-nextjs",
    "name": "ChatGPT-finetuning-webui-nextjs",
    "description": "A user-friendly platform designed for effortless fine-tuning and testing of models",
    "html_url": [
      "https://github.com/yztracker/ChatGPT-finetuning-webui-nextjs/blob/68d73f1caf941aba8ffeeff9179669bfa977ce58/pages/api/fetchOpenAIFile.js",
      "https://github.com/yztracker/ChatGPT-finetuning-webui-nextjs/blob/68d73f1caf941aba8ffeeff9179669bfa977ce58/components/Files.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 2866,
    "stars": 7
  },
  {
    "full_name": "sergiogragera/whatsapp-calendar-gpt-bot",
    "name": "whatsapp-calendar-gpt-bot",
    "description": "A bot to send WhatsApp message generated from Google Calendar event by GPT AI",
    "html_url": [
      "https://github.com/sergiogragera/whatsapp-calendar-gpt-bot/blob/895fe6d34d167b394fa83def1b06873e2628e9ba/textGenerator.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 4456,
    "stars": 30
  },
  {
    "full_name": "Lane-G-Smith/ChatGPT-Google-Sheets-Apps-Script",
    "name": "ChatGPT-Google-Sheets-Apps-Script",
    "description": "A simple no-code solution for integrating OpenAI's GPT language models into your google sheets documents using Apps Scripts",
    "html_url": [
      "https://github.com/Lane-G-Smith/ChatGPT-Google-Sheets-Apps-Script/blob/06c5a07d39b33250a318508635e1fcc84c6604a3/Davinci3.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 82,
    "stars": 12
  },
  {
    "full_name": "abdibrokhim/Chat-With-PDF-NextJS-Langchain-Pinecone-OpenAI",
    "name": "Chat-With-PDF-NextJS-Langchain-Pinecone-OpenAI",
    "description": null,
    "html_url": [
      "https://github.com/abdibrokhim/Chat-With-PDF-NextJS-Langchain-Pinecone-OpenAI/blob/657f18648e2fcb57b616db265d6608c2f0fdfc60/src/app/api/utils/chat.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 9807,
    "stars": 3
  },
  {
    "full_name": "lwatz16/ama_ai",
    "name": "ama_ai",
    "description": "React application that consumes the OpenAI API to mimic assisted devices like Siri or Alexa.",
    "html_url": [
      "https://github.com/lwatz16/ama_ai/blob/dcdfa0253f64b5440914ec51f74ba7d55d059c04/src/apiCalls.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 29171,
    "stars": 0
  },
  {
    "full_name": "gioruu/openAI-Workout-Generator",
    "name": "openAI-Workout-Generator",
    "description": null,
    "html_url": [
      "https://github.com/gioruu/openAI-Workout-Generator/blob/a0a0519a35e8cae47e6ab3e8daa5c01191035b8c/api/generate-workout.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 13939,
    "stars": 0
  },
  {
    "full_name": "km1220/react_ai_content_generator",
    "name": "react_ai_content_generator",
    "description": "Next.js, Material UI 5, Tailwind CSS, Vite, OpenAI, GPT-4, blog content generator",
    "html_url": [
      "https://github.com/km1220/react_ai_content_generator/blob/8f8f0e1ef039eda3b8e55b37966cfdcfe2d0cb75/server.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 33456,
    "stars": 3
  },
  {
    "full_name": "PouriaRouzrokh/AI-Macros",
    "name": "AI-Macros",
    "description": "A chrome extension app for creating macros on top of LLMs and VLMs!",
    "html_url": [
      "https://github.com/PouriaRouzrokh/AI-Macros/blob/88a90942af12b86564a2504ac3de247c09564ddb/src/data/model_examples.js",
      "https://github.com/PouriaRouzrokh/AI-Macros/blob/88a90942af12b86564a2504ac3de247c09564ddb/src/data/default_models.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "JinchaoLove/ChatGPT-Next-Web-Azure",
    "name": "ChatGPT-Next-Web-Azure",
    "description": "ChatGPT Next Web + Azure OpenAI",
    "html_url": [
      "https://github.com/JinchaoLove/ChatGPT-Next-Web-Azure/blob/bb02f58c462a779bd50e621fe331cd2d7ee1ca99/next.config.mjs"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 13741,
    "stars": 14
  },
  {
    "full_name": "jochy/gpt-professor",
    "name": "gpt-professor",
    "description": "Tool used to create a simple CLI around ChatGPT, in order to help any kind of teaching activity",
    "html_url": [
      "https://github.com/jochy/gpt-professor/blob/b9de7f4d383282419c38b466433584a4b1eff580/commands/measure/openai.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 3882,
    "stars": 2
  },
  {
    "full_name": "ShayaanQ/SynthSpeak",
    "name": "SynthSpeak",
    "description": "an interactive chat bot clone utilizing the OpenAI API for real-time conversations. Built with JavaScript, TypeScript, TailwindCSS, and Next.js, it offers a responsive and engaging user experience.",
    "html_url": [
      "https://github.com/ShayaanQ/SynthSpeak/blob/fd5b319b2532b3493425ef0fecd869fe0e671fff/src/pages/api/chat.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 2368,
    "stars": 0
  },
  {
    "full_name": "samyukthapeeyems/chatgpt-clone",
    "name": "chatgpt-clone",
    "description": "ChatGPT clone using Next.js and Openai API",
    "html_url": [
      "https://github.com/samyukthapeeyems/chatgpt-clone/blob/757fc1083b46f96a04fc163d5d256dea58a62af3/src/pages/api/chat.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 2627,
    "stars": 0
  },
  {
    "full_name": "yachaycode/rimayappwsp",
    "name": "rimayappwsp",
    "description": "App basada en contenedores para gestionar asistentes de IA con múltiples LLMs y servicios de WhatsApp como whatsapp-web.js, Venom, Baileys, Twilio y Meta. Fácil de usar y desplegable en tu infraestructura.",
    "html_url": [
      "https://github.com/yachaycode/rimayappwsp/blob/40e337d10e6aaa44d48e40e3f6bd2faff8434815/base-baileys/apps/node_app_rimay/ai/chatgpt.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 7675,
    "stars": 1
  },
  {
    "full_name": "lucassmonn/movies-chatgpt-twitter",
    "name": "movies-chatgpt-twitter",
    "description": "This project get movies from TheMovieDB, summary it on ChatGPT than post it on Twitter.",
    "html_url": [
      "https://github.com/lucassmonn/movies-chatgpt-twitter/blob/077c434e5b103bde58d27fd54662e00c2077e655/src/openai.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 273,
    "stars": 6
  },
  {
    "full_name": "qaz3440798292/chatgpt-demo",
    "name": "chatgpt-demo",
    "description": "This is a ChatGPT demo project, you can get the demo to learn",
    "html_url": [
      "https://github.com/qaz3440798292/chatgpt-demo/blob/b34a5f0526d3c46c3ce7677986fe417eca69065b/src/axios/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 3217,
    "stars": 0
  },
  {
    "full_name": "melikeercan/chatgpt-try",
    "name": "chatgpt-try",
    "description": "Trying chatgpt library",
    "html_url": [
      "https://github.com/melikeercan/chatgpt-try/blob/1cabfae8480f03bdad94b88805990c44efe734f9/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 181,
    "stars": 0
  },
  {
    "full_name": "zccbbg/chatgpt-vue",
    "name": "chatgpt-vue",
    "description": "是一个前端服务，以websocket的方式实时接收chatGPT-service返回的消息",
    "html_url": [
      "https://github.com/zccbbg/chatgpt-vue/blob/14b5b9eed96b8e216989a804c8de3682bcc0cb3e/src/api/getData.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 10201,
    "stars": 100
  },
  {
    "full_name": "kintone-workshops/ai-kintone-gallery",
    "name": "ai-kintone-gallery",
    "description": "Build an OpenAI Art Generator & Gallery - JavaScript Workshop",
    "html_url": [
      "https://github.com/kintone-workshops/ai-kintone-gallery/blob/4cec50b2c77a8b85b7ea84341138538a4377ea64/src/requests/aiPOSTRequest.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1866,
    "stars": 17
  },
  {
    "full_name": "diatomicC/visuAIearner",
    "name": "visuAIearner",
    "description": "An AI-generated educational video system for personalized and interactive learning using GPT-4, custom image search engines, and automated video generation.",
    "html_url": [
      "https://github.com/diatomicC/visuAIearner/blob/6f8be135aa068b58709bdf3006cdd224977c35f4/visual_backend/app.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 95657,
    "stars": 3
  },
  {
    "full_name": "bijx/csv-analyzer-GPT",
    "name": "csv-analyzer-GPT",
    "description": "A simple implementation of a CSV analyzer using GPT-4 (or optionally 3.5-turbo) to answer questions about uploaded spreadsheets.",
    "html_url": [
      "https://github.com/bijx/csv-analyzer-GPT/blob/de5b1518ab42be4950257ca54bb493186425d9f7/components/api/chatApi.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1638,
    "stars": 3
  },
  {
    "full_name": "shivakrishnak13/EduSphere",
    "name": "EduSphere",
    "description": "\"EduHub: Streamlined enrollment, diverse courses, and advanced tools. Instructors use an intuitive dashboard for easy assignment creation, aided by AI. Timely announcements keep students informed.\"",
    "html_url": [
      "https://github.com/shivakrishnak13/EduSphere/blob/07cc9aba703a8b4e75ee98021c5178c77253be34/Backend/helpers/makeAiRequest.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 37799,
    "stars": 5
  },
  {
    "full_name": "prashastikarlekar/ChatGPT_clone",
    "name": "ChatGPT_clone",
    "description": "ChatGPT Clone is a ReactJS and NodeJS web application replicating OpenAI's GPT-powered chatbot experience, enabling dynamic conversations through intuitive UI. Seamlessly integrated with OpenAI API, it offers a versatile platform for interactive AI interactions.",
    "html_url": [
      "https://github.com/prashastikarlekar/ChatGPT_clone/blob/31d5f85b4da57ceb5413dcfc2ee1a39e8eb8f6a9/server.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 18185,
    "stars": 0
  },
  {
    "full_name": "souzera/deca_bot",
    "name": "deca_bot",
    "description": "Whatsapp Chatbot + API OpenAI (ChatGPT)",
    "html_url": [
      "https://github.com/souzera/deca_bot/blob/3343bec8fdec4be0846d29b351d67c439d1f1138/openai/dalle.js",
      "https://github.com/souzera/deca_bot/blob/3343bec8fdec4be0846d29b351d67c439d1f1138/openai/davinci.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 2513,
    "stars": 1
  },
  {
    "full_name": "Harsh-141cmd/Dream-Scape",
    "name": "Dream-Scape",
    "description": "Developed an AI-powered image generation application called \"Dream Scape\" inspired by DALL-E, a state-of-the-art language model which is based on React and Vite. The project generates images based on text prompts given by the user, converting textual descriptions into visual content.",
    "html_url": [
      "https://github.com/Harsh-141cmd/Dream-Scape/blob/947b83b234d6a4394f9ef6e6881aa8cded397021/src/fetchImageData.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 3944,
    "stars": 0
  },
  {
    "full_name": "zeeshanrafiqrana/node-llm-private-knowledgebase",
    "name": "node-llm-private-knowledgebase",
    "description": null,
    "html_url": [
      "https://github.com/zeeshanrafiqrana/node-llm-private-knowledgebase/blob/57c82ebb2c14a53ec78e3d77916f01209c6fad02/src/utils/createEmbading.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 9679,
    "stars": 0
  },
  {
    "full_name": "Lakshit-Chiranjiv/mini-gpt",
    "name": "mini-gpt",
    "description": "Mini-GPT is a small chatbot that uses the GPT-3 API to generate responses to user input. It is a single input based interactive chatbot that uses the Davinci engine of the OpenAI API to answer questions on a mac like sleek minimal UI with animations.",
    "html_url": [
      "https://github.com/Lakshit-Chiranjiv/mini-gpt/blob/0d9056ed13490c517ea27d386394f5655c7a5f90/app/api/askminigpt/route.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 7247,
    "stars": 1
  },
  {
    "full_name": "yashexe/ChatGPT-Clone",
    "name": "ChatGPT-Clone",
    "description": "A working clone of OpenAI's GPT3.5-Turbo Model",
    "html_url": [
      "https://github.com/yashexe/ChatGPT-Clone/blob/c583be44aa9780bfafff10697eaffe11d58ff19a/src/services/openAIService.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 20403,
    "stars": 0
  },
  {
    "full_name": "RSalaam/CreateLabs-OpenAI",
    "name": "CreateLabs-OpenAI",
    "description": null,
    "html_url": [
      "https://github.com/RSalaam/CreateLabs-OpenAI/blob/1aa5e666d986ca604be2d00b21914a3c2bbea7b1/functions/completion.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 234,
    "stars": 0
  },
  {
    "full_name": "DanielAssuncaoDeveloper/LuzyIA",
    "name": "LuzyIA",
    "description": "Uma integração do WhatsApp com o ChatGPT-3.5 da OpenAI.",
    "html_url": [
      "https://github.com/DanielAssuncaoDeveloper/LuzyIA/blob/e7ef7455ab565733f031a4097db80c61338d5ef8/src/Client/OpenAIClient.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 6983,
    "stars": 0
  },
  {
    "full_name": "openai/openai-realtime-console",
    "name": "openai-realtime-console",
    "description": "React app for inspecting, building and debugging with the Realtime API",
    "html_url": [
      "https://github.com/openai/openai-realtime-console/blob/d872e76dd1f39d2ea3d1d8cebaeeddbfc8117cc7/server.js",
      "https://github.com/openai/openai-realtime-console/blob/d872e76dd1f39d2ea3d1d8cebaeeddbfc8117cc7/client/components/App.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 5586,
    "stars": 3282
  },
  {
    "full_name": "shorwood/gptsh",
    "name": "gptsh",
    "description": "GPT.sh is a CLI tool built with NodeJs and powered by Open AI's GPT-3. It's main purpose is to translate natural language questions and requests into shell commands.",
    "html_url": [
      "https://github.com/shorwood/gptsh/blob/7dab245edf1d37282a9c49938fd74eff3dd9e488/src/complete.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 369,
    "stars": 125
  },
  {
    "full_name": "elisaflemer/german-coach",
    "name": "german-coach",
    "description": "A GPT-powered language learning app focused on improving your conversation skills",
    "html_url": [
      "https://github.com/elisaflemer/german-coach/blob/db36b23b03a69c84384778287b0773bea367df3b/backend/services/transcriber.js",
      "https://github.com/elisaflemer/german-coach/blob/db36b23b03a69c84384778287b0773bea367df3b/backend/services/answerer.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 2763,
    "stars": 42
  },
  {
    "full_name": "jorgenlt/smartbot",
    "name": "smartbot",
    "description": "A native Android app created with React Native on the Expo framework. Chat with assistants from OpenAI, Anthropic and Mistral.",
    "html_url": [
      "https://github.com/jorgenlt/smartbot/blob/694e265fb0dd5c9c5361c0aedffa20a74758f53a/src/api/openAiApi.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 13986,
    "stars": 13
  },
  {
    "full_name": "roman-sachenko/easy-clip-gpt.popclipext",
    "name": "easy-clip-gpt.popclipext",
    "description": "Easy-Clip-GTP is a PopClip extension that enhances text processing using OpenAI's GPT models.",
    "html_url": [
      "https://github.com/roman-sachenko/easy-clip-gpt.popclipext/blob/9c5896202c9e0ed75f85f864019be6cc411b49af/src/config.spec.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 3143,
    "stars": 2
  },
  {
    "full_name": "seed-arf/Google-Sheets-based-ChatGPT-Conversation-Manager",
    "name": "Google-Sheets-based-ChatGPT-Conversation-Manager",
    "description": "This script manages conversations with the ChatGPT AI model through Google Sheets. It includes memory management for improved consistency and is ideal for chatbot development. The code is written in JavaScript and requires an OpenAI API key. It is licensed under the MIT License.",
    "html_url": [
      "https://github.com/seed-arf/Google-Sheets-based-ChatGPT-Conversation-Manager/blob/c2b9e9ea5d3762f5557a319a4ed6d7572353d29d/ChatGPT_API_Vookmarket.gs"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 39,
    "stars": 0
  },
  {
    "full_name": "TraXIcoN/github-rag",
    "name": "github-rag",
    "description": "This repository is for building custom RAGs for github repos for new contributors to get familiar with the repo nice and smooth!",
    "html_url": [
      "https://github.com/TraXIcoN/github-rag/blob/21df1ae0ab02269598cd760cf831a784dff1f3de/querying/queryProcessor.js",
      "https://github.com/TraXIcoN/github-rag/blob/21df1ae0ab02269598cd760cf831a784dff1f3de/response/responseGenerator.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 11744,
    "stars": 0
  },
  {
    "full_name": "johnnyip/TG-OpenAI-API-bot",
    "name": "TG-OpenAI-API-bot",
    "description": "A simple Telegram Chatbot using the OpenAI API",
    "html_url": [
      "https://github.com/johnnyip/TG-OpenAI-API-bot/blob/d1dcaf08d5a56d17210e15c06b4b0d574dd7f516/content/chat_GPT4.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1288,
    "stars": 0
  },
  {
    "full_name": "FiestaTheNewbieDev/discord-ai-helper-old",
    "name": "discord-ai-helper-old",
    "description": "AI assistant Discord bot based on OpenAI's GPT-4 and DALL-E models. ",
    "html_url": [
      "https://github.com/FiestaTheNewbieDev/discord-ai-helper-old/blob/64bca3da2d6243f2461edccd6ca8f0cca46360d5/src/controllers/dallEController.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 2005,
    "stars": 0
  },
  {
    "full_name": "geraldyywang/ARIA",
    "name": "ARIA",
    "description": "Accessible Refugee Information Assistant. Helping refugees understand the claimant process in Canada, with the help of a multilingual voice assistant, and fine tuned large language model.",
    "html_url": [
      "https://github.com/geraldyywang/ARIA/blob/790f3d02852ca23d66c8a4be69f63f7b528e9908/frontend/aria/openai/Transcribe.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 17809,
    "stars": 1
  },
  {
    "full_name": "Muskan1842/LLM-studio",
    "name": "LLM-studio",
    "description": "LLM Studio is an AI-powered platform for creating and deploying LLM workflows. With React and React Flow, it offers an intuitive canvas for building custom LLM pipelines using drag-and-drop functionality.",
    "html_url": [
      "https://github.com/Muskan1842/LLM-studio/blob/d54b40d24abd4df63e3d17b4e661147891192755/src/utils/openai-config.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 5624,
    "stars": 2
  },
  {
    "full_name": "ekogeda/openai-transcribe",
    "name": "openai-transcribe",
    "description": null,
    "html_url": [
      "https://github.com/ekogeda/openai-transcribe/blob/9ae0d2fc82f03cbed015491eb44158cc0ac82bad/src/composables/useAudioTranscription.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1217,
    "stars": 0
  },
  {
    "full_name": "paytonshafer/ChatGPT-Clone",
    "name": "ChatGPT-Clone",
    "description": "This is my ChatGPT clone done in react using the openai API.",
    "html_url": [
      "https://github.com/paytonshafer/ChatGPT-Clone/blob/506d7473507cd0b4665c62e9469ef0b630d88518/server.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 17937,
    "stars": 0
  },
  {
    "full_name": "liorkasti/kst-chatgpt-clone",
    "name": "kst-chatgpt-clone",
    "description": "🤖 ChatGPT Clone",
    "html_url": [
      "https://github.com/liorkasti/kst-chatgpt-clone/blob/5935e82295771144463e3cee93756b1928396938/server/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 3321174,
    "stars": 0
  },
  {
    "full_name": "Abd-Elhadi/Chat-GPT-Clone",
    "name": "Chat-GPT-Clone",
    "description": "This app is a ChatGPT Clone using OpenAIs gpt-3.5-turbo Model.",
    "html_url": [
      "https://github.com/Abd-Elhadi/Chat-GPT-Clone/blob/ef350050873bd60708d5651fab463e53b19cc6b7/server.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 30467,
    "stars": 0
  },
  {
    "full_name": "TyrWinDev/ai-youtube-idea-generator",
    "name": "ai-youtube-idea-generator",
    "description": "Need ideas for your videos ? This app uses the power of OpenAi's GPT 3.5 to take your prompt about your idea content, and gives you several titles to choose from! After selecting an option, a list of tags are generated are the bottom so you have the best chance to make your video viral. Made with React (Vite) and Css.  ",
    "html_url": [
      "https://github.com/TyrWinDev/ai-youtube-idea-generator/blob/f0cf44f30d0274d09a9f369475a57f5ab49cb089/src/api/api.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 5434,
    "stars": 0
  },
  {
    "full_name": "shabeebtk/quiz-app",
    "name": "quiz-app",
    "description": "created a programming language quiz app that questions generates from openAi  ",
    "html_url": [
      "https://github.com/shabeebtk/quiz-app/blob/4cf0de4592cd150f72772b2abb76723fa56ceb32/src/api/openAI.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 5536,
    "stars": 1
  },
  {
    "full_name": "VarmaDev390/projectCartoon",
    "name": "projectCartoon",
    "description": "A fun and interactive chat application featuring a ChatGPT-powered user interface where users can engage in conversations, manage multiple chat sessions, and explore unique insights on various cartoon characters. The app’s backend integrates seamlessly with the ChatGPT API, allowing users to learn about beloved characters through tailored prompts",
    "html_url": [
      "https://github.com/VarmaDev390/projectCartoon/blob/47e4452cd5309850b82f95a201f521812423b8ee/client/src/utils/OpenAi.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 20875,
    "stars": 0
  },
  {
    "full_name": "Ivanoshka/api_OPENAI",
    "name": "api_OPENAI",
    "description": "es un ejemplo de como usar la api, de openai, especificamente el area de completions",
    "html_url": [
      "https://github.com/Ivanoshka/api_OPENAI/blob/962ebb64dbddda7e0879e96f29db9f90850e3b4c/app.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 76,
    "stars": 0
  },
  {
    "full_name": "mahendraDew/react-chatGPT-clone",
    "name": "react-chatGPT-clone",
    "description": "A ChatGPT clone using react",
    "html_url": [
      "https://github.com/mahendraDew/react-chatGPT-clone/blob/9d56f1eb34b129a03bc2b1ab82f14a9631cbea04/server/server.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 67744,
    "stars": 1
  },
  {
    "full_name": "wizzy-design/chatgpt-clone--MightyGPT-",
    "name": "chatgpt-clone--MightyGPT-",
    "description": "Just doing this to know how to work with OpenAI's API",
    "html_url": [
      "https://github.com/wizzy-design/chatgpt-clone--MightyGPT-/blob/99a942e048d0613f61fdacfbf0efe1ae19976c0f/server.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 6300,
    "stars": 0
  },
  {
    "full_name": "anyajegorova/another_chatgpt",
    "name": "another_chatgpt",
    "description": "Interface for ChatGPT using ReactJS, CSS3, fetching chat completions from OpenAI API GPT-3.5-turbo",
    "html_url": [
      "https://github.com/anyajegorova/another_chatgpt/blob/9784bb5391d8eed620f9b1c2abeb28df37416832/server/server.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 5356,
    "stars": 0
  },
  {
    "full_name": "mendozalz/chat-gpt-react",
    "name": "chat-gpt-react",
    "description": "Clon de chat gpt con react",
    "html_url": [
      "https://github.com/mendozalz/chat-gpt-react/blob/173e38b68356db4769e59ec2ed5400d6540ebb32/server.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 4918,
    "stars": 0
  },
  {
    "full_name": "laramohan/wikillm",
    "name": "wikillm",
    "description": "LLMs as Collaboratively Edited Knowledge Bases",
    "html_url": [
      "https://github.com/laramohan/wikillm/blob/c331e58bbc45730740920567c30e60350606c277/react-chatgpt/server.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 22163,
    "stars": 45
  },
  {
    "full_name": "MM120-i/ChatGPT-Clone",
    "name": "ChatGPT-Clone",
    "description": "ChitChatGPT - Chatbot Interface",
    "html_url": [
      "https://github.com/MM120-i/ChatGPT-Clone/blob/a973221d69dc0cff0fc576aeef3e434d212677b9/server.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 373,
    "stars": 1
  },
  {
    "full_name": "ProgrammerAditya36/chatGpt_clone",
    "name": "chatGpt_clone",
    "description": "Working Clone of chatgpt created using React Node Express and OpenAI Api",
    "html_url": [
      "https://github.com/ProgrammerAditya36/chatGpt_clone/blob/f1a2a193eb179d37377fff470525708ee07e6262/backend/server.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 6563,
    "stars": 0
  },
  {
    "full_name": "Rango52/gpt-clone",
    "name": "gpt-clone",
    "description": null,
    "html_url": [
      "https://github.com/Rango52/gpt-clone/blob/ce64055aa29bb86a1c86faf159fef029e49206ca/react-chatGPT/server/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 33857,
    "stars": 0
  },
  {
    "full_name": "gyopak/sidellama",
    "name": "sidellama",
    "description": null,
    "html_url": [
      "https://github.com/gyopak/sidellama/blob/99627fbbb9753de653c3a0166eb54b88fe1ee8f0/config/manifest/v3.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 25208,
    "stars": 274
  },
  {
    "full_name": "maphim/chatgpt-backend",
    "name": "chatgpt-backend",
    "description": "Build the chat backend to communicate with the GPT-3 API and store conversation infomation on the server.",
    "html_url": [
      "https://github.com/maphim/chatgpt-backend/blob/7a17c17bb37fe1308bfdea9751e372b11d8206b6/libs/openai.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1461,
    "stars": 10
  },
  {
    "full_name": "lapreamarcelo/cloudfare-worker-openai",
    "name": "cloudfare-worker-openai",
    "description": null,
    "html_url": [
      "https://github.com/lapreamarcelo/cloudfare-worker-openai/blob/2740d13a3f74e65a605d777fd9523f95a12298e6/main.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 52,
    "stars": 1
  },
  {
    "full_name": "galalkoro98/Api-open-AI",
    "name": "Api-open-AI",
    "description": "OpenAI's API provides access to GPT-3, which performs a wide variety of natural language tasks, and Codex, which translates natural language to code. ",
    "html_url": [
      "https://github.com/galalkoro98/Api-open-AI/blob/db6d37f3873177a149aa1b114aaa59af8f9cd4b0/src/init.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1856,
    "stars": 0
  },
  {
    "full_name": "libaxuan/openai-billing",
    "name": "openai-billing",
    "description": "一个安全的不收集key的openai key查询",
    "html_url": [
      "https://github.com/libaxuan/openai-billing/blob/c746c40a9787383bf940176ca37ed8b6e112d27b/cloudflare.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 585,
    "stars": 2
  },
  {
    "full_name": "zhourunlong/Light-GPT-Plus",
    "name": "Light-GPT-Plus",
    "description": "Extension and bug-fix for Light-GPT (https://github.com/riwigefi/light-gpt)",
    "html_url": [
      "https://github.com/zhourunlong/Light-GPT-Plus/blob/adb3831de6f2cb5cb227d834f8c0b16f0ac4d2e5/ProxyServer.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 9791,
    "stars": 1
  },
  {
    "full_name": "kalanix/kalanix.github.io",
    "name": "kalanix.github.io",
    "description": "This is a chatbot uses the open ai gpt-4 version.",
    "html_url": [
      "https://github.com/kalanix/kalanix.github.io/blob/872f70c047f61ca38b4ec39daa0a9a95b3803469/app.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 217,
    "stars": 0
  },
  {
    "full_name": "vipin10100001/Openai-chatbot-javascript",
    "name": "Openai-chatbot-javascript",
    "description": "A simple chatbot which is built using Javascript and OpenAi API.",
    "html_url": [
      "https://github.com/vipin10100001/Openai-chatbot-javascript/blob/0407b2f964fcb2e5ae3fac9fbfe81e1f417d88be/app.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 224,
    "stars": 0
  },
  {
    "full_name": "mayurpatil77/OpenAI-Projects",
    "name": "OpenAI-Projects",
    "description": "Vanilla Javascript Projects Made Using OpenAI API ",
    "html_url": [
      "https://github.com/mayurpatil77/OpenAI-Projects/blob/228375f55bfa45ab9aa7a7b5c89b3a0d92c7d7dd/Explain%20code/app.js",
      "https://github.com/mayurpatil77/OpenAI-Projects/blob/228375f55bfa45ab9aa7a7b5c89b3a0d92c7d7dd/Code%20Bug%20Fixer/app.js",
      "https://github.com/mayurpatil77/OpenAI-Projects/blob/228375f55bfa45ab9aa7a7b5c89b3a0d92c7d7dd/Function%20from%20specification/app.js",
      "https://github.com/mayurpatil77/OpenAI-Projects/blob/228375f55bfa45ab9aa7a7b5c89b3a0d92c7d7dd/Tweet%20classifier/app.js",
      "https://github.com/mayurpatil77/OpenAI-Projects/blob/228375f55bfa45ab9aa7a7b5c89b3a0d92c7d7dd/Summarize%20for%20a%202nd%20grader/app.js",
      "https://github.com/mayurpatil77/OpenAI-Projects/blob/228375f55bfa45ab9aa7a7b5c89b3a0d92c7d7dd/Emoji%20chatbot/app.js",
      "https://github.com/mayurpatil77/OpenAI-Projects/blob/228375f55bfa45ab9aa7a7b5c89b3a0d92c7d7dd/Natural%20language%20to%20SQL/app.js",
      "https://github.com/mayurpatil77/OpenAI-Projects/blob/228375f55bfa45ab9aa7a7b5c89b3a0d92c7d7dd/Review%20classifier/app.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1946,
    "stars": 0
  },
  {
    "full_name": "cxu-demo/try-gpt3",
    "name": "try-gpt3",
    "description": "a web app to try gpt-3",
    "html_url": [
      "https://github.com/cxu-demo/try-gpt3/blob/31a72d6d35ab28e5817ebe35f28ad92f24f69979/functions/api/gpt3.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 776,
    "stars": 1
  },
  {
    "full_name": "NinjaTyper/ReactOpenAI",
    "name": "ReactOpenAI",
    "description": null,
    "html_url": [
      "https://github.com/NinjaTyper/ReactOpenAI/blob/056715fd4f9d7529730f895e465405125ee121c0/src/OpenAiComponent.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 19706,
    "stars": 0
  },
  {
    "full_name": "pgrach/js_openAI_beginner",
    "name": "js_openAI_beginner",
    "description": "js+node.js+vercel. Learning to deploy application with my API key saved using Vercel platform.",
    "html_url": [
      "https://github.com/pgrach/js_openAI_beginner/blob/623b022ec74a992ef6af9098aff219d6b4f914f2/api/getOpenAIResponse.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 49732,
    "stars": 0
  },
  {
    "full_name": "oGabrielFreitas/React-Chat-GPT-Bot",
    "name": "React-Chat-GPT-Bot",
    "description": "A simple example of a chat bot in ReactJS/NodeJS using Chat GPT API",
    "html_url": [
      "https://github.com/oGabrielFreitas/React-Chat-GPT-Bot/blob/649aa889108b692a0fd147d669b52a3adc6657da/backend/src/index%20copy.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 87041,
    "stars": 1
  },
  {
    "full_name": "wuoti/eleos",
    "name": "eleos",
    "description": "A Jira plugin to generate acceptance criteria for a Jira ticket using a LLM.",
    "html_url": [
      "https://github.com/wuoti/eleos/blob/c26618af133f9ed363fb44c4bc4c35ff51bc5669/src/config.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 5641,
    "stars": 1
  },
  {
    "full_name": "yadahampofo/navigaid",
    "name": "navigaid",
    "description": "This project uses React.js Front end Frame work to create a fully functional web application which aims to help people with the medicaid re-enrollment/redetermination process.",
    "html_url": [
      "https://github.com/yadahampofo/navigaid/blob/ff69020b20e4fadd889db0f0fe943ebc5d3c37a0/chatgpt-project/app.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 82382,
    "stars": 0
  },
  {
    "full_name": "BuraYu/ChatGPT-CLI",
    "name": "ChatGPT-CLI",
    "description": "A browser CLI with ChatGPT prompts",
    "html_url": [
      "https://github.com/BuraYu/ChatGPT-CLI/blob/a045240ff48d4fbeabcc9dda151677815fcef0aa/src/server.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 32740,
    "stars": 0
  },
  {
    "full_name": "frozzel/uni-server",
    "name": "uni-server",
    "description": "Uni-Server is a Node.js application that leverages OpenAI's ChatGPT and DALL-E 3 for content creation. The server can publish this content to various social media platforms (LinkedIn, Facebook, Instagram, and Twitter) and create blog posts for HubSpot using ChatGPT. It also utilizes the News API to generate posts with content curated by ChatGPT.",
    "html_url": [
      "https://github.com/frozzel/uni-server/blob/3f33c609f832ea2fcd7b43a15ea0976897bae8a9/controllers/avatar.js",
      "https://github.com/frozzel/uni-server/blob/3f33c609f832ea2fcd7b43a15ea0976897bae8a9/controllers/instagram.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 7583,
    "stars": 3
  },
  {
    "full_name": "mukhamadazistholib/OllaMate",
    "name": "OllaMate",
    "description": "OllaMate: Private AI chatbot Chrome extension.",
    "html_url": [
      "https://github.com/mukhamadazistholib/OllaMate/blob/e88b1db6f493b36f62d8dd34948f1ff9b54becbc/config/manifest/v3.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 23866,
    "stars": 0
  },
  {
    "full_name": "danisanguino/Ai-title-generator",
    "name": "Ai-title-generator",
    "description": "Title generator from a text, using AI with openAI",
    "html_url": [
      "https://github.com/danisanguino/Ai-title-generator/blob/1dd24d5aa7f81d34235a97d2fce72a19616f45ac/utils/api.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 2354,
    "stars": 0
  },
  {
    "full_name": "cheatsoft/AnswerWriteGPT",
    "name": "AnswerWriteGPT",
    "description": "GPT-Assisted AnswerWrite",
    "html_url": [
      "https://github.com/cheatsoft/AnswerWriteGPT/blob/3f98a3c7c8c4bad1fe4779f149de4569ea34b47d/background.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 107,
    "stars": 0
  },
  {
    "full_name": "regan-tan/itinerary-generator-using-OpenAI-API",
    "name": "itinerary-generator-using-OpenAI-API",
    "description": null,
    "html_url": [
      "https://github.com/regan-tan/itinerary-generator-using-OpenAI-API/blob/0c869bb68451278995648abd88d8777a88bc94cc/itinerary%20generator%20with%20OpenAI%20API/src/services/api.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 2047,
    "stars": 0
  },
  {
    "full_name": "Spark-love/chatgpt-for-google-workspace",
    "name": "chatgpt-for-google-workspace",
    "description": "Chat GPT extension for Google Workspace",
    "html_url": [
      "https://github.com/Spark-love/chatgpt-for-google-workspace/blob/669b9e0bbe09cd907c681889f5b45fbd7a7b1e6a/background.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 110,
    "stars": 0
  },
  {
    "full_name": "gtiso/GPT-Wrapper-Text-to-Summary",
    "name": "GPT-Wrapper-Text-to-Summary",
    "description": "Python GPT Wrapper Text to Summary (+ Extensions)",
    "html_url": [
      "https://github.com/gtiso/GPT-Wrapper-Text-to-Summary/blob/4844ac2e11e309e5ae95cfd8e083b538d550a166/firefox-extension/background.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 464,
    "stars": 0
  },
  {
    "full_name": "erlapso/openai-api-node",
    "name": "openai-api-node",
    "description": "A simple node wrapper for the OpenAI API",
    "html_url": [
      "https://github.com/erlapso/openai-api-node/blob/a75b0c0f955912380ef5ab911bfe259db7e0fdeb/app.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 901,
    "stars": 20
  },
  {
    "full_name": "SylenthMen/chat-bot-html-basico",
    "name": "chat-bot-html-basico",
    "description": "chatea con el bot que tiene la api de gpt",
    "html_url": [
      "https://github.com/SylenthMen/chat-bot-html-basico/blob/951589ab73f53ce6932ec17dff697dd0080a4b8b/server.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 67843,
    "stars": 0
  },
  {
    "full_name": "alerougon/ObjectStorage",
    "name": "ObjectStorage",
    "description": "This is a personal Object Storage Repo",
    "html_url": [
      "https://github.com/alerougon/ObjectStorage/blob/ac15dddece77694b8aa8da1407c5d76b8b5db346/chatbot3.js",
      "https://github.com/alerougon/ObjectStorage/blob/ac15dddece77694b8aa8da1407c5d76b8b5db346/chatbot4.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1333,
    "stars": 0
  },
  {
    "full_name": "MishynMykhailo/parser-google-form",
    "name": "parser-google-form",
    "description": "This is a Google Forms parser that collects questions and answer choices and uses the OpenAI API to get more detailed and accurate answers.",
    "html_url": [
      "https://github.com/MishynMykhailo/parser-google-form/blob/246c27681448db85a5b08465d3293290d94d4376/helpers/FindAnswer.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1654,
    "stars": 0
  },
  {
    "full_name": "harshdev2909/AI-Image_Generator",
    "name": "AI-Image_Generator",
    "description": "A React-based AI image generator that leverages the OpenAI API to create unique images from text prompts.",
    "html_url": [
      "https://github.com/harshdev2909/AI-Image_Generator/blob/2cdedee968bb3f0bd390fe282db89f8d146cd28f/ai/src/components/imageGenerator/ImageGenerator.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 18589,
    "stars": 2
  },
  {
    "full_name": "devanmolsharma/Flutter_UI_builder",
    "name": "Flutter_UI_builder",
    "description": "A drag and drop app builder for flutter",
    "html_url": [
      "https://github.com/devanmolsharma/Flutter_UI_builder/blob/05acd2ddca282df07ed7fc5d75b4c038cf2c9188/UI_Backend/AICoder.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 0,
    "stars": 4
  },
  {
    "full_name": "YuNaga224/chatgpt-chrome",
    "name": "chatgpt-chrome",
    "description": "ChatGPTをChrome拡張で使えるようにしたやつです",
    "html_url": [
      "https://github.com/YuNaga224/chatgpt-chrome/blob/4acc05e95e2e1e9d7aee7e851f7b3e00f9d282e9/background.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 131,
    "stars": 0
  },
  {
    "full_name": "ColgateSmile/Generative_Online_Waiter",
    "name": "Generative_Online_Waiter",
    "description": "An interactive online waiter chatbot built with React and integrated with the OpenAI API, enabling users to order food and drinks from a predefined menu. The chatbot confirms orders, suggests drinks, and summarizes the total.",
    "html_url": [
      "https://github.com/ColgateSmile/Generative_Online_Waiter/blob/76a6bf8ff66ef5c7ec90ba208ed5ccafbfe8cc3d/Server/relay-server.js",
      "https://github.com/ColgateSmile/Generative_Online_Waiter/blob/76a6bf8ff66ef5c7ec90ba208ed5ccafbfe8cc3d/src/components/ChatBox.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 22070,
    "stars": 0
  },
  {
    "full_name": "Ameth/chatgpt-clone",
    "name": "chatgpt-clone",
    "description": "Clone ChatGPT using API",
    "html_url": [
      "https://github.com/Ameth/chatgpt-clone/blob/1ee4273f250e07ed281f94d85e4f603f88197c91/src/api/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 4823,
    "stars": 0
  },
  {
    "full_name": "promptfoo/promptfoo",
    "name": "promptfoo",
    "description": "Test your prompts, agents, and RAGs. Red teaming, pentesting, and vulnerability scanning for LLMs. Compare performance of GPT, Claude, Gemini, Llama, and more. Simple declarative configs with command line and CI/CD integration.",
    "html_url": [
      "https://github.com/promptfoo/promptfoo/blob/435d9bf9b27b169e4591d8a7d2d07df10c2c5e53/examples/custom-provider-mjs/customProvider.mjs"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 434223,
    "stars": 7174
  },
  {
    "full_name": "sujjeee/tweetGPT",
    "name": "tweetGPT",
    "description": "TweetsGPT: A web app that uses GPT-3 to generate tweets from your thoughts. Choose the tone and the type of tweet, and get ready to twee.",
    "html_url": [
      "https://github.com/sujjeee/tweetGPT/blob/21e70883c82e3539ac23fa698146110c9c7f3a1e/src/pages/api/generate.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 512,
    "stars": 5
  },
  {
    "full_name": "BlakeIzaguirre/GlyphToExcal",
    "name": "GlyphToExcal",
    "description": "Glyph to Excal (GTE) is a project for taking handwritten or LLM-generated process descriptions and quickly modeling them in Excalidraw. ",
    "html_url": [
      "https://github.com/BlakeIzaguirre/GlyphToExcal/blob/edc84ee68bedf1b46d022417305209fc23881126/gte/src/BusinessProcessForm.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 18520,
    "stars": 2
  },
  {
    "full_name": "aleemrehmtulla/gpt3-google-extension",
    "name": "gpt3-google-extension",
    "description": "get direct answers in google using LLMs",
    "html_url": [
      "https://github.com/aleemrehmtulla/gpt3-google-extension/blob/495ed126a0a0fb6f9ddb177401de5a1435698c06/background.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 116,
    "stars": 19
  },
  {
    "full_name": "DilyanaSU/AI-Assistent",
    "name": "AI-Assistent",
    "description": "based on ChatGPT",
    "html_url": [
      "https://github.com/DilyanaSU/AI-Assistent/blob/89c34611a7b3831597c6d2c5e18beb7fdce13a07/main.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 53,
    "stars": 0
  },
  {
    "full_name": "sohumdalal/RAGFollowAlong.JSonly",
    "name": "RAGFollowAlong.JSonly",
    "description": "Refactored RAG Follow Along using only JS + JS frameworks",
    "html_url": [
      "https://github.com/sohumdalal/RAGFollowAlong.JSonly/blob/ef124cabaa4c409ec2ac8ecee8c420fd1a2d45ca/server/handlers/openai_service.js",
      "https://github.com/sohumdalal/RAGFollowAlong.JSonly/blob/ef124cabaa4c409ec2ac8ecee8c420fd1a2d45ca/server/server.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 24891,
    "stars": 0
  },
  {
    "full_name": "vermavarun/langchain",
    "name": "langchain",
    "description": null,
    "html_url": [
      "https://github.com/vermavarun/langchain/blob/1339ea62e65d15fca9739e95925e1e927f90a454/node/mssqlOpenAI.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 227,
    "stars": 0
  },
  {
    "full_name": "hugomd/chatterbox",
    "name": "chatterbox",
    "description": "Simple Discord bot to interact with OpenAI",
    "html_url": [
      "https://github.com/hugomd/chatterbox/blob/175b130a95e27096eac302466e27e421244166f3/commands/draw/draw.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1046,
    "stars": 1
  },
  {
    "full_name": "ankurtehlan/OpenAi_Image_Generator",
    "name": "OpenAi_Image_Generator",
    "description": null,
    "html_url": [
      "https://github.com/ankurtehlan/OpenAi_Image_Generator/blob/30495f27e665a6665f988d4c71263e553fd67c40/src/Components/ImageGenerator/ImageGenerator.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 18095,
    "stars": 0
  },
  {
    "full_name": "shubhankar-shandilya-india/Insights-AI-An-OpenAI-chrome-extension",
    "name": "Insights-AI-An-OpenAI-chrome-extension",
    "description": "Your go-to companion for unlocking knowledge and gaining valuable insights instantly.",
    "html_url": [
      "https://github.com/shubhankar-shandilya-india/Insights-AI-An-OpenAI-chrome-extension/blob/5e82c39b7d2e676aad81ee9936bb50fc51957f8f/src/App.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 18707,
    "stars": 4
  },
  {
    "full_name": "vishalraghav0289/Taskmate-AI",
    "name": "Taskmate-AI",
    "description": "Project",
    "html_url": [
      "https://github.com/vishalraghav0289/Taskmate-AI/blob/5188f344a9106f3bad85460308eebc8f36fa3519/Backend/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "kixlab/gpt-editor",
    "name": "gpt-editor",
    "description": "Text editor powered with GPT-3 for investigating common user revision techniques.",
    "html_url": [
      "https://github.com/kixlab/gpt-editor/blob/f1429696ff879b7cf35239fd4b1202fd4afffe14/src/test.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 41632,
    "stars": 0
  },
  {
    "full_name": "tdj28/vscode-extension-openai-code-review",
    "name": "vscode-extension-openai-code-review",
    "description": "A simple vscode extension that takes the currently open/focused file and submits it to GPT-4 for review and Q&A",
    "html_url": [
      "https://github.com/tdj28/vscode-extension-openai-code-review/blob/ca5687820ec7a7454423d8ca76569cf53aae2526/api.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 591,
    "stars": 0
  },
  {
    "full_name": "KanikeSaidatta/Chat-GPT-Bot",
    "name": "Chat-GPT-Bot",
    "description": "chat gpt bot using openchat api",
    "html_url": [
      "https://github.com/KanikeSaidatta/Chat-GPT-Bot/blob/cd255527d5a529e533deada0a1f95b657acfde6e/chat/ChatBot-main/app.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 172,
    "stars": 0
  },
  {
    "full_name": "amxsupport/Fitness_Sphere",
    "name": "Fitness_Sphere",
    "description": "Fitness Sphere is an estimation system leveraging Computer Vision and Machine Learning to enhance the field of sports and fitness.",
    "html_url": [
      "https://github.com/amxsupport/Fitness_Sphere/blob/5cda3b900a2b99779af912c18852609514c1ecbf/frontend/src/ExerciseChatBot/ActionProvider.jsx",
      "https://github.com/amxsupport/Fitness_Sphere/blob/5cda3b900a2b99779af912c18852609514c1ecbf/frontend/src/HealthChatBot/ActionProvider.jsx",
      "https://github.com/amxsupport/Fitness_Sphere/blob/5cda3b900a2b99779af912c18852609514c1ecbf/node-backend/routes/openaiRoute.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 189756,
    "stars": 1
  },
  {
    "full_name": "kannansuresh/chatgpt-playground",
    "name": "chatgpt-playground",
    "description": "ChatGPT API Playground. Our latest tool, a web app, allowing you to interact with the ChatGPT API by inputting prompts as System, User, or Assistant.",
    "html_url": [
      "https://github.com/kannansuresh/chatgpt-playground/blob/e454bf53d57aed2b05b7d132305acd5e15f0386f/docs/js/classes.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 21765,
    "stars": 17
  },
  {
    "full_name": "yosgo-opensource/swapgo",
    "name": "swapgo",
    "description": "AI Go Battle: An AI-powered Go game simulator leveraging Claude and other AI tools to create strategic match-ups and analyze gameplay.",
    "html_url": [
      "https://github.com/yosgo-opensource/swapgo/blob/5b688fc0d2547d14f848a3e143f6b64a7ae18488/pages/api/dalle/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 26280,
    "stars": 7
  },
  {
    "full_name": "edn0/gpt_bot",
    "name": "gpt_bot",
    "description": "Discord bot ed_bot, fetching data from OpenAI and GLife Extinction",
    "html_url": [
      "https://github.com/edn0/gpt_bot/blob/0b43af2d70b5519f301d6be55b397d66bb21de68/commands/gpt3.js",
      "https://github.com/edn0/gpt_bot/blob/0b43af2d70b5519f301d6be55b397d66bb21de68/commands/top10.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 2283,
    "stars": 0
  },
  {
    "full_name": "0m364/text-gpt-tasker-android",
    "name": "text-gpt-tasker-android",
    "description": "this is the basic setup of a taster task to use yout chat gpt api to return text messages",
    "html_url": [
      "https://github.com/0m364/text-gpt-tasker-android/blob/b0ad85df613d9b5d3a7b4d4a508a21b307b4c6b0/textGPTtasker.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 49,
    "stars": 0
  },
  {
    "full_name": "iceripperss/gpt-is-friend",
    "name": "gpt-is-friend",
    "description": "5 years ago not many of us would believe of current gpt fame",
    "html_url": [
      "https://github.com/iceripperss/gpt-is-friend/blob/deb23c55aa71092683cb9512e3b92577a1ff4346/src/Chat.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 19240,
    "stars": 0
  },
  {
    "full_name": "swinnik/problem-solver",
    "name": "problem-solver",
    "description": "OpenAI integrated problem solving app",
    "html_url": [
      "https://github.com/swinnik/problem-solver/blob/bf2f3cec3d59a5a6056acd703e78566893769567/backend/server.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 7476,
    "stars": 0
  },
  {
    "full_name": "coopercodes/OpenAIAPIReact",
    "name": "OpenAIAPIReact",
    "description": "From the video Use OpenAI API With React (Beginner OpenAI API Tutorial)",
    "html_url": [
      "https://github.com/coopercodes/OpenAIAPIReact/blob/c088e04e021165a56f9e9ef1be01ad88824efd2d/src/App.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 2473,
    "stars": 2
  },
  {
    "full_name": "tariqueahmad275/Codilarity-AI",
    "name": "Codilarity-AI",
    "description": "Code Assistor Website using LLM and Fine tuning",
    "html_url": [
      "https://github.com/tariqueahmad275/Codilarity-AI/blob/a452e3ae2291c17ef7626e4331e906ee7cfb1116/src/contorller/response.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1100176,
    "stars": 0
  },
  {
    "full_name": "VRuttik/OpenAI_Image_Generator",
    "name": "OpenAI_Image_Generator",
    "description": null,
    "html_url": [
      "https://github.com/VRuttik/OpenAI_Image_Generator/blob/2f56f433e54a031e6ccaa16878d0607ad971c5ae/src/components/ImageGenerator/ImageGenrator.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 189,
    "stars": 0
  },
  {
    "full_name": "brayanjeshua/chatgpt-to-speech",
    "name": "chatgpt-to-speech",
    "description": "CHATGPT Text-to-Speech Application",
    "html_url": [
      "https://github.com/brayanjeshua/chatgpt-to-speech/blob/ef2d904e5c739740f9aa40057227f7e08cd5428d/server.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 919,
    "stars": 2
  },
  {
    "full_name": "j-abellera/openai-project",
    "name": "openai-project",
    "description": "Mobile app built on React that utilizes OpenAi's GPT and DALL-E APIs to access AIs freely and without limitations from overloaded servers. Data persistence with PostgresDB",
    "html_url": [
      "https://github.com/j-abellera/openai-project/blob/8ffeb9605ce7b2becc3a1a47f16feced0117c692/src/ImageForm.js",
      "https://github.com/j-abellera/openai-project/blob/8ffeb9605ce7b2becc3a1a47f16feced0117c692/src/api/index.js",
      "https://github.com/j-abellera/openai-project/blob/8ffeb9605ce7b2becc3a1a47f16feced0117c692/src/Form.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 30429,
    "stars": 0
  },
  {
    "full_name": "zeddkhan03/ImageGen-OpenAI",
    "name": "ImageGen-OpenAI",
    "description": null,
    "html_url": [
      "https://github.com/zeddkhan03/ImageGen-OpenAI/blob/6cf74caa602caccbb56bfde98587ee26fdf8780f/app.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 235,
    "stars": 0
  },
  {
    "full_name": "tdj28/tab-chat",
    "name": "tab-chat",
    "description": "Chat about your currently open page with openAI api",
    "html_url": [
      "https://github.com/tdj28/tab-chat/blob/86af09e047c93b102b1918de2134da23d747b0d6/js/openai.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 310,
    "stars": 0
  },
  {
    "full_name": "oleksiishevchuk/aws-lambda-openai-whisper",
    "name": "aws-lambda-openai-whisper",
    "description": "AWS S3/Lambda integration with Open AI speech to text API (Whisper model)",
    "html_url": [
      "https://github.com/oleksiishevchuk/aws-lambda-openai-whisper/blob/6fda372bf4f97e74d3cd5587b6e7faa49d34f3f4/functions/speech-to-text.mjs"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 4727,
    "stars": 1
  },
  {
    "full_name": "mendozalz/chatGPT-JS-Vanilla",
    "name": "chatGPT-JS-Vanilla",
    "description": "Practicas del uso de la API de OPENIA solo con Vanilla JS",
    "html_url": [
      "https://github.com/mendozalz/chatGPT-JS-Vanilla/blob/3a93a822c80e063b77c9fc8e620f041b10387b5d/src/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 4802,
    "stars": 0
  },
  {
    "full_name": "ebetap/text-more-adab",
    "name": "text-more-adab",
    "description": "A utility for sentiment analysis and text generation. Transform your negative comments to positive or encourage other people.",
    "html_url": [
      "https://github.com/ebetap/text-more-adab/blob/af7079db1f385a79abbb3818473e5b5adb360de1/test/TextMoreAdab.test.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 314,
    "stars": 0
  },
  {
    "full_name": "AwaisKamran/openai-realtime-api",
    "name": "openai-realtime-api",
    "description": "This repository explores the voice based realtime api",
    "html_url": [
      "https://github.com/AwaisKamran/openai-realtime-api/blob/b6305f9b5cc5a3725c5dc6ca08eeca43ef18680b/index.mjs",
      "https://github.com/AwaisKamran/openai-realtime-api/blob/b6305f9b5cc5a3725c5dc6ca08eeca43ef18680b/index-audio-files.mjs"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1614,
    "stars": 6
  },
  {
    "full_name": "sumit-kumar-jha1709/ATSInsightPro",
    "name": "ATSInsightPro",
    "description": "Elevate your resume with our React app, leveraging OpenAI API and Chakra UI to ensure optimal ATS keyword integration for increased visibility and success.",
    "html_url": [
      "https://github.com/sumit-kumar-jha1709/ATSInsightPro/blob/c6bde8b662a70038796dba0047f2ef679e39e245/src/App.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 30524,
    "stars": 6
  },
  {
    "full_name": "Veximor/gpt-translator",
    "name": "gpt-translator",
    "description": "Translation app powered by OpenAI's GPT-3/4 for real-time translation of text in any language. (#gpt-clone -- #openai -- #google translator)",
    "html_url": [
      "https://github.com/Veximor/gpt-translator/blob/8f9eb9acd228f38d88cf462116c3704d8be34cad/app.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 330,
    "stars": 0
  },
  {
    "full_name": "oapicf/openapi-openai",
    "name": "openapi-openai",
    "description": "API client libraries for OpenAI service generated using OpenAPI Generator",
    "html_url": [
      "https://github.com/oapicf/openapi-openai/blob/173b85b2439220c211dbfd959b0849f947950c47/clients/zapier/generated/apis/EmbeddingsApi.js",
      "https://github.com/oapicf/openapi-openai/blob/173b85b2439220c211dbfd959b0849f947950c47/clients/javascript-closure-angular/generated/API/Client/CompletionsApi.js",
      "https://github.com/oapicf/openapi-openai/blob/173b85b2439220c211dbfd959b0849f947950c47/clients/zapier/generated/apis/ModelsApi.js",
      "https://github.com/oapicf/openapi-openai/blob/173b85b2439220c211dbfd959b0849f947950c47/clients/javascript-closure-angular/generated/API/Client/ModelsApi.js",
      "https://github.com/oapicf/openapi-openai/blob/173b85b2439220c211dbfd959b0849f947950c47/clients/javascript-closure-angular/generated/API/Client/FilesApi.js",
      "https://github.com/oapicf/openapi-openai/blob/173b85b2439220c211dbfd959b0849f947950c47/clients/javascript-closure-angular/generated/API/Client/AudioApi.js",
      "https://github.com/oapicf/openapi-openai/blob/173b85b2439220c211dbfd959b0849f947950c47/clients/javascript-closure-angular/generated/API/Client/AssistantsApi.js",
      "https://github.com/oapicf/openapi-openai/blob/173b85b2439220c211dbfd959b0849f947950c47/clients/zapier/generated/apis/AssistantsApi.js",
      "https://github.com/oapicf/openapi-openai/blob/173b85b2439220c211dbfd959b0849f947950c47/clients/java-camel/generated/src/main/java/org/openapitools/RestConfiguration.java",
      "https://github.com/oapicf/openapi-openai/blob/173b85b2439220c211dbfd959b0849f947950c47/clients/jaxrs-cxf-extended/generated/src/test/java/org/openapitools/api/EmbeddingsApiTest.java",
      "https://github.com/oapicf/openapi-openai/blob/173b85b2439220c211dbfd959b0849f947950c47/clients/jaxrs-cxf-extended/generated/src/test/java/org/openapitools/api/ModerationsApiTest.java",
      "https://github.com/oapicf/openapi-openai/blob/173b85b2439220c211dbfd959b0849f947950c47/clients/jaxrs-cxf/generated/src/test/java/org/openapitools/api/ModelsApiTest.java",
      "https://github.com/oapicf/openapi-openai/blob/173b85b2439220c211dbfd959b0849f947950c47/clients/jaxrs-cxf-client/generated/src/test/java/org/openapitools/api/ModelsApiTest.java",
      "https://github.com/oapicf/openapi-openai/blob/173b85b2439220c211dbfd959b0849f947950c47/clients/jaxrs-cxf/generated/src/test/java/org/openapitools/api/AudioApiTest.java",
      "https://github.com/oapicf/openapi-openai/blob/173b85b2439220c211dbfd959b0849f947950c47/clients/jaxrs-cxf-client/generated/src/test/java/org/openapitools/api/AudioApiTest.java",
      "https://github.com/oapicf/openapi-openai/blob/173b85b2439220c211dbfd959b0849f947950c47/clients/jaxrs-cxf-extended/generated/src/test/java/org/openapitools/api/AudioApiTest.java",
      "https://github.com/oapicf/openapi-openai/blob/173b85b2439220c211dbfd959b0849f947950c47/clients/jaxrs-cxf-extended/generated/src/test/java/org/openapitools/api/FilesApiTest.java",
      "https://github.com/oapicf/openapi-openai/blob/173b85b2439220c211dbfd959b0849f947950c47/clients/jaxrs-cxf/generated/src/test/java/org/openapitools/api/FineTuningApiTest.java",
      "https://github.com/oapicf/openapi-openai/blob/173b85b2439220c211dbfd959b0849f947950c47/clients/jaxrs-cxf-client/generated/src/test/java/org/openapitools/api/FineTuningApiTest.java",
      "https://github.com/oapicf/openapi-openai/blob/173b85b2439220c211dbfd959b0849f947950c47/clients/android/generated/src/main/java/org/openapitools/client/api/EmbeddingsApi.java",
      "https://github.com/oapicf/openapi-openai/blob/173b85b2439220c211dbfd959b0849f947950c47/clients/android/generated/src/main/java/org/openapitools/client/api/ModerationsApi.java",
      "https://github.com/oapicf/openapi-openai/blob/173b85b2439220c211dbfd959b0849f947950c47/clients/android/generated/src/main/java/org/openapitools/client/api/CompletionsApi.java",
      "https://github.com/oapicf/openapi-openai/blob/173b85b2439220c211dbfd959b0849f947950c47/clients/jaxrs-cxf-extended/generated/src/test/java/org/openapitools/api/AssistantsApiTest.java",
      "https://github.com/oapicf/openapi-openai/blob/173b85b2439220c211dbfd959b0849f947950c47/clients/android/generated/src/main/java/org/openapitools/client/api/FilesApi.java",
      "https://github.com/oapicf/openapi-openai/blob/173b85b2439220c211dbfd959b0849f947950c47/clients/android/generated/src/main/java/org/openapitools/client/api/AudioApi.java",
      "https://github.com/oapicf/openapi-openai/blob/173b85b2439220c211dbfd959b0849f947950c47/clients/python/generated/openapiopenai/configuration.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript",
      "java",
      "python"
    ],
    "fork": false,
    "loc": 2309761,
    "stars": 4
  },
  {
    "full_name": "elliotberry/gpt-commit",
    "name": "gpt-commit",
    "description": "Runs the diff of current staged change in a git repo, and asks GPT-4 to write a description, then commit with said message",
    "html_url": [
      "https://github.com/elliotberry/gpt-commit/blob/38f4319b726884c5211e6049782c19210acbf2e2/lib/make-api-request.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 933,
    "stars": 3
  },
  {
    "full_name": "21Ner04/GPT-DSS",
    "name": "GPT-DSS",
    "description": null,
    "html_url": [
      "https://github.com/21Ner04/GPT-DSS/blob/a2fb19de4a533bf6ac5097ce3da0adfbf521b98b/src/server.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 29216,
    "stars": 1
  },
  {
    "full_name": "quantified-uncertainty/gpt-utils",
    "name": "gpt-utils",
    "description": "Repository with some utils using gpt-3",
    "html_url": [
      "https://github.com/quantified-uncertainty/gpt-utils/blob/4f0a65d68196ab1be7fda2b5f388731071ff04a3/reword-markdown-text/reword-md.js",
      "https://github.com/quantified-uncertainty/gpt-utils/blob/4f0a65d68196ab1be7fda2b5f388731071ff04a3/correct-markdown-typos/correct-typos.js",
      "https://github.com/quantified-uncertainty/gpt-utils/blob/4f0a65d68196ab1be7fda2b5f388731071ff04a3/oracle/deploy-oracle.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 244,
    "stars": 0
  },
  {
    "full_name": "vlds5r/homestorage",
    "name": "homestorage",
    "description": "App for managing inventory of items/food at home",
    "html_url": [
      "https://github.com/vlds5r/homestorage/blob/70c4b37cf05680101339af8d15bceb2827542f8c/src/services/api.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "HassanKhan123/openai-keyword-extractor",
    "name": "openai-keyword-extractor",
    "description": null,
    "html_url": [
      "https://github.com/HassanKhan123/openai-keyword-extractor/blob/e05c6a3f2bd5f79cc15f81307dc7ee1dc536382f/src/App.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 5618,
    "stars": 0
  },
  {
    "full_name": "gavinmgrant/listingify",
    "name": "listingify",
    "description": "A full-stack app selling tokens that allow real estate agent users generate descriptions for their listings using the OpenAI API.",
    "html_url": [
      "https://github.com/gavinmgrant/listingify/blob/1d1aee9834477f4046631c99cba795c7c3afa7a6/src/util/openaistream.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 8063,
    "stars": 0
  },
  {
    "full_name": "llboo/ChatGPT-Next-Web-PRO",
    "name": "ChatGPT-Next-Web-PRO",
    "description": "ChatGPT-Next-Web 接入管理后台，包括：key管理、用户鉴权、公众号注册/扫码登录、支付管理、卡密管理等",
    "html_url": [
      "https://github.com/llboo/ChatGPT-Next-Web-PRO/blob/b2ad6b774a22c1df30171ffc4bb71f3168baae9d/next.config.mjs"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 16704,
    "stars": 162
  },
  {
    "full_name": "mozilla/langview",
    "name": "langview",
    "description": "EXPERIMENTAL – A library for language models to respond with GUI. ",
    "html_url": [
      "https://github.com/mozilla/langview/blob/95eabaa621c80534bca84b95a28448d8101cec66/demo/src/query.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1319,
    "stars": 64
  },
  {
    "full_name": "hijra-engineering/ngoprek-llm",
    "name": "ngoprek-llm",
    "description": null,
    "html_url": [
      "https://github.com/hijra-engineering/ngoprek-llm/blob/e39696b883d760dfc36a9c796d93d9240ca16c89/ask.js",
      "https://github.com/hijra-engineering/ngoprek-llm/blob/e39696b883d760dfc36a9c796d93d9240ca16c89/query.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 567,
    "stars": 21
  },
  {
    "full_name": "carandev/image-generator",
    "name": "image-generator",
    "description": "Proyecto que genera una imagen a partir de un texto usando la API de OpenAI",
    "html_url": [
      "https://github.com/carandev/image-generator/blob/a0e51343d6c28bee0accfe34b5e3e662d61e3f91/src/App.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 258,
    "stars": 2
  },
  {
    "full_name": "vitorgabrieldev/Test_request_chat-GPT-3_api",
    "name": "Test_request_chat-GPT-3_api",
    "description": "Repositório para arquivos de teste de requisição para api do GPT-3, para prototipação de um projeto pessoal",
    "html_url": [
      "https://github.com/vitorgabrieldev/Test_request_chat-GPT-3_api/blob/8a9f21108f800da652e6c483cf2f3aee5b6d76d9/api.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 449,
    "stars": 0
  },
  {
    "full_name": "benmcnulty/moderator",
    "name": "moderator",
    "description": "OpenAI Content Filter Demo for rating safety of text input",
    "html_url": [
      "https://github.com/benmcnulty/moderator/blob/692758f1109eb124e3706d8095be5373f625f21b/server.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 7284,
    "stars": 0
  },
  {
    "full_name": "frozenparadox99/RAG-Agent",
    "name": "RAG-Agent",
    "description": null,
    "html_url": [
      "https://github.com/frozenparadox99/RAG-Agent/blob/b2bdf0dbbee100219c56fdc94db67c0d3769f837/api/completions.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 7083,
    "stars": 0
  },
  {
    "full_name": "0x11c11e/GPTDigest",
    "name": "GPTDigest",
    "description": "GPTDigest: A Chrome extension that uses OpenAI's GPT-3 to instantly summarize webpages. Make reading online faster and more efficient.",
    "html_url": [
      "https://github.com/0x11c11e/GPTDigest/blob/cdc6d1a24d6aaf07721faa15cc5be48344e98ef7/apiKeyInput.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 219,
    "stars": 0
  },
  {
    "full_name": "Nelef/chatGPT-web-clone",
    "name": "chatGPT-web-clone",
    "description": "chatGPT api를 사용해 web 비슷하게 만들어봄.",
    "html_url": [
      "https://github.com/Nelef/chatGPT-web-clone/blob/9e030b31b5635fb44f12b4ef483f834941da554a/src/components/ModelSelector.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 21883,
    "stars": 3
  },
  {
    "full_name": "uzumal/webex-bot-gemini-webhook",
    "name": "webex-bot-gemini-webhook",
    "description": "It leverages the power of the Gemini AI model to provide intelligent responses and summaries within your conversations.",
    "html_url": [
      "https://github.com/uzumal/webex-bot-gemini-webhook/blob/5364afef0de60db7624b1e72d9c8ed3b76521f8c/openai/webex_openai.gs"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 163,
    "stars": 0
  },
  {
    "full_name": "EliasBWGarcia/ai-image-gen-openAI-API",
    "name": "ai-image-gen-openAI-API",
    "description": null,
    "html_url": [
      "https://github.com/EliasBWGarcia/ai-image-gen-openAI-API/blob/ef6cea3df24047cbafb3e1f7b9dba5f0a9994150/openAi-API.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 165,
    "stars": 0
  },
  {
    "full_name": "Manav958/Course",
    "name": "Course",
    "description": "In the fast-evolving world of education, students often struggle to find personalized and interactive ways to learn and assess their understanding of various subjects. Our inspiration was to create a comprehensive platform that leverages AI to facilitate self-learning, provide real-time assistance, and foster a community of learners.",
    "html_url": [
      "https://github.com/Manav958/Course/blob/ca169a4bf66c9c7b36122e6262ca1f1a549d5706/views/scripts/subtopicToSubtopics.js",
      "https://github.com/Manav958/Course/blob/ca169a4bf66c9c7b36122e6262ca1f1a549d5706/views/scripts/topictToSubtopic.js",
      "https://github.com/Manav958/Course/blob/ca169a4bf66c9c7b36122e6262ca1f1a549d5706/views/scripts/generatePara.js",
      "https://github.com/Manav958/Course/blob/ca169a4bf66c9c7b36122e6262ca1f1a549d5706/views/scripts/quiz.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 4716,
    "stars": 0
  },
  {
    "full_name": "shrutika19/Ai-image-generator",
    "name": "Ai-image-generator",
    "description": " AI Image Generator App In React Using OpenAI",
    "html_url": [
      "https://github.com/shrutika19/Ai-image-generator/blob/67c884d56e3ea470c5970a37d84fd83e763c966d/src/Components/ImageGenerator/ImageGenerator.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 4308,
    "stars": 0
  },
  {
    "full_name": "spudtrooper/chromevariations",
    "name": "chromevariations",
    "description": "A Chrome extension allows users to select text on any webpage and then view multiple variations of the selected text, using the OpenAI GPT model.",
    "html_url": [
      "https://github.com/spudtrooper/chromevariations/blob/dbf38b3c08157b66101b65d580f8130b63ce1ea7/background.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "mob61887/MVP_5e_encounter_generator",
    "name": "MVP_5e_encounter_generator",
    "description": "An encounter generator for D&D 5th edition utilizing OpenAI's ChatGPT API",
    "html_url": [
      "https://github.com/mob61887/MVP_5e_encounter_generator/blob/6084ede0eeab5ab808fa824e252bd4bb27c28c2d/server/controller/postOpenAI.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 666597,
    "stars": 0
  },
  {
    "full_name": "CaganDerbent/Receipt-Scanner",
    "name": "Receipt-Scanner",
    "description": "This receipt scanner application analyzes the receipts uploaded by the user and automatically extracts specific data from the receipt, such as the company name, tax ID, total amount, tax amount, date, and address. It utilizes the OpenAI API and the GPT-4o model for data extraction and processing.",
    "html_url": [
      "https://github.com/CaganDerbent/Receipt-Scanner/blob/3169c313d7cad7ffc840bb2416fd492b8c0f4d9d/backend/api/Controllers/ScanController.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 22737,
    "stars": 0
  },
  {
    "full_name": "andref2015/Page-Scout",
    "name": "Page-Scout",
    "description": "Page Scout is a Chrome extension that allows you to quickly and easily summarize any selected text on a webpage using GPT-3.",
    "html_url": [
      "https://github.com/andref2015/Page-Scout/blob/e2f6f5e595dc24f49a3d805e8f28720f4f738e2a/page_scout/background.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 86,
    "stars": 0
  },
  {
    "full_name": "willgdjones/SlashAI",
    "name": "SlashAI",
    "description": "Slash AI: A Chrome extension that seamlessly integrates GPT-powered AI models into your browsing experience. Type '/ai' followed by a prompt in any text field, and receive instant AI-generated responses using the OpenAI API. Manage your API key and preferred AI model with a user-friendly settings popup. Enhance your web interactions with the power",
    "html_url": [
      "https://github.com/willgdjones/SlashAI/blob/6d3ba4cd89f86ccae1f3620a6daecdb564e6d79c/background.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 244,
    "stars": 0
  },
  {
    "full_name": "JaskaranSingh0/Wizard",
    "name": "Wizard",
    "description": "AI chatbot with and avatar integrated with ChatGPT-4 ",
    "html_url": [
      "https://github.com/JaskaranSingh0/Wizard/blob/7e5dfa5fd4d8057d173b49ce660f06b0696ac2fe/chatbot/script.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "KamilDziuk/assistantChatGPT",
    "name": "assistantChatGPT",
    "description": "An assistant that answers questions by taking data from the API in the voxAPI.php file. Through the OpenAI API, the gpt chat model answers questions that are saved in the MySQL database. By setting the role of the model, you can adjust the answers to your needs.",
    "html_url": [
      "https://github.com/KamilDziuk/assistantChatGPT/blob/31b7571040ac5c310a9b7d128f7fc98b9e8c7951/js/assistant.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 228,
    "stars": 1
  },
  {
    "full_name": "OmarNassar1127/openai-realtime-console-main",
    "name": "openai-realtime-console-main",
    "description": null,
    "html_url": [
      "https://github.com/OmarNassar1127/openai-realtime-console-main/blob/7f1e231207b3f8003c110072ffe5081fcdb74505/relay-server/test-openai-basic.mjs",
      "https://github.com/OmarNassar1127/openai-realtime-console-main/blob/7f1e231207b3f8003c110072ffe5081fcdb74505/test-openai-realtime-basic.mjs",
      "https://github.com/OmarNassar1127/openai-realtime-console-main/blob/7f1e231207b3f8003c110072ffe5081fcdb74505/test-rag-realtime.mjs",
      "https://github.com/OmarNassar1127/openai-realtime-console-main/blob/7f1e231207b3f8003c110072ffe5081fcdb74505/verify-rag-simple.mjs",
      "https://github.com/OmarNassar1127/openai-realtime-console-main/blob/7f1e231207b3f8003c110072ffe5081fcdb74505/verify-rag-voice.mjs",
      "https://github.com/OmarNassar1127/openai-realtime-console-main/blob/7f1e231207b3f8003c110072ffe5081fcdb74505/verify-rag-final.mjs",
      "https://github.com/OmarNassar1127/openai-realtime-console-main/blob/7f1e231207b3f8003c110072ffe5081fcdb74505/relay-server/lib/relay.mjs"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 41432,
    "stars": 0
  },
  {
    "full_name": "XInTheDark/raycast-g4f",
    "name": "raycast-g4f",
    "description": "Raycast extension to use GPT, Claude, Llama, and more... all for FREE. No API Key required!",
    "html_url": [
      "https://github.com/XInTheDark/raycast-g4f/blob/521a746d48548703f50108fa77c8b5aea833617d/src/api/Providers/special/custom_openai.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 13401,
    "stars": 957
  },
  {
    "full_name": "bakkot/simple-dalle-ui",
    "name": "simple-dalle-ui",
    "description": "a simple webpage to wrap OpenAI's image-generator API",
    "html_url": [
      "https://github.com/bakkot/simple-dalle-ui/blob/1477d523fb9b458586f47a6fd3ae2b3bd4881feb/run.js",
      "https://github.com/bakkot/simple-dalle-ui/blob/1477d523fb9b458586f47a6fd3ae2b3bd4881feb/page.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 2357,
    "stars": 1
  },
  {
    "full_name": "ubyjerome/Chat-GPT3.5-API-Model",
    "name": "Chat-GPT3.5-API-Model",
    "description": "Explore a simple illustration of implementing the GPT-3.5 API model in frontend JavaScript.",
    "html_url": [
      "https://github.com/ubyjerome/Chat-GPT3.5-API-Model/blob/83fca603756dcc3f60ccac8dbe5243ce56e4a41f/app.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 152,
    "stars": 2
  },
  {
    "full_name": "fran-aubry/open-ai-realtime-node-demo",
    "name": "open-ai-realtime-node-demo",
    "description": "Demo on how to use the OpenAI real-time API with Node.js",
    "html_url": [
      "https://github.com/fran-aubry/open-ai-realtime-node-demo/blob/09d50f57c1f8d64e6bc90bf4ec27742f3338ee51/text-demo.js",
      "https://github.com/fran-aubry/open-ai-realtime-node-demo/blob/09d50f57c1f8d64e6bc90bf4ec27742f3338ee51/audio-demo.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 491,
    "stars": 6
  },
  {
    "full_name": "benllshua/chatGPT-chrome-extension",
    "name": "chatGPT-chrome-extension",
    "description": "cool idea so when you are searching google, youll get the chat answer as well as answers",
    "html_url": [
      "https://github.com/benllshua/chatGPT-chrome-extension/blob/b27cc1f0aa4030c674bc09d824ec8be0a679e2f2/content.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 85,
    "stars": 0
  },
  {
    "full_name": "IDPArchitect/ollama-code-reviewer",
    "name": "ollama-code-reviewer",
    "description": "Ollama Code Reviewer for VScode",
    "html_url": [
      "https://github.com/IDPArchitect/ollama-code-reviewer/blob/0c3a4668c84a1f849a28c2e7057b919d1f87054a/out/common/healthCheck.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 6710,
    "stars": 0
  },
  {
    "full_name": "ryanmio/DecodeMe-",
    "name": "DecodeMe-",
    "description": "DecodeMe! is a coding game with integrated language model.",
    "html_url": [
      "https://github.com/ryanmio/DecodeMe-/blob/44b5acff3dc3a1204f5001dcb94d6d37b6d06002/functions/generateLeaderboardName.js",
      "https://github.com/ryanmio/DecodeMe-/blob/44b5acff3dc3a1204f5001dcb94d6d37b6d06002/functions/fetchPostGameMessage.js",
      "https://github.com/ryanmio/DecodeMe-/blob/44b5acff3dc3a1204f5001dcb94d6d37b6d06002/functions/checkCustomInstructions.js",
      "https://github.com/ryanmio/DecodeMe-/blob/44b5acff3dc3a1204f5001dcb94d6d37b6d06002/functions/getCodeSnippet.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 25062,
    "stars": 2
  },
  {
    "full_name": "sujal12344/AI-Image-generator",
    "name": "AI-Image-generator",
    "description": "The AI Image Generator is a powerful tool designed to create high-quality images using OpenAI's API. This project leverages advanced AI models to generate images based on user prompts, providing a seamless and intuitive experience.",
    "html_url": [
      "https://github.com/sujal12344/AI-Image-generator/blob/8c2aaf72a307bad93e60c68363b848bf534c621d/src/Components/imageGenerator.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 5574,
    "stars": 1
  },
  {
    "full_name": "dhruvgupta114/22_AI_IMAGE_GENERATOR_OPENAI_USING_REACTJS",
    "name": "22_AI_IMAGE_GENERATOR_OPENAI_USING_REACTJS",
    "description": null,
    "html_url": [
      "https://github.com/dhruvgupta114/22_AI_IMAGE_GENERATOR_OPENAI_USING_REACTJS/blob/94edff96465a7b1ef01bf66ff2b22d36292cf322/src/Components/imageGenerator/ImageGenerator.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 4558,
    "stars": 0
  },
  {
    "full_name": "happydave1/ai-image-gen-web-app",
    "name": "ai-image-gen-web-app",
    "description": "test react-openaiapi-nodejs stack",
    "html_url": [
      "https://github.com/happydave1/ai-image-gen-web-app/blob/64e8fd9438f7755eecd2e0aacd45c0c424f95da3/src/Components/ImageGenerator/ImageGenerator.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 18221,
    "stars": 0
  },
  {
    "full_name": "cajcodes/rugged-functions",
    "name": "rugged-functions",
    "description": "OpenAI functions",
    "html_url": [
      "https://github.com/cajcodes/rugged-functions/blob/2233b36fcd040f040b3b48d9215a2b8155ac2fd0/functions/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 9474,
    "stars": 6
  },
  {
    "full_name": "Nanjiren01/AIChatWeb",
    "name": "AIChatWeb",
    "description": "在ChatGPT-Next-Web的基础上，增加注册登录，额度限制，邀请，敏感词，支付，基于docker一键部署。提供后台管理系统，可配置标题、欢迎词、额度不足提醒、公告",
    "html_url": [
      "https://github.com/Nanjiren01/AIChatWeb/blob/0ad9bbbab49e810a040fbacb3b01ebab30417ba7/next.config.mjs"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 21747,
    "stars": 1451
  },
  {
    "full_name": "martinshkreli/bookgen",
    "name": "bookgen",
    "description": "A Node-based, GPT-powered book generator",
    "html_url": [
      "https://github.com/martinshkreli/bookgen/blob/a563b817ac1a20e907adec0d869c2c903f070268/askOpenAI.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 2171,
    "stars": 63
  },
  {
    "full_name": "g023/superez-gpt-builder",
    "name": "superez-gpt-builder",
    "description": "SuperEZ-GPT Builder: jQuery/GPT AI Content Building Assistant",
    "html_url": [
      "https://github.com/g023/superez-gpt-builder/blob/4b5e31086535a7fb224b2b6a2c4cdd6573ed6c06/_inc.js/superez-gpt-builder.gptapi.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 639,
    "stars": 13
  },
  {
    "full_name": "jeremysilva1098/FP-RAG-Chat",
    "name": "FP-RAG-Chat",
    "description": "RAG Client for freeplay content",
    "html_url": [
      "https://github.com/jeremysilva1098/FP-RAG-Chat/blob/26d9777f15c77230a1e8a306c6a5ab1c8422b672/src/utils/vectorSearch.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 2420,
    "stars": 4
  },
  {
    "full_name": "TheRealKiraAI/intro-to-ai",
    "name": "intro-to-ai",
    "description": "An introductory to using OpenAI's API for Node.js. A mini app to generate ads. ",
    "html_url": [
      "https://github.com/TheRealKiraAI/intro-to-ai/blob/c16285a679fad21addf6bcddc21a427fa2231270/src/AdComponent.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 278,
    "stars": 0
  },
  {
    "full_name": "will-balkan/embeddings-demo",
    "name": "embeddings-demo",
    "description": null,
    "html_url": [
      "https://github.com/will-balkan/embeddings-demo/blob/43e048b26c12dd85697595341af1ff24b6f7a4e2/src/components/Home.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 5824,
    "stars": 0
  },
  {
    "full_name": "JacquelineMG/Funsies",
    "name": "Funsies",
    "description": " A smart to-do list, single-page application that uses an OpenAI GPT language model to automatically categorize items. Created in collaboration with @carmshito and @katiestruthers.",
    "html_url": [
      "https://github.com/JacquelineMG/Funsies/blob/57d1118ae13e4b24d28bd960ecc373205018370a/routes/helperFunctions/fetchCategory.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 11725,
    "stars": 0
  },
  {
    "full_name": "Eazynesta/synthetiSketch",
    "name": "synthetiSketch",
    "description": "Ai image generation website. Powered by openAi",
    "html_url": [
      "https://github.com/Eazynesta/synthetiSketch/blob/dadccdec46ed3ba00fa5a81c926e3c57b6c445be/src/Components/Assets/ImageGenerator/ImageGenerator.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 18712,
    "stars": 0
  },
  {
    "full_name": "djosix/Translate",
    "name": "Translate",
    "description": "This extension surpasses Google Translate. It offers support for Google, OpenAI, DeepL, and Ollama as its backend options. The user experience is superior and continually improving.",
    "html_url": [
      "https://github.com/djosix/Translate/blob/1c08e21a725981536749f4fc44d8e33a44bebc3c/background/backends/openai.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1516,
    "stars": 4
  },
  {
    "full_name": "Snielson222/D-D-NPC-Generator",
    "name": "D-D-NPC-Generator",
    "description": "OPENAI API NPC Generator",
    "html_url": [
      "https://github.com/Snielson222/D-D-NPC-Generator/blob/156155fb4bd0e6c13bd8d308e40749079aa073ad/src/components/CharacterChat.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 28151,
    "stars": 0
  },
  {
    "full_name": "snnaplab/openai-chat-on-issues",
    "name": "openai-chat-on-issues",
    "description": "This is a GitHub Actions for running OpenAI's chat on GitHub Issues.",
    "html_url": [
      "https://github.com/snnaplab/openai-chat-on-issues/blob/3885d2d4a65bfd0294a8ba5fb6bc81e641dadb7f/src/libs.test.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 22187,
    "stars": 4
  },
  {
    "full_name": "rudratoshs/ai-content-recommender",
    "name": "ai-content-recommender",
    "description": "AI-powered content recommendation system using ChatGPT and Mistral APIs.",
    "html_url": [
      "https://github.com/rudratoshs/ai-content-recommender/blob/4b2f13dca450b7a7a1f4f030c6e71a6fb0f8375d/backend/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 881,
    "stars": 0
  },
  {
    "full_name": "Sanaz-M/openAI-small_project",
    "name": "openAI-small_project",
    "description": null,
    "html_url": [
      "https://github.com/Sanaz-M/openAI-small_project/blob/d8b5ad9ad9ff9b892a2ce1dc620ff5e703689083/src/App.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 6125,
    "stars": 0
  },
  {
    "full_name": "solstice23/gpt-trans-netease",
    "name": "gpt-trans-netease",
    "description": "使用 ChatGPT 翻译歌词 - BetterNCM 插件",
    "html_url": [
      "https://github.com/solstice23/gpt-trans-netease/blob/3f32708acbad3836b5a1a51ee5c4ba27b83ab6d0/src/api.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 986,
    "stars": 9
  },
  {
    "full_name": "khaterdev/openai-codex-chrome-extension",
    "name": "openai-codex-chrome-extension",
    "description": "AI built chrome Extension that can write code to manipulate web page contents using the same AI API.",
    "html_url": [
      "https://github.com/khaterdev/openai-codex-chrome-extension/blob/d6f6e339c449b726d7dd498cbd122834a0cbb922/src/js/content.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 232,
    "stars": 13
  },
  {
    "full_name": "fastarger/chatbot-GPT3-discord.js-v14",
    "name": "chatbot-GPT3-discord.js-v14",
    "description": "🤖Um Simples bot em node.js utilizando a API OPENAI.",
    "html_url": [
      "https://github.com/fastarger/chatbot-GPT3-discord.js-v14/blob/af6d66a8ad02be97cb49f026ccab08ecd2a99d7b/src/commands/images.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1090,
    "stars": 4
  },
  {
    "full_name": "grizzlypeaksoftware/contactformapi",
    "name": "contactformapi",
    "description": "Contact Form API that uses Open AI LLM to Filter for Spam",
    "html_url": [
      "https://github.com/grizzlypeaksoftware/contactformapi/blob/2fd8612c7a97422e7a87ebdbf8189778e9be71dc/app.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 960,
    "stars": 0
  },
  {
    "full_name": "CNPratt/auto-documentation-project",
    "name": "auto-documentation-project",
    "description": "A small Node program that use Babel to parse React JSX components and send them to the OpenAI API for description generation.",
    "html_url": [
      "https://github.com/CNPratt/auto-documentation-project/blob/3895a9a31667f7434876c6be436946014ae24cf5/config.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 5045,
    "stars": 0
  },
  {
    "full_name": "ppicello/MDB-MS0-RAG",
    "name": "MDB-MS0-RAG",
    "description": "Retrieval Augmented Generation with MongoDB Atlas, OpenAI and LangChain",
    "html_url": [
      "https://github.com/ppicello/MDB-MS0-RAG/blob/219dbb4ed8fd3ba0af66324336f0c1de8ea78132/trigger.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1810,
    "stars": 2
  },
  {
    "full_name": "petherEm/aikeywords",
    "name": "aikeywords",
    "description": "OpenAI backed keywords extractor, Next.js 13, TailwindCSS, OpenAI API",
    "html_url": [
      "https://github.com/petherEm/aikeywords/blob/2f1e2b6d5fad7d667c3133c7157f0314d9af5896/src/app/page.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 4747,
    "stars": 1
  },
  {
    "full_name": "noahpeden/react-openai-hooks",
    "name": "react-openai-hooks",
    "description": "A React Hook based off OpenAI Streaming Hooks that fixes its polyfill problem and enables streaming to React components from OpenAI ",
    "html_url": [
      "https://github.com/noahpeden/react-openai-hooks/blob/b64c51a7d29bb7eb188e7b0d1d649790e8681c18/src/useOpenAiStream/chat-stream-handler.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 42513,
    "stars": 0
  },
  {
    "full_name": "phil2211/rag-demo",
    "name": "rag-demo",
    "description": null,
    "html_url": [
      "https://github.com/phil2211/rag-demo/blob/4ec6febf7d63e220674a948fe1ec082eb448a48c/backend/atlas_app_services_app/functions/getResponse.js",
      "https://github.com/phil2211/rag-demo/blob/4ec6febf7d63e220674a948fe1ec082eb448a48c/backend/atlas_app_services_app/functions/updateVector.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 26743,
    "stars": 0
  },
  {
    "full_name": "dustinusey/chatgpt-clone",
    "name": "chatgpt-clone",
    "description": "A basic ChatGPT clone built in React and Tailwindcss",
    "html_url": [
      "https://github.com/dustinusey/chatgpt-clone/blob/ef4ba812b6ea59b66e4f2e6029302ff734a1d756/src/Components/NewChat.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 5661,
    "stars": 1
  },
  {
    "full_name": "StevenLeeTW/gpt-t9n",
    "name": "gpt-t9n",
    "description": null,
    "html_url": [
      "https://github.com/StevenLeeTW/gpt-t9n/blob/fa69d8d12bb24cb028c0ab021aa4f92c86d32af3/src/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 234,
    "stars": 0
  },
  {
    "full_name": "tripathiarpan20/Webpage-Safety-Evaluation",
    "name": "Webpage-Safety-Evaluation",
    "description": "Evaluate safety metrics of a webpage with free OpenAI moderation API",
    "html_url": [
      "https://github.com/tripathiarpan20/Webpage-Safety-Evaluation/blob/62cd4a677162350a507fd0b21c12bb8e4876fd8d/server.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 4794,
    "stars": 0
  },
  {
    "full_name": "papersgpt/papersgpt-for-zotero",
    "name": "papersgpt-for-zotero",
    "description": "Zotero chat PDF with GPT, ChatGPT, Claude, Gemini",
    "html_url": [
      "https://github.com/papersgpt/papersgpt-for-zotero/blob/67607023668db0cd1ae028b586a585e38fad36f2/addon/prefs.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 83982,
    "stars": 1738
  },
  {
    "full_name": "LinLin00000000/openai-billing",
    "name": "openai-billing",
    "description": "查询 openai 余额  fetch openai billing",
    "html_url": [
      "https://github.com/LinLin00000000/openai-billing/blob/4ec397c7600328c8f1e24c0c6ba47cd0a58aa423/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 950,
    "stars": 7
  },
  {
    "full_name": "bnovik0v/chrome-openai-summary-comment",
    "name": "chrome-openai-summary-comment",
    "description": "A Chrome extension to generate summaries and comments on selected text using OpenAI API, built with the help of ChatGPT.",
    "html_url": [
      "https://github.com/bnovik0v/chrome-openai-summary-comment/blob/d10f4661f7ec06bb23cae9e8c67fbf007694641d/background.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 251,
    "stars": 8
  },
  {
    "full_name": "DuanYuFi/GPT-Web",
    "name": "GPT-Web",
    "description": null,
    "html_url": [
      "https://github.com/DuanYuFi/GPT-Web/blob/fa26a1713f8cc07845446897dc529b50c40a512c/next.config.mjs"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 15842,
    "stars": 0
  },
  {
    "full_name": "alexander2323/win-chatgpt-grammar-corrector",
    "name": "win-chatgpt-grammar-corrector",
    "description": "Grammar Corrector (ChatGPT) is an Electron-based application that enhances your clipboard content by correcting its grammar using OpenAI's GPT-4 model. The app runs in the system tray and can be activated with a keyboard shortcut. It displays the current clipboard content, corrects its grammar, and updates the clipboard with the corrected text.",
    "html_url": [
      "https://github.com/alexander2323/win-chatgpt-grammar-corrector/blob/19cec66de5d3ef50e3286b06dc0f50b5ec687d42/main.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1367,
    "stars": 0
  },
  {
    "full_name": "Chauhan-Aman/AIgenius",
    "name": "AIgenius",
    "description": "AIgenius - Features three AI models by OpenAI: ChatGPT for generating human-like text responses, DALL-E for creating images from text descriptions, and Smart AI for text-to-speech, speech-to-text, and intelligent responses.",
    "html_url": [
      "https://github.com/Chauhan-Aman/AIgenius/blob/c2b53cfc86bc4297b15fd30e80e005b75957971b/src/api/openAI.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 13571,
    "stars": 0
  },
  {
    "full_name": "arc25275/chatGPT-Google",
    "name": "chatGPT-Google",
    "description": "An extension that adds a ChatGPT response below each google search. Token must be provided. Response can be customized via prompt.",
    "html_url": [
      "https://github.com/arc25275/chatGPT-Google/blob/8c93f9ad35be4a5e6aff68fc0025cfad69903a54/assistant.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 5175,
    "stars": 1
  },
  {
    "full_name": "khmorad/OpenAI_moderation_experiment",
    "name": "OpenAI_moderation_experiment",
    "description": null,
    "html_url": [
      "https://github.com/khmorad/OpenAI_moderation_experiment/blob/cc9bc1e87101d1b3772f21a128b8e2884eb52f74/src/ModerationComponent.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 29682,
    "stars": 0
  },
  {
    "full_name": "jyotimanglani/ai-image-generator",
    "name": "ai-image-generator",
    "description": "An image generator app built with React, featuring OpenAI integration for creative image generation. Users can describe what they want to see, and the app uses OpenAI's powerful model to generate unique images.",
    "html_url": [
      "https://github.com/jyotimanglani/ai-image-generator/blob/6b46d87375ff7723147da91c79d2e7d63d11f5fe/src/components/imageGenerator/ImageGenerator.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 4337,
    "stars": 0
  },
  {
    "full_name": "B-Llage/Covered",
    "name": "Covered",
    "description": "OpenAI Cover Letter Generator",
    "html_url": [
      "https://github.com/B-Llage/Covered/blob/83c0c260ecddddf25b63feca57370c07fa50dde1/AWS/LambdaFunctions/CoveredRequestFunction/index.mjs"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 63041,
    "stars": 1
  },
  {
    "full_name": "4btin/Discord-ChatGPT-SelfBot",
    "name": "Discord-ChatGPT-SelfBot",
    "description": "This project represents a customized chatbot available on Discord servers. This chatbot interacts with text-based chats using the OpenAI GPT-3.5-Turbo model. Users can send messages to the chatbot using a special command, and the chatbot can understand these messages and generate meaningful responses.",
    "html_url": [
      "https://github.com/4btin/Discord-ChatGPT-SelfBot/blob/f4b753cc178539f42ce6874d2cefcb13be9c1184/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 79,
    "stars": 4
  },
  {
    "full_name": "lsongdev/chatgpt-demo",
    "name": "chatgpt-demo",
    "description": "🤖 Simple ChatGPT Web Client",
    "html_url": [
      "https://github.com/lsongdev/chatgpt-demo/blob/33aa46b5246d3a002b191e04d54f06f22eac3d77/openai.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 537,
    "stars": 3
  },
  {
    "full_name": "QuocVietHa08/chatgpt-summuraize-chrome-extension",
    "name": "chatgpt-summuraize-chrome-extension",
    "description": "chatgpt-summuraize-chrome-extension",
    "html_url": [
      "https://github.com/QuocVietHa08/chatgpt-summuraize-chrome-extension/blob/d42be551b10c81b8f24e9e0a2231c7e1f679de87/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 6356,
    "stars": 0
  },
  {
    "full_name": "jitendra0104/ChatGPT-Integration-",
    "name": "ChatGPT-Integration-",
    "description": "ChatGPT Integration ",
    "html_url": [
      "https://github.com/jitendra0104/ChatGPT-Integration-/blob/9d99f6ae01aef58b47a06068fe9233b18dcb8186/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 138,
    "stars": 0
  },
  {
    "full_name": "wingsum93/Chatgpt-proxy-docker-js",
    "name": "Chatgpt-proxy-docker-js",
    "description": "A container that serve OPENAI API, can use to be deployed in docker machine.",
    "html_url": [
      "https://github.com/wingsum93/Chatgpt-proxy-docker-js/blob/7ddf54e97150b0780a67f8f0acbf7f4b9a2641f3/app/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1662,
    "stars": 0
  },
  {
    "full_name": "Ygali04/GPT-clone",
    "name": "GPT-clone",
    "description": "ChatGPT Clone designed for UCLA students of 5AL/5BL/5CL courses to leverage GPT-4 for free in assistance with their labs",
    "html_url": [
      "https://github.com/Ygali04/GPT-clone/blob/0e3e61693f3928654209c91f0c564caee7095be3/api/utils/extractBaseURL.spec.js",
      "https://github.com/Ygali04/GPT-clone/blob/0e3e61693f3928654209c91f0c564caee7095be3/api/app/clients/ChatGPTClient.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 84384,
    "stars": 1
  },
  {
    "full_name": "Sacha924/LLM_Fine_Tuning_DSA",
    "name": "LLM_Fine_Tuning_DSA",
    "description": null,
    "html_url": [
      "https://github.com/Sacha924/LLM_Fine_Tuning_DSA/blob/a15ba88e7be4a8598270c84c9c6b984536f0fc87/server/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 19552,
    "stars": 1
  },
  {
    "full_name": "Johnviitoor/APi-ChatGPT-2.0",
    "name": "APi-ChatGPT-2.0",
    "description": "Este é um projeto de chatbot utilizando o modelo de linguagem GPT-3 da OpenAI para fornecer respostas a perguntas inseridas pelo usuário em uma versão melhorada do projeto anterior com melhoras na interface ao usuário.",
    "html_url": [
      "https://github.com/Johnviitoor/APi-ChatGPT-2.0/blob/fab5a302bf73f236de22a830a1c1091b1da2bbc9/.vscode/script.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 260,
    "stars": 0
  },
  {
    "full_name": "studiobloom/gpt-build",
    "name": "gpt-build",
    "description": "webflow + node.js + aws ec2 + openai api (to avoid extra CORS annoyances)",
    "html_url": [
      "https://github.com/studiobloom/gpt-build/blob/438afc681c1e8bc591f049b5260d701847b6ec2c/server/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1638,
    "stars": 4
  },
  {
    "full_name": "Tsimbalist/ChatGPT-Extension",
    "name": "ChatGPT-Extension",
    "description": "This repository contains a lightweight and elegant browser extension that integrates ChatGPT directly into your browser's toolbar. With instant access, a clean interface, and full markdown support, this extension enhances your browsing experience by providing quick, on-demand AI assistance.",
    "html_url": [
      "https://github.com/Tsimbalist/ChatGPT-Extension/blob/8be688b0ce638ec6f66438b98020c2baa9c5ca39/options.js",
      "https://github.com/Tsimbalist/ChatGPT-Extension/blob/8be688b0ce638ec6f66438b98020c2baa9c5ca39/popup.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 476,
    "stars": 1
  },
  {
    "full_name": "ethan-yz-hao/equation-ocr-app",
    "name": "equation-ocr-app",
    "description": "OCR application for converting handwritten equations into LaTeX code using OpenAI's GPT-4V API, with LaTeX renderer for editing and checking (Next.js, Typescript, OpenAI GPT-4V, KaTex, Vercel)",
    "html_url": [
      "https://github.com/ethan-yz-hao/equation-ocr-app/blob/3f75c6f34b15ba2df09657a0654678b523b67f36/pages/api/upload-image.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 5498,
    "stars": 1
  },
  {
    "full_name": "yu-jeffy/anyquiz.ai",
    "name": "anyquiz.ai",
    "description": "LLM based quiz application, written in React.js",
    "html_url": [
      "https://github.com/yu-jeffy/anyquiz.ai/blob/86781e63ba0531e0869643afb3e029038d883aa5/anyquiz/src/pages/LandingPage.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 18576,
    "stars": 0
  },
  {
    "full_name": "k5-k/WebGPT",
    "name": "WebGPT",
    "description": "Ai chat assistant webpage that utilises OpenAI.",
    "html_url": [
      "https://github.com/k5-k/WebGPT/blob/ac37689739000c195220c62a683c2c737eee9d8c/script.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 637,
    "stars": 24
  },
  {
    "full_name": "analyticsinmotion/chatgpt-sentiment-analysis-in-excel",
    "name": "chatgpt-sentiment-analysis-in-excel",
    "description": "Discover NLP features powered by ChatGPT you can use in Excel",
    "html_url": [
      "https://github.com/analyticsinmotion/chatgpt-sentiment-analysis-in-excel/blob/233b5be58e8b54c15446683f4b472c4ef8656b45/src/functions/functions.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 17481,
    "stars": 14
  },
  {
    "full_name": "jozi/gpt-translate-ex",
    "name": "gpt-translate-ex",
    "description": "GPT Translator Chrome Extension",
    "html_url": [
      "https://github.com/jozi/gpt-translate-ex/blob/530d1289fca08828e33ddda80a85c66fa22bf3e6/background.js",
      "https://github.com/jozi/gpt-translate-ex/blob/530d1289fca08828e33ddda80a85c66fa22bf3e6/popup.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 764,
    "stars": 5
  },
  {
    "full_name": "Tintenklecks/Chrome-Plugin-for-ChatGpt-Website-Abstract",
    "name": "Chrome-Plugin-for-ChatGpt-Website-Abstract",
    "description": "This is my first Chrome plugin. It does a simple but very useful job. When you use it on an article, it queries the OpenAI API and presents you a 5 bullet list of it´s content with important words highlighted. You have to use your own API key, that you can create at https://platform.openai.com/account/api-keys",
    "html_url": [
      "https://github.com/Tintenklecks/Chrome-Plugin-for-ChatGpt-Website-Abstract/blob/80d76dff8cbd83b692c254ef11cdbcfeeadfb130/popup.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 146,
    "stars": 1
  },
  {
    "full_name": "patlov/image_generatorJS",
    "name": "image_generatorJS",
    "description": "Simple Image generator, which takes user input and then uses OpenAI API to generate the images",
    "html_url": [
      "https://github.com/patlov/image_generatorJS/blob/febf7f04459bb987d4e9781a4acd349e97a2477b/main.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 185,
    "stars": 0
  },
  {
    "full_name": "Carson21/chatgpt-sentiment-analysis",
    "name": "chatgpt-sentiment-analysis",
    "description": "API that allows user to search for reviews of a particular Google Place and use ChatGPT API to run sentiment analysis on the reviews",
    "html_url": [
      "https://github.com/Carson21/chatgpt-sentiment-analysis/blob/e0cc81b39d709dd92fa338d8d884e1e943c76e4e/routes/analyze.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 349,
    "stars": 0
  },
  {
    "full_name": "g023/SuperEZ-AI-SEO-Wordpress-Plugin",
    "name": "SuperEZ-AI-SEO-Wordpress-Plugin",
    "description": "A Wordpress OpenAI API GPT-3/GPT-4 SEO and Content Generator for Pages and Posts",
    "html_url": [
      "https://github.com/g023/SuperEZ-AI-SEO-Wordpress-Plugin/blob/4902f04b472ba585e5f708674d5815c30da61539/wp-content/plugins/superez-ai-seo/_inc.js/superez-gpt-builder.gptapi.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 620,
    "stars": 16
  },
  {
    "full_name": "V9vek/Algorithm-To-Code",
    "name": "Algorithm-To-Code",
    "description": "Algorithm to code generator using OpenAI API",
    "html_url": [
      "https://github.com/V9vek/Algorithm-To-Code/blob/9f60fdbd813fbcb4d3bc7dd31584a3d380a5e77e/src/App.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 8029,
    "stars": 1
  },
  {
    "full_name": "michael-dixonjr/LLM-Pro-UI",
    "name": "LLM-Pro-UI",
    "description": "Advanced User Interface for large language models",
    "html_url": [
      "https://github.com/michael-dixonjr/LLM-Pro-UI/blob/60eebf98bfb02b089f921a5c4e82a6622b69d485/server/server.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 35828,
    "stars": 0
  },
  {
    "full_name": "VladTer06081963/TabacoAI",
    "name": "TabacoAI",
    "description": "chat GPT",
    "html_url": [
      "https://github.com/VladTer06081963/TabacoAI/blob/ba2fafb6c3b1b0fc2b37e62371dd2a142dd500f1/utils/openaiRequest.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1543,
    "stars": 0
  },
  {
    "full_name": "ArtimusMaximus/reactAIshoppinglist",
    "name": "reactAIshoppinglist",
    "description": "React shopping list, local storage, chatgpt enhanced",
    "html_url": [
      "https://github.com/ArtimusMaximus/reactAIshoppinglist/blob/6e93a289da5abd22cf725065dae72923ee8e0f38/server/app.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 7051,
    "stars": 0
  },
  {
    "full_name": "gjssss/openai-low-code",
    "name": "openai-low-code",
    "description": "使用Vue3和Sortable.js实现的拖拽组件低代码平台",
    "html_url": [
      "https://github.com/gjssss/openai-low-code/blob/aa2864efdffa40494a622aa6023a86c80b7f271f/src/utils/chatGPT.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 7114,
    "stars": 3
  },
  {
    "full_name": "wikibonsai/semtree-germ",
    "name": "semtree-germ",
    "description": "Have an LLM (ChatGPT) generate a semantic (sub) tree from a given word or concept.",
    "html_url": [
      "https://github.com/wikibonsai/semtree-germ/blob/c1c0987d5a7732252046dc7c0e3c2c45453e5bbc/public/js/ai.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 991,
    "stars": 2
  },
  {
    "full_name": "johame72/chat4_128k",
    "name": "chat4_128k",
    "description": "gpt-4-0125-preview",
    "html_url": [
      "https://github.com/johame72/chat4_128k/blob/7dd48c35adc2d603531155b812bcfcef8587412d/src/NuChatComponent.js",
      "https://github.com/johame72/chat4_128k/blob/7dd48c35adc2d603531155b812bcfcef8587412d/src/ChatComponent.js",
      "https://github.com/johame72/chat4_128k/blob/7dd48c35adc2d603531155b812bcfcef8587412d/src/OLDChatComponent.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 18469,
    "stars": 3
  },
  {
    "full_name": "vadpiccini/coursera_flashcards",
    "name": "coursera_flashcards",
    "description": "Chrome Extension to generate notes and flashcards from Coursera video pages using OpenAI",
    "html_url": [
      "https://github.com/vadpiccini/coursera_flashcards/blob/334fa34f5cb3f0075fcb0cff7e8264984e44ae5e/scripts/settings.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 669,
    "stars": 2
  },
  {
    "full_name": "Ashuza11/weatherApp-with-genAI",
    "name": "weatherApp-with-genAI",
    "description": "This is repository contains code for a AI powered web app  build with React,  OpenAI API and the open weather API",
    "html_url": [
      "https://github.com/Ashuza11/weatherApp-with-genAI/blob/ca07e3e4dac19be98616c60eee653da399a25d9e/weatherApp/src/components/PromptToLocation.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 4711,
    "stars": 0
  },
  {
    "full_name": "aashraf09/nextjs-chatgpt-clone",
    "name": "nextjs-chatgpt-clone",
    "description": "IntellectoBot - An AI model developed using NEXT JS and OpenAI  API Key.",
    "html_url": [
      "https://github.com/aashraf09/nextjs-chatgpt-clone/blob/d773fcb39891fffb929bef88dbcdbfc04c7e2036/pages/api/chat/sendMessage.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 7004,
    "stars": 0
  },
  {
    "full_name": "nicucalcea/sheets-llm",
    "name": "sheets-llm",
    "description": "Use Large Language Models (LLM) in Google Sheets",
    "html_url": [
      "https://github.com/nicucalcea/sheets-llm/blob/1dad6d2518a2acfe29ad91cbc5c729d4be4e34a3/Code.gs"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 53,
    "stars": 44
  },
  {
    "full_name": "Grasseed/ChatGPT-Translator",
    "name": "ChatGPT-Translator",
    "description": "使用ChatGPT API的翻譯文字插件",
    "html_url": [
      "https://github.com/Grasseed/ChatGPT-Translator/blob/6e7f40cf1c28916feebff436e4a6814588431c5f/popup.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 284,
    "stars": 6
  },
  {
    "full_name": "maxsagt/lambda-openai-stream",
    "name": "lambda-openai-stream",
    "description": "Stream OpenAI responses with AWS Lambda Function URL response streaming. UPDATE: Now officially supported by OpenAI https://github.com/openai/openai-node",
    "html_url": [
      "https://github.com/maxsagt/lambda-openai-stream/blob/376f688de64655187ad926a97773ca1d381e144d/src/streamOpenAIResponse.mjs"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 192,
    "stars": 16
  },
  {
    "full_name": "cdm823/gdrive_folder_chat",
    "name": "gdrive_folder_chat",
    "description": "Retrieval Augmented Generation (RAG) Q&A for a Google Drive Folder",
    "html_url": [
      "https://github.com/cdm823/gdrive_folder_chat/blob/3e035e66fef7d8778c0761cffe039204cc8cbca5/gdrive_folder_chat/embedder.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 683,
    "stars": 8
  },
  {
    "full_name": "darrylschaefer/mongodb-triggers-openai",
    "name": "mongodb-triggers-openai",
    "description": "MongoDB Atlas Triggers for accessing OpenAI API",
    "html_url": [
      "https://github.com/darrylschaefer/mongodb-triggers-openai/blob/fbd52816247ae517c82fb137f2ba07ad3533e911/completions.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 100,
    "stars": 0
  },
  {
    "full_name": "gunjan1909/ai-job-description",
    "name": "ai-job-description",
    "description": "Job Description Generator with NextJS and OpenAI API",
    "html_url": [
      "https://github.com/gunjan1909/ai-job-description/blob/50b36c2fc5cc9e05a3edf0f30834aecbdd730f3f/src/pages/api/returnJobDescription.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 2659,
    "stars": 1
  },
  {
    "full_name": "rahilshah13/fragrantica-scraper",
    "name": "fragrantica-scraper",
    "description": "web scraping system on AWS for fragrantica.com",
    "html_url": [
      "https://github.com/rahilshah13/fragrantica-scraper/blob/7c050b6d59caad05f3cc620d6193410c07b5bf12/lib/lambda/getEmbeddings.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 17824,
    "stars": 1
  },
  {
    "full_name": "andref2015/New-Yorker-Style-Rewriter",
    "name": "New-Yorker-Style-Rewriter",
    "description": "An Apps Script that allows you to rewrite selected text in a Google Doc using GPT-3.",
    "html_url": [
      "https://github.com/andref2015/New-Yorker-Style-Rewriter/blob/87b07102d89aa4eee51bedb865cdbb885987ed0c/Code.gs"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 99,
    "stars": 4
  },
  {
    "full_name": "paulkogan/george_LLM",
    "name": "george_LLM",
    "description": "App translating free-text queries on a dataset to SQL searches via ChatGPT API",
    "html_url": [
      "https://github.com/paulkogan/george_LLM/blob/d9ff39bfafd751d18f89b528c253c4fdac02f600/client/src/services/api_service.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 2296,
    "stars": 0
  },
  {
    "full_name": "sunsky89757/FreeNextChat",
    "name": "FreeNextChat",
    "description": "免费使用gpt-4o-mini、llama-3.1-70b、deepseek-chat、claude-sonnet",
    "html_url": [
      "https://github.com/sunsky89757/FreeNextChat/blob/d534e80a23d62273a261292377eb670011310965/next.config.mjs"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "Moodbot11/openai-assistant",
    "name": "openai-assistant",
    "description": "Open AI script no api to a voice interaction chat but GTP 40",
    "html_url": [
      "https://github.com/Moodbot11/openai-assistant/blob/fae58408a7fe33a578879a54425a884cd2b6db17/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 221,
    "stars": 0
  },
  {
    "full_name": "Raghu23-dev/AI-Image-Generator",
    "name": "AI-Image-Generator",
    "description": "Created a Image Generator Website ",
    "html_url": [
      "https://github.com/Raghu23-dev/AI-Image-Generator/blob/bc62887b0f28c850dd43747b69a71cb1c90b3343/script.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 352,
    "stars": 0
  },
  {
    "full_name": "CBeckers/ChatGPT-Chat-Bot",
    "name": "ChatGPT-Chat-Bot",
    "description": "An HTML/CSS/JavaScript website that creates a chat environment where the user can message the ChatGPT AI.",
    "html_url": [
      "https://github.com/CBeckers/ChatGPT-Chat-Bot/blob/a7cff627ca0df48ec9da808c3bb3f89132abb72f/script.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 691,
    "stars": 1
  },
  {
    "full_name": "msoedov/agentic_security",
    "name": "agentic_security",
    "description": "Agentic LLM Vulnerability Scanner / AI red teaming kit",
    "html_url": [
      "https://github.com/msoedov/agentic_security/blob/846fa1697d0df096089561379bd02163233603cd/agentic_security/static/base.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 47964,
    "stars": 1453
  },
  {
    "full_name": "janlay/openai-cloudflare",
    "name": "openai-cloudflare",
    "description": "An OpenAI API proxy running with Cloudflare worker.",
    "html_url": [
      "https://github.com/janlay/openai-cloudflare/blob/c5c794556f5397ce85e3e271237e7a6fc7acfd3f/worker.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 148,
    "stars": 308
  },
  {
    "full_name": "metix/gnome-shell-extension-openai",
    "name": "gnome-shell-extension-openai",
    "description": "Display a ChatGPT overlay in the GNOME Shell. (GNOME Extension)",
    "html_url": [
      "https://github.com/metix/gnome-shell-extension-openai/blob/6732be0e6d700eb0ca1c21581a1d937e43638c67/src/OpenAiClient.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 682,
    "stars": 6
  },
  {
    "full_name": "evarga/comments-aggregator",
    "name": "comments-aggregator",
    "description": "This is a teaching material aimed to demonstrate text analysis and generation capabilities of OpenAI.",
    "html_url": [
      "https://github.com/evarga/comments-aggregator/blob/0ce6292c852e9e938b50ea55862f74b073059c70/src/openai-comments-aggregator.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 18903,
    "stars": 2
  },
  {
    "full_name": "amjrotich/CoinBuddy",
    "name": "CoinBuddy",
    "description": "AI-powered Telegram chatbot that provides and analyzes market prices similar to CoinMarketCap, you can use free and open-source APIs like CoinGecko API for fetching cryptocurrency data and OpenAI's GPT-3 for analyzing and responding to user queries. ",
    "html_url": [
      "https://github.com/amjrotich/CoinBuddy/blob/46503f575880e1375f0004367b1e18cc3d31c944/worker-api.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "LLawliet418/AI-Image-Generator",
    "name": "AI-Image-Generator",
    "description": "An image generator that uses OpenAI API and React. ",
    "html_url": [
      "https://github.com/LLawliet418/AI-Image-Generator/blob/f7cfca0515ce0a1e72b140ccf17488ffd5f7f23a/src/Components/ImageGenerator/ImageGenerator.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "hannutt/JS-ChatBot",
    "name": "JS-ChatBot",
    "description": "JavaScript chatbot and news feed app with OpenAI GPT 3.5 API, Google Translate API and NewsAPI integrations.",
    "html_url": [
      "https://github.com/hannutt/JS-ChatBot/blob/c2d077bb4dfa8bc5e3c7aeb49d10c72aac66e1d3/js/script.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "obahamonde/chatgpt-clone-vue-express-fauna",
    "name": "chatgpt-clone-vue-express-fauna",
    "description": "A chat GPT clone using VueJS, ExpressJS and FaunaDB",
    "html_url": [
      "https://github.com/obahamonde/chatgpt-clone-vue-express-fauna/blob/3a1739d461a1d0f28d629e2e7405a1e5b966c8d2/api/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1220,
    "stars": 0
  },
  {
    "full_name": "fatimamahsud1/Serverless-ChatGpt-Extension",
    "name": "Serverless-ChatGpt-Extension",
    "description": "This project involves setting up a serverless backend on Vercel or Netlify to handle requests from a Chrome Extension, sending them to the ChatGPT API, and returning the responses. It features strict rate limiting per device, robust security measures including API key protection and input sanitization, and mandatory HTTPS communication.",
    "html_url": [
      "https://github.com/fatimamahsud1/Serverless-ChatGpt-Extension/blob/754783dd165ba9b9b808309e562295762e0b4a4c/server/app.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 40725,
    "stars": 0
  },
  {
    "full_name": "memochou1993/gpt-ai-assistant",
    "name": "gpt-ai-assistant",
    "description": "OpenAI + LINE + Vercel = GPT AI Assistant",
    "html_url": [
      "https://github.com/memochou1993/gpt-ai-assistant/blob/926377040e63ccaab785d7ccaf50ebb45b53c5ed/config/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 16641,
    "stars": 7691
  },
  {
    "full_name": "bakaburg1/AiQuickFill",
    "name": "AiQuickFill",
    "description": "AI Quick Fill is a Chrome extension that provides AI-powered autocompletions for text fields on web pages. It uses GPT-4-turbo to suggest relevant completions as you type.",
    "html_url": [
      "https://github.com/bakaburg1/AiQuickFill/blob/08867e22bf244047bf674928b9b80a354efbfd17/background.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 348,
    "stars": 18
  },
  {
    "full_name": "sdrahmath/Intellibot",
    "name": "Intellibot",
    "description": "This project combines the power of OpenAI's GPT-3.5 Turbo and DALL·E models to enable chat-based conversations and image generation. It also incorporates additional features such as voice listening, speech synthesis, themes, and an interactive user interface.",
    "html_url": [
      "https://github.com/sdrahmath/Intellibot/blob/2dac68daf832866ee10b90c25ee3691d749d0aaa/server.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 32057,
    "stars": 3
  },
  {
    "full_name": "matt9527-marist/aimjourney",
    "name": "aimjourney",
    "description": "Project embedding ChatGPT into a standalone application, which will be used as a third-party tool to inform professional gamers in their mechanics training,",
    "html_url": [
      "https://github.com/matt9527-marist/aimjourney/blob/62150935b244aa4d994e4f6b5af0470a58bc1d65/main.js",
      "https://github.com/matt9527-marist/aimjourney/blob/62150935b244aa4d994e4f6b5af0470a58bc1d65/server.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 12207,
    "stars": 1
  },
  {
    "full_name": "T-Macgrady/tgpt-dev",
    "name": "tgpt-dev",
    "description": "类 gpt-engineer 的编程助手，JS 定制化版本，提效利器，内置 api key",
    "html_url": [
      "https://github.com/T-Macgrady/tgpt-dev/blob/6a413b62cfb3fc7e0f2ee38eefcfcab53bb788cf/packages/open-api/src/openai/getEmbedding.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 7272,
    "stars": 7
  },
  {
    "full_name": "Garusxx/chatGPT-app",
    "name": "chatGPT-app",
    "description": "Chatbot With The ChatGPT API",
    "html_url": [
      "https://github.com/Garusxx/chatGPT-app/blob/a24a93f287c3869560d5850662295ff601e7dad9/src/App.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 4477,
    "stars": 0
  },
  {
    "full_name": "Aschen/coding-challenge-ia-solver",
    "name": "coding-challenge-ia-solver",
    "description": "A Chrome extension using LLM and DevTools to automatically solve coding challenge by manipulating directly the browser",
    "html_url": [
      "https://github.com/Aschen/coding-challenge-ia-solver/blob/8a49626a528c9c33d4a8880a9e7827cefc3bb2c7/index.js",
      "https://github.com/Aschen/coding-challenge-ia-solver/blob/8a49626a528c9c33d4a8880a9e7827cefc3bb2c7/service-worker.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 812,
    "stars": 36
  },
  {
    "full_name": "johame72/chatstream",
    "name": "chatstream",
    "description": "Real-Time Streaming App Connected to ChatGPT-4 using SSE",
    "html_url": [
      "https://github.com/johame72/chatstream/blob/5af6b1e4a190c7a69344de0f3da48271169205ba/server/Old_index.js",
      "https://github.com/johame72/chatstream/blob/5af6b1e4a190c7a69344de0f3da48271169205ba/server/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 20105,
    "stars": 1
  },
  {
    "full_name": "Pradyumna369/AI-Blogs",
    "name": "AI-Blogs",
    "description": "Application to create blog based on prompt using LLM",
    "html_url": [
      "https://github.com/Pradyumna369/AI-Blogs/blob/ab56b06273a2071abd172c643dc54f6d9547f877/backend/routes/blogRoutes.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 7735,
    "stars": 0
  },
  {
    "full_name": "whitekw/discord-gpt-bot",
    "name": "discord-gpt-bot",
    "description": "Discord ChatGPT bot",
    "html_url": [
      "https://github.com/whitekw/discord-gpt-bot/blob/0c68b80c2a5bfc0770bc9efa24b6a46dc459d7c9/setEvents.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 627,
    "stars": 0
  },
  {
    "full_name": "Nickodhiambo/AI-Image-Generator",
    "name": "AI-Image-Generator",
    "description": "This is a vanilla JS project that makes an API call to OpenAI's chat generator image generation endpoint",
    "html_url": [
      "https://github.com/Nickodhiambo/AI-Image-Generator/blob/9daab5923264a52ac8c3fc1c545155774fc1fc5a/script.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 295,
    "stars": 0
  },
  {
    "full_name": "RohanVSuri/GPT_Summarizer",
    "name": "GPT_Summarizer",
    "description": "Chrome Extension to summarize highlighted text using OpenAI's GPT Model",
    "html_url": [
      "https://github.com/RohanVSuri/GPT_Summarizer/blob/1af9f0788a54aed8853305486a5b015d8fde0854/scripts/summarize.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 96,
    "stars": 0
  },
  {
    "full_name": "ncesar/puppeteer-recaptcha-whisper",
    "name": "puppeteer-recaptcha-whisper",
    "description": "Solving recaptcha using Puppeteer and OpenAI Whisper Model",
    "html_url": [
      "https://github.com/ncesar/puppeteer-recaptcha-whisper/blob/53ffcd00a14afeeba0c71cd9aac966c6c7aa544c/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1807,
    "stars": 13
  },
  {
    "full_name": "oli06/db-llm-to-form",
    "name": "db-llm-to-form",
    "description": "Chrome Extension: Search for a Deutsche Bahn train connection using only text",
    "html_url": [
      "https://github.com/oli06/db-llm-to-form/blob/41d450f96ad90efb059a955fde78e7a94279e3a1/background.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 233,
    "stars": 0
  },
  {
    "full_name": "GHaas/recipe-generator",
    "name": "recipe-generator",
    "description": "A simple website that uses OpenAI API to generate a new recipe based on the users input.",
    "html_url": [
      "https://github.com/GHaas/recipe-generator/blob/8a89c00e142aed7045d9b4c11bf389999f1ae21c/script.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 278,
    "stars": 0
  },
  {
    "full_name": "0xR3TRO/ChatBot",
    "name": "ChatBot",
    "description": "A language model built on OpenAI's API, designed to facilitate engaging and contextually relevant conversations with users. This advanced model leverages machine learning to comprehend and respond to diverse queries, fostering interactive and meaningful interactions.",
    "html_url": [
      "https://github.com/0xR3TRO/ChatBot/blob/e3dbb5e91357a2e1511711cec6019d8837780ac7/Directories/script.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 267,
    "stars": 0
  },
  {
    "full_name": "Hustada/Q-AI-X-Bot",
    "name": "Q-AI-X-Bot",
    "description": "An automated bot that generates and posts Star Trek's Q character-themed content on the X platform using OpenAI's GPT technology. Designed to entertain and engage followers with creative, Q-style updates.",
    "html_url": [
      "https://github.com/Hustada/Q-AI-X-Bot/blob/4af1a452859acf5352ebaa1c596fbe2cdc694989/30SecTestBot.js",
      "https://github.com/Hustada/Q-AI-X-Bot/blob/4af1a452859acf5352ebaa1c596fbe2cdc694989/twitterReplyBot.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 241289,
    "stars": 0
  },
  {
    "full_name": "antriksh-9/Chatbot",
    "name": "Chatbot",
    "description": "I developed this fully functional chatbot using HTML, CSS and JS. I have also used OpenAI API's.",
    "html_url": [
      "https://github.com/antriksh-9/Chatbot/blob/073ae094c84bc94d5e8b8700d9a22c5304afb489/script.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 257,
    "stars": 0
  },
  {
    "full_name": "appatalks/chatgpt-html",
    "name": "chatgpt-html",
    "description": "OpenAI & Google Generative Language Chat",
    "html_url": [
      "https://github.com/appatalks/chatgpt-html/blob/0521644f3a9fdcd04154ee82614efbbcd70b474e/core/js/dalle3.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1676,
    "stars": 24
  },
  {
    "full_name": "rocket-pig/GPT3-Android",
    "name": "GPT3-Android",
    "description": "Android app to interact with OpenAI's collection of AI APIs. ",
    "html_url": [
      "https://github.com/rocket-pig/GPT3-Android/blob/2b200d8df5f0417d38a959990bf950f4ec3b2eb0/project/assets/js/index.js",
      "https://github.com/rocket-pig/GPT3-Android/blob/2b200d8df5f0417d38a959990bf950f4ec3b2eb0/project/assets/js/services.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 91718,
    "stars": 23
  },
  {
    "full_name": "orlando70/cover-letter-generator",
    "name": "cover-letter-generator",
    "description": "Introducing the Cover Letter Generator powered by GPT-3! Say goodbye to generic and boring cover letters and hello to personalized, professional letters that get noticed. Our state-of-the-art AI technology leverages OpenAI's GPT-3 language model to create customized cover letters tailored to your specific job application.",
    "html_url": [
      "https://github.com/orlando70/cover-letter-generator/blob/476dfaf04b3dc4e157816649eb93f7238a736f5d/utils/stream.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 6195,
    "stars": 18
  },
  {
    "full_name": "Cosaslearning/AI-Image-Generator",
    "name": "AI-Image-Generator",
    "description": "This web application provides a user-friendly interface for generating AI images based on user prompts. It leverages the OpenAI API and allows users to select the number and size of images to generate. The generated images are displayed with the option to download them. The code has been optimized and well-commented for clarity and functionality.",
    "html_url": [
      "https://github.com/Cosaslearning/AI-Image-Generator/blob/0d884c202552bc914aa1ef572288e411f3878669/script.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 297,
    "stars": 3
  },
  {
    "full_name": "opsJson/ChatGPT-Discord-Bot",
    "name": "ChatGPT-Discord-Bot",
    "description": "Simple ChatGPT bot for Discord",
    "html_url": [
      "https://github.com/opsJson/ChatGPT-Discord-Bot/blob/6fbe980d08b3519e2ad4fc54c81b14c7a586cd0e/bot.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 112,
    "stars": 0
  },
  {
    "full_name": "RobertSloan22/AutomotiveShopAI",
    "name": "AutomotiveShopAI",
    "description": "Automotive Repair Shop Managment and Diagnosis assist platform with AI tools with openai api and langchain. ",
    "html_url": [
      "https://github.com/RobertSloan22/AutomotiveShopAI/blob/b08a13affe8a6a59d1df821685ac0ccf29c9775f/frontend/main.js",
      "https://github.com/RobertSloan22/AutomotiveShopAI/blob/b08a13affe8a6a59d1df821685ac0ccf29c9775f/backend/server.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 19323,
    "stars": 1
  },
  {
    "full_name": "sunnydsouza/node-red-contrib-openai-gpt",
    "name": "node-red-contrib-openai-gpt",
    "description": "A NodeRed node to interact with OpenAI api through different models",
    "html_url": [
      "https://github.com/sunnydsouza/node-red-contrib-openai-gpt/blob/837c6815d243ce8bfd68db30e7f802f32faf06f1/nodes/openai-gpt.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 257,
    "stars": 1
  },
  {
    "full_name": "Bostads-AB-Mimer/openAIchatbot",
    "name": "openAIchatbot",
    "description": "Simple back end api built with node.js communication with the OpenAI language model. ",
    "html_url": [
      "https://github.com/Bostads-AB-Mimer/openAIchatbot/blob/7e3bd55eb48051e0b7f4d03af73e14d0906a611a/controllers/chatController.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1884,
    "stars": 2
  },
  {
    "full_name": "rogasper/nexquiz",
    "name": "nexquiz",
    "description": "generate multiple choice quiz from the text with Openai API",
    "html_url": [
      "https://github.com/rogasper/nexquiz/blob/1410c52c79139434b96bfcb1f3c41234fdc146bd/src/pages/api/generateQuestion.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 2702,
    "stars": 0
  },
  {
    "full_name": "magharkar/Shopify-GPT-3",
    "name": "Shopify-GPT-3",
    "description": "Shopify Front End Developer Intern Challenge",
    "html_url": [
      "https://github.com/magharkar/Shopify-GPT-3/blob/e76769dc4630d7e68147dcd39ea692a9504089c3/fun-with-gpt3/src/components/Prompt/Prompt.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 12771,
    "stars": 0
  },
  {
    "full_name": "coffeefuelbump/openai-real-time-api-example-corbinbrown",
    "name": "openai-real-time-api-example-corbinbrown",
    "description": "OpenAI Realtime API Example",
    "html_url": [
      "https://github.com/coffeefuelbump/openai-real-time-api-example-corbinbrown/blob/f5acc89e990a83a870fe100ca8ac62cbd49f8aa0/backend/server.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 73300,
    "stars": 9
  },
  {
    "full_name": "youssefboulmalf/React-OpenAi-Voice-Chat",
    "name": "React-OpenAi-Voice-Chat",
    "description": "🤖 💬 This is a simple website build with React that takes a users voice input and generates a respond from one of the current active Open Ai models.",
    "html_url": [
      "https://github.com/youssefboulmalf/React-OpenAi-Voice-Chat/blob/0e02c89065ed700dc50d52f4752881599cbaf31e/src/Microphone/Microphone.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 12598,
    "stars": 3
  },
  {
    "full_name": "Adit0507/chatbot-openai",
    "name": "chatbot-openai",
    "description": "Simple implementation of a chatbot using Open AI :)",
    "html_url": [
      "https://github.com/Adit0507/chatbot-openai/blob/a75de9551bef0e5b6d1deac8e1029e343754839b/src/App.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 3767,
    "stars": 0
  },
  {
    "full_name": "ArtyLLaMa/ArtyLLaMA",
    "name": "ArtyLLaMA",
    "description": "ArtyLLama is an experimental AI-powered platform for interactive content creation. It integrates with various AI models (Ollama, OpenAI, Anthropic) to explore natural language-driven development of web experiences, 3D visualizations, and more. Features include real-time AI chat, dynamic model selection, and semantic search across chat history.",
    "html_url": [
      "https://github.com/ArtyLLaMa/ArtyLLaMA/blob/14fd356f65d6e75723bc59b1ed574db94adbc839/src/services/openaiService.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 18329,
    "stars": 10
  },
  {
    "full_name": "ShwetaTyagi1/AI-ImageGenerator",
    "name": "AI-ImageGenerator",
    "description": "A dynamic web application that leverages HTML, CSS, JavaScript, and OpenAI's DALL-E API to generate high-quality images from user prompts. Features include real-time image rendering, direct download functionality, and the ability to generate 1 to 4 images simultaneously, enhancing user experience and efficiency.",
    "html_url": [
      "https://github.com/ShwetaTyagi1/AI-ImageGenerator/blob/20d6b414a452f396cb615e130b2054fedfdf2922/script.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 363,
    "stars": 0
  },
  {
    "full_name": "kvinlazy/healthcare-llm-app",
    "name": "healthcare-llm-app",
    "description": null,
    "html_url": [
      "https://github.com/kvinlazy/healthcare-llm-app/blob/0ffd0ed40bba41831f720d3d8e6ec30522b72061/src/Chatbot.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 18310,
    "stars": 0
  },
  {
    "full_name": "KeshavChawla/CS492-OpenAI-Alt-Text",
    "name": "CS492-OpenAI-Alt-Text",
    "description": "Using OpenAI's GPT4-Vision-Preview to Add Alt-Text to Images Missing Them & Increasing Web Accessibility",
    "html_url": [
      "https://github.com/KeshavChawla/CS492-OpenAI-Alt-Text/blob/0e1d91326809d3b5ff813ff8dcb8e382cc9b2953/alt-text/scripts/content.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 518,
    "stars": 0
  },
  {
    "full_name": "quangshuynh/baby-names-generator",
    "name": "baby-names-generator",
    "description": "(BROKEN) non-functional openai api key",
    "html_url": [
      "https://github.com/quangshuynh/baby-names-generator/blob/c036f7dbab86addb1774a651fa0be93e1d0c249c/src/components/NameForm.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 18380,
    "stars": 0
  },
  {
    "full_name": "SpyrexDE/GPT-Visualizer",
    "name": "GPT-Visualizer",
    "description": "A website to visualize how GPT text generation works",
    "html_url": [
      "https://github.com/SpyrexDE/GPT-Visualizer/blob/6cb8417cd6b5fc5935824031464f3d152739f12d/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 155,
    "stars": 1
  },
  {
    "full_name": "Khannakunal32/AI-smart-bot",
    "name": "AI-smart-bot",
    "description": "Uses Chat GPT",
    "html_url": [
      "https://github.com/Khannakunal32/AI-smart-bot/blob/9be51990484a34588213e01ea3456071b6b91df0/src/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 14075,
    "stars": 0
  },
  {
    "full_name": "HappyHarry1130/Cold-Call-node-twilio-elevenlabs-deepgrame-openai",
    "name": "Cold-Call-node-twilio-elevenlabs-deepgrame-openai",
    "description": null,
    "html_url": [
      "https://github.com/HappyHarry1130/Cold-Call-node-twilio-elevenlabs-deepgrame-openai/blob/0a2a2592a05eaea24b79b92953ad9315524004a6/services/checkschedule.js",
      "https://github.com/HappyHarry1130/Cold-Call-node-twilio-elevenlabs-deepgrame-openai/blob/0a2a2592a05eaea24b79b92953ad9315524004a6/app.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 11674,
    "stars": 1
  },
  {
    "full_name": "ekamid/cgpt-web-builder",
    "name": "cgpt-web-builder",
    "description": "A basic Ai-powered web builder!",
    "html_url": [
      "https://github.com/ekamid/cgpt-web-builder/blob/13c9a91e5c40e08000ab5a7f55b77a201382284a/src/hooks/useMessageWithChatGPT.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 4530,
    "stars": 17
  },
  {
    "full_name": "ahmedmujtaba1/ChatGPT-Clone",
    "name": "ChatGPT-Clone",
    "description": "This is a basic ChatGPT-Clone that uses OpenAI model. Remember the below link is not working because the api key is not integrated. Thanks",
    "html_url": [
      "https://github.com/ahmedmujtaba1/ChatGPT-Clone/blob/077f717956124121c3962a119f716f44c408c2be/app.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 299,
    "stars": 0
  },
  {
    "full_name": "Maclean-D/title-transformer",
    "name": "title-transformer",
    "description": "Dynamic title optimization powered by OpenAI",
    "html_url": [
      "https://github.com/Maclean-D/title-transformer/blob/8397009c14341fd03bf92e5557ab02bc4b767d7c/src/shuffle.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 205787,
    "stars": 0
  },
  {
    "full_name": "Gitmaster511/React-Native-Chatbot",
    "name": "React-Native-Chatbot",
    "description": "Example of a react Native chatbot with the new GPT-3.5 API",
    "html_url": [
      "https://github.com/Gitmaster511/React-Native-Chatbot/blob/b6a1b727edbd0a9d84db2c21ad8c25e3395504dd/App.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 13877,
    "stars": 0
  },
  {
    "full_name": "urotarou/MaidChang",
    "name": "MaidChang",
    "description": "GASで動作するOpenAI APIのchatを利用したアプリ",
    "html_url": [
      "https://github.com/urotarou/MaidChang/blob/d9caad71ef00c15694eee1c12c04e794edfe1666/src/ai.gs"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 21,
    "stars": 0
  },
  {
    "full_name": "LiubovSobolevskaya/openai-api-app",
    "name": "openai-api-app",
    "description": "Application that uses opeAI ChatGPT API.",
    "html_url": [
      "https://github.com/LiubovSobolevskaya/openai-api-app/blob/3a77cbd083f1b09e317f1b510bf807264f1d5150/src/js/generatePrompt.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 35191,
    "stars": 1
  },
  {
    "full_name": "swimgirlnv/runllm",
    "name": "runllm",
    "description": "Final project for LITR 1010H D&XD",
    "html_url": [
      "https://github.com/swimgirlnv/runllm/blob/53ebdd7e0f30ed9712e6dcc7a20d4397698e84aa/runllm/src/openai/LearningLoopAI.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "kaifamiao/anything-llm-chinese",
    "name": "anything-llm-chinese",
    "description": "开发喵AI",
    "html_url": [
      "https://github.com/kaifamiao/anything-llm-chinese/blob/686c33d443a33fa59c93c8b98a342c440d5de715/frontend/src/components/EmbeddingSelection/GenericOpenAiOptions/index.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 69568,
    "stars": 5
  },
  {
    "full_name": "cameron-eth/open-ai",
    "name": "open-ai",
    "description": "chat-gpt-clone ",
    "html_url": [
      "https://github.com/cameron-eth/open-ai/blob/c10960f9915dfbc1589dc3a2eccf48829e15931d/app.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 179,
    "stars": 0
  },
  {
    "full_name": "midudev/midu-chatgpt-clone",
    "name": "midu-chatgpt-clone",
    "description": "Un clon de ChatGPT por temas educativos",
    "html_url": [
      "https://github.com/midudev/midu-chatgpt-clone/blob/dba228f54eeef74a515a5c822c11993a9b2f80a0/src/pages/api/chat.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1628,
    "stars": 127
  },
  {
    "full_name": "cameronnapoli/llm-translate",
    "name": "llm-translate",
    "description": "Translate text using an LLM API.",
    "html_url": [
      "https://github.com/cameronnapoli/llm-translate/blob/b9e19d4cf4fab874470c7166cb4e0f300bcc0ed9/src/openai.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 418,
    "stars": 9
  },
  {
    "full_name": "itsaizaz/Medical-Chatbot",
    "name": "Medical-Chatbot",
    "description": "Explore my GitHub repo for a multilingual medical chatbot using Node.js and OpenAI GPT-3.5 Turbo. It answers health queries, schedules doctor appointments, and detects emergencies in multiple languages.",
    "html_url": [
      "https://github.com/itsaizaz/Medical-Chatbot/blob/c9463e84cc8f84c5a6a7f1c325435f39dfa96158/services/openaiService.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1139,
    "stars": 2
  },
  {
    "full_name": "S-hub1996/heygen-voice-chatbot",
    "name": "heygen-voice-chatbot",
    "description": "Voice-interactive chatbot with an avatar using Heygen and GPT-3.5-turbo in a React.js",
    "html_url": [
      "https://github.com/S-hub1996/heygen-voice-chatbot/blob/1675adfd89b1bf7be513a4467555180a93c6d80e/heygen-voice-chatbot/src/components/Chatbot.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 4859,
    "stars": 1
  },
  {
    "full_name": "CKawara/AI-image-generator",
    "name": "AI-image-generator",
    "description": "React web app that uses AI to create an image based on a user’s input. The app uses OpenAI's GPT-3 text and DALL-E image APIs.",
    "html_url": [
      "https://github.com/CKawara/AI-image-generator/blob/80f9028b35f63aa3a81ff451e84c20eaf93af489/src/api/generateContent.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 31247,
    "stars": 0
  },
  {
    "full_name": "SanHacks/OpenAI-Dalle-2-Implementation",
    "name": "OpenAI-Dalle-2-Implementation",
    "description": "An implementation of OpenAI's Image Generation AI Dall-E-2 for Online T-Shirt Store ( User Prompt to T-Shirt Designs.",
    "html_url": [
      "https://github.com/SanHacks/OpenAI-Dalle-2-Implementation/blob/1294b6f6ea74a7162d8205f5a76c6d7580ec0e33/script.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 451,
    "stars": 0
  },
  {
    "full_name": "Adam-Thometz/OpenAI-Stream-Experiment",
    "name": "OpenAI-Stream-Experiment",
    "description": null,
    "html_url": [
      "https://github.com/Adam-Thometz/OpenAI-Stream-Experiment/blob/1f1c74f92f5f6402b3c3370fad780d249a57bb82/models/Chat.js",
      "https://github.com/Adam-Thometz/OpenAI-Stream-Experiment/blob/1f1c74f92f5f6402b3c3370fad780d249a57bb82/models/Completion.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 3533,
    "stars": 9
  },
  {
    "full_name": "dew-automatisation/ChatGPT-interface",
    "name": "ChatGPT-interface",
    "description": "ChatGPT interface, GPT3.5 et GPT4",
    "html_url": [
      "https://github.com/dew-automatisation/ChatGPT-interface/blob/7bfeda37010fc58fb64cb97422fa5a845ff68209/script.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 194,
    "stars": 6
  },
  {
    "full_name": "rijieli/GrammarGPT.popclipext",
    "name": "GrammarGPT.popclipext",
    "description": "PopClip extension to correct grammar using OpenAI's GPT API.",
    "html_url": [
      "https://github.com/rijieli/GrammarGPT.popclipext/blob/29dc0e61635dee87c3e4af629b44108dfe5d3d9b/grammargpt.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 277,
    "stars": 3
  },
  {
    "full_name": "garland3/my_rag_demo",
    "name": "my_rag_demo",
    "description": null,
    "html_url": [
      "https://github.com/garland3/my_rag_demo/blob/9ba69e492812cde9c9bf10a143c3ace6ee1c969d/src/api.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 15302,
    "stars": 0
  },
  {
    "full_name": "fitri-hy/react-chatgpt-openai",
    "name": "react-chatgpt-openai",
    "description": "This simple ReactJS project that I created is an AI Chatbot that uses apiKey from OpenAI. ",
    "html_url": [
      "https://github.com/fitri-hy/react-chatgpt-openai/blob/c3aa8116accdbfd3eff1f63100f1339a7ddac76e/src/components/HyTechAI.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 20501,
    "stars": 2
  },
  {
    "full_name": "AmolBhere/ChatGPT-API-Based-Project",
    "name": "ChatGPT-API-Based-Project",
    "description": "Created a ChatGPT clone using React Js. and OpenAI API.",
    "html_url": [
      "https://github.com/AmolBhere/ChatGPT-API-Based-Project/blob/de74862ce49d4f4e237e3cbdc561315bf6d6a8ce/src/App.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 4145,
    "stars": 0
  },
  {
    "full_name": "LindaMarko/chat-with-ada",
    "name": "chat-with-ada",
    "description": " ChatGPT clone that uses Next.js v13, OpenAI's GPT API, MongoDB, Auth0 and Tailwind CSS.",
    "html_url": [
      "https://github.com/LindaMarko/chat-with-ada/blob/2a8d7a4843c90b19ce33394a06700b53147bba4b/pages/api/chat/sendMessage.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 10825,
    "stars": 0
  },
  {
    "full_name": "vysuvysavya/VisionaryVerse_AI",
    "name": "VisionaryVerse_AI",
    "description": "✨ VisionaryVerse: An AI-powered image generator using React.js and OpenAI🎨🤖. Enter text and generate stunning visuals in seconds! 🚀",
    "html_url": [
      "https://github.com/vysuvysavya/VisionaryVerse_AI/blob/680b70c9d6739957e480dc8817ac17196b4e76b2/src/components/ImageGenerator.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 7694,
    "stars": 0
  },
  {
    "full_name": "mayfer/philosopherai_demo",
    "name": "philosopherai_demo",
    "description": "Open source demo showcasing the core functionality behind https://philosopherai.com that you can try out using your own OpenAI credentials.",
    "html_url": [
      "https://github.com/mayfer/philosopherai_demo/blob/5b86be79137529dcdfa0c5b168e0c6070da064df/philosopher_demo.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 108,
    "stars": 54
  },
  {
    "full_name": "kevinamiri/chatgpt-spreadsheet-example",
    "name": "chatgpt-spreadsheet-example",
    "description": "Add GhatGPT to your Google spreadsheet",
    "html_url": [
      "https://github.com/kevinamiri/chatgpt-spreadsheet-example/blob/5488f70761fbcce5dfdb447b40cb9e971925d93e/Code.gs"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 57,
    "stars": 7
  },
  {
    "full_name": "kausthub-kannan/farmsense.ai",
    "name": "farmsense.ai",
    "description": "farmsense.ai is an AI assistant for exponentially growing Hybrid farming. To enhance farmers' yield, this application assists them by detecting diseases of plants and poultries and providing crop and egg incubation analysis. CNN, YOLO, and XGBoost are used for the models.  ",
    "html_url": [
      "https://github.com/kausthub-kannan/farmsense.ai/blob/14f3e077c19cc4f38006c2f903607a3160a1b5d9/web-app/src/components/ChatBot/ChatBot.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 7586,
    "stars": 22
  },
  {
    "full_name": "Ssbullock/my-art-transformer",
    "name": "my-art-transformer",
    "description": "Ai filters from user images",
    "html_url": [
      "https://github.com/Ssbullock/my-art-transformer/blob/b6a1640c348ffb8da60b44a8d8977dd1c9402756/backend/app.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 88742,
    "stars": 0
  },
  {
    "full_name": "DanaStok/AIEverywhere",
    "name": "AIEverywhere",
    "description": "This Chrome extension enhances your digital reading and coding experience by using the OpenAI API to summarize text, generate quizzes, and automatically comment on code.",
    "html_url": [
      "https://github.com/DanaStok/AIEverywhere/blob/2cbe84cd72b2261a5bef0bb47bbf106d22680fa5/fetchImprovement.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 288,
    "stars": 0
  },
  {
    "full_name": "sunilband/spiritual-gpt",
    "name": "spiritual-gpt",
    "description": "*OLD VERSION* The combined knowledge of the scriptures at one place thanks to the power of AI . Powered by Chat-GPT-Turbo-3.5",
    "html_url": [
      "https://github.com/sunilband/spiritual-gpt/blob/094cb0b1ef71796b1befb9a12c7be87b9dd21d4f/server/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 8192,
    "stars": 25
  },
  {
    "full_name": "un4ckn0wl3z/nextjs-chatgpt-clone",
    "name": "nextjs-chatgpt-clone",
    "description": "nextjs-chatgpt-clone",
    "html_url": [
      "https://github.com/un4ckn0wl3z/nextjs-chatgpt-clone/blob/5114b169dce6a7b0a6e2348cb78cfce97e075084/pages/api/chat/sendMessage.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 10710,
    "stars": 1
  },
  {
    "full_name": "issacsamalex/netflix-GPT",
    "name": "netflix-GPT",
    "description": "Netflix clone built with React.js, featuring Firebase authentication and GPT-powered movie search. Fully responsive and deployed on Vercel.",
    "html_url": [
      "https://github.com/issacsamalex/netflix-GPT/blob/118dca174b38af7a94ea6be64cae177e24723214/src/components/Chatbot/ChatBot.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 20346,
    "stars": 0
  },
  {
    "full_name": "Bbingil/ChatGPTAPIFree",
    "name": "ChatGPTAPIFree",
    "description": "A simple and open-source proxy API that allows you to access OpenAI's ChatGPT API for free!",
    "html_url": [
      "https://github.com/Bbingil/ChatGPTAPIFree/blob/fe70735a1cc193318eb72c6f09a01e40e33b5923/src/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1472,
    "stars": 4
  },
  {
    "full_name": "mahfuzurrahman98/Codeglimpse-Code-Review",
    "name": "Codeglimpse-Code-Review",
    "description": "An code review tool using express server and openai gpt-3.5-turbo model",
    "html_url": [
      "https://github.com/mahfuzurrahman98/Codeglimpse-Code-Review/blob/a9d2cdf5f26e7650be9906f159860d0337508cc3/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "AarinGuleria/Chatbot",
    "name": "Chatbot",
    "description": "A basic chat bot made using HTML, CSS, JS and calling api of openai.",
    "html_url": [
      "https://github.com/AarinGuleria/Chatbot/blob/1665889c55d4a9b88edbd29f8411a9381c577e7e/script.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 614,
    "stars": 0
  },
  {
    "full_name": "eaglesdgreat/code-translator",
    "name": "code-translator",
    "description": "AI bot that translate one code base to another useing OpenAI and chat GPT-3.5",
    "html_url": [
      "https://github.com/eaglesdgreat/code-translator/blob/df7bbe02f9c76867c0a23803c296ff058696c27f/utils/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 468,
    "stars": 0
  },
  {
    "full_name": "salah9003/OpenAI-Text-to-Speech-Bookmarklet",
    "name": "OpenAI-Text-to-Speech-Bookmarklet",
    "description": "This bookmarklet allows you to convert selected text on a webpage to speech using the OpenAI API. It provides a convenient way to listen to text without leaving the current page.",
    "html_url": [
      "https://github.com/salah9003/OpenAI-Text-to-Speech-Bookmarklet/blob/59e2e16cb8cbcb7dde18c27381c3214c02028a04/bookmarklet.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 127,
    "stars": 0
  },
  {
    "full_name": "fareeha1125/Code-translator-using-OpenAI-API",
    "name": "Code-translator-using-OpenAI-API",
    "description": null,
    "html_url": [
      "https://github.com/fareeha1125/Code-translator-using-OpenAI-API/blob/9b80035a668052f5e1c91e3326b75115e3eba500/utils/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 8656,
    "stars": 0
  },
  {
    "full_name": "ColinEberhardt/langchain-mini",
    "name": "langchain-mini",
    "description": "🦜️🔗 This is a very simple re-implementation of LangChain, in ~100 lines of code",
    "html_url": [
      "https://github.com/ColinEberhardt/langchain-mini/blob/03592401deb659d8d3adf545483fdb3bf2eb3457/index.mjs"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 204,
    "stars": 253
  },
  {
    "full_name": "micz/ThunderAI",
    "name": "ThunderAI",
    "description": "ThunderAI is a Thunderbird Addon that uses the capabilities of ChatGPT or Ollama to enhance email management.",
    "html_url": [
      "https://github.com/micz/ThunderAI/blob/eca2f07014974e936ea9a313e20b61063a9e420a/js/api/openai.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 24693,
    "stars": 129
  },
  {
    "full_name": "coopercodes/ReactChatGPTChatbot",
    "name": "ReactChatGPTChatbot",
    "description": "The project from the video Build A Chatbot With The ChatGPT API In React (gpt-3.5-turbo Tutorial)",
    "html_url": [
      "https://github.com/coopercodes/ReactChatGPTChatbot/blob/1614c47c91e88da52ca6a5eef89a41213d62516c/src/App.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 7957,
    "stars": 112
  },
  {
    "full_name": "imtiyazakiwat/website-builder",
    "name": "website-builder",
    "description": "This is a tool for building websites. It takes user input for the website's description and utilizes OpenAI GPT-3.5 to generate HTML, CSS, and Bootstrap code to create a template for the website.",
    "html_url": [
      "https://github.com/imtiyazakiwat/website-builder/blob/5503168d97c9e9f6831f491548cd403017974e7e/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 21103,
    "stars": 3
  },
  {
    "full_name": "viniciusmbpro/Dobby",
    "name": "Dobby",
    "description": "Um chatbot que usa api da openai, com funcionalidades de texto para voz e voz para texto.",
    "html_url": [
      "https://github.com/viniciusmbpro/Dobby/blob/9f2138588ce27c5e5fc8e1ab06ca82fc0bedd02c/gerador.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1108,
    "stars": 0
  },
  {
    "full_name": "waylon620/GPT-tutor",
    "name": "GPT-tutor",
    "description": null,
    "html_url": [
      "https://github.com/waylon620/GPT-tutor/blob/0b215e09eab6ea5fea86163317424fb0b9278f04/script2.js",
      "https://github.com/waylon620/GPT-tutor/blob/0b215e09eab6ea5fea86163317424fb0b9278f04/script.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 49448,
    "stars": 1
  },
  {
    "full_name": "YAV-AI/NodeJS-OpenAI-Function-Calling-Example",
    "name": "NodeJS-OpenAI-Function-Calling-Example",
    "description": "This repository contains a basic Node.js example demonstrating how to call functions using the OpenAI API. The example showcases a conversation with the OpenAI GPT-3.5 Turbo model, including making function calls and processing their responses.",
    "html_url": [
      "https://github.com/YAV-AI/NodeJS-OpenAI-Function-Calling-Example/blob/56ad7bd02a85c3e0a2c535d5e390b354136b6513/index[Deprecated].js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 269,
    "stars": 28
  },
  {
    "full_name": "DanfordGidraph/chat-gpt-video-maker",
    "name": "chat-gpt-video-maker",
    "description": "An AI (LLM) based generative tool for creating TikTok/Shorts/Reels and YouTube videos automatically using OpenAI tools like gpt-4o and Dall-E 3",
    "html_url": [
      "https://github.com/DanfordGidraph/chat-gpt-video-maker/blob/7436012c8462723ce07d1e9db1a4015cdd600586/src/utils/AudioGenerator/index.js",
      "https://github.com/DanfordGidraph/chat-gpt-video-maker/blob/7436012c8462723ce07d1e9db1a4015cdd600586/src/utils/ImageProcessor/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 573,
    "stars": 13
  },
  {
    "full_name": "rajeshpillai/aigenie-contentgpt-reference",
    "name": "aigenie-contentgpt-reference",
    "description": "Chrome extension",
    "html_url": [
      "https://github.com/rajeshpillai/aigenie-contentgpt-reference/blob/ab7596515f801d32db52df4170639b1baa322cd6/scripts/background.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 240,
    "stars": 1
  },
  {
    "full_name": "vincentinttsh/chatgpt-telegram-bot",
    "name": "chatgpt-telegram-bot",
    "description": "ChatGPT telegram bot run on Cloudflare Workers®",
    "html_url": [
      "https://github.com/vincentinttsh/chatgpt-telegram-bot/blob/b58a131d0aee1d89971c085a36fb0b4819e372a9/src/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 8592,
    "stars": 4
  },
  {
    "full_name": "hollaugo/customer-satisfaction-llm-analysis",
    "name": "customer-satisfaction-llm-analysis",
    "description": "This repo contains an appscript function for analyzing Google form responese after each submission. This function will look for key insights from freeform text",
    "html_url": [
      "https://github.com/hollaugo/customer-satisfaction-llm-analysis/blob/1723925da1bfab46c5a8dff84f9be181393cf84b/survey_response_analyzer.gs"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 38,
    "stars": 0
  },
  {
    "full_name": "felixbade/transcribe",
    "name": "transcribe",
    "description": "Web UI for OpenAI Whisper API",
    "html_url": [
      "https://github.com/felixbade/transcribe/blob/9a42ed5d34d5d00ca331dded2c4c764f576807a2/src/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 360,
    "stars": 186
  },
  {
    "full_name": "built-by-as/FastDigest",
    "name": "FastDigest",
    "description": "summarize HackerNews comments using AI and LLMs",
    "html_url": [
      "https://github.com/built-by-as/FastDigest/blob/af03e66d6ccf39dfc73b44cc31a3eef24f036f5d/llm.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 623,
    "stars": 15
  },
  {
    "full_name": "MasumaJaffery/ChatBot",
    "name": "ChatBot",
    "description": "This Repo is the exercise of icodethis.com but it contains chatbot functionality with React and OpenAI Chatgpt API.",
    "html_url": [
      "https://github.com/MasumaJaffery/ChatBot/blob/c1b36b296b2d6b8dc5b58eda7600c309553261f4/src/components/chatbot.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 5001,
    "stars": 3
  },
  {
    "full_name": "PNatarajan123/DocuGPT",
    "name": "DocuGPT",
    "description": "GPT-4 based autocomplete for Google Docs",
    "html_url": [
      "https://github.com/PNatarajan123/DocuGPT/blob/98aea0aff30051486bad3948a114399175bec3b3/Code.gs"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 158,
    "stars": 0
  },
  {
    "full_name": "jayozer/llm_moderation_guardrail",
    "name": "llm_moderation_guardrail",
    "description": "An output guardrail designed for Voiceflow that can assess any LLM's response and block anything scoring a 3 or higher",
    "html_url": [
      "https://github.com/jayozer/llm_moderation_guardrail/blob/e3e2bed748ea7294f6011ef05f31a9e4189cbc5d/llm_moderation_guardrail.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 266,
    "stars": 2
  },
  {
    "full_name": "aipoool/aipoool-socialscribe-v1-backend",
    "name": "aipoool-socialscribe-v1-backend",
    "description": "This is the backend code for the SocialScribe buttons version. This is the first version where we are just focusing on efficiently replying the LinkedIn and Twitter using the GPT-3.5 Turbo",
    "html_url": [
      "https://github.com/aipoool/aipoool-socialscribe-v1-backend/blob/cb7bcfcbb86e20ebf773a2ae3fbcd9346483eadc/generateComment.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1337788,
    "stars": 0
  },
  {
    "full_name": "jayozer/vf_functions",
    "name": "vf_functions",
    "description": "Functions for LLMs, input output topical guardrails",
    "html_url": [
      "https://github.com/jayozer/vf_functions/blob/81dd957141afbf36063d8f3aade96aabb1828c6e/guardrails/llm_output_guardrail_simplified.js",
      "https://github.com/jayozer/vf_functions/blob/81dd957141afbf36063d8f3aade96aabb1828c6e/guardrails/llm_input_topical_guardrail.js",
      "https://github.com/jayozer/vf_functions/blob/81dd957141afbf36063d8f3aade96aabb1828c6e/guardrails/llm_output_guardrail.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 85145,
    "stars": 0
  },
  {
    "full_name": "ryanhood10/AIContentCreator",
    "name": "AIContentCreator",
    "description": "This application uses a combination of OpenAI's api of DALLE-3 and ChatGPT3.5 and Google's Gemini API to create and optimize social media posts for a specified network.",
    "html_url": [
      "https://github.com/ryanhood10/AIContentCreator/blob/9a840c05746159361c4b57384c40ff023808e1ca/server/server.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 21656,
    "stars": 2
  },
  {
    "full_name": "GDHadeel/STT-ChatGPT-and-TTS",
    "name": "STT-ChatGPT-and-TTS",
    "description": "Integrates speech-to-text, ChatGPT, and text-to-speech in one app.",
    "html_url": [
      "https://github.com/GDHadeel/STT-ChatGPT-and-TTS/blob/2a8eca4fd0da0b17c976740f64eabad052347b8d/script.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 197,
    "stars": 1
  },
  {
    "full_name": "restieauxbro/gpt-sheets",
    "name": "gpt-sheets",
    "description": "Scripts for Google sheets that add an extension for GPT-3",
    "html_url": [
      "https://github.com/restieauxbro/gpt-sheets/blob/c32be13924db731a3f80fe7aa549b358df5d4a55/index.gs"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 31,
    "stars": 2
  },
  {
    "full_name": "BarryYin/openai-Realtime-API-with-WebRTC",
    "name": "openai-Realtime-API-with-WebRTC",
    "description": "openai-Realtime-API-with-WebRTC",
    "html_url": [
      "https://github.com/BarryYin/openai-Realtime-API-with-WebRTC/blob/bdaf86a0f3e97d9d924204b3b44829fb0196b205/getapi.js",
      "https://github.com/BarryYin/openai-Realtime-API-with-WebRTC/blob/bdaf86a0f3e97d9d924204b3b44829fb0196b205/init.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1269,
    "stars": 5
  },
  {
    "full_name": "vimfn/react-sse-openai-example",
    "name": "react-sse-openai-example",
    "description": "really lazy project to try out the react, sse with openai",
    "html_url": [
      "https://github.com/vimfn/react-sse-openai-example/blob/6dd5c7d3bd5a628d7de37a3cd8db878945381dc2/src/App.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 3194,
    "stars": 2
  },
  {
    "full_name": "SantoshNtrjn/Memori",
    "name": "Memori",
    "description": "An AI-Powered Note-Taking Web App developed using OpenAI's ChatGPT-3.5 Turbo & ElevenLabs Prime Voice API.",
    "html_url": [
      "https://github.com/SantoshNtrjn/Memori/blob/2c9ca2111bec3f0dfd8f89f7d19e8f52f5bdd6b7/src/chatbot.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 19343,
    "stars": 0
  },
  {
    "full_name": "andrewbloese-00/rag-query",
    "name": "rag-query",
    "description": "A query engine for retrieval augmented generation and semantic search built with NodeJS and MongoDB",
    "html_url": [
      "https://github.com/andrewbloese-00/rag-query/blob/3c70a9d0a41b85744e5bd16e09a8af5b0bb55592/utils/embeddings.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1212,
    "stars": 0
  },
  {
    "full_name": "ritikrikm/GPT-AI",
    "name": "GPT-AI",
    "description": null,
    "html_url": [
      "https://github.com/ritikrikm/GPT-AI/blob/efc65fba2a0ec1b728797655b4d5642fd3c771a7/src/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 13864,
    "stars": 0
  },
  {
    "full_name": "hamzafarooq009/react-openai-chatbot",
    "name": "react-openai-chatbot",
    "description": "Utilizing React for developing the front end of the chatbot, ensuring a seamless and dynamic user interface. Simultaneously, we will integrate OpenAI’s GPT model to power the back end, enabling our chatbot to engage in intelligent and responsive conversations.",
    "html_url": [
      "https://github.com/hamzafarooq009/react-openai-chatbot/blob/3cdedb073e2402f86ef1640ded1ca37f47a39cd0/client/src/App.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 20845,
    "stars": 0
  },
  {
    "full_name": "PremierDesign/firebase-function-openai-api-call",
    "name": "firebase-function-openai-api-call",
    "description": "This is a firebase function that will be triggered from a react app conponent \"AnalyzePhoto\". This function will receive the photo from the client (from an upload and onClick)  and send the photo to the OpenAI API for analyses (sent with responce examples). The response will be returned to the client where the response will be displayed. ",
    "html_url": [
      "https://github.com/PremierDesign/firebase-function-openai-api-call/blob/31d5272f334896275d0f95d24e073149b4625c88/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 86,
    "stars": 0
  },
  {
    "full_name": "OsandaLelum/GPT-Clone",
    "name": "GPT-Clone",
    "description": null,
    "html_url": [
      "https://github.com/OsandaLelum/GPT-Clone/blob/4821824f29f1b56648b8c6464dfa137d10ebe131/client/script.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 299,
    "stars": 0
  },
  {
    "full_name": "KevinRomero3100/Fine-Tuning",
    "name": "Fine-Tuning",
    "description": null,
    "html_url": [
      "https://github.com/KevinRomero3100/Fine-Tuning/blob/9849b43fe0ededebf7db35b7b720142188a6fc02/Fine%20Tuning/wwwroot/assets/js/chatbot-script.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 299545,
    "stars": 0
  },
  {
    "full_name": "Jsaunders20/summarizer",
    "name": "summarizer",
    "description": "This script efficiently processes and summarizes the content of various file types within a specified Google Drive folder. It supports both PDFs and certain audio file formats (e.g., MP3, MP4, MPEG). Summaries and follow-up emails are generated based on the extracted content using the GPT-4 model.",
    "html_url": [
      "https://github.com/Jsaunders20/summarizer/blob/990163175ac737479dc8caf7cded809ea6d315c3/summarizer.gs"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 32,
    "stars": 0
  },
  {
    "full_name": "tish978/rizzotto-2",
    "name": "rizzotto-2",
    "description": "This project was created leveraging OpenAI API to create a dating advice website, to help people with their \"Rizz\".",
    "html_url": [
      "https://github.com/tish978/rizzotto-2/blob/e29155bd2317f0f04d4a087188df5c4888091588/src/sections/Hero.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 9210,
    "stars": 0
  },
  {
    "full_name": "aptheparker/recosk",
    "name": "recosk",
    "description": "Openai X SKT Prompt Day Project",
    "html_url": [
      "https://github.com/aptheparker/recosk/blob/00b4adee571a9a7fec5dd6fe734848e567a7d943/src/pages/MorePage.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 6764,
    "stars": 0
  },
  {
    "full_name": "Samanthkumarsg/portfolio-analytics-bot",
    "name": "portfolio-analytics-bot",
    "description": "The Financial Portfolio Analytics Bot is a cutting-edge web application designed to provide users with intelligent insights into their investment portfolios. By leveraging the power of OpenAI's GPT-3.5 model, this bot engages in intelligent conversations, offering expert-level financial analysis and more.",
    "html_url": [
      "https://github.com/Samanthkumarsg/portfolio-analytics-bot/blob/16b56ae339d763cb74423956a37cb65146d7fbcf/src/pages/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 4476,
    "stars": 5
  },
  {
    "full_name": "thereal-atom/openai.js",
    "name": "openai.js",
    "description": "Tiny openAI API wrapper for JavaScript",
    "html_url": [
      "https://github.com/thereal-atom/openai.js/blob/b558a5c5491f8e59fade1f7595f1069ae6551e9e/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 262,
    "stars": 2
  },
  {
    "full_name": "markusJsU21/openai-function-calling-react",
    "name": "openai-function-calling-react",
    "description": null,
    "html_url": [
      "https://github.com/markusJsU21/openai-function-calling-react/blob/0f31a0236d1fa423b3f2413eb317cd1d17090b24/src/Example.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 13293,
    "stars": 0
  },
  {
    "full_name": "emilamaj/translate",
    "name": "translate",
    "description": "Simple and powerful AI-powered chrome translation extension, delivering better performance than established competitors like Google Translate by leveraging LLMs, Large Language Models.",
    "html_url": [
      "https://github.com/emilamaj/translate/blob/d35dae3ce61db7c84aa5e900b3b35a6c088e8d1c/backend/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 4734,
    "stars": 1
  },
  {
    "full_name": "developersdigest/function-chain",
    "name": "function-chain",
    "description": "The FunctionChain is a tool that simplifies and organizes the process of invoking OpenAI functions in your Node.js applications. With this toolkit, you can easily scaffold out and isolate all the OpenAI function calls you need, making your code more modular, maintainable, and scalable.",
    "html_url": [
      "https://github.com/developersdigest/function-chain/blob/77c61e87dae734658379a7d5402d8101780eb1bc/FunctionChain/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 3471,
    "stars": 55
  },
  {
    "full_name": "hschickdevs/simple-openai-playground",
    "name": "simple-openai-playground",
    "description": "This repository contains the code for a simple website that demonstrates the use of OpenAI's ChatGPT and DALLE APIs. The website is built using HTML, JavaScript, and CSS, with styling based on the Bootstrap framework.",
    "html_url": [
      "https://github.com/hschickdevs/simple-openai-playground/blob/0a2fa9881d7760b104e7e2b67c89ae74c3fa57a6/script.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 277,
    "stars": 1
  },
  {
    "full_name": "jambonz/jambonz-voicebot-gpt-3",
    "name": "jambonz-voicebot-gpt-3",
    "description": "Sample jambonz app that uses the websocket interface and provides a conversational interface to openai",
    "html_url": [
      "https://github.com/jambonz/jambonz-voicebot-gpt-3/blob/94ad6f44ce8f81d1f2e752ba36005bb1c19f0114/lib/routes/chat-gpt3.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 2783,
    "stars": 5
  },
  {
    "full_name": "nazlicanto/gmail_roast_or_toast",
    "name": "gmail_roast_or_toast",
    "description": "OpenAI AutoReply Chrome Extension ",
    "html_url": [
      "https://github.com/nazlicanto/gmail_roast_or_toast/blob/b2b2183d4db0300c4bb6ea662ce4cfa4cde36839/src/content.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 3761,
    "stars": 1
  },
  {
    "full_name": "tomsoust/Alfie",
    "name": "Alfie",
    "description": "A GenAI model to produce gift ideas based off several questions asked to the user. Click below to try it out!",
    "html_url": [
      "https://github.com/tomsoust/Alfie/blob/666deb7dd362973237720b985d476bae6c5c57ec/src/App.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 4415,
    "stars": 2
  },
  {
    "full_name": "ferluchin/city-data-project",
    "name": "city-data-project",
    "description": "Programming project React City data Summarization using openai api key and geoCities API",
    "html_url": [
      "https://github.com/ferluchin/city-data-project/blob/2ae1f6518ad12c10a545c05cb62e2f47c1ac47d6/src/CitySummaryPopup.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 19444,
    "stars": 1
  },
  {
    "full_name": "africanmx/dallebash",
    "name": "dallebash",
    "description": "A command-line interface (CLI) tool for interacting with OpenAI's DALL-E, allowing users to generate images based on prompts. Includes configuration options via wizard or command-line arguments, and supports interactive mode for continuous prompt input.",
    "html_url": [
      "https://github.com/africanmx/dallebash/blob/4817bea3e0bb74f8b7d959c1f88ee3b302fdb214/serverless/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 3348,
    "stars": 1
  },
  {
    "full_name": "Park9eon/ninebot-gpt",
    "name": "ninebot-gpt",
    "description": "OpenAI + Slack Slash Comman",
    "html_url": [
      "https://github.com/Park9eon/ninebot-gpt/blob/7f680bbf52ae45746aadb014d186742f9405b34e/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 181,
    "stars": 1
  },
  {
    "full_name": "rainx0r/conference-poster-search",
    "name": "conference-poster-search",
    "description": "Search through NeurIPS / ICML / ICLR poster session pages with an LLM",
    "html_url": [
      "https://github.com/rainx0r/conference-poster-search/blob/7db485b4d2bd63ddbe230a444cf97fb832f469a4/Shared%20(Extension)/Resources/background.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 903,
    "stars": 0
  },
  {
    "full_name": "Slamsneider/SimpleHtmlChatAgents",
    "name": "SimpleHtmlChatAgents",
    "description": "Very simple chat interface with memory. Introduction to using openai API",
    "html_url": [
      "https://github.com/Slamsneider/SimpleHtmlChatAgents/blob/2a05d05e40363e1589ced17c493887e08f5bb384/html/functions.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 203,
    "stars": 17
  },
  {
    "full_name": "MaxHorstmann/gpt-nocode",
    "name": "gpt-nocode",
    "description": "Experimental: no code platform which uses chatGPT to generate data model, workflow definitions, and UI",
    "html_url": [
      "https://github.com/MaxHorstmann/gpt-nocode/blob/cce817e40b4d2b99513bf73e455da9c9b5c1227a/all.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 215,
    "stars": 3
  },
  {
    "full_name": "JeanSantosReyes/openai-thread-manager",
    "name": "openai-thread-manager",
    "description": "App to manage OpenAI Threads using API",
    "html_url": [
      "https://github.com/JeanSantosReyes/openai-thread-manager/blob/97616b6226d68addbbe82f7a2023a188da7cbda0/app-alpha.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 279,
    "stars": 0
  },
  {
    "full_name": "Sukuna32/Gragoiii",
    "name": "Gragoiii",
    "description": "Fuck off 🖕",
    "html_url": [
      "https://github.com/Sukuna32/Gragoiii/blob/3d2233db4b49a938d7612c838ad986c9b8df906b/backups/backup_1.5.8/scripts/cmds/gpt.js",
      "https://github.com/Sukuna32/Gragoiii/blob/3d2233db4b49a938d7612c838ad986c9b8df906b/scripts/cmds/gpt.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 170185,
    "stars": 0
  },
  {
    "full_name": "adityaS011/LLM-Flow",
    "name": "LLM-Flow",
    "description": "https://llm-flow.netlify.app/",
    "html_url": [
      "https://github.com/adityaS011/LLM-Flow/blob/f1acf04379aafede5e0aa64a11b5b4f3fb3722f0/src/ChatInterface/ChatInterface.jsx",
      "https://github.com/adityaS011/LLM-Flow/blob/f1acf04379aafede5e0aa64a11b5b4f3fb3722f0/src/Navbar/Navbar.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 7549,
    "stars": 0
  },
  {
    "full_name": "TzufKishon/Trip_Generator_Using_OpenAI-Web",
    "name": "Trip_Generator_Using_OpenAI-Web",
    "description": null,
    "html_url": [
      "https://github.com/TzufKishon/Trip_Generator_Using_OpenAI-Web/blob/f02756dbcc277c8e25638623ce77acfa00a79161/server.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 2298,
    "stars": 0
  },
  {
    "full_name": "BunnyCode/truth-llm-bot",
    "name": "truth-llm-bot",
    "description": "Open sourced Discord bot for testing LLMs, specifically on fake new detection",
    "html_url": [
      "https://github.com/BunnyCode/truth-llm-bot/blob/be3bce8e91c41da9d68ddcf6c3b92fa4588c0b9c/src/commands/utility/chatGPT.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 130790,
    "stars": 0
  },
  {
    "full_name": "johame72/Fat-Cat-Chat-128k",
    "name": "Fat-Cat-Chat-128k",
    "description": "OpenAI ChatGPT-4 128k Token Interface",
    "html_url": [
      "https://github.com/johame72/Fat-Cat-Chat-128k/blob/2485afb4eabe3faef593fddd267e1a5590e439e7/src/OriginalChatComponent.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 23127,
    "stars": 1
  },
  {
    "full_name": "meain/yaq",
    "name": "yaq",
    "description": "Your Assistant for Querying (the web using LLMs)",
    "html_url": [
      "https://github.com/meain/yaq/blob/dc0f7f0d8551f6d75adb73feac486a5692e8b250/options.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1095,
    "stars": 8
  },
  {
    "full_name": "etrobot/next-langchain-tauri",
    "name": "next-langchain-tauri",
    "description": "Langchain desktop app @multi-Agent",
    "html_url": [
      "https://github.com/etrobot/next-langchain-tauri/blob/fffbcdf1da5c71fb18eb444a3f0b5853011e9517/server/custom/tools/dalle/dalle.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 14719,
    "stars": 27
  },
  {
    "full_name": "riceball-tw/gpt-markdown-translator",
    "name": "gpt-markdown-translator",
    "description": "CLI to translate .md / .mdx to other languages using ChatGPT",
    "html_url": [
      "https://github.com/riceball-tw/gpt-markdown-translator/blob/f7b3b1645e2d50ceb70eea393a92fd4862051b8e/api.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 486,
    "stars": 3
  },
  {
    "full_name": "nnanwang/AItist",
    "name": "AItist",
    "description": "A React Native mobile application, leveraging OpenAI's DALL-E 3 API to enhance social media content with image and meme editing features.",
    "html_url": [
      "https://github.com/nnanwang/AItist/blob/42256f15b4edfa938067a519f81e21aa11e77db2/components/ImagePicker.js",
      "https://github.com/nnanwang/AItist/blob/42256f15b4edfa938067a519f81e21aa11e77db2/components/MemeArtist.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 19892,
    "stars": 2
  },
  {
    "full_name": "IlIIIIIIlI/chess-ai-ReactJS",
    "name": "chess-ai-ReactJS",
    "description": "react project. play chess with chatgpt or claude",
    "html_url": [
      "https://github.com/IlIIIIIIlI/chess-ai-ReactJS/blob/3931ab180d8b0624f18561f6053bda2c5a3509c1/src/openAIBot.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 21290,
    "stars": 1
  },
  {
    "full_name": "eimenhmdt/explain-code-vs-extension",
    "name": "explain-code-vs-extension",
    "description": "This minimalistic VS Code extension allows you to use the power of OpenAI's GPT-3 to explain and understand code. By providing your OpenAI API key, you can use the extension to explain code snippets and receive clear and concise explanations in natural language without having to leave your IDE.",
    "html_url": [
      "https://github.com/eimenhmdt/explain-code-vs-extension/blob/fb1ea50695f65b1c6bd8c43de286dc6419374f30/extension.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 4200,
    "stars": 1
  },
  {
    "full_name": "SarathAdhi/chatgpt-x-google-chrome-extension",
    "name": "chatgpt-x-google-chrome-extension",
    "description": "A browser extension to display OpenAI and ChatGPT response alongside Google search engine results. Search for anything in google and get answers related to your search.",
    "html_url": [
      "https://github.com/SarathAdhi/chatgpt-x-google-chrome-extension/blob/3ea9b7f2a09204a92ef10128d282d628932b692d/content.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 206,
    "stars": 2
  },
  {
    "full_name": "AustinBarrett1/TextFix-Extention",
    "name": "TextFix-Extention",
    "description": "A Firefox extension that leverages the ChatGPT API to assist users in processing text for grammar correction, elaboration, summarization, and drafting emails. This tool is designed to enhance writing efficiency and quality directly within the browser.",
    "html_url": [
      "https://github.com/AustinBarrett1/TextFix-Extention/blob/6d26b4323cc56d0bafa2c80d925269a693f3690d/js/popup.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 8441,
    "stars": 0
  },
  {
    "full_name": "dsvillalobos/ds-cloudswift",
    "name": "ds-cloudswift",
    "description": "DS CloudSwift is your ultimate companion for easy, fast, and reliable cloud storage. With DS CloudSwift you can seamlessly save, organize, and access your files, links, and notes from any device at any time. Additionally, DS CloudSwift features “CloudSwift AI”, your personal assistant, ready to help with any task or conversation.",
    "html_url": [
      "https://github.com/dsvillalobos/ds-cloudswift/blob/e54192d2cd605ccaf8fb1a296cc5c7a768573caa/src/views/CloudSwiftAI.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "Kuanchiliao1/quizzical_react",
    "name": "quizzical_react",
    "description": "My first larger React app complete with A.I. generated quiz questions/explanations and localstorage to save questions",
    "html_url": [
      "https://github.com/Kuanchiliao1/quizzical_react/blob/ca6cf3bd1c7d5a2ea11c3e36da760ee6118c314d/quizzical_react/src/components/SavedQuestionsPage.jsx",
      "https://github.com/Kuanchiliao1/quizzical_react/blob/ca6cf3bd1c7d5a2ea11c3e36da760ee6118c314d/quizzical_react/src/components/MainPage.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 4068,
    "stars": 1
  },
  {
    "full_name": "lucasjohnston/transcribe-voice-memo",
    "name": "transcribe-voice-memo",
    "description": "A Node.js application to transcribe and summarize voice memos using OpenAI's Whisper API.",
    "html_url": [
      "https://github.com/lucasjohnston/transcribe-voice-memo/blob/fd289a041b86be7b1e21a378cb87a2ab5f119573/src/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 451,
    "stars": 0
  },
  {
    "full_name": "erikroche/gpt-4-less",
    "name": "gpt-4-less",
    "description": "Use an Open AI API key to access gpt-3.5-turbo and gpt-4 for a few cents a month!",
    "html_url": [
      "https://github.com/erikroche/gpt-4-less/blob/9366c37ef6d14672465066070bf3f12364ead88a/server.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 2186,
    "stars": 0
  },
  {
    "full_name": "sajithamma/openai-realtime-nodejs",
    "name": "openai-realtime-nodejs",
    "description": "OpenAI realtime API using NodeJS",
    "html_url": [
      "https://github.com/sajithamma/openai-realtime-nodejs/blob/b492463268032608b57d7d317c358aeeb5773518/app.mjs"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 219,
    "stars": 0
  },
  {
    "full_name": "yanchummar/querie-frontend",
    "name": "querie-frontend",
    "description": "Next.js frontend for Querie: a Google like interface for ChatGPT",
    "html_url": [
      "https://github.com/yanchummar/querie-frontend/blob/a77ab627550275af9f5fcb9b2d8f6405ed1cbc25/src/components/AccessPopup.js",
      "https://github.com/yanchummar/querie-frontend/blob/a77ab627550275af9f5fcb9b2d8f6405ed1cbc25/src/pages/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 2071,
    "stars": 1
  },
  {
    "full_name": "JewelsHovan/Coursera-Transcript-Extractor",
    "name": "Coursera-Transcript-Extractor",
    "description": "Chrome Extension to quickly extract the transcript text in Coursera videos. Will be able to summarize using openai api key and insert into vector database for RAG applications",
    "html_url": [
      "https://github.com/JewelsHovan/Coursera-Transcript-Extractor/blob/eb33d6e5b09d487de776ba1d8542f355473a3d57/src/pages/Background/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 25627,
    "stars": 1
  },
  {
    "full_name": "ariesyous/writemyuserstory",
    "name": "writemyuserstory",
    "description": "A user story generator powered by GPT-3",
    "html_url": [
      "https://github.com/ariesyous/writemyuserstory/blob/2403f0c35336c315a1909bb97f300983738b367a/backend/functions/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 33434,
    "stars": 0
  },
  {
    "full_name": "arthuracs/openai-chat",
    "name": "openai-chat",
    "description": "Simple chat app using the OpenAI GPT-3 API",
    "html_url": [
      "https://github.com/arthuracs/openai-chat/blob/fd52c464e254ec9377533f2f7fb316828fe8352e/script-jquery.js",
      "https://github.com/arthuracs/openai-chat/blob/fd52c464e254ec9377533f2f7fb316828fe8352e/script.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 391,
    "stars": 1
  },
  {
    "full_name": "NeoKms/chat-gpt-tg-bot",
    "name": "chat-gpt-tg-bot",
    "description": "Application for launching a chat bot for Telegram based on ChatGPT",
    "html_url": [
      "https://github.com/NeoKms/chat-gpt-tg-bot/blob/fc17e1441f5fd7d35dd2c5a80d2f46275f08c9dd/src/controllers/open_ai.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 6226,
    "stars": 2
  },
  {
    "full_name": "herebefrogs/ai-telestrations",
    "name": "ai-telestrations",
    "description": "Text-to-image and image-to-text models setup into an infinite loop, playing a game of Telestrations between AIs.",
    "html_url": [
      "https://github.com/herebefrogs/ai-telestrations/blob/0afc00670fe1e71ec0a65a802bd576de3514c395/src/proxy.mjs"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1541,
    "stars": 1
  },
  {
    "full_name": "GiIrendra/Jarvis_The_Voice_Assistant",
    "name": "Jarvis_The_Voice_Assistant",
    "description": "Jarvis: Your personal voice assistant on Android! Built with React Native, powered by Gemini AI API. Ask questions, get assistance effortlessly. Experience the future of AI in just one app!",
    "html_url": [
      "https://github.com/GiIrendra/Jarvis_The_Voice_Assistant/blob/67165b94c6a552fe8cf5b9fa00096118e4bf07a9/src/api/openAi.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 14783,
    "stars": 4
  },
  {
    "full_name": "mrx6SO/DetectFeelings",
    "name": "DetectFeelings",
    "description": "React Native App integrated with the OpenAI API, to detect sentiments of sentences sent by the user.",
    "html_url": [
      "https://github.com/mrx6SO/DetectFeelings/blob/76868ad2d9f3daca1fcf34c256e00f32b0b0957b/App.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 17910,
    "stars": 0
  },
  {
    "full_name": "pj-mill/chatgpt-chatbot",
    "name": "chatgpt-chatbot",
    "description": "A ChatGPT chatbot built with html, css & javascript",
    "html_url": [
      "https://github.com/pj-mill/chatgpt-chatbot/blob/99ca478cbe427cb9e978ab40fafcfb436c31f0b6/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 323,
    "stars": 0
  },
  {
    "full_name": "pranay01/signoz-openfeature-llm",
    "name": "signoz-openfeature-llm",
    "description": null,
    "html_url": [
      "https://github.com/pranay01/signoz-openfeature-llm/blob/fadc92c03442dd9f5bdf7d7ff1b1abe3a78016c3/server.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 21919,
    "stars": 1
  },
  {
    "full_name": "weberi/node-red-contrib-chatgpt-api",
    "name": "node-red-contrib-chatgpt-api",
    "description": "Enhance your Node-RED flows with AI! Integrate ChatGPT models to enable AI-powered chat, user-friendly speech interfaces, and intelligent automations, with built-in support for prompt engineering.",
    "html_url": [
      "https://github.com/weberi/node-red-contrib-chatgpt-api/blob/4f729e400c65d4f61d6f61c6a2d5b3e31d25adc2/gptapi.js",
      "https://github.com/weberi/node-red-contrib-chatgpt-api/blob/4f729e400c65d4f61d6f61c6a2d5b3e31d25adc2/gptmodels.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 995,
    "stars": 1
  },
  {
    "full_name": "sahilsuman933/CritiqueCheck",
    "name": "CritiqueCheck",
    "description": "It is a web application that leverages OpenAI's natural language processing capabilities to automate code reviews. ",
    "html_url": [
      "https://github.com/sahilsuman933/CritiqueCheck/blob/d606559b76e4568672c6649eab16ca910c6b38f9/src/App.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 18092,
    "stars": 1
  },
  {
    "full_name": "ole-jsn/API-Project",
    "name": "API-Project",
    "description": "API Projekt mit AWS, OpenAI und LindyAI Integrierung (geschrieben mit JavaScript, HTML, CSS, Python)",
    "html_url": [
      "https://github.com/ole-jsn/API-Project/blob/38b053420ffdd81a2e36c0e6491c53cb56d1e356/server.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1288,
    "stars": 0
  },
  {
    "full_name": "EduardoAquinta/ApprenteeHelperBot",
    "name": "ApprenteeHelperBot",
    "description": "A bot to help Apprentee's integrated with Chat GPT",
    "html_url": [
      "https://github.com/EduardoAquinta/ApprenteeHelperBot/blob/df01203aa40a6a4ef1c61acd9dec693c40616816/src/App.test.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 22201,
    "stars": 1
  },
  {
    "full_name": "Laskiri/EHR-Rephraser-2semProject",
    "name": "EHR-Rephraser-2semProject",
    "description": "2nd semester software project. A web-application that connects to the OpenAI GPT3.5 LLM with the purpose of explaining Electronic Medical Records through the use of simple language and terminology. ",
    "html_url": [
      "https://github.com/Laskiri/EHR-Rephraser-2semProject/blob/f565e29973428f1da3dde092a1c9c0dc80763587/P2Projekt/app.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 934727,
    "stars": 0
  },
  {
    "full_name": "acui51/monocle-rizz",
    "name": "monocle-rizz",
    "description": "rizzGPT",
    "html_url": [
      "https://github.com/acui51/monocle-rizz/blob/d64b6aec303d3a59fe5b881a14ae68ab50cf9fa5/src/components/Home.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1292,
    "stars": 237
  },
  {
    "full_name": "hihumanzone/Gemini-Discord-Bot",
    "name": "Gemini-Discord-Bot",
    "description": "A Discord bot leveraging Google Gemini. Has image recognition, conversation engagement, and content understanding.",
    "html_url": [
      "https://github.com/hihumanzone/Gemini-Discord-Bot/blob/930456aed350b73ae7f89ba0e1f97563043cc3e1/tools/others.js",
      "https://github.com/hihumanzone/Gemini-Discord-Bot/blob/930456aed350b73ae7f89ba0e1f97563043cc3e1/tools/generators.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 3627,
    "stars": 62
  },
  {
    "full_name": "Jimmy-Vela06/rag-zeal-internship",
    "name": "rag-zeal-internship",
    "description": null,
    "html_url": [
      "https://github.com/Jimmy-Vela06/rag-zeal-internship/blob/1f7b97e16430cb63f6a7f288f3b68e9d94dbc808/server/server.mjs"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 17014,
    "stars": 0
  },
  {
    "full_name": "mastashake08/gpt-audiobook",
    "name": "gpt-audiobook",
    "description": "Create short stories using ChatGPT",
    "html_url": [
      "https://github.com/mastashake08/gpt-audiobook/blob/0dec35c5e32682968b105e1500ea789417d45a21/src/classes/OpenAi.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 13986,
    "stars": 1
  },
  {
    "full_name": "shiyuanyuanyuan/LLM-data-search",
    "name": "LLM-data-search",
    "description": null,
    "html_url": [
      "https://github.com/shiyuanyuanyuan/LLM-data-search/blob/706bd6cba375f11e662484a1466f7ddc6a0a2e2d/sample.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 45579,
    "stars": 0
  },
  {
    "full_name": "michael-norman7/Netflix_LLM_Recommeder",
    "name": "Netflix_LLM_Recommeder",
    "description": null,
    "html_url": [
      "https://github.com/michael-norman7/Netflix_LLM_Recommeder/blob/ea0df8b164d0a42560d434a2be2514376d09184b/gptUtil.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 48978,
    "stars": 0
  },
  {
    "full_name": "ahmed-al-balochi/ChatGPT-Notes-App",
    "name": "ChatGPT-Notes-App",
    "description": "A simple note taking application powered by ChatGPT with Django as the back-end and React as the front-end.",
    "html_url": [
      "https://github.com/ahmed-al-balochi/ChatGPT-Notes-App/blob/1f5dae1fc1c6f4005bb728a0195dff8328aede8a/frontend/src/pages/NotesPage.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 30625,
    "stars": 1
  },
  {
    "full_name": "benjaminbreen/HistoryLens",
    "name": "HistoryLens",
    "description": "Educational simulation game platform utilizing LLM agents and historical sources. ",
    "html_url": [
      "https://github.com/benjaminbreen/HistoryLens/blob/eb3f6cd9aa1825a3611fcd0d1f5d68eacc03b259/src/EndGameAssessment.js",
      "https://github.com/benjaminbreen/HistoryLens/blob/eb3f6cd9aa1825a3611fcd0d1f5d68eacc03b259/src/Map.js",
      "https://github.com/benjaminbreen/HistoryLens/blob/eb3f6cd9aa1825a3611fcd0d1f5d68eacc03b259/src/Diagnose.js",
      "https://github.com/benjaminbreen/HistoryLens/blob/eb3f6cd9aa1825a3611fcd0d1f5d68eacc03b259/src/journalAgent%20old%20functional%20version%20Aug%2029.js",
      "https://github.com/benjaminbreen/HistoryLens/blob/eb3f6cd9aa1825a3611fcd0d1f5d68eacc03b259/src/journalAgent.js",
      "https://github.com/benjaminbreen/HistoryLens/blob/eb3f6cd9aa1825a3611fcd0d1f5d68eacc03b259/src/CounterNarrative.js",
      "https://github.com/benjaminbreen/HistoryLens/blob/eb3f6cd9aa1825a3611fcd0d1f5d68eacc03b259/src/oldprescribepopup.js",
      "https://github.com/benjaminbreen/HistoryLens/blob/eb3f6cd9aa1825a3611fcd0d1f5d68eacc03b259/src/Mixing.js",
      "https://github.com/benjaminbreen/HistoryLens/blob/eb3f6cd9aa1825a3611fcd0d1f5d68eacc03b259/src/PrescribePopup.js",
      "https://github.com/benjaminbreen/HistoryLens/blob/eb3f6cd9aa1825a3611fcd0d1f5d68eacc03b259/src/App.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 79708,
    "stars": 0
  },
  {
    "full_name": "VictorEZCodes/Voice-Controlled-Web-App",
    "name": "Voice-Controlled-Web-App",
    "description": "Web app using voice recognition and OpenAI's GPT-3.5-turbo to provide hands-free, interactive functionality with voice commands.",
    "html_url": [
      "https://github.com/VictorEZCodes/Voice-Controlled-Web-App/blob/d85b148ea6201a013d417b3d000ec4da4dd2d662/server.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 2760,
    "stars": 0
  },
  {
    "full_name": "quang08/Convo-AI",
    "name": "Convo-AI",
    "description": "An implementation of OpenAI's newly-released gpt-3.5-turbo API",
    "html_url": [
      "https://github.com/quang08/Convo-AI/blob/8257b0603ff4cf086bbebff1cfb5fd6b111ef25c/src/utils/context.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 44464,
    "stars": 0
  },
  {
    "full_name": "danny-avila/LibreChat",
    "name": "LibreChat",
    "description": "Enhanced ChatGPT Clone: Features Agents, Anthropic, AWS, OpenAI, Assistants API, Azure, Groq, o1, GPT-4o, Mistral, OpenRouter, Vertex AI, Gemini, Artifacts, AI model switching, message search, Code Interpreter, langchain, DALL-E-3, OpenAPI Actions, Functions, Secure Multi-User Auth, Presets, open-source for self-hosting. Active project.",
    "html_url": [
      "https://github.com/danny-avila/LibreChat/blob/9b118d42de3f99e9c8c85d0beb46d4ae5fd74a4c/api/utils/extractBaseURL.spec.js",
      "https://github.com/danny-avila/LibreChat/blob/9b118d42de3f99e9c8c85d0beb46d4ae5fd74a4c/api/server/services/Files/Audio/TTSService.js",
      "https://github.com/danny-avila/LibreChat/blob/9b118d42de3f99e9c8c85d0beb46d4ae5fd74a4c/api/app/clients/specs/OpenAIClient.test.js",
      "https://github.com/danny-avila/LibreChat/blob/9b118d42de3f99e9c8c85d0beb46d4ae5fd74a4c/api/app/clients/ChatGPTClient.js",
      "https://github.com/danny-avila/LibreChat/blob/9b118d42de3f99e9c8c85d0beb46d4ae5fd74a4c/api/server/services/Threads/processMessages.spec.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 244659,
    "stars": 26583
  },
  {
    "full_name": "quentin-mckay/AI-Quiz-Generator",
    "name": "AI-Quiz-Generator",
    "description": "GPT-powered multiple choice quiz generator built with Next.js",
    "html_url": [
      "https://github.com/quentin-mckay/AI-Quiz-Generator/blob/c07a4de421f438e606472113ea3c6f68c78a3886/app/api/chat/route.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 6568,
    "stars": 82
  },
  {
    "full_name": "yyassif/ragmind",
    "name": "ragmind",
    "description": "RAGMind API + Core RAG, Frontend, Docs",
    "html_url": [
      "https://github.com/yyassif/ragmind/blob/de5964eb90adf2af8e0228ebfc07b9bac0bcef75/frontend/next.config.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 43239,
    "stars": 2
  },
  {
    "full_name": "varshini-sundaresan/my-own-todo",
    "name": "my-own-todo",
    "description": "mcc-todo app integrated with chatgpt",
    "html_url": [
      "https://github.com/varshini-sundaresan/my-own-todo/blob/3216e3fd87c76d69be2e167c3ecc7fc45fafdef2/components/PlanTasks.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 38196,
    "stars": 0
  },
  {
    "full_name": "A1THARV/GPT-AGENT",
    "name": "GPT-AGENT",
    "description": null,
    "html_url": [
      "https://github.com/A1THARV/GPT-AGENT/blob/697464eaec5e18cad3b18181b4c3f691645181ce/cli/src/envGenerator.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 48466,
    "stars": 0
  },
  {
    "full_name": "ssebowa/ssebowa-UI",
    "name": "ssebowa-UI",
    "description": "Ssebowa is an open-source generative AI platform offering free access to powerful AI models for everyone. Use 100% of revenue got from ads and apis to plant trees and give meals to children in need. Think of us as the ChatGPT4 that serves humanity!",
    "html_url": [
      "https://github.com/ssebowa/ssebowa-UI/blob/1dd9b3bbcb6378461dfddb18192ee19d7dde38e8/api/utils/extractBaseURL.spec.js",
      "https://github.com/ssebowa/ssebowa-UI/blob/1dd9b3bbcb6378461dfddb18192ee19d7dde38e8/api/server/services/ModelService.js",
      "https://github.com/ssebowa/ssebowa-UI/blob/1dd9b3bbcb6378461dfddb18192ee19d7dde38e8/api/app/clients/specs/OpenAIClient.test.js",
      "https://github.com/ssebowa/ssebowa-UI/blob/1dd9b3bbcb6378461dfddb18192ee19d7dde38e8/api/app/clients/ChatGPTClient.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 110647,
    "stars": 111
  },
  {
    "full_name": "ishanaggarwal/Librechat",
    "name": "Librechat",
    "description": "About Enhanced ChatGPT Clone: Features OpenAI, Assistants API, Azure, Groq, GPT-4 Vision, Mistral, Bing, Anthropic, OpenRouter, Vertex AI, Gemini, AI model switching, message search, langchain, DALL-E-3, ChatGPT Plugins, OpenAI Functions, Secure Multi-User System, Presets, completely open-source for self-hosting. More features in development",
    "html_url": [
      "https://github.com/ishanaggarwal/Librechat/blob/5f0b340a9608068c82da1a5d7ae57035b9589e55/api/utils/extractBaseURL.spec.js",
      "https://github.com/ishanaggarwal/Librechat/blob/5f0b340a9608068c82da1a5d7ae57035b9589e55/api/server/services/Files/Audio/speechToText.js",
      "https://github.com/ishanaggarwal/Librechat/blob/5f0b340a9608068c82da1a5d7ae57035b9589e55/api/server/services/ModelService.js",
      "https://github.com/ishanaggarwal/Librechat/blob/5f0b340a9608068c82da1a5d7ae57035b9589e55/api/app/clients/specs/OpenAIClient.test.js",
      "https://github.com/ishanaggarwal/Librechat/blob/5f0b340a9608068c82da1a5d7ae57035b9589e55/api/app/clients/OpenAIClient.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 186485,
    "stars": 0
  },
  {
    "full_name": "tanguangyun/ChatHub",
    "name": "ChatHub",
    "description": "Enhanced ChatGPT Clone: Features OpenAI, Assistants API, Azure, Groq, GPT-4 Vision, Mistral, Bing, Anthropic, OpenRouter, Vertex AI, Gemini, AI model switching, message search, langchain, DALL-E-3, ChatGPT Plugins, OpenAI Functions, Secure Multi-User System, Presets, completely open-source for self-hosting. More features in development......",
    "html_url": [
      "https://github.com/tanguangyun/ChatHub/blob/e4041b3f361c314d008d92969e6f533d8c08b84d/api/utils/extractBaseURL.spec.js",
      "https://github.com/tanguangyun/ChatHub/blob/e4041b3f361c314d008d92969e6f533d8c08b84d/api/server/services/ModelService.js",
      "https://github.com/tanguangyun/ChatHub/blob/e4041b3f361c314d008d92969e6f533d8c08b84d/api/app/clients/specs/OpenAIClient.test.js",
      "https://github.com/tanguangyun/ChatHub/blob/e4041b3f361c314d008d92969e6f533d8c08b84d/api/server/services/Threads/processMessages.spec.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 199064,
    "stars": 1
  },
  {
    "full_name": "aplisay/llm-agent",
    "name": "llm-agent",
    "description": "LLM based Agent",
    "html_url": [
      "https://github.com/aplisay/llm-agent/blob/aa35cb24fabebf807df976a9d3ff58a9c8fb99c4/lib/models/openai.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 7505,
    "stars": 34
  },
  {
    "full_name": "Keya-Moradi/Omni-AI",
    "name": "Omni-AI",
    "description": "An AI Integration Platform where users can interact with multiple AI systems, such as ChatGPT and Gemini, which will collaborate to answer questions or offer solutions.",
    "html_url": [
      "https://github.com/Keya-Moradi/Omni-AI/blob/a5d8d9a9c6d76dd82b61e06c8bc7e985eed41a8e/controllers/aiController.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 2809,
    "stars": 0
  },
  {
    "full_name": "rb81/openai-js-chat",
    "name": "openai-js-chat",
    "description": "A simple JavaScript chat application for OpenAI models with basic memory management and local (encrypted) chat history.",
    "html_url": [
      "https://github.com/rb81/openai-js-chat/blob/53573a1b5734406398aa16a663ddda5ca510fc39/src/js/api-module.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1074,
    "stars": 0
  },
  {
    "full_name": "c-mimms/post-service",
    "name": "post-service",
    "description": "Node project to play with RESTful APIs, D3.js, and LLMs",
    "html_url": [
      "https://github.com/c-mimms/post-service/blob/d48362fb1f10e56162d49daa78fb7f611424e490/src/gpt/gpt.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 2730,
    "stars": 0
  },
  {
    "full_name": "WangKaifei/cf-openai-proxy",
    "name": "cf-openai-proxy",
    "description": "A Cloudflare worker script to proxy OpenAI‘s Service",
    "html_url": [
      "https://github.com/WangKaifei/cf-openai-proxy/blob/5129430b1f14dc21ad34b5c492eade846d866fe0/cf-openai-proxy.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 119,
    "stars": 3
  },
  {
    "full_name": "llegomark/llegomark-api",
    "name": "llegomark-api",
    "description": "This is a Cloudflare worker that acts as a proxy to the OpenAI API that can be used to generate text. It ensures that the client's IP address is hashed and used for rate-limiting purposes, securing the client's privacy.",
    "html_url": [
      "https://github.com/llegomark/llegomark-api/blob/72480e96bef5e875bd91c81fb6c2cad76ed0d6db/src/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 2804,
    "stars": 1
  },
  {
    "full_name": "razertory/llm-cf-workers",
    "name": "llm-cf-workers",
    "description": "CloudFlare workers reverse proxy for LLM(Large Language Model)s",
    "html_url": [
      "https://github.com/razertory/llm-cf-workers/blob/085f5a02761fc0c8a0e95c0d03fb07ae3f73d02a/openai.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 304,
    "stars": 0
  },
  {
    "full_name": "jfkproductions/c4DiagramRag",
    "name": "c4DiagramRag",
    "description": "C4 Diagram builder RAG with Chat gpt",
    "html_url": [
      "https://github.com/jfkproductions/c4DiagramRag/blob/4269c8effc1edf04bc3572eeec58df98dfb16dd8/diagram-generator-backend/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 21075,
    "stars": 0
  },
  {
    "full_name": "beattaher/React-GPT-Convenient-website",
    "name": "React-GPT-Convenient-website",
    "description": "The website provides notes collation, legal advice and other services based on OpenAI API （The project has already been sold, and this version is only a simple preview. Thank you so much for your support）",
    "html_url": [
      "https://github.com/beattaher/React-GPT-Convenient-website/blob/f6e552bf49841518ffe26de7f655b97b13774b9a/src/store/api.Store.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 21462,
    "stars": 36
  },
  {
    "full_name": "Raygud/LinkedIn-Post-Automation-with-Puppeteer-and-ChatGPT-AI",
    "name": "LinkedIn-Post-Automation-with-Puppeteer-and-ChatGPT-AI",
    "description": "Automate your LinkedIn posts effortlessly with Puppeteer and ChatGPT AI. This project provides a script to log in to your LinkedIn account, create engaging and informative posts, and share them with your network—all powered by the capabilities of ChatGPT. Enhance your LinkedIn presence and showcase your expertise in the world of IT and coding.",
    "html_url": [
      "https://github.com/Raygud/LinkedIn-Post-Automation-with-Puppeteer-and-ChatGPT-AI/blob/8e4ead7b893c8d17159907e89c45c0288ed03215/withImage.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1378,
    "stars": 1
  },
  {
    "full_name": "milyazkamil/Jarvis-AI-Assistant",
    "name": "Jarvis-AI-Assistant",
    "description": "Your go-to virtual companion for smooth voice interactions. Speak, listen, and command effortlessly. Fueled by OpenAI for clever responses. Personalize voices and toggle modes seamlessly. Elevate your communication with Jarvis AI Assistant. Your intelligent future begins here.",
    "html_url": [
      "https://github.com/milyazkamil/Jarvis-AI-Assistant/blob/dad1a31cdbc44ff41a3b293848b4aaf4c495381a/src/hooks/useSpeechRecognitionHook.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 8543,
    "stars": 0
  },
  {
    "full_name": "Himansu17/codeAlphaTask3",
    "name": "codeAlphaTask3",
    "description": "chatGPT",
    "html_url": [
      "https://github.com/Himansu17/codeAlphaTask3/blob/2f27e34a4e48d6307fcfc720b5156a1631f30213/ChatGpt/script.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 363,
    "stars": 0
  },
  {
    "full_name": "monami44/Realtime-AI-Voice-Pokemon-Trainer",
    "name": "Realtime-AI-Voice-Pokemon-Trainer",
    "description": "AI voice Pokémon master, built with Openai Realtime API and Twilio. Can: answer questions from a vector database, retain short/long term memory, book training sessions using Google Calendar API as well as perform redirections when asked for investments. Uses advanced state management for multi-step processing.",
    "html_url": [
      "https://github.com/monami44/Realtime-AI-Voice-Pokemon-Trainer/blob/5a716848772ce68b7efe6545c183d1f8373fd919/src/database/long-term-memory.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 4680,
    "stars": 2
  },
  {
    "full_name": "Thanusiyan1007/color-sugesstion",
    "name": "color-sugesstion",
    "description": "This project offers a web service to help UI/UX designers select color palettes for their designs. By using OpenAI’s GPT API, it generates color suggestions based on color psychology and theory. Users can log in via Google or manually and receive both color recommendations and a visual color palette image for their projects.",
    "html_url": [
      "https://github.com/Thanusiyan1007/color-sugesstion/blob/b2883648e831b7eb2d8418b86bd5aa77e61b1ebf/backend/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 513987,
    "stars": 0
  },
  {
    "full_name": "edubois22/chatgpt-chrome-extension",
    "name": "chatgpt-chrome-extension",
    "description": "An extension that allows you to call ChatGPT from anywhere and replace the text highlighted by the answer.",
    "html_url": [
      "https://github.com/edubois22/chatgpt-chrome-extension/blob/fa18c320307d574c4d0167e4785e925072e2f1b6/extension/content.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 230,
    "stars": 2
  },
  {
    "full_name": "Mintplex-Labs/anything-llm",
    "name": "anything-llm",
    "description": "The all-in-one Desktop & Docker AI application with built-in RAG, AI agents, and more.",
    "html_url": [
      "https://github.com/Mintplex-Labs/anything-llm/blob/dca27e7235451da9423d38976fa37aec417dda3c/frontend/src/components/EmbeddingSelection/GenericOpenAiOptions/index.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 116301,
    "stars": 45232
  },
  {
    "full_name": "pale2hall/SearchBot9k",
    "name": "SearchBot9k",
    "description": "Kick back watch as GPT-4 autonomously browses the web and answers your questions!",
    "html_url": [
      "https://github.com/pale2hall/SearchBot9k/blob/638bdbf003a5c355f4db34ef95fc7fcc4d078762/src/gpt-utils.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1021,
    "stars": 8
  },
  {
    "full_name": "ltscm/OpenAiChatGPT",
    "name": "OpenAiChatGPT",
    "description": null,
    "html_url": [
      "https://github.com/ltscm/OpenAiChatGPT/blob/9663369f40c723343dd3ba07bb5918a2272cc290/src/Phonymn.jsx",
      "https://github.com/ltscm/OpenAiChatGPT/blob/9663369f40c723343dd3ba07bb5918a2272cc290/src/App.jsx",
      "https://github.com/ltscm/OpenAiChatGPT/blob/9663369f40c723343dd3ba07bb5918a2272cc290/src/Translator.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "DevImran1234/QuestionsAI",
    "name": "QuestionsAI",
    "description": "Chrome extension that solve questions from word file through openai",
    "html_url": [
      "https://github.com/DevImran1234/QuestionsAI/blob/f392175aef45ecab31796450566a0011d245914e/content.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 350,
    "stars": 0
  },
  {
    "full_name": "saharmor/hume-gpt",
    "name": "hume-gpt",
    "description": "An emotionally intelligent AI powered by GPT-4o",
    "html_url": [
      "https://github.com/saharmor/hume-gpt/blob/4c8d337603fc42b798d711cdc64b5432b4e99bec/src/Home.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 485,
    "stars": 1
  },
  {
    "full_name": "qiuxchao/yapi-ai-mock",
    "name": "yapi-ai-mock",
    "description": "使用 LLM，将 YAPI 接口文档生成为本地的 Mock 文件。",
    "html_url": [
      "https://github.com/qiuxchao/yapi-ai-mock/blob/e6166086df7e4b7cc621d7f765ec0fe46e94fdba/src/chat/typechat/model.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 2487,
    "stars": 3
  },
  {
    "full_name": "PeterBlenessy/TeamAI",
    "name": "TeamAI",
    "description": "The TeamAI application allows the user to create a team of OpenAI powered bots with individual capabilities, personas. The bots will solve the task requested by the user as a team effort, each bot contributing with its respective capabilities.",
    "html_url": [
      "https://github.com/PeterBlenessy/TeamAI/blob/b400454d7be4f04eaef1889040149cfb4e33fa3b/src/services/openai.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 16269,
    "stars": 6
  },
  {
    "full_name": "RaheesAhmed/openai-assistant-sdk",
    "name": "openai-assistant-sdk",
    "description": "This package provides an easy-to-use interface for interacting with OpenAI's API to manage assistants, threads, messages, and runs.",
    "html_url": [
      "https://github.com/RaheesAhmed/openai-assistant-sdk/blob/9f66bc9f0628e15d3816ce28647892950cded6c6/OpenAIAssistant.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 385,
    "stars": 2
  },
  {
    "full_name": "Eh-Mr-SK/Custom-ChatGPT",
    "name": "Custom-ChatGPT",
    "description": "The Repository contains code for a Custom ChatGPT built using React, Express, and Node.js. The chatbot is powered by OpenAI's text-davinci-003 language model  and Custom dataset. ",
    "html_url": [
      "https://github.com/Eh-Mr-SK/Custom-ChatGPT/blob/2099bbae365f09fb0b45b8451bb98ac8eb3d8026/backend/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 57794,
    "stars": 7
  },
  {
    "full_name": "hanleymark/gpt-clone",
    "name": "gpt-clone",
    "description": "A simple ChatGPT front end for FAC29b Unschool",
    "html_url": [
      "https://github.com/hanleymark/gpt-clone/blob/9c66afed91fa81b7b237f9c4f523ed413de510f7/app.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 593,
    "stars": 0
  },
  {
    "full_name": "chigreene/SynthWave-JokePage",
    "name": "SynthWave-JokePage",
    "description": "Make use of a joke API and local storage to generate fun jokes to share with your friends. The page is styled using Tailwind. Currently one of the pages using a Chat GPT API to allow user inputs is down the API key for Chat GPT can not be posted to GitHub. ",
    "html_url": [
      "https://github.com/chigreene/SynthWave-JokePage/blob/45bbcb1931e0034eef73fb94fe78ac45a907ad5e/jokeByGPT/assets/script.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1997,
    "stars": 0
  },
  {
    "full_name": "adamlove86/chrome-gpt-summary",
    "name": "chrome-gpt-summary",
    "description": "A simple Chrome extension that provides quick and detailed summaries of text on web pages or YouTube video transcripts. Requires OpenAI API Key.",
    "html_url": [
      "https://github.com/adamlove86/chrome-gpt-summary/blob/a9722fcd7a0c6a3611be9c6391c71c6722b50e0d/popup.js",
      "https://github.com/adamlove86/chrome-gpt-summary/blob/a9722fcd7a0c6a3611be9c6391c71c6722b50e0d/background.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 5996,
    "stars": 1
  },
  {
    "full_name": "yadvendersingh/LLM_Conversator",
    "name": "LLM_Conversator",
    "description": null,
    "html_url": [
      "https://github.com/yadvendersingh/LLM_Conversator/blob/1b2bb400e546e4562674ffd8cbeae4459812a865/script.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 378,
    "stars": 0
  },
  {
    "full_name": "rajpootmohit782/openai-bot-updated-old-",
    "name": "openai-bot-updated-old-",
    "description": "Created with CodeSandbox",
    "html_url": [
      "https://github.com/rajpootmohit782/openai-bot-updated-old-/blob/06ee43d6d55772e6f3cf13c3634cdcf72f9ff9f3/src/Chatgpt2.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 649,
    "stars": 0
  },
  {
    "full_name": "jexp/chagpt-coding",
    "name": "chagpt-coding",
    "description": "Coding with ChatGPT 4",
    "html_url": [
      "https://github.com/jexp/chagpt-coding/blob/443c57e1c74b2a889912876ba9f22e0b524c7ff8/gpt-chrome-extension/content.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1584,
    "stars": 12
  },
  {
    "full_name": "XINEXPORT/chatgpt-ai-healthapp",
    "name": "chatgpt-ai-healthapp",
    "description": "CareBuddy, an AI Healthcare Chat Companion",
    "html_url": [
      "https://github.com/XINEXPORT/chatgpt-ai-healthapp/blob/b3eb5af474df9c03eb4a0915adfb196fbbf6a476/src/components/CustomTextarea/CustomTextarea.jsx",
      "https://github.com/XINEXPORT/chatgpt-ai-healthapp/blob/b3eb5af474df9c03eb4a0915adfb196fbbf6a476/src/screens/Form2/Form2.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 14730,
    "stars": 1
  },
  {
    "full_name": "macaylak/SENG401Project",
    "name": "SENG401Project",
    "description": "This repository contains a web-based solution that uses AI to generate personalized recipes, aiming to reduce food waste and simplify meal planning. It emphasizes modularity and consistency in software architecture, leveraging cloud-based storage and AI-driven text generation for an improved user experience.",
    "html_url": [
      "https://github.com/macaylak/SENG401Project/blob/2e758e10ad8e8775f4acd7e9945540975d1fb1cf/functions/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 48034,
    "stars": 0
  },
  {
    "full_name": "timgoalen/transcriber-frontend",
    "name": "transcriber-frontend",
    "description": "A note-taking app built with React, featuring speech recognition, AI-powered auto-formatting and user-generated custom prompts. • React • Django • REST API • OpenAI API",
    "html_url": [
      "https://github.com/timgoalen/transcriber-frontend/blob/b6dc6a20f67a27f4054c153346b662178847e3b1/src/components/OpenAiApi.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 27944,
    "stars": 3
  },
  {
    "full_name": "bit2world/chat-gpt-google-extension-customize",
    "name": "chat-gpt-google-extension-customize",
    "description": "Chat-GPT is a Google Chrome extension that allows users to customize their online chatting experience. The extension utilizes GPT (Generative Pre-trained Transformer) technology, an advanced natural language processing algorithm developed by OpenAI, to generate human-like responses to common chat messages. The extension offers several key features,",
    "html_url": [
      "https://github.com/bit2world/chat-gpt-google-extension-customize/blob/191f252b803e1e39d5e10643b87a74d0e4ab82e1/src/config/index.mjs"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 17051,
    "stars": 2
  },
  {
    "full_name": "giosilvi/GPT-Prompter",
    "name": "GPT-Prompter",
    "description": "Browser extension to get a fast prompt (of the selected text) for OpenAI`s GPT-3, GPT-4 & ChatGPT API . Available in the Chrome web store and Firefox browser add-ons",
    "html_url": [
      "https://github.com/giosilvi/GPT-Prompter/blob/a5163f8799f7a542cde70da2f1955aa87d9c0ae0/src/gpt3.js",
      "https://github.com/giosilvi/GPT-Prompter/blob/a5163f8799f7a542cde70da2f1955aa87d9c0ae0/src/background.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 8205,
    "stars": 242
  },
  {
    "full_name": "simwai/finance-news-crawler",
    "name": "finance-news-crawler",
    "description": "Finance News Crawler uses News API to fetch some latest articles and generates a sentiment report with the OpenAI API or VADER",
    "html_url": [
      "https://github.com/simwai/finance-news-crawler/blob/76d9f6fe594e6555034c0a6b6c7156c20293d2bd/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 6393,
    "stars": 11
  },
  {
    "full_name": "guananya/aidebugs",
    "name": "aidebugs",
    "description": "A CLI that debugs error messages produced in your command line calling an LLM!",
    "html_url": [
      "https://github.com/guananya/aidebugs/blob/513fd9114e9d87d2e46bd843071d1211bb29f5e4/bin/index.cjs"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1280,
    "stars": 1
  },
  {
    "full_name": "Cillian-Collins/Push-To-Talk-LLM",
    "name": "Push-To-Talk-LLM",
    "description": "Research into OpenAI LLM use cases.",
    "html_url": [
      "https://github.com/Cillian-Collins/Push-To-Talk-LLM/blob/d03710d1e8749d30dcf03e29b23e29982fb40e5a/static/scripts/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 228,
    "stars": 0
  },
  {
    "full_name": "theshanergy/whatbot",
    "name": "whatbot",
    "description": "GPT based chat bot for WhatsApp which uses the OpenAI API",
    "html_url": [
      "https://github.com/theshanergy/whatbot/blob/4c1d884d21a32ad5a15fe53c97438b596ae08146/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1963,
    "stars": 70
  },
  {
    "full_name": "AcuChat/ez-chatgpt-finetuner-server",
    "name": "ez-chatgpt-finetuner-server",
    "description": "EZ ChatGPT FineTuner Nodejs server for easy, rapid finetuning OpenAI LLMs",
    "html_url": [
      "https://github.com/AcuChat/ez-chatgpt-finetuner-server/blob/28bbf6fa3ec169b7ef4058f90c027ac148a29e6f/utils/ai.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1687,
    "stars": 4
  },
  {
    "full_name": "dharllc/speech-to-code",
    "name": "speech-to-code",
    "description": "llm assisted development tools",
    "html_url": [
      "https://github.com/dharllc/speech-to-code/blob/0b4a6c3d9f99fe1ee194222db4039508215f1931/frontend/src/components/UserPromptInput.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 29888,
    "stars": 2
  },
  {
    "full_name": "rohith00016/RAG-app",
    "name": "RAG-app",
    "description": null,
    "html_url": [
      "https://github.com/rohith00016/RAG-app/blob/71b7b63104f70b4be3ccff4ad5a33e5f96213e43/server/controllers/documentController.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 5929,
    "stars": 0
  },
  {
    "full_name": "vbookshelf/RAG-Experiments",
    "name": "RAG-Experiments",
    "description": "My experiments while learning how to build a RAG (Retrieval Augmented Generation) system.",
    "html_url": [
      "https://github.com/vbookshelf/RAG-Experiments/blob/170fc6201b17d9648ab78bbedcf6c75947a2b0dc/Exp_11-Put-the-weviate-code-inside-a-function/chatgpt-config.js",
      "https://github.com/vbookshelf/RAG-Experiments/blob/170fc6201b17d9648ab78bbedcf6c75947a2b0dc/EXP_15-basicRAG-JS/chatgpt-config.js",
      "https://github.com/vbookshelf/RAG-Experiments/blob/170fc6201b17d9648ab78bbedcf6c75947a2b0dc/Exp_20-paperRAG-JS/chatgpt-config.js",
      "https://github.com/vbookshelf/RAG-Experiments/blob/170fc6201b17d9648ab78bbedcf6c75947a2b0dc/Exp_10-Fully-working-js-app/chatgpt-config.js",
      "https://github.com/vbookshelf/RAG-Experiments/blob/170fc6201b17d9648ab78bbedcf6c75947a2b0dc/Exp_13-Added-function-call-to-two-column-rag-app/chatgpt-config.js",
      "https://github.com/vbookshelf/RAG-Experiments/blob/170fc6201b17d9648ab78bbedcf6c75947a2b0dc/Exp_14-Fix-issue-where-db-outputs-duplicate-ids/chatgpt-config.js",
      "https://github.com/vbookshelf/RAG-Experiments/blob/170fc6201b17d9648ab78bbedcf6c75947a2b0dc/EXP_16-functionRAG-JS/chatgpt-config.js",
      "https://github.com/vbookshelf/RAG-Experiments/blob/170fc6201b17d9648ab78bbedcf6c75947a2b0dc/Exp_21%20-%20KaggleRAG-PHP/KaggleRAG-Php/chatgpt-api-code.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript",
      "php"
    ],
    "fork": false,
    "loc": 10795,
    "stars": 0
  },
  {
    "full_name": "nikhithas243/Cardiac-Care-Simplified",
    "name": "Cardiac-Care-Simplified",
    "description": "Cardiac Care-Simplified is an innovative solution designed to bridge the gap in medical communication by simplifying complex medical jargon in real time saving time for doctors and patients. Leveraging the power of GPT-3.5 APIs, this project aims to enhance healthcare accessibility and understanding for diverse populations.",
    "html_url": [
      "https://github.com/nikhithas243/Cardiac-Care-Simplified/blob/f2d662fb7841c35a4db5b7bd519d579424d1ffb3/src/App.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 274792,
    "stars": 0
  },
  {
    "full_name": "adshao/chatgpt-code-review-action",
    "name": "chatgpt-code-review-action",
    "description": "A GitHub Action that uses OpenAI ChatGPT to do code review",
    "html_url": [
      "https://github.com/adshao/chatgpt-code-review-action/blob/1807380a88248730b93252da7a5d9429c78168f4/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 31699,
    "stars": 74
  },
  {
    "full_name": "sysread/page-summarizer",
    "name": "page-summarizer",
    "description": "Browser extension to summarize a page using OpenAI",
    "html_url": [
      "https://github.com/sysread/page-summarizer/blob/749789e77c2d67664918e501273d82a2ea50de4d/src/gpt.js",
      "https://github.com/sysread/page-summarizer/blob/749789e77c2d67664918e501273d82a2ea50de4d/src/pages/config.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1793,
    "stars": 18
  },
  {
    "full_name": "sysread/scratch",
    "name": "scratch",
    "description": "A minimal HTML5 PWA/SPA that implements a dynamic notes space with an OpenAI-powered conversational interface.",
    "html_url": [
      "https://github.com/sysread/scratch/blob/ab467514e671f3fb8fe222861d1eacc45428bfa8/ai.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 588,
    "stars": 0
  },
  {
    "full_name": "JayRichh/chat",
    "name": "chat",
    "description": "Testing OpenAI GPT4 API's",
    "html_url": [
      "https://github.com/JayRichh/chat/blob/f70fb6e1e6162c81921567db66d1b839b13cbf66/client/src/App.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 16229,
    "stars": 0
  },
  {
    "full_name": "snwfdhmp/gpt-chrome-extension",
    "name": "gpt-chrome-extension",
    "description": "Chat with GPT about current webpage content. (Summarize & Ask)",
    "html_url": [
      "https://github.com/snwfdhmp/gpt-chrome-extension/blob/27320fe87a83be5f95a7d972d3ee824a8d28d94a/src/components/hooks/useSummary.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 2681,
    "stars": 2
  },
  {
    "full_name": "DirkSchlossmacher/OpenAI-function_calling",
    "name": "OpenAI-function_calling",
    "description": null,
    "html_url": [
      "https://github.com/DirkSchlossmacher/OpenAI-function_calling/blob/b548551ee0cd2fa4c7eadc01165dde4dcc01bf37/pages/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 325,
    "stars": 0
  },
  {
    "full_name": "RonaldForte/Spotify-Mood-Playlist-Generator",
    "name": "Spotify-Mood-Playlist-Generator",
    "description": "Genify is a [INPROGRESS] collaborative project by Ronald Forte, Kevin Weng, and Jason Weng. User talks about their day and OpenAI API picks the best genres that would fit for your day. OpenAI API passes these genres to the Spotify API that creates a customized playlist.",
    "html_url": [
      "https://github.com/RonaldForte/Spotify-Mood-Playlist-Generator/blob/660d67920d2d686b71c79c28138027814ed84e38/Generatify/src/Home.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 21594,
    "stars": 0
  },
  {
    "full_name": "leylamemiguven/easy-edit",
    "name": "easy-edit",
    "description": "A book editing application that utilizes openAI GPT-3 API to edit your book and give explanations for the edits.  ",
    "html_url": [
      "https://github.com/leylamemiguven/easy-edit/blob/b0a36429211c602315b0a2bc6816e2071b41c1ae/src/Edits.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1345282,
    "stars": 1
  },
  {
    "full_name": "Haiyue-Tian/GPT-Powered-Translator",
    "name": "GPT-Powered-Translator",
    "description": "GPT-Powered Translator is a Chrome extension that leverages the power of GPT language models to provide real-time, context-aware translations for selected text or user-inputted phrases, thereby enhancing browsing experience and breaking down language barriers.",
    "html_url": [
      "https://github.com/Haiyue-Tian/GPT-Powered-Translator/blob/cb0b34a2a52221ab8a12304c9b08b55754c0a06c/js/background.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 352598,
    "stars": 2
  },
  {
    "full_name": "Ihsan-Hepsen/AI-Article-Assistant",
    "name": "AI-Article-Assistant",
    "description": "Browser extension to summarize selected text using GPT-4",
    "html_url": [
      "https://github.com/Ihsan-Hepsen/AI-Article-Assistant/blob/6460439d28624fb5506c1fd119de259b2766956b/service-worker.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 463,
    "stars": 0
  },
  {
    "full_name": "ncctcr/imvu-openai-bot",
    "name": "imvu-openai-bot",
    "description": "IMVU OpenAI Bot is a browser extension designed to interact with the popular IMVU virtual chat service using artificial intelligence from OpenAI. This extension allows users to automate their chat processes using OpenAI's advanced language models such as gpt-3.5-turbo and gpt-4.",
    "html_url": [
      "https://github.com/ncctcr/imvu-openai-bot/blob/4f13c2f9dd905d9648b68591007b8c88862d8806/js/background.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 581,
    "stars": 2
  },
  {
    "full_name": "builde7b0b/PassportGPT",
    "name": "PassportGPT",
    "description": "PassportGPT is an intelligent travel companion designed specifically for men and women seeking to get the best of out their travel experiences and who are interested in exploring global destinations safely and efficiently. It will leverage a unique knowledge base to provide insights on cultural norms, travel tips, visa requirements & More.",
    "html_url": [
      "https://github.com/builde7b0b/PassportGPT/blob/8e1c14c4c07abf1f3212ba235f16c74cf01012e5/App.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 15324,
    "stars": 0
  },
  {
    "full_name": "Leaf48/GPT-Translate",
    "name": "GPT-Translate",
    "description": "Chrome Extension Using ChatGPT",
    "html_url": [
      "https://github.com/Leaf48/GPT-Translate/blob/ba43c5def53ffd9b9f71747b1bd18e7c655155e2/content-script.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 194,
    "stars": 1
  },
  {
    "full_name": "eddykang1074/OpenAI-API-Node-Samples",
    "name": "OpenAI-API-Node-Samples",
    "description": "CHATGPT4o-DALL3-Socket.IO 채팅 교육용 샘플코드입니다.",
    "html_url": [
      "https://github.com/eddykang1074/OpenAI-API-Node-Samples/blob/249139afb372e2bf289892b86869df48d0dfb1b5/socket.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1508,
    "stars": 1
  },
  {
    "full_name": "KiwiGaze/FlowAgenda",
    "name": "FlowAgenda",
    "description": "FlowAgenda: Transform natural language into calendar events effortlessly by large language models. Perfect for individuals who want a faster, more intuitive way to manage their schedules.",
    "html_url": [
      "https://github.com/KiwiGaze/FlowAgenda/blob/74c79eb993f21ebc7c630f3a4aabe654e08dc174/frontend/src/stores/uiPreferencesStore.js",
      "https://github.com/KiwiGaze/FlowAgenda/blob/74c79eb993f21ebc7c630f3a4aabe654e08dc174/backend/preferences/models.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript",
      "python"
    ],
    "fork": false,
    "loc": 10605,
    "stars": 5
  },
  {
    "full_name": "princepspolycap/openai-functions-server",
    "name": "openai-functions-server",
    "description": "A server application that integrates with OpenAI's GPT-4 model to provide chat and function capabilities. It includes endpoints for chat completions, function calls, and text completions.",
    "html_url": [
      "https://github.com/princepspolycap/openai-functions-server/blob/973b83915487581a411bbabdad2d7b04931a5626/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 444,
    "stars": 1
  },
  {
    "full_name": "tombarkley/data-chat",
    "name": "data-chat",
    "description": "Explore and demonstrate the ability of the OpenAI gpt api to create a bot that could both chat with the user and also return data queries back.",
    "html_url": [
      "https://github.com/tombarkley/data-chat/blob/2efef8c1e82c224f6f389af6c03be816b8a8d773/gpt-prompts/history/gpt_node2.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 41762,
    "stars": 1
  },
  {
    "full_name": "wrannaman/rememberall",
    "name": "rememberall",
    "description": "solving long term memory storage for llms",
    "html_url": [
      "https://github.com/wrannaman/rememberall/blob/187c56818b28a8bbf32f2b46fa5e6fc4a0306045/app/src/pages/user/profile.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 17775,
    "stars": 125
  },
  {
    "full_name": "yael-fleischer/FollowApp",
    "name": "FollowApp",
    "description": "FollowApp - a Chrome Extension that automates meeting summaries. Integrates Google Cloud Storage, Google Speech-to-Text, and OpenAI for efficient video call transcription and summarization, enhancing team productivity and communication.",
    "html_url": [
      "https://github.com/yael-fleischer/FollowApp/blob/cac4c5ff9e6c65e822652187d5146dedc91d038c/server.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 270,
    "stars": 0
  },
  {
    "full_name": "IamNaeto/chatgpt-clone",
    "name": "chatgpt-clone",
    "description": "A replicated version of chatGPT",
    "html_url": [
      "https://github.com/IamNaeto/chatgpt-clone/blob/5d1d4b1f226df288c5a26e92e495c03f9fb7a34c/script.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 374,
    "stars": 0
  },
  {
    "full_name": "diginomads/genai-email-search-ext",
    "name": "genai-email-search-ext",
    "description": "OpenAI GPT powered Gmail search extension",
    "html_url": [
      "https://github.com/diginomads/genai-email-search-ext/blob/8522a5cddecbfcdda87c9b776bd10c95fec5dcce/ext/src/inject/content.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 566,
    "stars": 1
  },
  {
    "full_name": "vbmelo/chatbot-challenge",
    "name": "chatbot-challenge",
    "description": "Full-stack (MERN) chatbot integrated with OpenAI.",
    "html_url": [
      "https://github.com/vbmelo/chatbot-challenge/blob/933da4c6efebce291e48906874f36d6fae99800a/chatbot-backend/server.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 76730,
    "stars": 3
  },
  {
    "full_name": "yaminiarumugam/ChatGpt",
    "name": "ChatGpt",
    "description": "Creating my own chatbot using HTML, CSS, and JavaScript, while incorporating the OpenAI API key, has been a valuable experience for me as a beginner web developer. This project has allowed me to apply my skills to a real-world application, providing hands-on experience in web development and AI integration.",
    "html_url": [
      "https://github.com/yaminiarumugam/ChatGpt/blob/5e72eef6b5befa2dc405578c6a2c898535cd973b/script.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 406,
    "stars": 0
  },
  {
    "full_name": "jddev273/streamed-chatgpt-api",
    "name": "streamed-chatgpt-api",
    "description": "A node module for streaming API responses from the ChatGPT APi.",
    "html_url": [
      "https://github.com/jddev273/streamed-chatgpt-api/blob/473f3803b8b0e558b4cebf7c205dc6049fd7b298/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 6783,
    "stars": 31
  },
  {
    "full_name": "weolopez/GPT-WEO",
    "name": "GPT-WEO",
    "description": "Weo's GPT experiments",
    "html_url": [
      "https://github.com/weolopez/GPT-WEO/blob/053d752664dccd1cc1b4b720e839f9696c338f8d/ai/ai/ai.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 42592,
    "stars": 0
  },
  {
    "full_name": "soubhikbarari/llms-surveys-aapor-24",
    "name": "llms-surveys-aapor-24",
    "description": "Supplementary materials for an AAPOR short course on LLMs, NLP, and surveys.",
    "html_url": [
      "https://github.com/soubhikbarari/llms-surveys-aapor-24/blob/5bf26b31e8575003190f8cbd5d3d868750294ca3/surveys/tailored_text.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 454,
    "stars": 6
  },
  {
    "full_name": "rajat-03/Article-Summarizer",
    "name": "Article-Summarizer",
    "description": "The Article Summarizer web application leverages RapidAPI to extract news or article content from URLs, employing GPT for summarization.",
    "html_url": [
      "https://github.com/rajat-03/Article-Summarizer/blob/72bb8ce0cbd674df7a63e0277b59eaa9f1734b60/src/components/Demo2.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 6328,
    "stars": 0
  },
  {
    "full_name": "arnobt78/AI-Chat-Bot-ReactVite-Webpage",
    "name": "AI-Chat-Bot-ReactVite-Webpage",
    "description": "AI-Chat-Bot is a complete project example with OpenAI ChatGPT and React-Vite, using OpenAI API, Emoji-Mart, Uuid, and have a Chat History, New Chat Creation features, and deploy on Vercel.",
    "html_url": [
      "https://github.com/arnobt78/AI-Chat-Bot-ReactVite-Webpage/blob/d5e24f24258a371095bac738782f9e0f1160634e/src/Components/ChatBotApp.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 5050,
    "stars": 2
  },
  {
    "full_name": "zaki-mian/chatGPT-clone",
    "name": "chatGPT-clone",
    "description": "ChatGPT has gained significant popularity in recent months or years, completely changing how we interact with automated chatbots. As a beginner web developer, you might be curious about creating your own ChatGPT. The good news is that it is possible to create a ChatGPT clone using HTML, CSS, and vanilla JavaScript.",
    "html_url": [
      "https://github.com/zaki-mian/chatGPT-clone/blob/7c11d31c5ac01ee0021d310f11be6abe4b3a889d/script.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 381,
    "stars": 0
  },
  {
    "full_name": "Zhangyanbo/ReadAnything",
    "name": "ReadAnything",
    "description": "Read any hard content with the help of GPT",
    "html_url": [
      "https://github.com/Zhangyanbo/ReadAnything/blob/8a8feedaa9025d00d76fe248aa9b448a69f3e2a6/background.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 364,
    "stars": 31
  },
  {
    "full_name": "TomLBZ/koishi-plugin-openai",
    "name": "koishi-plugin-openai",
    "description": "Calls OpenAI API for Koishi.js",
    "html_url": [
      "https://github.com/TomLBZ/koishi-plugin-openai/blob/52464886db4c8abc8f15a108d8b7aad589db3b6e/lib/config.js",
      "https://github.com/TomLBZ/koishi-plugin-openai/blob/52464886db4c8abc8f15a108d8b7aad589db3b6e/lib/ai.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 3092,
    "stars": 50
  },
  {
    "full_name": "chaudhary-99/Idea2marketAI",
    "name": "Idea2marketAI",
    "description": "Idea2Market-AI is a web application that takes product idea input, generates logos, and finds similar products in the market using the OpenAI API. It's built with React.js and leverages the power of artificial intelligence to enhance the product ideation process.",
    "html_url": [
      "https://github.com/chaudhary-99/Idea2marketAI/blob/651156c254596994e90f174ff4513645b06b5ade/src/components/Body.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 18852,
    "stars": 0
  },
  {
    "full_name": "sunflowerhye/llm-frontend",
    "name": "llm-frontend",
    "description": null,
    "html_url": [
      "https://github.com/sunflowerhye/llm-frontend/blob/7d764c4f3f95a31acffa0f6b36df98e5596ecaa9/LLM-Project/project/src/pages/Chatbot.jsx",
      "https://github.com/sunflowerhye/llm-frontend/blob/7d764c4f3f95a31acffa0f6b36df98e5596ecaa9/LLM-Project/project/src/pages/Image.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 22375,
    "stars": 0
  },
  {
    "full_name": "awoyemipatrick/Chatgpt-project-clone-main",
    "name": "Chatgpt-project-clone-main",
    "description": "This is a ChatGPT clone that simulates a chat interface with AI-generated responses. Users can send messages, toggle between light and dark themes, and save their chat history locally. The app fetches AI responses from the OpenAI API using the GPT-4o-mini model. it provides a smooth typing animation and functionality to copy responses.",
    "html_url": [
      "https://github.com/awoyemipatrick/Chatgpt-project-clone-main/blob/13a287678d74eb30578f43fdda04b662e9091fad/script.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 414,
    "stars": 0
  },
  {
    "full_name": "0LuaSky/Script_Forge",
    "name": "Script_Forge",
    "description": "Projeto semestral da matéria programação orientada a objeto, sob orientação do professor Ricardo Pupo Larguesa",
    "html_url": [
      "https://github.com/0LuaSky/Script_Forge/blob/f7f45973b27ec7bda19626caa235a5591129b5d7/V1.0/Script_Forge/build/web/script.js",
      "https://github.com/0LuaSky/Script_Forge/blob/f7f45973b27ec7bda19626caa235a5591129b5d7/V1.0/Script_Forge/web/script.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 2955,
    "stars": 1
  },
  {
    "full_name": "igorcacerez/senai-gpt",
    "name": "senai-gpt",
    "description": "Integração entre a API da OpenAI, treinada com o banco de duvidas do senai. ",
    "html_url": [
      "https://github.com/igorcacerez/senai-gpt/blob/0ee0f3059cb1e324797a775bec42ab4cd09cce54/assets/js/script.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 425,
    "stars": 0
  },
  {
    "full_name": "rajput999/Idea2Market-AI",
    "name": "Idea2Market-AI",
    "description": "Idea2Market-AI is a web application that takes product idea input, generates logos, and finds similar products in the market using the OpenAI API. It's built with React.js and leverages the power of artificial intelligence to enhance the product ideation process.",
    "html_url": [
      "https://github.com/rajput999/Idea2Market-AI/blob/77069e064699db96787bc1e22c245e5866103965/src/components/Body.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 18862,
    "stars": 0
  },
  {
    "full_name": "lucataco/tool-bot",
    "name": "tool-bot",
    "description": "OpenAI app that uses GPT-3 API to make custom GPT3 apps",
    "html_url": [
      "https://github.com/lucataco/tool-bot/blob/6fa59cad5b91380bb4dbc47056b717a163ced20c/src/components/sections/Hero.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 523,
    "stars": 2
  },
  {
    "full_name": "cxumol/LLM-Toolbox-Telegram-Workers",
    "name": "LLM-Toolbox-Telegram-Workers",
    "description": null,
    "html_url": [
      "https://github.com/cxumol/LLM-Toolbox-Telegram-Workers/blob/94f4decc5e593153c5adf399ba6f41b5a2736fc9/src/config/env.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 4159,
    "stars": 0
  },
  {
    "full_name": "Nergal-code/chat-gpt-clone",
    "name": "chat-gpt-clone",
    "description": "project in progress of gpt clone",
    "html_url": [
      "https://github.com/Nergal-code/chat-gpt-clone/blob/db98ba7a0aeb263adbab88876350b2492002dbef/src/script.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 552,
    "stars": 1
  },
  {
    "full_name": "mustafaneto/code-analyzer",
    "name": "code-analyzer",
    "description": "Extension for Visual Studio Code that allows the analysis of selected code snippets for vulnerabilities using the OpenAI GPT-3.5-turbo model.",
    "html_url": [
      "https://github.com/mustafaneto/code-analyzer/blob/7ec66266266e2ed6b5c0b9f0356707f03e9b1ea4/extension.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 3476,
    "stars": 0
  },
  {
    "full_name": "zarurc/website-summarizer",
    "name": "website-summarizer",
    "description": "Website Summarizer is a minimalist Chrome extension that allows users to summarize web pages or selected text on a web page. This extension leverages OpenAI's GPT-4o-mini model to provide quick and accurate summaries, making it easier to digest large amounts of information.",
    "html_url": [
      "https://github.com/zarurc/website-summarizer/blob/054b9cc8c2cc1c2bb98fe3e0c8a75b2fc9aae320/popup.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 616,
    "stars": 1
  },
  {
    "full_name": "Hormold/shitchat",
    "name": "shitchat",
    "description": "Simple React Native App to Talk with GPT-3 like ChatGPT",
    "html_url": [
      "https://github.com/Hormold/shitchat/blob/c206c5bbc57c05ffad9a804bb219f2ac134328ec/screens/SettingsScreen.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 26539,
    "stars": 2
  },
  {
    "full_name": "eyeoverthink/eph-less-ness",
    "name": "eph-less-ness",
    "description": "this is only because i am using claude, and he forgets. so, it ends up saving new versions with no correlation. ",
    "html_url": [
      "https://github.com/eyeoverthink/eph-less-ness/blob/89f359f8e416706bcabe9fe8fa1f1b1c1cced5a3/frontend/src/services/openaiService.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 5828,
    "stars": 0
  },
  {
    "full_name": "ezzcodeezzlife/llm-plugin-tester",
    "name": "llm-plugin-tester",
    "description": "Test ChatGPT Plugins without waitlist access & use other models like Claude, Alpaca. WIP",
    "html_url": [
      "https://github.com/ezzcodeezzlife/llm-plugin-tester/blob/871c3330c5802be86499ded4562f5dce5199d4db/pages/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 2720,
    "stars": 3
  },
  {
    "full_name": "iskandarreza/loopgpt-js",
    "name": "loopgpt-js",
    "description": "A Javascript implementation of LoopGPT",
    "html_url": [
      "https://github.com/iskandarreza/loopgpt-js/blob/3168ee5a1d29f60fc2bfe735844628ba10aef9ce/src/openAIModel.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 20003,
    "stars": 8
  },
  {
    "full_name": "withSu/Road-To-LLMservice",
    "name": "Road-To-LLMservice",
    "description": "Making LLMchat and managing website. While studying Node.js, React.js, Langchain.js",
    "html_url": [
      "https://github.com/withSu/Road-To-LLMservice/blob/38197c7110fd69daf4e768352862e1333fe1e740/Back-end/Final/final-chat-back-app/routes/openaiAPI.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 403352,
    "stars": 0
  },
  {
    "full_name": "DominikkMaximus/QUIZ_AUTOMATOR",
    "name": "QUIZ_AUTOMATOR",
    "description": "Script with simple Vector DB implementation to solve quizes on specific knowledge using OpenAI API",
    "html_url": [
      "https://github.com/DominikkMaximus/QUIZ_AUTOMATOR/blob/0a6db69ca5c9b184bbce90414fc44d5c525dd829/queryVectorDB.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1931,
    "stars": 1
  },
  {
    "full_name": "Masterbrown/gcse-revision-app",
    "name": "gcse-revision-app",
    "description": "trying to get an openai api to run on a Netlify app",
    "html_url": [
      "https://github.com/Masterbrown/gcse-revision-app/blob/b8f452ab5ea5b8972a6be80dc4b4237be8fa8766/server.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 19565,
    "stars": 0
  },
  {
    "full_name": "fabiconcept/locogpt",
    "name": "locogpt",
    "description": "A lightweight AI Assistant powered by OpenAI's GPT Turbo 3.5 APIs for effortless integration and intelligent conversational responses.",
    "html_url": [
      "https://github.com/fabiconcept/locogpt/blob/866cc13e348cf0e9f532da0f1250f0389f63c513/src/Pages/ChatPage.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 18498,
    "stars": 1
  },
  {
    "full_name": "DemGrg/Chrome_GPT_extension",
    "name": "Chrome_GPT_extension",
    "description": "OpenAI GPT-4o / 3.5 extension to talk with OpenAI GPT about web page you are looking at. Useful to summarize long page context or extract information.",
    "html_url": [
      "https://github.com/DemGrg/Chrome_GPT_extension/blob/815b7de1b5122d9ed89a8b4e9f0aa371b52afebe/src/popup.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "martinkimu/GPT-Clone",
    "name": "GPT-Clone",
    "description": null,
    "html_url": [
      "https://github.com/martinkimu/GPT-Clone/blob/3748b49e2c463d8f3fd8354fe66c733fde4da38f/main.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 402,
    "stars": 0
  },
  {
    "full_name": "imtanusingh/proBot",
    "name": "proBot",
    "description": "A web-based chatbot application that allows users to communicate with an AI model using natural language. Built with a responsive frontend and integrated with OpenAI's API for intelligent responses, the chatbot provides a user-friendly experience for various interactions, from casual questions to information retrieval.",
    "html_url": [
      "https://github.com/imtanusingh/proBot/blob/df8960fde603ab074f8f76c7114ee436641cddd0/script.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 307,
    "stars": 0
  },
  {
    "full_name": "lim-siwoo/LogSummarizer",
    "name": "LogSummarizer",
    "description": "Store logs in Firebase and management logs and Summaize logs by ChatGPT",
    "html_url": [
      "https://github.com/lim-siwoo/LogSummarizer/blob/90e8b2e11b70a10a6cb30fc59e2a970480dd9654/save_data.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 317,
    "stars": 0
  },
  {
    "full_name": "tsuchidarikuto/chatgpt-followup-extension",
    "name": "chatgpt-followup-extension",
    "description": "chatgptに追加の質問をするための拡張機能です",
    "html_url": [
      "https://github.com/tsuchidarikuto/chatgpt-followup-extension/blob/85e2f81e9d2f249946a69a0af399dcb8d65a0e69/scripts/background.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "noTe-Z/LLM_Based_Prioritized_Email_Selector",
    "name": "LLM_Based_Prioritized_Email_Selector",
    "description": null,
    "html_url": [
      "https://github.com/noTe-Z/LLM_Based_Prioritized_Email_Selector/blob/60a8f34781c97fe68a92f1a7bcad244e49d49326/test.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 395,
    "stars": 0
  },
  {
    "full_name": "IshaanChamoli/ReverbAI-No-RAG",
    "name": "ReverbAI-No-RAG",
    "description": "A basic version of ReVerb (the Content Writing tool)",
    "html_url": [
      "https://github.com/IshaanChamoli/ReverbAI-No-RAG/blob/a97d968001f32f5f9ff67d3301ac759a1c5990d0/src/App.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 18938,
    "stars": 0
  },
  {
    "full_name": "tlongle/aidea",
    "name": "aidea",
    "description": "A user-interface for OpenAI's 3.5 turbo model and Stable Diffusion",
    "html_url": [
      "https://github.com/tlongle/aidea/blob/cca19a661e5e48acff39c92a4139bc9e0850d9fa/src/Chat.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 19783,
    "stars": 0
  },
  {
    "full_name": "nanikasi/openai-realtime-api-sample",
    "name": "openai-realtime-api-sample",
    "description": null,
    "html_url": [
      "https://github.com/nanikasi/openai-realtime-api-sample/blob/ff9ac580814235f627cc63c252aa67707040b600/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1497,
    "stars": 0
  },
  {
    "full_name": "ck9sky/ai9sky",
    "name": "ai9sky",
    "description": "Django project to test various OpenAI.com API options for ChatGPT and DALLE",
    "html_url": [
      "https://github.com/ck9sky/ai9sky/blob/3b67a95c6f037bb2cfa264e032c0c43463a4a9ef/chatgpt_api_js/static/chatgpt_api_js/js/chatgpt_api_js.js",
      "https://github.com/ck9sky/ai9sky/blob/3b67a95c6f037bb2cfa264e032c0c43463a4a9ef/dalle_api_js/static/dalle_api_js/js/dalle_api_js.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1953,
    "stars": 0
  },
  {
    "full_name": "Yvv1214/AiChatBot",
    "name": "AiChatBot",
    "description": "An AI chat bot that utilizes model gpt-3.5-turbo as your assistant",
    "html_url": [
      "https://github.com/Yvv1214/AiChatBot/blob/1404d2f72b489b36ef623fbc052e9b52683b3a56/Backend/functions/test.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 334355,
    "stars": 1
  },
  {
    "full_name": "KyleMit/gpt-cli",
    "name": "gpt-cli",
    "description": "CLI chatbot using openai API",
    "html_url": [
      "https://github.com/KyleMit/gpt-cli/blob/770aadf692493a6cf311fe3389dec57c64848ed6/cli.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 6537,
    "stars": 3
  },
  {
    "full_name": "abhaybabbar/CodeDocsGPT",
    "name": "CodeDocsGPT",
    "description": "CodeDocsGPT is a Visual Studio Code extension that generates code documentation for you with the help of OpenAI's powerful GPT language model. Say goodbye to spending hours writing documentation for your code - simply enter your OpenAI API key once and let GPT do the heavy lifting!",
    "html_url": [
      "https://github.com/abhaybabbar/CodeDocsGPT/blob/978adef1d90189deb4debdc00200c47b1378c056/extension.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 4080,
    "stars": 3
  },
  {
    "full_name": "whereube/quizgpt",
    "name": "quizgpt",
    "description": "This is an application that uses OpenAI API to generate quizzes based on a theme provided by the user. ",
    "html_url": [
      "https://github.com/whereube/quizgpt/blob/80b92cad936dc4b5c2566ffd5cdbf9ebb43c7af9/src/App.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 18286,
    "stars": 0
  },
  {
    "full_name": "matthewhutchings/speech-assistant-openai-realtime-api-node-main",
    "name": "speech-assistant-openai-realtime-api-node-main",
    "description": null,
    "html_url": [
      "https://github.com/matthewhutchings/speech-assistant-openai-realtime-api-node-main/blob/e690fbc6e71988938b2aea62176a0366ba8e8dc6/utils/websocket-helpers.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 670,
    "stars": 0
  },
  {
    "full_name": "SphaeroX/kalotrack",
    "name": "kalotrack",
    "description": "Calorie counter using ChatGPT from OpenAI",
    "html_url": [
      "https://github.com/SphaeroX/kalotrack/blob/673841093543541e36284183d17fecef0494855d/server/routes/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 7179,
    "stars": 0
  },
  {
    "full_name": "tejatummuru/ai.ta",
    "name": "ai.ta",
    "description": "app that uses on OPENAI API and is trained on internet posts (reddit, and other platforms) to determine whether a person would be considered wrong for certain actions",
    "html_url": [
      "https://github.com/tejatummuru/ai.ta/blob/85270c4169ecacbeb3a30d822d36e1eabbec800f/openai-text-analysis/server.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 38876,
    "stars": 0
  },
  {
    "full_name": "Ai-Yolo/OpenAI-APIKey-Query",
    "name": "OpenAI-APIKey-Query",
    "description": "基于Cloudflare Workers自部署查询OpenAI-API-Key密钥使用详情查询网站",
    "html_url": [
      "https://github.com/Ai-Yolo/OpenAI-APIKey-Query/blob/8fc2666867579648e1a010f905eb8006b27d31af/worker.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 206,
    "stars": 80
  },
  {
    "full_name": "jonaslsaa/openwraiter",
    "name": "openwraiter",
    "description": "Autocompletion on the web using GPT3 (OpenAI API)",
    "html_url": [
      "https://github.com/jonaslsaa/openwraiter/blob/e26cbfcd9bd69401af50036fb679e7535981d4bd/autocomplete.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 402,
    "stars": 1
  },
  {
    "full_name": "milanjain2208/ChatGPT-History-Search",
    "name": "ChatGPT-History-Search",
    "description": " ChatGPT History Search Extension",
    "html_url": [
      "https://github.com/milanjain2208/ChatGPT-History-Search/blob/6a02ffccefc9df5a9dba354901779e0d1f255d0a/popup.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 540,
    "stars": 0
  },
  {
    "full_name": "CabbageSlices/chat-gpt-translator-extension",
    "name": "chat-gpt-translator-extension",
    "description": "chrome extension to use chat gpt translator to translate text on screen to english",
    "html_url": [
      "https://github.com/CabbageSlices/chat-gpt-translator-extension/blob/17ad2266128981b28185327b08679600af6d4c70/content.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 347,
    "stars": 1
  },
  {
    "full_name": "muhammed-shihebi/chatgpt-youtube-ads-detector",
    "name": "chatgpt-youtube-ads-detector",
    "description": "A chrome extension powered by OpenAI GPT that detects what part of a YouTube video contains a promotion ad and allows the user to skip them.",
    "html_url": [
      "https://github.com/muhammed-shihebi/chatgpt-youtube-ads-detector/blob/37c4994ef4abcb60f27b375be9dadf865a5d940d/src/background.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 12353,
    "stars": 2
  },
  {
    "full_name": "Amey1703/pdfvectorsearch",
    "name": "pdfvectorsearch",
    "description": "Extracting data from pdf, creating chunks of document and embedding , vector search and answer generation",
    "html_url": [
      "https://github.com/Amey1703/pdfvectorsearch/blob/1cce0786a226d5a2ec5402379d0fd493a81c1a46/website.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 4679,
    "stars": 0
  },
  {
    "full_name": "snekkenull/FO-Translator",
    "name": "FO-Translator",
    "description": "A simple LLM translator extension inspired by Translation-Agent, using OpenAI compatible API.",
    "html_url": [
      "https://github.com/snekkenull/FO-Translator/blob/6b613b00c971fcb6a9f0f479d5b7d839cf51b1b8/src/settings.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 647,
    "stars": 4
  },
  {
    "full_name": "ViswanathaSwamy-PK-TechSkillz-Academy/chatgpt-clone-tp-js",
    "name": "chatgpt-clone-tp-js",
    "description": "I am learning creating ChatGPT Clone from different Video Courses, Books, and Websites",
    "html_url": [
      "https://github.com/ViswanathaSwamy-PK-TechSkillz-Academy/chatgpt-clone-tp-js/blob/056cb442dfb7670e32585007eef33646823f5d15/src/pages/api/chat/sendMessage.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 7532,
    "stars": 0
  },
  {
    "full_name": "dldksco/algopat",
    "name": "algopat",
    "description": "ChatGPT & LangChain을 활용한 알고리즘 소스코드 효율성 분석 서비스",
    "html_url": [
      "https://github.com/dldksco/algopat/blob/6c6eefb537f1aaf7f8b4f6e25a8147bcaa3420e4/extension/scripts/baekjoon/baekjoon.js",
      "https://github.com/dldksco/algopat/blob/6c6eefb537f1aaf7f8b4f6e25a8147bcaa3420e4/extension/popup.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 22782,
    "stars": 3
  },
  {
    "full_name": "hamzafarooq009/dragoZ",
    "name": "dragoZ",
    "description": null,
    "html_url": [
      "https://github.com/hamzafarooq009/dragoZ/blob/d33b6f00084947103b386218778563b02138b869/my-app/app/components/CreateCharacterModal.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 7072,
    "stars": 0
  },
  {
    "full_name": "ARIBFIB/Chatbot04-ChatGPT-2022-Clone",
    "name": "Chatbot04-ChatGPT-2022-Clone",
    "description": "ChatGPT clone of 2022 version",
    "html_url": [
      "https://github.com/ARIBFIB/Chatbot04-ChatGPT-2022-Clone/blob/ef9ab4464b81990c9df18030609c2c0b8d094f5d/backend/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 94189,
    "stars": 0
  },
  {
    "full_name": "AZHenley/Mirror",
    "name": "Mirror",
    "description": "An LLM-powered programming-by-example programming language.",
    "html_url": [
      "https://github.com/AZHenley/Mirror/blob/f8f694d06d113d1629efe73224fa6ed4895832db/mirror.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 443,
    "stars": 200
  },
  {
    "full_name": "MiSaengg/2800-202310BBY19",
    "name": "2800-202310BBY19",
    "description": " A community platform that connects writers and readers, enabling the creation of unique stories with the help of the OpenAI API.  🤖 ",
    "html_url": [
      "https://github.com/MiSaengg/2800-202310BBY19/blob/59f8ee935f0f699f58e1d611ac38295dc59e3cf2/app/(site)/createMainThread/page.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 6036,
    "stars": 4
  },
  {
    "full_name": "alanhe421/whisper-web",
    "name": "whisper-web",
    "description": "openai whisper api interface",
    "html_url": [
      "https://github.com/alanhe421/whisper-web/blob/3548da2e364d261589a4acdd0331a6ac1f27dacf/src/components/Upload.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 16942,
    "stars": 0
  },
  {
    "full_name": "WilliamRandol/LLMPersonalProofreader",
    "name": "LLMPersonalProofreader",
    "description": "LLM Personal Proofreader is a web application that allows you to type or paste in your content and get corrected copy back.",
    "html_url": [
      "https://github.com/WilliamRandol/LLMPersonalProofreader/blob/65e7d0c9aafd7e0c787a125e339ac34b554732d1/src/js/script.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 591,
    "stars": 1
  },
  {
    "full_name": "ellonde/lazy-reader",
    "name": "lazy-reader",
    "description": "Chrome extension that will read content on the web for you using TTS from openAI.",
    "html_url": [
      "https://github.com/ellonde/lazy-reader/blob/ef228dc24af44a68a3c12c937513f27be1996cf2/src/background.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1884,
    "stars": 0
  },
  {
    "full_name": "o00Jason00o/ChatGPT-Web-Extension",
    "name": "ChatGPT-Web-Extension",
    "description": "Harness the capability of ChatGPT directly within your browser! Select webpage text, send prompts to ChatGPT, and view results without ever leaving your page. Whether it's translations, summaries, or quick queries, interact with ChatGPT seamlessly.",
    "html_url": [
      "https://github.com/o00Jason00o/ChatGPT-Web-Extension/blob/7251c08ee9d2e837d8df407190103f96d7a961cd/extension/background.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 342,
    "stars": 0
  },
  {
    "full_name": "Ayumu-O/gpt-app",
    "name": "gpt-app",
    "description": null,
    "html_url": [
      "https://github.com/Ayumu-O/gpt-app/blob/e9f14863d68c447eac3f7359354e6f39bf895ea3/chatgpt-popup/popup/popup.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 451,
    "stars": 0
  },
  {
    "full_name": "ashokgit/OnlineExamWithGPT-4",
    "name": "OnlineExamWithGPT-4",
    "description": "A chrome extension to crack online exams, download,  add your API keys, add the extension, Ctrl + U",
    "html_url": [
      "https://github.com/ashokgit/OnlineExamWithGPT-4/blob/8863da708b780bb02eb188a055cecdd910bda639/popup.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 346,
    "stars": 2
  },
  {
    "full_name": "DuGuYifei/vscode_chatgpt-note-helper",
    "name": "vscode_chatgpt-note-helper",
    "description": "The vscode plugin which use chatgpt to help me make notes, finish text assignment, chat with GPT-3.5, code.",
    "html_url": [
      "https://github.com/DuGuYifei/vscode_chatgpt-note-helper/blob/d500bf86372491109c4f64c8df2556c015499dc1/extension.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 4034,
    "stars": 0
  },
  {
    "full_name": "ta223dh/TextBuddy",
    "name": "TextBuddy",
    "description": "TextBuddy is a JavaScript module for text analysis. TextBuddy can assist you with a wide range of tasks - from simple character and word count to chatbot integration with OpenAi's API.",
    "html_url": [
      "https://github.com/ta223dh/TextBuddy/blob/82b757bc66114219ef35f37b5408fed7080023f9/src/TextBuddy/textbuddy.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 5395,
    "stars": 1
  },
  {
    "full_name": "client-studio/wp-editor-ai",
    "name": "wp-editor-ai",
    "description": "Add OpenAI to Wordpress Classic Editor",
    "html_url": [
      "https://github.com/client-studio/wp-editor-ai/blob/53895149c05c0321b8d92d1747ba24d96a336e67/js/tinymce-plugin.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 369,
    "stars": 0
  },
  {
    "full_name": "scalable-dynamics/gpt-spa",
    "name": "gpt-spa",
    "description": "A customizable GPT in a single page, using OpenAI models text-embedding-ada-002, tts-1, whisper-1, dall-e-3, and gpt-4-vision-preview",
    "html_url": [
      "https://github.com/scalable-dynamics/gpt-spa/blob/8d93c9d7e39966d527609f520ce2ea49a577cb64/js/openai.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1807,
    "stars": 14
  },
  {
    "full_name": "smlabto/factcheckassistant",
    "name": "factcheckassistant",
    "description": "The Social Media Lab's Fact Check Assistant is an AI-powered bot for simple fact checking. It was created as demo for the Social Media Lab’s 2023 Canadian #AI Misinformation Hackathon. The app uses OpenAI API capabilities for simple fact checking. ",
    "html_url": [
      "https://github.com/smlabto/factcheckassistant/blob/d349484dc173bf97925631e3bc2e6ab78d10d349/src/components/Chat.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 47480,
    "stars": 13
  },
  {
    "full_name": "albert3661/Musikalody_APP",
    "name": "Musikalody_APP",
    "description": "Musikalody APP is a versatile music trivia quiz designed to function both online and offline. Leveraging the OpenAI API, it offers dynamically generated quiz questions when connected to the internet and switches to a robust set of static questions when offline. ",
    "html_url": [
      "https://github.com/albert3661/Musikalody_APP/blob/3a94001d369b64b6c5c9966e8055f6a99d1cd9e0/script.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 393,
    "stars": 0
  },
  {
    "full_name": "downthecrop/tiny-native-chat",
    "name": "tiny-native-chat",
    "description": "Ultra minimal react native interface for communicating with LLM Chats",
    "html_url": [
      "https://github.com/downthecrop/tiny-native-chat/blob/f7a591bdba5a4bec160ec484e4a844fceea83c32/ChatUI.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 24403,
    "stars": 0
  },
  {
    "full_name": "vbookshelf/LLM-Vision-Experiments",
    "name": "LLM-Vision-Experiments",
    "description": "My experiments with LLM vision",
    "html_url": [
      "https://github.com/vbookshelf/LLM-Vision-Experiments/blob/17cdcad021a511012d288665ce8752728867a60c/Exp2%20-%20Simple%20chatgpt%20vision%20js%20web%20app/chatgpt-config.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1992,
    "stars": 0
  },
  {
    "full_name": "hamzanasir/vonage-openai-demo",
    "name": "vonage-openai-demo",
    "description": null,
    "html_url": [
      "https://github.com/hamzanasir/vonage-openai-demo/blob/8179dd64b3b9439dd58a31e10f44b56299642808/public/js/app.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 7744,
    "stars": 0
  },
  {
    "full_name": "dbochicchio/reactor-openai",
    "name": "reactor-openai",
    "description": "OpenAI Controller per Reactor",
    "html_url": [
      "https://github.com/dbochicchio/reactor-openai/blob/a09a0e7edd907e3f111f5264f62a7aa14275b771/OpenAIController.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 386,
    "stars": 0
  },
  {
    "full_name": "matheusrodrivi/Projeto-Pontos-Turisticos-CHATGPT-API",
    "name": "Projeto-Pontos-Turisticos-CHATGPT-API",
    "description": "Projeto javascript integrado com chatgpt.",
    "html_url": [
      "https://github.com/matheusrodrivi/Projeto-Pontos-Turisticos-CHATGPT-API/blob/f92cf9d01c11b5d1efe1d90f728691417d582443/script.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 394,
    "stars": 1
  },
  {
    "full_name": "usamasaleem1/SOEN321",
    "name": "SOEN321",
    "description": "Chrome Extension with LLMs",
    "html_url": [
      "https://github.com/usamasaleem1/SOEN321/blob/5ad76d162b140f802f089386f64fc17794309abe/extension/popup.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 502,
    "stars": 1
  },
  {
    "full_name": "pfe-holbies/The_Gym_Genie",
    "name": "The_Gym_Genie",
    "description": "MERN + GraphQL Prompt Engineering Web App consumes OpenAI API ",
    "html_url": [
      "https://github.com/pfe-holbies/The_Gym_Genie/blob/ae47ebca231d3cae95bfba421b98338cf2b6981a/server/graphql/mutations.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 11130,
    "stars": 2
  },
  {
    "full_name": "0xAsten/summarize-it",
    "name": "summarize-it",
    "description": "Summarize is a powerful and easy-to-use Chrome extension that lets you quickly obtain a summary of content. Powered by advanced natural language processing technology, Summarize uses GPT-3 API to generate accurate and concise summaries of the most important information, so you can get the gist of it in seconds. ",
    "html_url": [
      "https://github.com/0xAsten/summarize-it/blob/4499ab52f5600861c0635b7ae5caaa8b3020f94c/popup.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 531,
    "stars": 1
  },
  {
    "full_name": "varunshenoy/GraphGPT",
    "name": "GraphGPT",
    "description": "Extrapolating knowledge graphs from unstructured text using GPT-3 🕵️‍♂️",
    "html_url": [
      "https://github.com/varunshenoy/GraphGPT/blob/dcea106fcba18776f065216712ab931d783dd038/src/App.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 29966,
    "stars": 4395
  },
  {
    "full_name": "fingerthief/minimal-chat",
    "name": "minimal-chat",
    "description": "MinimalChat is a lightweight, open-source chat application that allows you to interact with various large language models.",
    "html_url": [
      "https://github.com/fingerthief/minimal-chat/blob/5c73bad35588254e5a638fb9e63453fd35548c1f/src/libs/api-access/gpt-api-access.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 35739,
    "stars": 216
  },
  {
    "full_name": "netresearch/ckeditor-cowriter",
    "name": "ckeditor-cowriter",
    "description": "This plugin generates content with the help of artificial intelligence. It is based on the CKEditor 4. It uses the OpenAI API to generate text.",
    "html_url": [
      "https://github.com/netresearch/ckeditor-cowriter/blob/082a91dd4915d504ed04376db7ddd193f85144c3/src/plugin.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1101,
    "stars": 12
  },
  {
    "full_name": "TheMorpheus407/OpenAI-Audiobook-Generator",
    "name": "OpenAI-Audiobook-Generator",
    "description": "This project is a web-based application that converts text into audio, primarily focusing on creating audiobooks. ",
    "html_url": [
      "https://github.com/TheMorpheus407/OpenAI-Audiobook-Generator/blob/638a3b9a8bfc31567754a15ab8c5e19c1bc118b7/main.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 347,
    "stars": 78
  },
  {
    "full_name": "Cre8steveDev/Healthor",
    "name": "Healthor",
    "description": "Healthor - An AI-Powered Web-Based Medical Diagnosis and Consultancy Project. Leveraging, OpenAI and Google Maps API.",
    "html_url": [
      "https://github.com/Cre8steveDev/Healthor/blob/1dce8faa9df47b18cee38e7752cc1c7f6644bf34/src/components/Diagnosis.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 6186,
    "stars": 1
  },
  {
    "full_name": "chuckzee/dungeonmAIster",
    "name": "dungeonmAIster",
    "description": "A GPT node/express app using prompt engineering and system instructions to facilitate a dungeon crawl",
    "html_url": [
      "https://github.com/chuckzee/dungeonmAIster/blob/1255e1ca23bc9ad4c53b5b78b658eddc7f5c3e83/services/openai.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 570,
    "stars": 0
  },
  {
    "full_name": "kalmix/GPT-React",
    "name": "GPT-React",
    "description": null,
    "html_url": [
      "https://github.com/kalmix/GPT-React/blob/8d54a7d0ee5c14c977956d9dd7c337d046fa8f2b/src/components/GPTEssayIndex.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 21590,
    "stars": 0
  },
  {
    "full_name": "DevAro178/Mistral_web_ui",
    "name": "Mistral_web_ui",
    "description": null,
    "html_url": [
      "https://github.com/DevAro178/Mistral_web_ui/blob/5ac7fda0f47167350a4f22fdcc80624e80f9371d/script.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 457,
    "stars": 0
  },
  {
    "full_name": "paideia1200bce/sbhacks-ResumAI",
    "name": "sbhacks-ResumAI",
    "description": "smart resume feedback using OpenAI's GPT.",
    "html_url": [
      "https://github.com/paideia1200bce/sbhacks-ResumAI/blob/ef8b794900fdc43b75e1a92ae7c7a388f720194d/API/api/upload.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 49493,
    "stars": 1
  },
  {
    "full_name": "JangSE123/Intelligent-Web",
    "name": "Intelligent-Web",
    "description": "We create an intelligent web that recommends a coding study timetable using LLM and manages Git.",
    "html_url": [
      "https://github.com/JangSE123/Intelligent-Web/blob/e8ae2ba667c8c522f44860334596a635591913ba/src/mobile/MakePlan.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 25497,
    "stars": 0
  },
  {
    "full_name": "eross220/Telegrambot_ChatGPT",
    "name": "Telegrambot_ChatGPT",
    "description": "This is the telegram bot using GPT-3 model",
    "html_url": [
      "https://github.com/eross220/Telegrambot_ChatGPT/blob/682d823f109fbb732e54330beef261c9224ab3b6/src/ChatGPTClient.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 3195,
    "stars": 1
  },
  {
    "full_name": "IvanCampos/OpenAI-API",
    "name": "OpenAI-API",
    "description": "OpenAI API JavaScript Jumpstart provides an introduction to using the OpenAI API with JavaScript. It includes instructions for setting up an API key, making requests to the API, and working with the API's response data in JavaScript. The goal of the jumpstart is to help developers quickly get started using the OpenAI API in their JavaScript project",
    "html_url": [
      "https://github.com/IvanCampos/OpenAI-API/blob/18e7394923f86f78aa3d1b824ec2115acd60face/chatgpt/chatgpt-api.js",
      "https://github.com/IvanCampos/OpenAI-API/blob/18e7394923f86f78aa3d1b824ec2115acd60face/gpt4/gpt4-api.js",
      "https://github.com/IvanCampos/OpenAI-API/blob/18e7394923f86f78aa3d1b824ec2115acd60face/jumpstart/openai-api.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1588,
    "stars": 12
  },
  {
    "full_name": "DeepakSaini2331997/openai-realtime-voice-assistant",
    "name": "openai-realtime-voice-assistant",
    "description": null,
    "html_url": [
      "https://github.com/DeepakSaini2331997/openai-realtime-voice-assistant/blob/d044ddb8d94bd077b03d2659dfcf5a4cf31bd91c/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 808,
    "stars": 0
  },
  {
    "full_name": "easychen/openai-api-proxy",
    "name": "openai-api-proxy",
    "description": "一行Docker命令部署的 OpenAI/GPT API代理，支持SSE流式返回、腾讯云函数 。Simple proxy for OpenAi api via a one-line docker command",
    "html_url": [
      "https://github.com/easychen/openai-api-proxy/blob/a3dbe8de07aede5d0f6381fca60524276d55201f/docker/app.js",
      "https://github.com/easychen/openai-api-proxy/blob/a3dbe8de07aede5d0f6381fca60524276d55201f/app.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 686,
    "stars": 1616
  },
  {
    "full_name": "juliendorra/esquisse",
    "name": "esquisse",
    "description": "Quick prototyping tool to create AI workflows one level or two above prompt engineering",
    "html_url": [
      "https://github.com/juliendorra/esquisse/blob/e091f091e0f2f0b6cc71ea4bd4abfa98c21ae536/lib/gpt.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "Rosbifbr/ask",
    "name": "ask",
    "description": "Simple, lightweight terminal LLM app.",
    "html_url": [
      "https://github.com/Rosbifbr/ask/blob/8055ae8c0f2f43728a5c8ccae4dd1451dadbac98/ask.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 265,
    "stars": 2
  },
  {
    "full_name": "jeyabbalas/medical-report-information-extractor",
    "name": "medical-report-information-extractor",
    "description": "An application that leverages large language models to extract structured information from any type of text reports.",
    "html_url": [
      "https://github.com/jeyabbalas/medical-report-information-extractor/blob/06004d65982c90bc5722be6de4faf463434eda97/gui.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 4530,
    "stars": 1
  },
  {
    "full_name": "thomaspernet/MemChatGPT-Extension",
    "name": "MemChatGPT-Extension",
    "description": "a Chrome extension designed to streamline your workflow by leveraging the power of OpenAI's ChatGPT and Mem AI",
    "html_url": [
      "https://github.com/thomaspernet/MemChatGPT-Extension/blob/7976948ac148a66675445183af40b19cef7726b1/chrome_extension/content.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1272,
    "stars": 8
  },
  {
    "full_name": "Daniel-1-2-3/AI-Tour-Guide",
    "name": "AI-Tour-Guide",
    "description": "App that gives detailed descriptions of tourist destinations, especailly ones in Yellowstone National Park, utilizing image recognition GPT-4o ",
    "html_url": [
      "https://github.com/Daniel-1-2-3/AI-Tour-Guide/blob/fe604cc25888ecc07034cbf07b48ba6347f86cde/src/pages/InformationPg.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 7673,
    "stars": 0
  },
  {
    "full_name": "MoritzLaurer/GPT-google-sheets",
    "name": "GPT-google-sheets",
    "description": "Code and documentation for running generative LLMs like ChatGPT or GPT4 in google sheets without any coding knowledge. Transform unstructured text to structured data.",
    "html_url": [
      "https://github.com/MoritzLaurer/GPT-google-sheets/blob/264aa6a7c9a9ea1f44ca7d54e38a355d01de8701/GPT.gs"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 27,
    "stars": 134
  },
  {
    "full_name": "gourao/llm",
    "name": "llm",
    "description": "llm experiments",
    "html_url": [
      "https://github.com/gourao/llm/blob/b8308865101470511609d390db6e5a52c74567eb/app.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 395807,
    "stars": 0
  },
  {
    "full_name": "tieuandpepper/smart-autofill-form",
    "name": "smart-autofill-form",
    "description": "Chrome extension to autofill forms using LLMs",
    "html_url": [
      "https://github.com/tieuandpepper/smart-autofill-form/blob/5acddbb9525237273c989cb73954de32f4910a34/popup.js",
      "https://github.com/tieuandpepper/smart-autofill-form/blob/5acddbb9525237273c989cb73954de32f4910a34/content.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "elfvingralf/claude-data-fetcher",
    "name": "claude-data-fetcher",
    "description": "A Chrome plugin that makes it easier to augment Claude AI conversation with information from the Internet",
    "html_url": [
      "https://github.com/elfvingralf/claude-data-fetcher/blob/fcba81211527778dc1bf39e10201106e96bc3adc/background.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1008,
    "stars": 17
  },
  {
    "full_name": "Chinmay-Deo-2004/GPT-app",
    "name": "GPT-app",
    "description": "ChinGPT, as I like to call it, is a web application powered by OpenAI's GPT-3.5-Turbo. I wanted to design an application that multiple users can use, using their phone numbers to register, using OTP verification to verify the users, who can then ask the AI-assistant their questions. It can be asked via both text and voice.",
    "html_url": [
      "https://github.com/Chinmay-Deo-2004/GPT-app/blob/0e0182dfb19af698f8a7bd703da4933066b6d341/script.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 436549,
    "stars": 1
  },
  {
    "full_name": "Justmalhar/open-audio",
    "name": "open-audio",
    "description": "Open-Audio TTS: A robust web app leveraging OpenAI's powerful Text-to-Speech (TTS) models to generate natural-sounding audio from text. Built with modern web technologies for an intuitive user experience, including customizable voice and speech speed settings, and the ability to download audio files directly.",
    "html_url": [
      "https://github.com/Justmalhar/open-audio/blob/6d7b3ac9a0fefb57949c50cf461c352a0860c5cd/src/pages/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 6976,
    "stars": 86
  },
  {
    "full_name": "mrtrizer/VSCRewriteExtension",
    "name": "VSCRewriteExtension",
    "description": "An extension to rewrite blocks of text and continue text for refactoring and documentation writing with local LLM",
    "html_url": [
      "https://github.com/mrtrizer/VSCRewriteExtension/blob/32c4e161aa45fe7fa29268b2d12e95aa814a6ab2/extension.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 3441,
    "stars": 0
  },
  {
    "full_name": "hichipli/PromptOptimizer",
    "name": "PromptOptimizer",
    "description": "Generate high-quality Prompts for LLMs with simple natural language descriptions.",
    "html_url": [
      "https://github.com/hichipli/PromptOptimizer/blob/5960e1228af83f3810d6b1afe6acb66e7d89082c/script.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 905,
    "stars": 0
  },
  {
    "full_name": "mingxiangzhangmark/AI_GPTPRO",
    "name": "AI_GPTPRO",
    "description": "This is a AI Chat Web APP developed using GPT-3.5 API + React + Vite, Deployed on Vercel.",
    "html_url": [
      "https://github.com/mingxiangzhangmark/AI_GPTPRO/blob/57239ac35b7a582e3c96cd707d6e331a7c9ec322/src/components/ChatPage.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 5746,
    "stars": 0
  },
  {
    "full_name": "Jakob-al28/LLM_Experimental_Study",
    "name": "LLM_Experimental_Study",
    "description": null,
    "html_url": [
      "https://github.com/Jakob-al28/LLM_Experimental_Study/blob/0cb12a23184ed793bedaf77338459341821e8348/public/js/script_generative.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 3082,
    "stars": 0
  },
  {
    "full_name": "lygitdata/MedLinkAI",
    "name": "MedLinkAI",
    "description": "MedLinkAI+ is a smart pre-diagnostic system powered by Generative AI (LLM-based), aimed at enhancing communication between patients and healthcare providers. By offering personalized symptom interpretation and recommending medical services, it helps streamline diagnostic processes while overcoming language and cultural barriers.",
    "html_url": [
      "https://github.com/lygitdata/MedLinkAI/blob/549a5004c447c86bb25a9c8b96156b5d25cb0a88/assets/js/openai-gpt3.5.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 6287,
    "stars": 0
  },
  {
    "full_name": "silasnevstad/GPT-Extension-VSCode",
    "name": "GPT-Extension-VSCode",
    "description": "An extension bringing OpenAI's API to your fingertips inside of Visual Studio Code",
    "html_url": [
      "https://github.com/silasnevstad/GPT-Extension-VSCode/blob/c07914da2ffc06f3d6de376c70e35a9199cecd52/extension.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 5679,
    "stars": 12
  },
  {
    "full_name": "neethanm/MoviePitch_OpenAI",
    "name": "MoviePitch_OpenAI",
    "description": null,
    "html_url": [
      "https://github.com/neethanm/MoviePitch_OpenAI/blob/0c50a38185a7830de562c3c2f8efe5a61dd7d158/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 20926,
    "stars": 0
  },
  {
    "full_name": "DominicBoettger/gnome-extension-whisper",
    "name": "gnome-extension-whisper",
    "description": "A gnome extension for speech to text with openai whisper",
    "html_url": [
      "https://github.com/DominicBoettger/gnome-extension-whisper/blob/6c5db452466f70b03a7cc06ccad6b333a7e7a3e6/extension.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 380,
    "stars": 0
  },
  {
    "full_name": "echohive42/Real-time-voice-ultra-simple-template-with-function-calling",
    "name": "Real-time-voice-ultra-simple-template-with-function-calling",
    "description": "OpenAI real-time voice Fastapi template with function calling with maximum simplicity. comes with arxiv paper function as an example and full event capture",
    "html_url": [
      "https://github.com/echohive42/Real-time-voice-ultra-simple-template-with-function-calling/blob/5dd289f3ac545eb0273576a61f018031a9ef3f37/static/js/app.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 464,
    "stars": 37
  },
  {
    "full_name": "wassname/rag_search_cite",
    "name": "rag_search_cite",
    "description": "Hackable frontend for LLM assisted searching with citations",
    "html_url": [
      "https://github.com/wassname/rag_search_cite/blob/9208ccf4cab5b90dffc235798fa97d06be2f86a0/src/App.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 6079,
    "stars": 0
  },
  {
    "full_name": "moiguitarrock/twilio-ai-assistant",
    "name": "twilio-ai-assistant",
    "description": "Twilio + openAI realtime assistant ",
    "html_url": [
      "https://github.com/moiguitarrock/twilio-ai-assistant/blob/c7fed801356915037c09765b0db96355c266543a/controller.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1372,
    "stars": 0
  },
  {
    "full_name": "wangyz1999/LiteLoaderQQNT-GPT-Reply",
    "name": "LiteLoaderQQNT-GPT-Reply",
    "description": "在QQNT直接使用ChatGPT发消息 | Use ChatGPT in QQNT",
    "html_url": [
      "https://github.com/wangyz1999/LiteLoaderQQNT-GPT-Reply/blob/bfb27ca9c28645102cfeb88a2d5ce3dfb6d3659d/src/main.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1505,
    "stars": 70
  },
  {
    "full_name": "pankaj-davi/gpt-api-node-poc",
    "name": "gpt-api-node-poc",
    "description": "live URL",
    "html_url": [
      "https://github.com/pankaj-davi/gpt-api-node-poc/blob/49fa7c332fccb4b1f860b8a6fc2c9338bbb00ba3/server.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 24518,
    "stars": 0
  },
  {
    "full_name": "Bhushan1398/speech-assistant-openai-realtime-api-nodeJS",
    "name": "speech-assistant-openai-realtime-api-nodeJS",
    "description": null,
    "html_url": [
      "https://github.com/Bhushan1398/speech-assistant-openai-realtime-api-nodeJS/blob/f8ff4267384ccb54435f45369ec49bedf13ff84e/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 387,
    "stars": 0
  },
  {
    "full_name": "remcobrilstra/static-website-chatgpt",
    "name": "static-website-chatgpt",
    "description": "small plaything i used for test some prompt engineering stuff (warning: html/css/js may cause eyes to bleed)",
    "html_url": [
      "https://github.com/remcobrilstra/static-website-chatgpt/blob/0efd264c573d96e8e84fb5ddd0a13d69a2185bb2/src/logic.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 689,
    "stars": 0
  },
  {
    "full_name": "isaiahxs/ClarityCompanions",
    "name": "ClarityCompanions",
    "description": "Interactive chatbot using three different external APIs. OpenAI's Whisper Speech-to-Text API + OpenAI's GPT 3.5-turbo API + ElevenLabs' Text-to-Speech API with custom AI voice cloned & modified by me.",
    "html_url": [
      "https://github.com/isaiahxs/ClarityCompanions/blob/ae9ed35c57552349cc7927fa69aa4e79749a758c/backend/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 146957,
    "stars": 2
  },
  {
    "full_name": "florian-kalisch/auto-mindmapping",
    "name": "auto-mindmapping",
    "description": "Revolutionize your mind mapping with this repo, combining mermaid and GPT-3.5-turbo / GPT-4! Craft captivating mindmaps for brainstorming and text summarization, unlocking creativity and productivity. Experience this trailblazing solution for the ultimate mind mapping experience today! Don't miss out and elevate your creative thinking skills!",
    "html_url": [
      "https://github.com/florian-kalisch/auto-mindmapping/blob/c3cfba00bfc07a5aade9c39e3cb183e798587e52/src/App.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 788,
    "stars": 62
  },
  {
    "full_name": "AndraxDev/speak-gpt-web",
    "name": "speak-gpt-web",
    "description": "Web version of SpeakGPT created using ReactJS and Google Material Design 3.",
    "html_url": [
      "https://github.com/AndraxDev/speak-gpt-web/blob/5e541a95c451510fbe249336d9af245b365015ae/src/util/Settings.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 48137,
    "stars": 30
  },
  {
    "full_name": "NikosiaPhD/ParrotTaboo",
    "name": "ParrotTaboo",
    "description": "An LLM-powered browser-based game",
    "html_url": [
      "https://github.com/NikosiaPhD/ParrotTaboo/blob/02980cf6f628687c53236e4e5372b9562779356c/script.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 645,
    "stars": 0
  },
  {
    "full_name": "andrewgcodes/ama",
    "name": "ama",
    "description": "Ask Me Anything for any website, powered by Firecrawl and OpenAI GPT-4o-mini",
    "html_url": [
      "https://github.com/andrewgcodes/ama/blob/90cbd4c6e3a96df61a2444126f78215bb405914f/background.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1099,
    "stars": 31
  },
  {
    "full_name": "usselman/MUDbot",
    "name": "MUDbot",
    "description": "GPT-enabled Discord bot for MUD Room server",
    "html_url": [
      "https://github.com/usselman/MUDbot/blob/cec05003827572d12e44f195fae61451368d27b9/commands/event.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 92111,
    "stars": 1
  },
  {
    "full_name": "AlexAuragan/dotfiles",
    "name": "dotfiles",
    "description": "dotfiles organized using stow",
    "html_url": [
      "https://github.com/AlexAuragan/dotfiles/blob/87fe3ab002c96f549db435c1f3f4d25b6caa95ff/ags/.config/ags/services/gpt.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1231053,
    "stars": 0
  },
  {
    "full_name": "iglv/openai-usage",
    "name": "openai-usage",
    "description": "Track individual usage by users in Open AI",
    "html_url": [
      "https://github.com/iglv/openai-usage/blob/bb715cba7e55870c3202b770ff8f3a1d74ff5edd/src/App.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 500,
    "stars": 2
  },
  {
    "full_name": "haixuxu/chatgpt-mirror",
    "name": "chatgpt-mirror",
    "description": "chatgpt-mirror",
    "html_url": [
      "https://github.com/haixuxu/chatgpt-mirror/blob/0fbbac10dacdeb83376ac9049a504aada378ef62/src/services/chatgptapi.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1475,
    "stars": 1
  },
  {
    "full_name": "craftercms/chatgpt-plugin",
    "name": "chatgpt-plugin",
    "description": "OpenAI's ChatGPT plugin for CrafterCMS",
    "html_url": [
      "https://github.com/craftercms/chatgpt-plugin/blob/a3ac734fabaa72589010205310d933b1c8d7f93b/authoring/static-assets/plugins/org/craftercms/openai/components/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 70676,
    "stars": 1
  },
  {
    "full_name": "sanand0/aiproxy",
    "name": "aiproxy",
    "description": "Authorizing proxy for LLMs",
    "html_url": [
      "https://github.com/sanand0/aiproxy/blob/1a6703f3a52dfc3009c8fbf5c103098b47b009ee/worker.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 2992,
    "stars": 16
  },
  {
    "full_name": "brutusB1/snoop-chat",
    "name": "snoop-chat",
    "description": "“A React chat application integrated with OpenAI’s API.”",
    "html_url": [
      "https://github.com/brutusB1/snoop-chat/blob/6f6a3a30fd012f9c3f56bcb647083df335e89d7e/src/components/SnoopChat.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 28387,
    "stars": 0
  },
  {
    "full_name": "EduardR02/AI-Filter",
    "name": "AI-Filter",
    "description": "Filter social media content with LLMs",
    "html_url": [
      "https://github.com/EduardR02/AI-Filter/blob/69eafdcf2d5cf05063f6f3b1a279907c475d1d76/src/js/content.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 709,
    "stars": 0
  },
  {
    "full_name": "DinorexTim/GPT-webUI",
    "name": "GPT-webUI",
    "description": "一个基于OpenAI api的webUI",
    "html_url": [
      "https://github.com/DinorexTim/GPT-webUI/blob/9f7c8a36820786a4246b95a96fc32c03e287794a/server.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "hihumanzone/AI-Discord-Bot-GEMM-X",
    "name": "AI-Discord-Bot-GEMM-X",
    "description": "AI Discord Bot (GEMM-X) is an intelligent assistant for Discord, leveraging AI technologies from multiple providers to generate images, create music, produce speech, and more. It supports custom personality settings and advanced user/server configurations.",
    "html_url": [
      "https://github.com/hihumanzone/AI-Discord-Bot-GEMM-X/blob/f3876844492b02876176f1cfb22f566b3f3e3a01/generators.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 3695,
    "stars": 3
  },
  {
    "full_name": "UltraInstinct0x/SonGokuBot",
    "name": "SonGokuBot",
    "description": "Utilizing dragon powers of web.",
    "html_url": [
      "https://github.com/UltraInstinct0x/SonGokuBot/blob/a41b20b2eae9df6d7c8bd79bce45d68959912c37/src/events/message/messageCreate.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 29129,
    "stars": 2
  },
  {
    "full_name": "nitroz3us/GPThreatIntel-Summarizer",
    "name": "GPThreatIntel-Summarizer",
    "description": "GPThreatIntel-Summarizer is a Python tool that uses OpenAI models and CTI to automate report summarization. Extract key insights from CTI reports, generate concise summaries.",
    "html_url": [
      "https://github.com/nitroz3us/GPThreatIntel-Summarizer/blob/3bdbbac22ff7199352d709f54a75217848a6e540/src/static/main.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1341,
    "stars": 21
  },
  {
    "full_name": "yonder-gg/rpgGPT",
    "name": "rpgGPT",
    "description": "LLM powered text RPG",
    "html_url": [
      "https://github.com/yonder-gg/rpgGPT/blob/4cd9064dbb4f486d23428409911d7d199c4216e7/llm.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 4541,
    "stars": 3
  },
  {
    "full_name": "girmmy/gimmyai",
    "name": "gimmyai",
    "description": "React.js and Vite project that has a chatbot with OpenAI's GPT4 model (although its changable to any other model).",
    "html_url": [
      "https://github.com/girmmy/gimmyai/blob/8cda5812e7ed86057ffe1e20c8ebe0ace506df9f/src/Chat.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 13288,
    "stars": 0
  },
  {
    "full_name": "yudai1204/slack-llm-bot",
    "name": "slack-llm-bot",
    "description": null,
    "html_url": [
      "https://github.com/yudai1204/slack-llm-bot/blob/bb4a0e1b3e9012c0850568db2fa225db53cd0180/chatgpt.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 690,
    "stars": 0
  },
  {
    "full_name": "Varchasva45/cogniscript",
    "name": "cogniscript",
    "description": "CogniScript: An interactive online educational platform that facilitates the hosting, buying, and selling of courses. Features AI-powered quizzes evaluated using OpenAI's string matching technology, catering to both students and educators. Built with the MERN stack for a scalable and efficient learning experience.",
    "html_url": [
      "https://github.com/Varchasva45/cogniscript/blob/bf4fb1ac6acabc4387d35e95f8627652e2f010fd/src/components/core/Dashboard/MyProfile.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 45041,
    "stars": 1
  },
  {
    "full_name": "DEboy2007/GPTTextbook",
    "name": "GPTTextbook",
    "description": "A GPT model specifically trained on a textbook to combine the convenience of tools like ChatGPT with the appropriateness and accuracy of a textbook",
    "html_url": [
      "https://github.com/DEboy2007/GPTTextbook/blob/f6b6bc60c1961dea6ad47586e964176847fe43e6/gpt-textbook-next/app/service/page.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 386076,
    "stars": 0
  },
  {
    "full_name": "rickyokitaUK/gurugpt",
    "name": "gurugpt",
    "description": "Whatsapp chatbot using OpenaI api",
    "html_url": [
      "https://github.com/rickyokitaUK/gurugpt/blob/2cc20fb5b98be2d638b051fc17a8d96022005f37/app.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 3712,
    "stars": 0
  },
  {
    "full_name": "AadarshDubey/llm-ui",
    "name": "llm-ui",
    "description": null,
    "html_url": [
      "https://github.com/AadarshDubey/llm-ui/blob/807cc1a59b17455f2dbb8e716a45884c1c252efe/src/WorkflowBuilder.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 7092,
    "stars": 0
  },
  {
    "full_name": "CartValderama/FlashCardFinal",
    "name": "FlashCardFinal",
    "description": "Flashcard-based learning tool with interactive flashcards, decks, and folders, built using MVC framework and OpenAI API for feedback. First version for web application course.",
    "html_url": [
      "https://github.com/CartValderama/FlashCardFinal/blob/bf882e31526d359e9a96c6020ae0a72f241e5406/wwwroot/js/site.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 138112,
    "stars": 1
  },
  {
    "full_name": "easychen/gpt-bat",
    "name": "gpt-bat",
    "description": "GPT长文本批处理工具，Batch Processing tools for GPT ",
    "html_url": [
      "https://github.com/easychen/gpt-bat/blob/cd1853ed60c4ebbcfc6580dff44629ee3c7f42ec/src/screen/Bat.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1657,
    "stars": 197
  },
  {
    "full_name": "cortoppassi/Portifolio",
    "name": "Portifolio",
    "description": "site de portfólio com chatbot alimentado por um modelo de Inteligência Artificial da OpenAI.",
    "html_url": [
      "https://github.com/cortoppassi/Portifolio/blob/541d46bed62746163b95df537c223aa3dd908ae2/src/components/ChatBot.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "Rayan-Weragala/ITPM_REG_WE_08_SLIIT_2024",
    "name": "ITPM_REG_WE_08_SLIIT_2024",
    "description": "SLIIT Bsc(Hons) Information Technology 3 Year 1 Semester ITPM  Project MERN Stack | 2024/05/04",
    "html_url": [
      "https://github.com/Rayan-Weragala/ITPM_REG_WE_08_SLIIT_2024/blob/fe41806f2722c0ac0c5f33917a0c41a971ae5b30/client/src/component/clientside/LocMap.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 292254,
    "stars": 0
  },
  {
    "full_name": "Fede91/aicommit",
    "name": "aicommit",
    "description": "A tool that generates git commit messages using AI models",
    "html_url": [
      "https://github.com/Fede91/aicommit/blob/1ad5e04ae0114492a3a0fa58817c15b5fd9991fa/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 630,
    "stars": 1
  },
  {
    "full_name": "elh/0-0-0",
    "name": "0-0-0",
    "description": "Play chess against gpt-3.5-turbo-instruct",
    "html_url": [
      "https://github.com/elh/0-0-0/blob/49e384f28f8d20e281a8cddd17cd03d9aea0e028/src/App.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 31285,
    "stars": 2
  },
  {
    "full_name": "bravekingzhang/gpt-frontend-code-gen",
    "name": "gpt-frontend-code-gen",
    "description": "一个生成前端页面和组件代码的神器，支持Chakra UI 、ShadcnUI ，支持本地大模型、可对话不断调整效果，直到获得满意的效果",
    "html_url": [
      "https://github.com/bravekingzhang/gpt-frontend-code-gen/blob/c4cd8a33ebad5ac6ecc46c644273f8bcc770909c/frontend/src/components/HomePage.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 15467,
    "stars": 298
  },
  {
    "full_name": "zjrwtx/SFT-data-builder",
    "name": "SFT-data-builder",
    "description": "利用免费的大模型api来结合你的私域数据来生成sft训练数据（妥妥白嫖）支持llamafactory等工具的训练数据格式synthetic data",
    "html_url": [
      "https://github.com/zjrwtx/SFT-data-builder/blob/49db8c113e51e9a4744f16874b2f13c11415e151/src/components/ImageDatasetGenerator.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 25365,
    "stars": 165
  },
  {
    "full_name": "un1crom/openai-codex-hello-world",
    "name": "openai-codex-hello-world",
    "description": "Integrate with OpenAI API Codex to shape and evolve code through generative iterations.",
    "html_url": [
      "https://github.com/un1crom/openai-codex-hello-world/blob/8054e974d939dff1862b95c842787869565a2a26/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1597,
    "stars": 13
  },
  {
    "full_name": "DoingDog/chatgpt-proxy-cloudflare-worker",
    "name": "chatgpt-proxy-cloudflare-worker",
    "description": "Cloudflare Worker 反向代理 ChatGPT API，支持流式输出，支持联网搜索功能，支持设置访问密码",
    "html_url": [
      "https://github.com/DoingDog/chatgpt-proxy-cloudflare-worker/blob/2d78e1fcb392b0adbb189937f9052128f43a8b35/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 296,
    "stars": 63
  },
  {
    "full_name": "jeffgreenca/dialograph",
    "name": "dialograph",
    "description": "Experimental - Diagram in real-time while narrating aloud, and let an LLM enhance your diagram with labels and connections based on your spoken narration.",
    "html_url": [
      "https://github.com/jeffgreenca/dialograph/blob/888b0b70eed13e13824513e4ad1dc1e7d272bd6a/ui/app/draw/page.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 2743,
    "stars": 0
  },
  {
    "full_name": "Mishalabdullah/Chiua",
    "name": "Chiua",
    "description": "A fronted for the chatgpt",
    "html_url": [
      "https://github.com/Mishalabdullah/Chiua/blob/11ae7d7912ccb8daf2a7ca902d5573d54246e5e7/app.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 986,
    "stars": 2
  },
  {
    "full_name": "ameer-clara/writegenius",
    "name": "writegenius",
    "description": "Chrome plugin that communicates with OpenAI (GPT4/GPT3.5)",
    "html_url": [
      "https://github.com/ameer-clara/writegenius/blob/8ca72f47ec25d79a0f28f16571026529dc6a878c/content-script.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1243,
    "stars": 1
  },
  {
    "full_name": "Jitesh-Raghav/BigYikes.js",
    "name": "BigYikes.js",
    "description": "Open-source tool for creating AI-driven, short-form videos. Choose templates, character voices, and generate stunning videos instantly with a simple prompt.",
    "html_url": [
      "https://github.com/Jitesh-Raghav/BigYikes.js/blob/83bd81ac83e2d774960d02876a0074e82e38711d/src/Components/GenerateStory.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 8459,
    "stars": 3
  },
  {
    "full_name": "HappymanOkajima/gpt-slide",
    "name": "gpt-slide",
    "description": "Googleスライド用のアドオンです。生成AI（GPT、DALL-E）の力で文章や画像を生成しスライド作成をサポートします。",
    "html_url": [
      "https://github.com/HappymanOkajima/gpt-slide/blob/9234f7fa2c7f47e41ce040999c9a62a623e50b5d/code.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 784,
    "stars": 1
  },
  {
    "full_name": "simonmysun/logprobsvz",
    "name": "logprobsvz",
    "description": "Visualize the log probabilities of OpenAI GPT completions",
    "html_url": [
      "https://github.com/simonmysun/logprobsvz/blob/b77640903e631de62fbda7d084e98fd4d01ea09e/script.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 613,
    "stars": 3
  },
  {
    "full_name": "quantum-coders/burritollm",
    "name": "burritollm",
    "description": "Uncensored Burrito Friend",
    "html_url": [
      "https://github.com/quantum-coders/burritollm/blob/1d26a061b65a9f5c201a3c1be03a9c2da011a2e7/services/ai.service.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "iagolirapasssos/ChatGPTForAll",
    "name": "ChatGPTForAll",
    "description": "ChatAIForAll is a versatile web application that allows users to interact with AI models for text generation and image creation. It provides a user-friendly interface for having conversations with AI and generating images based on text prompts.",
    "html_url": [
      "https://github.com/iagolirapasssos/ChatGPTForAll/blob/3d25a81b1069cd50903f109ded642299ed3c2755/script.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 989,
    "stars": 0
  },
  {
    "full_name": "research-outcome/LLM-Game-Benchmark",
    "name": "LLM-Game-Benchmark",
    "description": "Evaluating Large Language Models with Grid-Based Game Competitions: An Extensible LLM Benchmark and Leaderboard",
    "html_url": [
      "https://github.com/research-outcome/LLM-Game-Benchmark/blob/fd016093c24fc91f75df6879dfb8ff84272a7659/game-simulation/add-edit-llms.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 146112,
    "stars": 13
  },
  {
    "full_name": "parkchamchi/GlossySnake",
    "name": "GlossySnake",
    "description": "An Application of LLM for Approximation of Interlinear Translation Corpora",
    "html_url": [
      "https://github.com/parkchamchi/GlossySnake/blob/7cdd95932c186448cec249a67728ae66df2a86b4/src/backend/gs_index/src/annotator_chatgpt.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 35722,
    "stars": 1
  },
  {
    "full_name": "cameronking4/Fridge2Food",
    "name": "Fridge2Food",
    "description": "Voted Top 10 of the day on Product Hunt. Take photos of fridge and pantry, and generate instant recipes to cook with food available using gpt-4-vision-previeiw",
    "html_url": [
      "https://github.com/cameronking4/Fridge2Food/blob/b2564ac5f3976cd5aaa48747f597c2e905fd5fd8/Screens/Home.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 22035,
    "stars": 1
  },
  {
    "full_name": "itsrawlinz-jeff/HydraGPT-",
    "name": "HydraGPT-",
    "description": null,
    "html_url": [
      "https://github.com/itsrawlinz-jeff/HydraGPT-/blob/8f34d30c801fdb7827f2f18464955e7ef578e820/.svelte-kit/adapter-node/chunks/models.js",
      "https://github.com/itsrawlinz-jeff/HydraGPT-/blob/8f34d30c801fdb7827f2f18464955e7ef578e820/.svelte-kit/output/server/chunks/models.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 21636,
    "stars": 1
  },
  {
    "full_name": "DavidBradbury/tts-assistant",
    "name": "tts-assistant",
    "description": "TTS Assistant: A front-end app utilizing OpenAI's TTS API. Easily input text and get audio outputs, store them locally, and manage your collection. Perfect for educators, developers, and content creators looking to integrate advanced TTS into their workflow.",
    "html_url": [
      "https://github.com/DavidBradbury/tts-assistant/blob/5bae6c6dc1424f4e73af32e3bf9d052067749384/scripts/main.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1595,
    "stars": 5
  },
  {
    "full_name": "fisherdaddy/FisherAI",
    "name": "FisherAI",
    "description": " FisherAI 是一款为提高学习效率而设计的Chrome插件，通过一键操作，支持自动摘要、网页及视频翻译、多轮对话等功能。此外，FisherAI 支持多种大语言模型，包括但不限于gpt/azure/gemini/deepseek/mistral/groq/yi/moonshot等等，为用户提供灵活且强大的AI工具。",
    "html_url": [
      "https://github.com/fisherdaddy/FisherAI/blob/133063a99fa065959c6bac1026d91c39c60571aa/scripts/constants.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 12063,
    "stars": 165
  },
  {
    "full_name": "cgiugno/GPT3-Powered-Video-Game",
    "name": "GPT3-Powered-Video-Game",
    "description": "A short little experiment in whether GPT-3 can provide dialogue for a video game (spoiler alert: it can, but not at a feasible scale, and not better than an actual human).",
    "html_url": [
      "https://github.com/cgiugno/GPT3-Powered-Video-Game/blob/4bcb6fdce37c41e9fd50cc5f14bb74033c11ad0d/src/game.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 19103,
    "stars": 0
  },
  {
    "full_name": "LeifChristian/GPT-speech-realtime-data",
    "name": "GPT-speech-realtime-data",
    "description": "Multimodal chatbot with text to speech, news & web search APIs for realtime data img recognition & generation",
    "html_url": [
      "https://github.com/LeifChristian/GPT-speech-realtime-data/blob/e6839f78b37b1babdf79f4c2df89b55154ecb565/server/routes/chatRoutes.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 13881,
    "stars": 0
  },
  {
    "full_name": "nextblock-ai/puck-conversation-documents",
    "name": "puck-conversation-documents",
    "description": "Implements a portable conversation document format for GPT-4 in VS code",
    "html_url": [
      "https://github.com/nextblock-ai/puck-conversation-documents/blob/4eedfda69f10d680949a2723764b279567703175/webview/main.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 12101,
    "stars": 0
  },
  {
    "full_name": "ittuann/obsidian-gpt-liteinquirer-plugin",
    "name": "obsidian-gpt-liteinquirer-plugin",
    "description": "💬 Experience OpenAI ChatGPT assistance directly within Obsidian, drafting content without interrupting your creative flow.",
    "html_url": [
      "https://github.com/ittuann/obsidian-gpt-liteinquirer-plugin/blob/1f22d1931646da5ba6b5975f1843d45947ea89fa/main.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 3645,
    "stars": 23
  },
  {
    "full_name": "jenyss/ZhenFlow",
    "name": "ZhenFlow",
    "description": "Automating Confluence & Jira workflows using LLMs",
    "html_url": [
      "https://github.com/jenyss/ZhenFlow/blob/d4a44ce590b56ac5e4949c30b38d60f7952bb01a/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1886,
    "stars": 1
  },
  {
    "full_name": "easychen/api2d-js",
    "name": "api2d-js",
    "description": "OpenAI/Api2d pure js sdk 无需node后端直接在浏览器中运行，支持SSE流式输出",
    "html_url": [
      "https://github.com/easychen/api2d-js/blob/272f5c3e016ba7b5d5d57ba4097debc15a74e25d/cjs/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 640,
    "stars": 96
  },
  {
    "full_name": "bbz662/compare-multi-llm-outputs",
    "name": "compare-multi-llm-outputs",
    "description": null,
    "html_url": [
      "https://github.com/bbz662/compare-multi-llm-outputs/blob/aecd643ad6c04f43ab5a038ec98fcb5a8da4d508/worker.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 575,
    "stars": 0
  },
  {
    "full_name": "antonok-edm/ai-led-matrix-art",
    "name": "ai-led-matrix-art",
    "description": "Let GPT-4 and GPT-4 with Vision write code for a Pixelblaze-controlled LED matrix, evolving over time towards a user-defined theme.",
    "html_url": [
      "https://github.com/antonok-edm/ai-led-matrix-art/blob/12dfcc5a6d9f811c9b8ffc2a0ffa7844740b97ae/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 381,
    "stars": 6
  },
  {
    "full_name": "Useems/openai-nodejs",
    "name": "openai-nodejs",
    "description": "A OpenAI API wrapper for node.",
    "html_url": [
      "https://github.com/Useems/openai-nodejs/blob/d8e8332f48a1b93f184cc19d43ebe223a30a2a81/src/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 16474,
    "stars": 4
  },
  {
    "full_name": "TommyJu/2800-202410-DTC14",
    "name": "2800-202410-DTC14",
    "description": "GUD aims to motivate gamers to develop healthy habits by gamifying their lives and tapping into their competitive spirit. This app uses APIs from OpenAI, Riot Games, and OpenWeatherMap. Custom and suggested tasks allow the user to improve their game, diet, and fitness.",
    "html_url": [
      "https://github.com/TommyJu/2800-202410-DTC14/blob/48f3eeb6d7121516ff8ee9fa0877e711020631a3/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 4595,
    "stars": 1
  },
  {
    "full_name": "longlongago2/chatgpt-console",
    "name": "chatgpt-console",
    "description": "ChatGPT for terminal",
    "html_url": [
      "https://github.com/longlongago2/chatgpt-console/blob/e8a6521a4a537e5f2262bd7d1838c89fbc98bd70/src/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 6898,
    "stars": 2
  },
  {
    "full_name": "frontend-engineering/chatgpt-webapp-fullstack",
    "name": "chatgpt-webapp-fullstack",
    "description": "A fullstack chat webapp based on ChatGPT/BingAI/AndMore...",
    "html_url": [
      "https://github.com/frontend-engineering/chatgpt-webapp-fullstack/blob/b43cdad8ec6e5a0466b4d63c6eab6e819bc13dbd/utils/client/ChatGPTClient.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 5467,
    "stars": 126
  },
  {
    "full_name": "sikong1/node-gpt-server",
    "name": "node-gpt-server",
    "description": "gpt接口-node",
    "html_url": [
      "https://github.com/sikong1/node-gpt-server/blob/4fa6a4653953776604b9f11c4d2070af09adfe74/src/ChatGPTClient.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 11827,
    "stars": 0
  },
  {
    "full_name": "Y-AIFE/ChatGPT-API",
    "name": "ChatGPT-API",
    "description": "a more universal open-source library for the ChatGPT API that supports the CommonJS module system",
    "html_url": [
      "https://github.com/Y-AIFE/ChatGPT-API/blob/2fb5978254bc755c3ab77d5f334c03877bf29906/build/index.mjs"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 5758,
    "stars": 1
  },
  {
    "full_name": "WhyDoWeLiveWithoutMeaning/AIMessage",
    "name": "AIMessage",
    "description": "Allows you to connect to the OpenAI API to generate responses for you.",
    "html_url": [
      "https://github.com/WhyDoWeLiveWithoutMeaning/AIMessage/blob/f5ee70a0a7c6645580cc7c421161be6589267d68/AIMessage.plugin.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 580,
    "stars": 0
  },
  {
    "full_name": "waylaidwanderer/node-chatgpt-api",
    "name": "node-chatgpt-api",
    "description": "A client implementation for ChatGPT and Bing AI. Available as a Node.js module, REST API server, and CLI app.",
    "html_url": [
      "https://github.com/waylaidwanderer/node-chatgpt-api/blob/a424398bd19761553b6587f64565881e06cbdb00/src/ChatGPTClient.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 10405,
    "stars": 4208
  },
  {
    "full_name": "mrjuice01/node-chat-gpt-api",
    "name": "node-chat-gpt-api",
    "description": "A client implementation for ChatGPT and Bing AI. Available as a Node.js module, REST API server, and CLI app.",
    "html_url": [
      "https://github.com/mrjuice01/node-chat-gpt-api/blob/b1031cfdbc00879a38ab112119960c8ec2dd86d0/src/ChatGPTClient.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 10340,
    "stars": 1
  },
  {
    "full_name": "hotrainy/ai-gpt-refiner",
    "name": "ai-gpt-refiner",
    "description": "AI-GPT-Refiner is a feature-rich node.js project that implements OpenAI's GPT-suite for creating chatbots. It's not just limited to Node.js, it can serve as a REST API server and CLI application. It has very concise and useful documentations about its usage and setup. OpenAI's API key is needed to get it working.",
    "html_url": [
      "https://github.com/hotrainy/ai-gpt-refiner/blob/12accfbfe30ad25a10b48b238975875bd53d3df0/src/ChatGPTClient.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "HappymanOkajima/gpt-document",
    "name": "gpt-document",
    "description": "Googleドキュメント用のアドオンです。生成AIの力で文章や画像を生成しドキュメント作成をサポートします。",
    "html_url": [
      "https://github.com/HappymanOkajima/gpt-document/blob/6de0352c5eed78cdaf8f37e786369b1ce47e4ff7/code.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 652,
    "stars": 2
  },
  {
    "full_name": "hichipli/ChatcatGPT",
    "name": "ChatcatGPT",
    "description": "A flexible, user-customizable AI assistant powered by OpenAI. This lightweight web-based interface allows users to leverage the capabilities of AI in a personalized manner. ",
    "html_url": [
      "https://github.com/hichipli/ChatcatGPT/blob/d33d727b1e5ea63009196deb8cb9b709e20aefb1/script.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 948,
    "stars": 22
  },
  {
    "full_name": "Barty-Bart/openai-realtime-api-voice-assistant-V2",
    "name": "openai-realtime-api-voice-assistant-V2",
    "description": "OpenAI Realtime API Voice Agent with RAG, Function Calling, and Caller History",
    "html_url": [
      "https://github.com/Barty-Bart/openai-realtime-api-voice-assistant-V2/blob/735f7487d98fd70e70656dba054b9ee4dab3df3e/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 2685,
    "stars": 109
  },
  {
    "full_name": "Index-al/Choose-Your-Own-AI-venture",
    "name": "Choose-Your-Own-AI-venture",
    "description": "Choose your own AI-venture. A web application which utilizes openAI & DALL-E to generate unique and dynamic narrative experiences.",
    "html_url": [
      "https://github.com/Index-al/Choose-Your-Own-AI-venture/blob/2f8b4dd75e86d7ac93095cea63e72de0a4733607/develop/js/script.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1336,
    "stars": 0
  },
  {
    "full_name": "heshengtao/comfyui_LLM_party",
    "name": "comfyui_LLM_party",
    "description": "LLM Agent Framework in ComfyUI includes Omost,GPT-sovits, ChatTTS,GOT-OCR2.0, and FLUX prompt nodes,access to Feishu,discord,and adapts to all llms with similar openai / aisuite interfaces, such as o1,ollama, gemini, grok, qwen, GLM, deepseek, moonshot,doubao. Adapted to local llms, vlm, gguf such as llama-3.2, Linkage graphRAG / RAG",
    "html_url": [
      "https://github.com/heshengtao/comfyui_LLM_party/blob/7d9ae52fb057763119160eeaaa8b8bc067c1a79b/web/js/botton_party.js",
      "https://github.com/heshengtao/comfyui_LLM_party/blob/e5e166c2a80f69c22333c7b303419a419b085936/tools/check_web.py",
      "https://github.com/heshengtao/comfyui_LLM_party/blob/26eeac91797750e1f91386ebf565d8bedeca2dd8/llm.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript",
      "python"
    ],
    "fork": false,
    "loc": 67488,
    "stars": 1725
  },
  {
    "full_name": "terukusu/gas-openai",
    "name": "gas-openai",
    "description": "Google Apps Script(GAS)からOpenAI(or Azure OpenAI)のAPIを簡単に使うためのライブラリ",
    "html_url": [
      "https://github.com/terukusu/gas-openai/blob/a5bba6c10f0ef0e8c32f8dcb8d4a785d40208729/src/Code.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 571,
    "stars": 1
  },
  {
    "full_name": "project-luminate/luminate",
    "name": "luminate",
    "description": "Luminate - an interactive system that enables structured generation and exploration of LLM outputs",
    "html_url": [
      "https://github.com/project-luminate/luminate/blob/5ad81fb3d08db7ef440a57a37ca30e4dcfa9cf18/src/util/space-generation-util.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 11447,
    "stars": 42
  },
  {
    "full_name": "SunnyChopper/followup-question-generator",
    "name": "followup-question-generator",
    "description": "A GPT-powered tool meant to supplement the work of interviewers by brainstorming new follow-up questions based on some context, a question and the candidate's response to it.",
    "html_url": [
      "https://github.com/SunnyChopper/followup-question-generator/blob/99e3f84a752d3a4c8c9d5aa90c65f042883d4434/app.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 596,
    "stars": 0
  },
  {
    "full_name": "ajprokop/imageProcessing",
    "name": "imageProcessing",
    "description": "A web application that uses OpenAI image APIs to create an image, create image variations, and edit an existing image.",
    "html_url": [
      "https://github.com/ajprokop/imageProcessing/blob/8787346ece29a53d9d1402f2bcc5e95e5a6d3dc1/js/openai.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1229,
    "stars": 2
  },
  {
    "full_name": "tusharmctrl/interact-puppeteer-with-openai",
    "name": "interact-puppeteer-with-openai",
    "description": null,
    "html_url": [
      "https://github.com/tusharmctrl/interact-puppeteer-with-openai/blob/876b633bc067370c77c2f8b8a1d3128f9e5adb62/misc/index.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 10220,
    "stars": 0
  },
  {
    "full_name": "MEDELBOU3/gemini-ai-chatbot",
    "name": "gemini-ai-chatbot",
    "description": "SM.studio ai is an AI chatbot that creates text, tables, analyzes images, and provides YouTube video tutorials.",
    "html_url": [
      "https://github.com/MEDELBOU3/gemini-ai-chatbot/blob/695e929155f221fc6a8eec330cdd22924ca24150/reserve.js",
      "https://github.com/MEDELBOU3/gemini-ai-chatbot/blob/695e929155f221fc6a8eec330cdd22924ca24150/main.app.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 2826,
    "stars": 3
  },
  {
    "full_name": "dermotcanniffe/RobotFrameworkSpiraApp",
    "name": "RobotFrameworkSpiraApp",
    "description": "SpiraApp for Generating Robot Framework code using LLM Chatbot requests",
    "html_url": [
      "https://github.com/dermotcanniffe/RobotFrameworkSpiraApp/blob/77a39da59b788be4b382767d6c0b947c14a309c8/requirementDetails.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1184,
    "stars": 0
  },
  {
    "full_name": "lektor-lol/lektor-lol.github.io",
    "name": "lektor-lol.github.io",
    "description": "a minimal website to get the diff of llm rewrites",
    "html_url": [
      "https://github.com/lektor-lol/lektor-lol.github.io/blob/4673175751b62add401e10c1657d6c60ec630466/script.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1057,
    "stars": 11
  },
  {
    "full_name": "ariya/query-llm",
    "name": "query-llm",
    "description": "Query LLM with Chain-of-Tought",
    "html_url": [
      "https://github.com/ariya/query-llm/blob/062ea35dac3015d2035342dd41d3b20ded2bff8a/query-llm.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 2531,
    "stars": 13
  },
  {
    "full_name": "myselfshravan/fastiq-genai",
    "name": "fastiq-genai",
    "description": "FastIQ is an innovative platform designed to streamline the integration and utilization of multiple API providers for large language models (LLMs). Our platform serves as a hub for developers, researchers, and businesses to access a diverse range of AI models from leading providers such as Groq, OpenAI, Anyscale, and TogetherAI, among others.",
    "html_url": [
      "https://github.com/myselfshravan/fastiq-genai/blob/33f943e656ffd61fd7527bd4c678b7dc131b942d/src/pages/playground.jsx"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 13855,
    "stars": 1
  },
  {
    "full_name": "SuffolkLITLab/prompts",
    "name": "prompts",
    "description": "A browser extension that generates and runs LLM prompts based on templates and user input such as selected text and the contents of the current page ",
    "html_url": [
      "https://github.com/SuffolkLITLab/prompts/blob/e4b0e3515da283373de5a6a444b20cdc138ce041/js/options.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 3618,
    "stars": 26
  },
  {
    "full_name": "ruvnet/powerprompt",
    "name": "powerprompt",
    "description": "Power Prompt - Enhance ChatGPT & OpenAi interaction. Seamless conversations. Choose models, save templates, set temp, length & tokens.",
    "html_url": [
      "https://github.com/ruvnet/powerprompt/blob/1f280f9bbff04571bd151cdd9e1258f21a660d2e/src/content.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 891,
    "stars": 14
  },
  {
    "full_name": "BrunoSobrino/openai-botwa",
    "name": "openai-botwa",
    "description": "WhatsApp Bot que usa la IA de OpenAI creado por @rtwone y editado por @BrunoSobrino",
    "html_url": [
      "https://github.com/BrunoSobrino/openai-botwa/blob/1778b0ba001b6080ec027e0bf914c588164967bb/message/msg.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1613,
    "stars": 13
  },
  {
    "full_name": "pat-jj/TextbookKG",
    "name": "TextbookKG",
    "description": "TxBKG - Knowledge Graph Generation for Any PDFs",
    "html_url": [
      "https://github.com/pat-jj/TextbookKG/blob/1f8578fc21ae73d44da02682e07ae54dbc25f393/src/App.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 166893,
    "stars": 183
  },
  {
    "full_name": "itsmarsss/kahootgpt",
    "name": "kahootgpt",
    "description": "KahootGPT is a Chrome extension that enhances the Kahoot game experience with OpenAI's  GPT 3.5 model to answer questions. It's an essential tool for anyone looking to improve their Kahoot game performance, with powerful features and an easy-to-use interface.",
    "html_url": [
      "https://github.com/itsmarsss/kahootgpt/blob/362bc6afa39abc56a5eb66cb9b3d53a6e7db44c1/src/popup/contentScript.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 6586,
    "stars": 8
  },
  {
    "full_name": "JD-P/minihf",
    "name": "minihf",
    "description": "MiniHF is an inference, human preference data collection, and fine-tuning tool for local language models. It is intended to help the user develop their prompts into full models.",
    "html_url": [
      "https://github.com/JD-P/minihf/blob/3126a6dd5b409dd4172e6760b543eac3026e930b/loom/renderer.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 17826,
    "stars": 172
  },
  {
    "full_name": "larksq/obsidian-llm-summary",
    "name": "obsidian-llm-summary",
    "description": "wip",
    "html_url": [
      "https://github.com/larksq/obsidian-llm-summary/blob/caca4f5ede9baa7cef624178263d07b4dd2ec50e/main.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1475051,
    "stars": 13
  },
  {
    "full_name": "AcuChat/RAGTruth-processor",
    "name": "RAGTruth-processor",
    "description": "Nodejs service to process RAGTruth submissions",
    "html_url": [
      "https://github.com/AcuChat/RAGTruth-processor/blob/a29857763cd49d454f37cfa3ad2ed049a70aba32/utils/ai.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 890657,
    "stars": 0
  },
  {
    "full_name": "garbledhamster/joesaverage.blog",
    "name": "joesaverage.blog",
    "description": "Mini Blog Admin",
    "html_url": [
      "https://github.com/garbledhamster/joesaverage.blog/blob/7eefd19bb2259600d70fde2102b9c8df1a507767/scripts.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 4243,
    "stars": 0
  },
  {
    "full_name": "scriptit-fr/ChatGPTApp",
    "name": "ChatGPTApp",
    "description": "The Google Apps Script binding for the OpenAI chat completion API",
    "html_url": [
      "https://github.com/scriptit-fr/ChatGPTApp/blob/e6da3541aa8239b863e0a5899908f236228d1b8a/src/Code.gs"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 210,
    "stars": 54
  },
  {
    "full_name": "v3ucn/GPT-SoVits-Read-Aloud",
    "name": "GPT-SoVits-Read-Aloud",
    "description": "基于Read-aloud项目增加GPT-SoVits接口，Chrome扩展，大声朗读",
    "html_url": [
      "https://github.com/v3ucn/GPT-SoVits-Read-Aloud/blob/aacdb78eef5c2fd9b5cf460df9e65e58ebc6463e/js/tts-engines.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 15285,
    "stars": 23
  },
  {
    "full_name": "hoyoung1359/Chat-082",
    "name": "Chat-082",
    "description": "LLM을 활용한 컴퓨터 구매 챗봇 익스텐션",
    "html_url": [
      "https://github.com/hoyoung1359/Chat-082/blob/7af6a99b356a68a295a5c8a53dbd3e6e7e0fab0c/Chrome/popup.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 2072,
    "stars": 1
  },
  {
    "full_name": "asdfMaciej/HackYeah2024",
    "name": "HackYeah2024",
    "description": "Navigate and search through websites using LLMs - finalist project at HackYeah 2024",
    "html_url": [
      "https://github.com/asdfMaciej/HackYeah2024/blob/d98828694028ca01658518b22ce1b07f7d5f9195/extension/background.js"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 1310,
    "stars": 3
  },
  {
    "full_name": "max-holo/chatgpt-sdk",
    "name": "chatgpt-sdk",
    "description": "支持chatgpt3.5、chatgpt4、glm-3-turbo、glm-4、moonshot-8k、moonshot-32k、moonshot-128k",
    "html_url": [
      "https://github.com/max-holo/chatgpt-sdk/blob/9379edeb97f83359f53250a79dfd4996d33ba59b/src/main/java/com/unfbx/chatgpt/constant/OpenAIConst.java",
      "https://github.com/max-holo/chatgpt-sdk/blob/9379edeb97f83359f53250a79dfd4996d33ba59b/src/main/java/com/unfbx/chatgpt/config/ChatGPTUrl.java",
      "https://github.com/max-holo/chatgpt-sdk/blob/9379edeb97f83359f53250a79dfd4996d33ba59b/src/main/java/com/unfbx/chatgpt/OpenAiStreamClient.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 5088,
    "stars": 1
  },
  {
    "full_name": "namankhurpia/Easy-open-ai",
    "name": "Easy-open-ai",
    "description": "This repository contains the community-maintained library for OpenAI's API in java, the easiest way to use GPT 3/4 in your applications.",
    "html_url": [
      "https://github.com/namankhurpia/Easy-open-ai/blob/0e862169006fee7415cfa92047c049c6a3fa24eb/src/main/java/io/github/namankhurpia/Interfaces/EndPoints.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 3190,
    "stars": 16
  },
  {
    "full_name": "kongpf8848/openai",
    "name": "openai",
    "description": "Java client libraries for OpenAI API and Azure OpenAI Service",
    "html_url": [
      "https://github.com/kongpf8848/openai/blob/4369cc97f069677f1bf0b94478c19c42d1b5e345/openai/src/main/java/io/github/kongpf8848/openai/OpenAIConstants.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 2259,
    "stars": 0
  },
  {
    "full_name": "Grt1228/chatgpt-java",
    "name": "chatgpt-java",
    "description": "ChatGPT Java SDK支持流式输出、Gpt插件、联网。支持OpenAI官方所有接口。ChatGPT的Java客户端。OpenAI GPT-3.5-Turb GPT-4  Api Client for Java",
    "html_url": [
      "https://github.com/Grt1228/chatgpt-java/blob/ae761b89450812fab4cd7bba6626f9874705ca40/src/main/java/com/unfbx/chatgpt/constant/OpenAIConst.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 7714,
    "stars": 3450
  },
  {
    "full_name": "SibanandaKuanr/ChatGPT-Android-app",
    "name": "ChatGPT-Android-app",
    "description": "🤖 Say hello to Chatbot AI, the innovative chatbot that allows you to easily ask questions and receive accurate and informative responses in real-time. Whether you need help with everyday tasks, want to learn something new, or just want to chat, Chatbot AI has got you covered.",
    "html_url": [
      "https://github.com/SibanandaKuanr/ChatGPT-Android-app/blob/11f196dcb8ac283c84e3665d91e7b1c3a72232bd/app/src/main/java/com/app/chatgpt/API.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 1080,
    "stars": 34
  },
  {
    "full_name": "wtd768566360/openai-client",
    "name": "openai-client",
    "description": "针对openai的chatgpt的接口,流式访问的客户端封装",
    "html_url": [
      "https://github.com/wtd768566360/openai-client/blob/89c3d7ca05816ec194e8a83ed683a79a594a2845/src/main/java/com/alone/openai/client/api/OpenAIAPI.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 531,
    "stars": 14
  },
  {
    "full_name": "zengyusheng1314/chatgpt-java-util",
    "name": "chatgpt-java-util",
    "description": "ChatGPT Java  不使用lombok，支持流式输出",
    "html_url": [
      "https://github.com/zengyusheng1314/chatgpt-java-util/blob/9e0fda2d915ac5d0b83dc76064b5015f2769b237/src/main/java/com/sean/chatgpt/api/ApiInterface.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 1022,
    "stars": 1
  },
  {
    "full_name": "Ranzeplay/saysth",
    "name": "saysth",
    "description": "A Minecraft Mod that connects villagers to AI models.",
    "html_url": [
      "https://github.com/Ranzeplay/saysth/blob/69047443f9934dc309dbfadc3edfdcb2dbd8f272/common/src/main/java/space/ranzeplay/saysth/config/OpenAIConfig.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 11073,
    "stars": 2
  },
  {
    "full_name": "jpreethi1522/AI-ChatBot",
    "name": "AI-ChatBot",
    "description": "Developed using JAVA,  XML and Android OS. This mobile app integrates a ChatGPT-like chatbot with advanced functionalities, including image generation and real-time news updates. Users can engage in contextually relevant conversations with the AI-powered chatbot, create custom images, and stay informed with the latest news. ",
    "html_url": [
      "https://github.com/jpreethi1522/AI-ChatBot/blob/bc37d36f21e09cb14d189650fbe5cd287450377a/app/src/main/java/com/example/mamtha1/API.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 1620,
    "stars": 0
  },
  {
    "full_name": "zhouzhupianbei/OpenAI-ChatGPT-Function-Demo",
    "name": "OpenAI-ChatGPT-Function-Demo",
    "description": "这是一个OpenAI Function 接入的Demo，通过Lucene+OpenAI实现个人知识库，但是目前只有服务端，没有页面之类的东西，并且实现的非常简单，所以只能当做一个Demo使用。",
    "html_url": [
      "https://github.com/zhouzhupianbei/OpenAI-ChatGPT-Function-Demo/blob/d28b2a671935a36cf3aee0ceae21e09f28e6c26a/src/main/java/com/lgf/warehouse/core/chatgpt/constant/OpenAIConst.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 4114,
    "stars": 5
  },
  {
    "full_name": "htinker-hu/android-app-simple-chat",
    "name": "android-app-simple-chat",
    "description": "Simple Chat APP based LLM running on Android",
    "html_url": [
      "https://github.com/htinker-hu/android-app-simple-chat/blob/51e23240262c482afcc84c0adf63f743faef5e55/app/src/main/java/com/app/chatgpt/API.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 1018,
    "stars": 0
  },
  {
    "full_name": "reactiveclown/openai-webflux-java",
    "name": "openai-webflux-java",
    "description": "Reactive WebFlux OpenAI API Client in Java",
    "html_url": [
      "https://github.com/reactiveclown/openai-webflux-java/blob/bf1a3aef5b2e14e340625a134b5fbb44d93fa3c8/src/main/java/io/github/reactiveclown/openaiwebfluxclient/client/configuration/ClientConfigurationProperties.java",
      "https://github.com/reactiveclown/openai-webflux-java/blob/bf1a3aef5b2e14e340625a134b5fbb44d93fa3c8/src/main/java/io/github/reactiveclown/openaiwebfluxclient/ClientAutoConfigurationProperties.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 2246,
    "stars": 38
  },
  {
    "full_name": "jsdjiazhiheng/ai-chat",
    "name": "ai-chat",
    "description": "ai-chat是一个开源的聊天系统后端，支持多种AI模型，旨在提供智能化的聊天服务。它不仅支持文本聊天，还支持图片处理，为用户提供丰富的交互体验。提供多种模型文心一言、KIMI、智谱清言、DeepSeek、OPENAI、通义千问、星火、腾讯混元助手（待接入）、火山引擎（豆包）、百度SD、通义万象、触站AI、画宇宙等。",
    "html_url": [
      "https://github.com/jsdjiazhiheng/ai-chat/blob/33a9dda6044cc89f4521160a85b23a81bd709039/ai-chat-modules/ai-chat-chat/src/main/java/cn/com/chat/chat/chain/apis/OpenAiApis.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 36910,
    "stars": 32
  },
  {
    "full_name": "HakonBergtun/GPT-API-Test-Java-21",
    "name": "GPT-API-Test-Java-21",
    "description": "Litt testing med java 21 og GPT API ",
    "html_url": [
      "https://github.com/HakonBergtun/GPT-API-Test-Java-21/blob/2049cd5f1304aada0da750110e65549bbeeece54/src/main/java/no/bergtun/ChatGPTClient.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 839,
    "stars": 0
  },
  {
    "full_name": "OpenAI-Java/openai-sdk",
    "name": "openai-sdk",
    "description": "OpenAI Java Client",
    "html_url": [
      "https://github.com/OpenAI-Java/openai-sdk/blob/082f98a09954c53b24276635c5d3326fa616f27d/openai-domain/openai-main-domain/src/main/java/dev/struchkov/openai/domain/conf/OpenAIConfig.java",
      "https://github.com/OpenAI-Java/openai-sdk/blob/082f98a09954c53b24276635c5d3326fa616f27d/openai-sdk/openai-quarkus-sdk/src/main/java/dev/struchkov/quarkus/openai/client/gen/OpenAIRestClient.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 2601,
    "stars": 0
  },
  {
    "full_name": "pdkst/models",
    "name": "models",
    "description": "a simple llm models client; Try test it for production right now",
    "html_url": [
      "https://github.com/pdkst/models/blob/98feca3f6b111ee58fd23253324b95679b4156e3/models-openai/src/test/java/io/github/pdkst/models/openai/client/OpenaiUrlBuilderTest.java",
      "https://github.com/pdkst/models/blob/98feca3f6b111ee58fd23253324b95679b4156e3/models-openai/src/main/java/io/github/pdkst/models/openai/client/OpenaiUrlBuilder.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 3615,
    "stars": 0
  },
  {
    "full_name": "teachingai/langchain4j-examples",
    "name": "langchain4j-examples",
    "description": "基于  Langchain4j 的 AI 实践实例",
    "html_url": [
      "https://github.com/teachingai/langchain4j-examples/blob/f707407d1222f36021d212e88ecd8834cf6824d4/langchain4j-ollama-voice-whisper/src/main/java/com/github/teachingai/ollama/api/ApiUtils.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 23433,
    "stars": 2
  },
  {
    "full_name": "zccbbg/chatgpt-springboot-service",
    "name": "chatgpt-springboot-service",
    "description": "是一个基于Springboot的一个后端服务，用于实时接收chatGPT的消息，并通过websocket的方式实时反馈前端。本项目还可以助你将GPT机器人集成到钉钉群聊中，通过@机器人进行聊天交互。",
    "html_url": [
      "https://github.com/zccbbg/chatgpt-springboot-service/blob/80ceb9a5d7dcd0904cf8563390fe258761b93936/src/main/java/com/cyl/ctrbt/openai/api/Api.java",
      "https://github.com/zccbbg/chatgpt-springboot-service/blob/80ceb9a5d7dcd0904cf8563390fe258761b93936/src/main/java/com/cyl/ctrbt/openai/ChatGPTStrreamUtil.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 1217,
    "stars": 225
  },
  {
    "full_name": "LnYo-Cly/ai4j",
    "name": "ai4j",
    "description": "一款JavaSDK用于快速接入AI大模型应用，整合多平台大模型，如OpenAi、智谱Zhipu(ChatGLM)、深度求索DeepSeek、月之暗面Moonshot(Kimi)、腾讯混元Hunyuan、零一万物(01)等等，提供统一的输入输出(对齐OpenAi)消除差异化，优化函数调用(Tool Call)，优化RAG调用、支持向量数据库(Pinecone)、内置联网增强，并且支持JDK1.8，为用户提供快速整合AI的能力。",
    "html_url": [
      "https://github.com/LnYo-Cly/ai4j/blob/b503c29a831c0a8d47daafcc64e86478d7be4c87/ai4j/src/main/java/io/github/lnyocly/ai4j/config/OpenAiConfig.java",
      "https://github.com/LnYo-Cly/ai4j/blob/b503c29a831c0a8d47daafcc64e86478d7be4c87/ai4j-spring-boot-starter/src/main/java/io/github/lnyocly/ai4j/OpenAiConfigProperties.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 8791,
    "stars": 307
  },
  {
    "full_name": "ivan-digital/lightchain",
    "name": "lightchain",
    "description": "LightChain - Java LLM Chat Assistant Tool with Spring Boot support ",
    "html_url": [
      "https://github.com/ivan-digital/lightchain/blob/1121fa9b7decb49f612f89333b8da7dda18e05d0/lightchain-starter/src/main/java/digital/ivan/lightchain/starter/openai/OpenAiWebClientConfig.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 2677,
    "stars": 4
  },
  {
    "full_name": "arquimedesurf/chatgpt-spring-boot-starter",
    "name": "chatgpt-spring-boot-starter",
    "description": "chatgpt",
    "html_url": [
      "https://github.com/arquimedesurf/chatgpt-spring-boot-starter/blob/1cf26fb67799f1a91f37a20e02121676a8364aff/src/main/java/org/mvnsearch/chatgpt/spring/http/OpenAIChatAPI.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 1295,
    "stars": 0
  },
  {
    "full_name": "kezhenxu94/chatgpt-java",
    "name": "chatgpt-java",
    "description": "ChatGPT SDK for Java, CLI, GitHub Actions, demo, etc.",
    "html_url": [
      "https://github.com/kezhenxu94/chatgpt-java/blob/63c65c83c2f888f04eeb1a4e610c6deb3939034c/chatgpt-java-sdk/src/main/java/io/github/kezhenxu94/chatgpt/ChatGPT.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 1369,
    "stars": 25
  },
  {
    "full_name": "qianxunclub/chatgpt-proxy",
    "name": "chatgpt-proxy",
    "description": "ChatGPT代理，需要部署到国外服务器上面，已经接入了聊天和图像生成接口，小程序体验：糯糯AI",
    "html_url": [
      "https://github.com/qianxunclub/chatgpt-proxy/blob/0e951026c393474dad935feb919a3ceaf5b3c652/src/main/java/com/qianxunclub/chatgptproxy/configuration/AppProperties.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 842,
    "stars": 3
  },
  {
    "full_name": "atenearesearchgroup/llm-evaluator-backend",
    "name": "llm-evaluator-backend",
    "description": null,
    "html_url": [
      "https://github.com/atenearesearchgroup/llm-evaluator-backend/blob/1d2e0b3cfb29aebde866121b0a4c42f58f47ed7a/src/main/java/me/loopbreak/hermesanalyzer/objects/platform/connectors/openai/OpenAiProperties.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 3625,
    "stars": 2
  },
  {
    "full_name": "flashvayne/chatgpt-spring-boot-starter",
    "name": "chatgpt-spring-boot-starter",
    "description": "a chatgpt starter based on Openai Official Apis.",
    "html_url": [
      "https://github.com/flashvayne/chatgpt-spring-boot-starter/blob/b61093834a3cb854e39a368ff3b32ba2e5505cf2/src/main/java/io/github/flashvayne/chatgpt/property/MultiChatProperties.java",
      "https://github.com/flashvayne/chatgpt-spring-boot-starter/blob/b61093834a3cb854e39a368ff3b32ba2e5505cf2/src/main/java/io/github/flashvayne/chatgpt/property/ChatgptProperties.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 737,
    "stars": 224
  },
  {
    "full_name": "agents-flex/agents-flex",
    "name": "agents-flex",
    "description": "Agents-Flex is an elegant LLM Application Framework like LangChain with Java.",
    "html_url": [
      "https://github.com/agents-flex/agents-flex/blob/64c8a97c7386719e5ad7486fd4fadfc27c879e46/agents-flex-spring-boot-starter/src/main/java/com/agentsflex/spring/boot/llm/openai/OpenAiProperties.java",
      "https://github.com/agents-flex/agents-flex/blob/64c8a97c7386719e5ad7486fd4fadfc27c879e46/agents-flex-image/agents-flex-image-openai/src/main/java/com/agentsflex/image/openai/OpenAiImageModelConfig.java",
      "https://github.com/agents-flex/agents-flex/blob/64c8a97c7386719e5ad7486fd4fadfc27c879e46/agents-flex-llm/agents-flex-llm-openai/src/main/java/com/agentsflex/llm/openai/OpenAiLlmConfig.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 21816,
    "stars": 441
  },
  {
    "full_name": "zortan3301/ChatGPT4J",
    "name": "ChatGPT4J",
    "description": "ChatGPT Java SDK. Official OpenAI API.",
    "html_url": [
      "https://github.com/zortan3301/ChatGPT4J/blob/78f8d79406c42a21a35cd20ba9828f647268e112/src/test/java/io/github/aminovmaksim/chatgpt4j/ClientTest.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 452,
    "stars": 55
  },
  {
    "full_name": "lbayer10/Spring-Boot-Chatgpt",
    "name": "Spring-Boot-Chatgpt",
    "description": "We'll create a Spring Boot application that will generate responses to a prompt by calling the OpenAI ChatGPT APIs. 2. OpenAI ChatGPT APIs.",
    "html_url": [
      "https://github.com/lbayer10/Spring-Boot-Chatgpt/blob/7654c9409a429c161b90881915cb5bf36a859d4b/src/main/java/io/github/flashvayne/chatgpt/property/MultiChatProperties.java",
      "https://github.com/lbayer10/Spring-Boot-Chatgpt/blob/7654c9409a429c161b90881915cb5bf36a859d4b/src/main/java/io/github/flashvayne/chatgpt/property/ChatgptProperties.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "sashirestela/simple-openai",
    "name": "simple-openai",
    "description": "A Java library to use the OpenAI Api in the simplest possible way.",
    "html_url": [
      "https://github.com/sashirestela/simple-openai/blob/065bf67454fb758f27db615a3a250d139ec3e10e/src/main/java/io/github/sashirestela/openai/support/Constant.java",
      "https://github.com/sashirestela/simple-openai/blob/065bf67454fb758f27db615a3a250d139ec3e10e/src/test/java/io/github/sashirestela/openai/OpenAIRealtimeTest.java",
      "https://github.com/sashirestela/simple-openai/blob/065bf67454fb758f27db615a3a250d139ec3e10e/src/main/java/io/github/sashirestela/openai/SimpleOpenAI.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 21177,
    "stars": 320
  },
  {
    "full_name": "huangqingjian/chatgpt",
    "name": "chatgpt",
    "description": "chatgpt智能聊天平台一站式帮你接入openai api，只需简单配置即可玩转chatgpt，内置用户、会话、充值等完备模块。",
    "html_url": [
      "https://github.com/huangqingjian/chatgpt/blob/1e9d7a3378cf72f7e4c58e733ed701c3e8c6cd11/chatgpt-service/src/main/java/com/chatgpt/ai/ChatGptService.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 352247,
    "stars": 10
  },
  {
    "full_name": "cedric10101980/APISpringBoot",
    "name": "APISpringBoot",
    "description": "APIs exposed through Springboot which connects to the OPENAPI LLM service",
    "html_url": [
      "https://github.com/cedric10101980/APISpringBoot/blob/d5d1cab58c77f2f7994af122399c3332d03eccc6/src/main/java/com/outbound/api/config/WebClientConfig.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "sayal-aryal/openAiIntegrationToSpringBoot",
    "name": "openAiIntegrationToSpringBoot",
    "description": "This is the project to integrate Open Ai to the Spring Boot Project.",
    "html_url": [
      "https://github.com/sayal-aryal/openAiIntegrationToSpringBoot/blob/91ec88ccab2a272c6404e7cd8a0204ce8ba8a368/src/main/java/com/openaiSpring/openaiSpring/controller/MainController.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 544,
    "stars": 0
  },
  {
    "full_name": "JoaoBSilva98/FATEC_IPI_PROJETOP2_GPT",
    "name": "FATEC_IPI_PROJETOP2_GPT",
    "description": "Projeto P2 em grupo com uso da API do ChatGPT/OpenAI",
    "html_url": [
      "https://github.com/JoaoBSilva98/FATEC_IPI_PROJETOP2_GPT/blob/2161c30681946a82f9d66b8b79eeff08af5e1508/src/Requisicao.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 177,
    "stars": 0
  },
  {
    "full_name": "sinditech/sindi-ai-openai",
    "name": "sindi-ai-openai",
    "description": "Java Implementation of GPT API by OpenAI (with support for GTP-4 o1).",
    "html_url": [
      "https://github.com/sinditech/sindi-ai-openai/blob/57700663a1026fa801390caf1a5161bd0761be25/src/main/java/za/co/sindi/ai/openai/OpenAIRequest.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 9803,
    "stars": 1
  },
  {
    "full_name": "lebuffet02/OpenAI-ChatGPT",
    "name": "OpenAI-ChatGPT",
    "description": null,
    "html_url": [
      "https://github.com/lebuffet02/OpenAI-ChatGPT/blob/513a0585611c2c3a2894bec8a1fe513a5ad1f540/src/main/java/chatgpt/controller/ChatController.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 141,
    "stars": 0
  },
  {
    "full_name": "fgreco55/LangChain4j",
    "name": "LangChain4j",
    "description": "Repo to show working examples of LangChain4j",
    "html_url": [
      "https://github.com/fgreco55/LangChain4j/blob/63eb1443752c398c5f8b42adc808d71db8ddfd8e/src/main/java/Simple.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 1136,
    "stars": 2
  },
  {
    "full_name": "mkarthikkamath/CMPE277-Android-ChatGPT-Audit-Log",
    "name": "CMPE277-Android-ChatGPT-Audit-Log",
    "description": "Save Prompt and Responses on Phone for Audit Log purposes.  ",
    "html_url": [
      "https://github.com/mkarthikkamath/CMPE277-Android-ChatGPT-Audit-Log/blob/306a83393b0de6cdc08841be4f1c015955a9bc0d/app/src/main/java/com/cmpe277/chatgptapp/NetworkUtils.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 889,
    "stars": 0
  },
  {
    "full_name": "mmzsblog/yu-auto-reply",
    "name": "yu-auto-reply",
    "description": "AI 自动回复工具，支持灵活配置多个平台的监控和回答。目前已支持知识星球自动回复、OpenAI（ChatGPT）自动回答。需要自备账号API-Key",
    "html_url": [
      "https://github.com/mmzsblog/yu-auto-reply/blob/2188b5bb3aef23168028c591945ec465adadb697/src/main/java/com/yupi/autoreply/api/openai/OpenAiApi.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 1466,
    "stars": 1
  },
  {
    "full_name": "littlehui/WeChatGPT",
    "name": "WeChatGPT",
    "description": "为微信公众号接入ChatGPT。支持单用户限流，多用户私有OpenAiApiKey配置，聊天内容上下文关联，优化的被动回复消息。",
    "html_url": [
      "https://github.com/littlehui/WeChatGPT/blob/cdaf7b709415b373cdf41783c95bd71a474cf93c/dzt-service/src/main/java/com/idaymay/dzt/service/impl/OpenAiServiceImpl.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 6601,
    "stars": 5
  },
  {
    "full_name": "izzat-najah-edu/chat-agent",
    "name": "chat-agent",
    "description": "A Spring Boot library designed to abstract the interaction with the OpenAI Chat-Completion API.",
    "html_url": [
      "https://github.com/izzat-najah-edu/chat-agent/blob/e628ea62f62965d6bc758142ca2737eb322579dc/src/main/java/com/izzatalsharif/openai/chatagent/core/OpenaiConfig.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 1145,
    "stars": 0
  },
  {
    "full_name": "nicodev29/OpenAI-integration",
    "name": "OpenAI-integration",
    "description": "Integracion de OpenAI con Spring Boot",
    "html_url": [
      "https://github.com/nicodev29/OpenAI-integration/blob/ab67887c0b581ce5e48fa7f75bbba015fa99fa36/src/main/java/com/example/chatgpt/config/OpenAIClient.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 638,
    "stars": 0
  },
  {
    "full_name": "mkarthikkamath/CMPE277-Android-ChatGPT-UI-App",
    "name": "CMPE277-Android-ChatGPT-UI-App",
    "description": "The purpose of the app is to apply AsyncTask to call Open AI LLM (ChatGPT 3.5 Turbo) model in the background and display response to the Android App. ",
    "html_url": [
      "https://github.com/mkarthikkamath/CMPE277-Android-ChatGPT-UI-App/blob/ccb7d2d1a322feef655057a243264f3b84cfbd8c/app/src/main/java/com/cmpe277/chatgptapp/NetworkUtils.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 717,
    "stars": 0
  },
  {
    "full_name": "forestwanglin/openai-java",
    "name": "openai-java",
    "description": "OpenAi GPT API for Java. Including all API from OpenAI except deprecated. It especially includes stream client and jtokkit with function calculation. Including Baidu AI.",
    "html_url": [
      "https://github.com/forestwanglin/openai-java/blob/15cb89d98cbf0a2683cb750eceb30cd1402380de/service/src/main/java/xyz/felh/openai/constant/OpenAiConstants.java",
      "https://github.com/forestwanglin/openai-java/blob/15cb89d98cbf0a2683cb750eceb30cd1402380de/service/src/main/java/xyz/felh/openai/OpenAiApi.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 8904,
    "stars": 58
  },
  {
    "full_name": "CodexioLtd/openai-api-sdk",
    "name": "openai-api-sdk",
    "description": "Java Fluent SDK for OpenAI API",
    "html_url": [
      "https://github.com/CodexioLtd/openai-api-sdk/blob/584766f390964541c2a0138677038e5e06bfc937/openai-api-payload/src/main/java/bg/codexio/ai/openai/api/payload/credentials/ApiCredentials.java",
      "https://github.com/CodexioLtd/openai-api-sdk/blob/584766f390964541c2a0138677038e5e06bfc937/openai-api-http/src/main/java/bg/codexio/ai/openai/api/http/DefaultOpenAIHttpExecutor.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 32647,
    "stars": 9
  },
  {
    "full_name": "XingRay/java-openai",
    "name": "java-openai",
    "description": "openai webapi implements by java, use Spring-WebFlux framework",
    "html_url": [
      "https://github.com/XingRay/java-openai/blob/04528d078857d9372281167cdcb0ba37315dc49e/java-openai-webflux/src/main/java/com/xingray/java/openai/webflux/api/OpenaiApi.java",
      "https://github.com/XingRay/java-openai/blob/04528d078857d9372281167cdcb0ba37315dc49e/java-openai-webflux/src/main/java/com/xingray/java/openai/webflux/api/ApiBuilder.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 1419,
    "stars": 0
  },
  {
    "full_name": "agoncal/agoncal-sample-langchain4j",
    "name": "agoncal-sample-langchain4j",
    "description": "Public Samples about LangChain4j",
    "html_url": [
      "https://github.com/agoncal/agoncal-sample-langchain4j/blob/12b41efe91f790e6a2e78238ba7b017e64470100/going-further-testing-debugging/logging/src/test/java/org/agoncal/fascicle/langchain4j/testingdebugging/AuthorServiceTest.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 5853,
    "stars": 0
  },
  {
    "full_name": "hongspell/chatgpt-java",
    "name": "chatgpt-java",
    "description": "ChatGPT Java, it supports some of OpenAI's official interfaces (all interfaces will be supported in the future) and provides a conversational mode based on command-line chat.",
    "html_url": [
      "https://github.com/hongspell/chatgpt-java/blob/ea9eae535715e22500156732cca5ef0c93083e1a/src/main/java/com/hong/chatgpt/config/WebClientConfig.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 2333,
    "stars": 94
  },
  {
    "full_name": "WhiteMagic2014/gpt-magic",
    "name": "gpt-magic",
    "description": "openai chat-gpt java library ",
    "html_url": [
      "https://github.com/WhiteMagic2014/gpt-magic/blob/dfac73cb1187838692bf555d7283efb9d6931fd6/src/main/java/com/github/WhiteMagic2014/gptApi/GptRequest.java",
      "https://github.com/WhiteMagic2014/gpt-magic/blob/dfac73cb1187838692bf555d7283efb9d6931fd6/src/main/java/com/github/WhiteMagic2014/DemoClass.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 11128,
    "stars": 3
  },
  {
    "full_name": "RobJenks/gpt-codegen",
    "name": "gpt-codegen",
    "description": "BPMN model generation using GPT AI language models",
    "html_url": [
      "https://github.com/RobJenks/gpt-codegen/blob/e923475cea9188123706d11ee231e7a35e3477f0/codegen-service/llm-generation-core/src/main/java/org/rj/modelgen/llm/integrations/openai/OpenAIClientConfig.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 33868,
    "stars": 30
  },
  {
    "full_name": "woolfel/murmurio",
    "name": "murmurio",
    "description": "murmur.io is a set of libraries for OpenAI API",
    "html_url": [
      "https://github.com/woolfel/murmurio/blob/56eeee5ef400378ee8ccf9559b43513652f60e41/java/openai/src/main/java/openai/api/completion/CompletionResponse.java",
      "https://github.com/woolfel/murmurio/blob/56eeee5ef400378ee8ccf9559b43513652f60e41/java/openai/src/main/java/openai/api/chat/ChatRequest.java",
      "https://github.com/woolfel/murmurio/blob/56eeee5ef400378ee8ccf9559b43513652f60e41/java/openai/src/main/java/openai/api/completion/CompletionRequest.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 2185,
    "stars": 1
  },
  {
    "full_name": "gradusnikov/eclipse-chatgpt-plugin",
    "name": "eclipse-chatgpt-plugin",
    "description": "An Eclipse plugin that integrates with ChatGPT",
    "html_url": [
      "https://github.com/gradusnikov/eclipse-chatgpt-plugin/blob/839af2cc8e3d84aace265f16289ed6035614deff/plugins/com.github.gradusnikov.eclipse.plugin.assistai.main/src/com/github/gradusnikov/eclipse/assistai/preferences/PreferenceInitializer.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 15938,
    "stars": 96
  },
  {
    "full_name": "brunofjesus/chatgpt-java",
    "name": "chatgpt-java",
    "description": "CLASSROOM PROJECT: Simple ChatGPT chatbot in java",
    "html_url": [
      "https://github.com/brunofjesus/chatgpt-java/blob/438ce09cd340b9255fe711b39882582878e6bbae/src/main/java/pt/brunojesus/chatgpt/client/OpenAiCompletionsClient.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 666,
    "stars": 0
  },
  {
    "full_name": "speakeasy-sdks/openai-java-sdk",
    "name": "openai-java-sdk",
    "description": "Java SDK for the OpenAI API",
    "html_url": [
      "https://github.com/speakeasy-sdks/openai-java-sdk/blob/929d4aee598f75611a3647533317bd3984331f2e/lib/src/main/java/openai/javasdk/Openai.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 4629,
    "stars": 0
  },
  {
    "full_name": "Apress/ChatGPT-for-Java",
    "name": "ChatGPT-for-Java",
    "description": "Original source code for ChatGPT for Java by Bruce Hopkins",
    "html_url": [
      "https://github.com/Apress/ChatGPT-for-Java/blob/bb6ebc9a7b46ff42eb97c266913a76a036b53a06/ch2/ListModels.java",
      "https://github.com/Apress/ChatGPT-for-Java/blob/bb6ebc9a7b46ff42eb97c266913a76a036b53a06/ch4/DALLEClient.java",
      "https://github.com/Apress/ChatGPT-for-Java/blob/bb6ebc9a7b46ff42eb97c266913a76a036b53a06/ch2/ChatGPTClient.java",
      "https://github.com/Apress/ChatGPT-for-Java/blob/bb6ebc9a7b46ff42eb97c266913a76a036b53a06/ch7/ModerationClient.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 2621,
    "stars": 22
  },
  {
    "full_name": "Smitlea/Java_LLM_lesson--1",
    "name": "Java_LLM_lesson--1",
    "description": " a series of teaching lesson how to use java combine with AIGC",
    "html_url": [
      "https://github.com/Smitlea/Java_LLM_lesson--1/blob/348ea16f7c6fc23e5b452f8d5e83867f81358b2d/app.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 86,
    "stars": 0
  },
  {
    "full_name": "cis-famu/chatgpt-cli-xavthom0104",
    "name": "chatgpt-cli-xavthom0104",
    "description": "chatgpt-cli-xavthom0104 created by GitHub Classroom",
    "html_url": [
      "https://github.com/cis-famu/chatgpt-cli-xavthom0104/blob/141113a71e1088a1a84069b9b8c6b5dc33cc68b4/wtfgpt.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 55,
    "stars": 0
  },
  {
    "full_name": "coderyu5523/openai-spring-test",
    "name": "openai-spring-test",
    "description": null,
    "html_url": [
      "https://github.com/coderyu5523/openai-spring-test/blob/2b608a735894c43fcc9e1e5f362991d7975e7538/src/main/java/org/example/openaitest/ai/OpenAIService.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 1085,
    "stars": 0
  },
  {
    "full_name": "rajadilipkolli/ai-playground",
    "name": "ai-playground",
    "description": "AI implementation using langchain4j and springAI frameworks with Java",
    "html_url": [
      "https://github.com/rajadilipkolli/ai-playground/blob/40dc51cfe55e4c8e315ce062c66d12dee8ad494d/java-openai/src/main/java/com/example/learning/Main.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 9583,
    "stars": 14
  },
  {
    "full_name": "JungHyunMoon/-TOY-OPENAI_API",
    "name": "-TOY-OPENAI_API",
    "description": "openAI API를 활용한 Chat GPT 호출하고 응답받기",
    "html_url": [
      "https://github.com/JungHyunMoon/-TOY-OPENAI_API/blob/f8545ca69394684b7bd86d6b3dc54254aba45413/src/main/java/kr/co/direa/direachatbot/GptService.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 387,
    "stars": 0
  },
  {
    "full_name": "JeffreyYou/OpenAI_SDK",
    "name": "OpenAI_SDK",
    "description": "Provides an easy-to-use SDK for Java developers to interact with the APIs of open AI models.",
    "html_url": [
      "https://github.com/JeffreyYou/OpenAI_SDK/blob/896518ee40d7f1dd6f028510843ba5dd79a6e8a3/src/test/java/com/jeffrey/chatgpt/test/ClientTest.java",
      "https://github.com/JeffreyYou/OpenAI_SDK/blob/896518ee40d7f1dd6f028510843ba5dd79a6e8a3/src/test/java/com/jeffrey/chatgpt/test/ApiTest.java",
      "https://github.com/JeffreyYou/OpenAI_SDK/blob/896518ee40d7f1dd6f028510843ba5dd79a6e8a3/src/test/java/com/jeffrey/chatgpt/test/HttpClientTest.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 1241,
    "stars": 10
  },
  {
    "full_name": "ThomasVitale/langchain4j-spring-boot",
    "name": "langchain4j-spring-boot",
    "description": "LangChain4j support in Spring Boot to build AI and LLM-powered applications.",
    "html_url": [
      "https://github.com/ThomasVitale/langchain4j-spring-boot/blob/53bdb69e5ca1e8ce7ba5dbe5ce0d1d9647ea87fe/langchain4j-spring-cloud-bindings/src/test/java/io/thomasvitale/langchain4j/bindings/OpenAiBindingsPropertiesProcessorTests.java",
      "https://github.com/ThomasVitale/langchain4j-spring-boot/blob/53bdb69e5ca1e8ce7ba5dbe5ce0d1d9647ea87fe/models/langchain4j-spring-openai/src/main/java/io/thomasvitale/langchain4j/spring/openai/client/OpenAiClientConfig.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 10568,
    "stars": 16
  },
  {
    "full_name": "maxamel/OmegleGPT",
    "name": "OmegleGPT",
    "description": "JavaFX chatgpt-based application for simulating the online chat service Omegle. ",
    "html_url": [
      "https://github.com/maxamel/OmegleGPT/blob/5a9345c8011e956322d39fcb18cb8b38fb525405/src/main/java/com/gdhchat/server/ChatGPTConnector.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 1657,
    "stars": 4
  },
  {
    "full_name": "cis-famu/chatgpt-cli-YonYon2",
    "name": "chatgpt-cli-YonYon2",
    "description": "chatgpt-cli-YonYon2 created by GitHub Classroom",
    "html_url": [
      "https://github.com/cis-famu/chatgpt-cli-YonYon2/blob/41b5d6aac00417a93bed5d3f2c817e8cfc00a4d1/wtf-chatgpt/src/main/java/dev/yontor/WtfGpt.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 152,
    "stars": 0
  },
  {
    "full_name": "VishalRomel/AI-Fitness-And-Meal-Prep-Mobile-App",
    "name": "AI-Fitness-And-Meal-Prep-Mobile-App",
    "description": "This Android application is designed to gather user information and their fitness goals, leveraging cutting-edge AI technology to craft a customized workout and meal plan tailored specifically to the individual. (In Progress)",
    "html_url": [
      "https://github.com/VishalRomel/AI-Fitness-And-Meal-Prep-Mobile-App/blob/86f6bf655ff6f8c7548fa51688b9287a6836ed3f/app/src/main/java/com/example/fitnessapp/FitnessChatGPT.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 1770,
    "stars": 1
  },
  {
    "full_name": "xBrokenBrainx/api-openai",
    "name": "api-openai",
    "description": "Aplicação Java para simples integração ao Chat GPT",
    "html_url": [
      "https://github.com/xBrokenBrainx/api-openai/blob/12a70c82ef9505bb9ef37966fc8b44bdb0369218/openai/src/main/java/com/teste/openai/OpenaiApplication.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 526,
    "stars": 3
  },
  {
    "full_name": "PlexPt/chatgpt-java",
    "name": "chatgpt-java",
    "description": "ChatGPT Java SDK。支持 GPT-4o、 GPT4 API。开箱即用。An unofficial Java SDK for seamless integration with ChatGPT's GPT-3.5 and GPT-4 APIs. Ready-to-use, simple setup, and efficient for building AI-powered applications.",
    "html_url": [
      "https://github.com/PlexPt/chatgpt-java/blob/2ebd898240b082b65f41f86bfa11a282ecf7d7a2/src/test/java/com/plexpt/chatgpt/StreamTest.java",
      "https://github.com/PlexPt/chatgpt-java/blob/2ebd898240b082b65f41f86bfa11a282ecf7d7a2/src/test/java/com/plexpt/chatgpt/Test.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 3588,
    "stars": 3639
  },
  {
    "full_name": "nwrn/java-apache-openai",
    "name": "java-apache-openai",
    "description": "Programa em Java para consumir a API da Open AI. No código está fazendo um POST para o modelo 'text-davinci-003'",
    "html_url": [
      "https://github.com/nwrn/java-apache-openai/blob/12a70c82ef9505bb9ef37966fc8b44bdb0369218/openai/src/main/java/com/teste/openai/OpenaiApplication.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 526,
    "stars": 2
  },
  {
    "full_name": "DamianRavinduPeiris/ChatGPT-CLI",
    "name": "ChatGPT-CLI",
    "description": "A simple Java-CLI  based ChatGPT client built on top of the OpenAI's gpt-3 API.",
    "html_url": [
      "https://github.com/DamianRavinduPeiris/ChatGPT-CLI/blob/2ec953e3cb0ee6429ad13f15294548d66e0dc726/src/main/java/com/damian/chatgpt/main/Main.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 143,
    "stars": 0
  },
  {
    "full_name": "LuckyBian/Academic-Search-Engines",
    "name": "Academic-Search-Engines",
    "description": "IntellectSeeker tackles the challenges of overwhelming academic literature and ineffective searches by integrating an LLM-based bot and probabilistic model to personalize and refine results. It fine-tunes GPT-3.5-turbo to convert everyday language into academic terms, especially helping newcomers. ",
    "html_url": [
      "https://github.com/LuckyBian/Academic-Search-Engines/blob/395cbb5e6bc566bccde5eae1148e2306dcc5e924/src/main/java/hk/edu/hkbu/comp/gpt.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 22152,
    "stars": 1
  },
  {
    "full_name": "tencentmusic/supersonic",
    "name": "supersonic",
    "description": "SuperSonic is the next-generation AI+BI platform that unifies Chat BI (powered by LLM) and Headless BI (powered by semantic layer) paradigms.",
    "html_url": [
      "https://github.com/tencentmusic/supersonic/blob/8c6ae6252220afa542ec5d9bab30f715c45e6990/common/src/main/java/dev/langchain4j/provider/ModelProvider.java",
      "https://github.com/tencentmusic/supersonic/blob/a46e89af5681a2bad1c94d591904f9d6f2677fd4/common/src/main/java/dev/langchain4j/provider/DashscopeModelFactory.java",
      "https://github.com/tencentmusic/supersonic/blob/a46e89af5681a2bad1c94d591904f9d6f2677fd4/launchers/standalone/src/test/java/com/tencent/supersonic/util/LLMConfigUtils.java"
    ],
    "model": [
      "openai",
      "qwen"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 654105,
    "stars": 3837
  },
  {
    "full_name": "linyours/chatgpt-java-web",
    "name": "chatgpt-java-web",
    "description": "chatgpt-java-web 开源项目",
    "html_url": [
      "https://github.com/linyours/chatgpt-java-web/blob/a8513154aca26f4451c745ecbf1604cb2a7dcf6e/src/main/java/com/blue/cat/utils/ChatGptUtils.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 2720,
    "stars": 11
  },
  {
    "full_name": "zhiyongzhao/ChatGPT-JueJin-Java",
    "name": "ChatGPT-JueJin-Java",
    "description": "ChatGPT-JueJin是一款基于ChatGPT的web应用聊天软件，本项目为ChatGPT-JueJin应用的Java后端",
    "html_url": [
      "https://github.com/zhiyongzhao/ChatGPT-JueJin-Java/blob/0b0d043034a7d31226f83154c7e979b0bd3f3d4b/src/main/java/com/aijuejin/webchat/common/properties/WebChatProperties.java",
      "https://github.com/zhiyongzhao/ChatGPT-JueJin-Java/blob/0b0d043034a7d31226f83154c7e979b0bd3f3d4b/src/main/java/com/aijuejin/webchat/service/OpenAiApiService.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 2484,
    "stars": 10
  },
  {
    "full_name": "sivaprasadreddy/langchain4j-demos",
    "name": "langchain4j-demos",
    "description": "LangChain4j demos",
    "html_url": [
      "https://github.com/sivaprasadreddy/langchain4j-demos/blob/b015b1b3c54cb74301a7ff00166e63a8a4914778/langchain4j-blog-series/src/main/java/com/sivalabs/demo/plainjava/ChatDemo.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 1165,
    "stars": 6
  },
  {
    "full_name": "Lambdua/openai4j",
    "name": "openai4j",
    "description": "Java client library for OpenAI API.Full support for all OpenAI API models including Completions, Chat, Edits, Embeddings, Audio, Files, Assistants-v2, Images, Moderations, Batch, and Fine-tuning.",
    "html_url": [
      "https://github.com/Lambdua/openai4j/blob/e0a68f338c45a7d5b5f3f7d40d46cbb903f596c9/example/src/main/java/example/ServiceCreateExample.java",
      "https://github.com/Lambdua/openai4j/blob/e0a68f338c45a7d5b5f3f7d40d46cbb903f596c9/service/src/main/java/com/theokanning/openai/service/OpenAiService.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 13456,
    "stars": 394
  },
  {
    "full_name": "Qing-JiuJiu/ChatGPT-TelegramBot",
    "name": "ChatGPT-TelegramBot",
    "description": "使用 TelegramBot Api 与 ChatGPT3.5 Api 实现在 Telegram 聊天软件里与 ChatGPT AI 对话",
    "html_url": [
      "https://github.com/Qing-JiuJiu/ChatGPT-TelegramBot/blob/abe81bd19b9c135122c76a03a0041909c3244a92/src/main/java/com/xinqi/api/ChatGPTApi.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 656,
    "stars": 6
  },
  {
    "full_name": "Valkryst/Valerie",
    "name": "Valerie",
    "description": " Valerie is a customizable chat interface for OpenAI's ChatGPT. It allows users to create named personalities for tailored interactions, supports code formatting, and offers voice-to-text and text-to-speech features.",
    "html_url": [
      "https://github.com/Valkryst/Valerie/blob/3270599ef25f642c23397848ce2f88fb10d3f9da/src/main/java/com/valkryst/Valerie/gpt/ChatAPI.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 3138,
    "stars": 2
  },
  {
    "full_name": "thi4go-git/chat-gpt-quarkus",
    "name": "chat-gpt-quarkus",
    "description": "chat-gpt-quarkus",
    "html_url": [
      "https://github.com/thi4go-git/chat-gpt-quarkus/blob/f42b0c303b3a15526c382ef0dd696dfdf0524a76/src/main/java/net/ddns/cloudtecnologia/client/Chatgpt.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 1127,
    "stars": 0
  },
  {
    "full_name": "TONY-STARK-TECH-ORG/fastx-ai-llm",
    "name": "fastx-ai-llm",
    "description": "rag llm system for fastx ai",
    "html_url": [
      "https://github.com/TONY-STARK-TECH-ORG/fastx-ai-llm/blob/d376e4e30a7abd60e7fdc308d16e8ed9800bfd9d/platform-tool/src/main/java/com/fastx/ai/llm/platform/tool/nodes/NodeTool.java",
      "https://github.com/TONY-STARK-TECH-ORG/fastx-ai-llm/blob/d376e4e30a7abd60e7fdc308d16e8ed9800bfd9d/platform-tool/src/main/java/com/fastx/ai/llm/platform/tool/nodes/NodeOrganizationTool.java",
      "https://github.com/TONY-STARK-TECH-ORG/fastx-ai-llm/blob/d376e4e30a7abd60e7fdc308d16e8ed9800bfd9d/platform-tool/src/main/java/com/fastx/ai/llm/platform/tool/nodes/Node.java",
      "https://github.com/TONY-STARK-TECH-ORG/fastx-ai-llm/blob/d376e4e30a7abd60e7fdc308d16e8ed9800bfd9d/platform-tool/src/main/java/com/fastx/ai/llm/platform/tool/nodes/NodeData.java",
      "https://github.com/TONY-STARK-TECH-ORG/fastx-ai-llm/blob/d376e4e30a7abd60e7fdc308d16e8ed9800bfd9d/platform-tool/src/main/java/com/fastx/ai/llm/platform/tool/llm/function/embedding/OpenAIEmbeddingTool.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 22792,
    "stars": 0
  },
  {
    "full_name": "vigneshsaravanakumar404/Text-Messaging-App",
    "name": "Text-Messaging-App",
    "description": "Simple text messaging app with ChatGPT integration to directly chat with OpenAI's language models",
    "html_url": [
      "https://github.com/vigneshsaravanakumar404/Text-Messaging-App/blob/4098b8c8790d36ae4e822a64a1c534abac4ee6ac/app/src/main/java/com/example/textmessagingapp/GPT3ChatUtil.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 788,
    "stars": 0
  },
  {
    "full_name": "suimz/chatgpt-web-java",
    "name": "chatgpt-web-java",
    "description": "基于 Spring Boot 搭建的 ChatGPT 聊天网站项目，支持 Docker 快速部署",
    "html_url": [
      "https://github.com/suimz/chatgpt-web-java/blob/37a4c635586a6a3595fd3f109e05b0b4b813a7d4/src/main/java/com/suimz/open/chatgptweb/java/core/properties/AppProperties.java",
      "https://github.com/suimz/chatgpt-web-java/blob/37a4c635586a6a3595fd3f109e05b0b4b813a7d4/src/main/java/com/suimz/open/chatgptweb/java/service/OpenAiApiService.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 1927,
    "stars": 90
  },
  {
    "full_name": "rohan221102/comicGPT",
    "name": "comicGPT",
    "description": "This project is a Java application that generates comic strips using the power of GPT-3.5. Built with an Agile methodology, the app leverages the GPT API to create engaging and dynamic comic stories.",
    "html_url": [
      "https://github.com/rohan221102/comicGPT/blob/a0493109fd6934ff04b5312093e1fa3a54dc318e/src/main/java/ucd/lrv/Context.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 9536,
    "stars": 1
  },
  {
    "full_name": "s0571584/recipeCreator",
    "name": "recipeCreator",
    "description": "Eine App, die Rezepte erstellen kann mithilfe von OpenAI's gpt 3.5 turbo",
    "html_url": [
      "https://github.com/s0571584/recipeCreator/blob/2a8122ca9d4bc3b9a1feaaeae7c2b72d67073a8f/src/main/java/de/htwberlin/recipecreator/OpenAiCall.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 385,
    "stars": 0
  },
  {
    "full_name": "pannous/jini-plugin",
    "name": "jini-plugin",
    "description": "Copilot X like features for Jetbrains IDEs using ChatGpt and GPT-4",
    "html_url": [
      "https://github.com/pannous/jini-plugin/blob/b07a37dd8428873942f7bed3fd3b97ca735ec337/src/main/java/com/pannous/jini/openai/OpenAiAPI.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 2484,
    "stars": 40
  },
  {
    "full_name": "nxin-github/athena-chatGPT-service",
    "name": "athena-chatGPT-service",
    "description": "简单、门槛低、内存占用低，支持团队共享ChatGPT账号。轻松体会ChatGPT的魅力——服务端",
    "html_url": [
      "https://github.com/nxin-github/athena-chatGPT-service/blob/b2c9c829829f975a0101a9fe7b1d37c2c26c09d6/src/main/java/ning/xin/core/ChatClient.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 430,
    "stars": 5
  },
  {
    "full_name": "tarekmues/openai-assistant-sdk",
    "name": "openai-assistant-sdk",
    "description": null,
    "html_url": [
      "https://github.com/tarekmues/openai-assistant-sdk/blob/9f76feaf6b0fc4117a921daef8cad2ab68d98912/src/main/java/com/tarekmues/openai/assistant/configuration/WebClientConfiguration.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 1778,
    "stars": 0
  },
  {
    "full_name": "groundcat/Translator",
    "name": "Translator",
    "description": "A simple Java Swing GUI of translation tool, supports OpenAI GPT, DeepL, Google Cloud Translate",
    "html_url": [
      "https://github.com/groundcat/Translator/blob/ceab8f5d627bd41532a6e52402ea72f755c59856/src/main/java/org/fugue/TranslatorGPT3.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 450,
    "stars": 4
  },
  {
    "full_name": "Walter-Stroebel/Jllama",
    "name": "Jllama",
    "description": "Java support for the fantastic Ollama project",
    "html_url": [
      "https://github.com/Walter-Stroebel/Jllama/blob/83a43f67e6610aca0c03a6a7e3b51ee79bf80a4f/src/main/java/nl/infcomtec/jllama/DallEClient.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 3809,
    "stars": 4
  },
  {
    "full_name": "audreycj/unit-test-generator",
    "name": "unit-test-generator",
    "description": "CLI unit test generator that uses OpenAI API. Built using Spring Boot, Picocli, and GraalVM native-image.",
    "html_url": [
      "https://github.com/audreycj/unit-test-generator/blob/9485d82b37a65bbb82f244d8f3469aac843e409d/src/main/java/com/audreynanual/unittestgenerator/CommandLineOptions.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 690,
    "stars": 1
  },
  {
    "full_name": "linux-china/chatgpt-spring-boot-starter",
    "name": "chatgpt-spring-boot-starter",
    "description": "Spring Boot ChatGPT Starter",
    "html_url": [
      "https://github.com/linux-china/chatgpt-spring-boot-starter/blob/14c545c471dae3461de5bd919b5cf5f1236596cd/src/main/java/org/mvnsearch/chatgpt/model/completion/completion/CompletionRequest.java",
      "https://github.com/linux-china/chatgpt-spring-boot-starter/blob/14c545c471dae3461de5bd919b5cf5f1236596cd/src/main/java/org/mvnsearch/chatgpt/spring/service/ChatGPTServiceAutoConfiguration.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 4321,
    "stars": 488
  },
  {
    "full_name": "llmjava/llm4j",
    "name": "llm4j",
    "description": "One API to access Large Language Models in Java",
    "html_url": [
      "https://github.com/llmjava/llm4j/blob/7ca412d48a96f5fbe387bc98492bb866d04ac32c/llm4j-openai/src/main/java/org/llm4j/openai/OpenAIConfig.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 2374,
    "stars": 8
  },
  {
    "full_name": "AndresFelipe23/chatgpt-liemav",
    "name": "chatgpt-liemav",
    "description": "Proyecto realizado en la electiva de ciencia de datos de la universidad de cordoba.",
    "html_url": [
      "https://github.com/AndresFelipe23/chatgpt-liemav/blob/bdba3b679837cdf1f3b2a04175f4e963bcd3b52f/app/src/main/java/app/afes/chatgpt/Gpt3Api.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 1120,
    "stars": 1
  },
  {
    "full_name": "x136931283/tian-chatgpt-api",
    "name": "tian-chatgpt-api",
    "description": "简单的chatgpt-api接口调用，无需任何配置，启动即用",
    "html_url": [
      "https://github.com/x136931283/tian-chatgpt-api/blob/d864d9211cbe76764450f51a6ce8c1a9d91fe2a2/src/main/java/com/tianblogs/controller/Controller.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 256,
    "stars": 0
  },
  {
    "full_name": "poncema4/OpenAI-API",
    "name": "OpenAI-API",
    "description": "Get the latest discussion post and respond accordingly to the prompt using OpenAI API and Canvas Token",
    "html_url": [
      "https://github.com/poncema4/OpenAI-API/blob/f8719c20bf29520be9b3e6afb0634a4e71fe8b88/LLM.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 248,
    "stars": 0
  },
  {
    "full_name": "stq957023588/chat-gpt-mirai-console-plugin",
    "name": "chat-gpt-mirai-console-plugin",
    "description": "基于mirai的ChatGPT插件",
    "html_url": [
      "https://github.com/stq957023588/chat-gpt-mirai-console-plugin/blob/108322d27bf0c94419bd68e7deaee3ff8b7db407/src/main/java/com/fool/mirai/console/openai/OpenAi.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 873,
    "stars": 4
  },
  {
    "full_name": "artemnefedov/JavaAI",
    "name": "JavaAI",
    "description": "Lightweight Java library to interact with the OpenAI API (GPT, DALL-E, TTS, etc.)",
    "html_url": [
      "https://github.com/artemnefedov/JavaAI/blob/e7237bf079d3ea6b13d8f38f5996427f1bdf585e/src/main/java/io/github/artemnefedov/javaai/model/dalle/Dalle.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 1523,
    "stars": 24
  },
  {
    "full_name": "JamieM0/structured-outputs",
    "name": "structured-outputs",
    "description": "Java implementation of the OpenAI API structured outputs",
    "html_url": [
      "https://github.com/JamieM0/structured-outputs/blob/923d08b5f792c172cb3c234dca8c62b099f10cd6/src/OpenAIClient.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 4948,
    "stars": 0
  },
  {
    "full_name": "GuyBernstein/Game-Image-LessonPlan-AIGeneration",
    "name": "Game-Image-LessonPlan-AIGeneration",
    "description": "A web application for special education teachers to store and manage teaching resources including painting pages, games and lesson plans. content is made by AI text and image generation by chatgpt.",
    "html_url": [
      "https://github.com/GuyBernstein/Game-Image-LessonPlan-AIGeneration/blob/b6781a67c97d6c381b8019e8e532f398f2a1b274/src/main/java/com/handson/lesson_generator/service/AIImageGenerationService.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 5917,
    "stars": 0
  },
  {
    "full_name": "dadiakonov/telegram-bot-gpt",
    "name": "telegram-bot-gpt",
    "description": "Telegram Bot Demo with OpenAI GPT Integration",
    "html_url": [
      "https://github.com/dadiakonov/telegram-bot-gpt/blob/a33b8c91f47f98be514b0ae223dbf84a42b56f32/src/test/java/engineer/dima/buddy/openai/chat/OpenAiChatTest.java",
      "https://github.com/dadiakonov/telegram-bot-gpt/blob/a33b8c91f47f98be514b0ae223dbf84a42b56f32/src/main/java/engineer/dima/buddy/openai/chat/OpenAiChat.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 1641,
    "stars": 0
  },
  {
    "full_name": "DennyM55/openai-python-java-lab",
    "name": "openai-python-java-lab",
    "description": null,
    "html_url": [
      "https://github.com/DennyM55/openai-python-java-lab/blob/c1af1d048a9fecdeb2af6709d557069be565d323/openai-text-summary/java/Summarize.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 347,
    "stars": 0
  },
  {
    "full_name": "pablogzalez/OpenAI-API-Java-Request",
    "name": "OpenAI-API-Java-Request",
    "description": "This repository demonstrates how to interact with OpenAI's API using a Java test class, OpenAIRequesterTest",
    "html_url": [
      "https://github.com/pablogzalez/OpenAI-API-Java-Request/blob/eb7f74fe56537bc2fce115db865b8da59da95809/OpenAIRequesterTest.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 88,
    "stars": 1
  },
  {
    "full_name": "quarkiverse/quarkus-langchain4j",
    "name": "quarkus-langchain4j",
    "description": "Quarkus Langchain4j extension",
    "html_url": [
      "https://github.com/quarkiverse/quarkus-langchain4j/blob/b7f861ad26ab3d0c092d9440fcb0d7787a861deb/model-providers/openai/openai-vanilla/runtime/src/main/java/io/quarkiverse/langchain4j/openai/runtime/config/LangChain4jOpenAiConfig.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 128036,
    "stars": 212
  },
  {
    "full_name": "ekantchandrakar/vectordb",
    "name": "vectordb",
    "description": "A simple vector database for RAG applications",
    "html_url": [
      "https://github.com/ekantchandrakar/vectordb/blob/5bc7eb779df2ac6d2e6b3917d6ecab82480dd0bf/src/main/java/org/vectorspacedatabase/vectordb/VectorDatabase.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 1331,
    "stars": 2
  },
  {
    "full_name": "roumaysae/Recommendation-systemOfFood",
    "name": "Recommendation-systemOfFood",
    "description": "A Desktop application of meals recommandation system with OpenAI",
    "html_url": [
      "https://github.com/roumaysae/Recommendation-systemOfFood/blob/a714973f1b1bf11ddedb8a1afb6f7d91025aba83/src/main/java/com/example/javafx_foodrecommandation/presentation/MealRecommendation.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 2314,
    "stars": 0
  },
  {
    "full_name": "fb71/ragtime",
    "name": "ragtime",
    "description": "New plans, new horizons :)",
    "html_url": [
      "https://github.com/fb71/ragtime/blob/bb2d3d7fbb756a8cc16d4d77910cc9843b96dc4d/ragtime.app/src/main/java/ragtime/app/ai/OAIImageLab.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 12075,
    "stars": 0
  },
  {
    "full_name": "wzm66666/chatGPT-API",
    "name": "chatGPT-API",
    "description": "CHATGPT AI 问答助手",
    "html_url": [
      "https://github.com/wzm66666/chatGPT-API/blob/584ab33db0a244f1b70991bce9e5b806cf2c738a/chatbot-api-interfaces/src/test/java/cn/bugstack/chatbot/api/test/ApiTest.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 1339,
    "stars": 0
  },
  {
    "full_name": "VerisimilitudeX/NuanceGPT",
    "name": "NuanceGPT",
    "description": "NuanceGPT is a state-of-the-art product that leverages the powerful GPT-4o and Claude Sonnet 3.5 API to take your ChatGPT and DALLE-3 prompts to the next level!",
    "html_url": [
      "https://github.com/VerisimilitudeX/NuanceGPT/blob/b15c98a2e44209be392e3cfbc9455ef729b85907/app/src/main/java/gptpromptenhancer/App.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 293,
    "stars": 1
  },
  {
    "full_name": "AeolusJack/ChatGPT-Server",
    "name": "ChatGPT-Server",
    "description": "Provides various functions of the ChatGPT, including authentication and login, by exposing interfaces.",
    "html_url": [
      "https://github.com/AeolusJack/ChatGPT-Server/blob/4e0900b59894a97e8b636ad897a38aa41bd7920e/chatgpt-api/src/main/java/com/erget/chatgpt/api/service/impl/ChatGPTServiceImpl.java",
      "https://github.com/AeolusJack/ChatGPT-Server/blob/4e0900b59894a97e8b636ad897a38aa41bd7920e/chatgpt-api/src/main/java/com/erget/chatgpt/api/service/constant/ChatGPTModel.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 3106,
    "stars": 3
  },
  {
    "full_name": "wishpath/ai-client",
    "name": "ai-client",
    "description": "Simple OpenAi API client class. Ask string question - get string answer.",
    "html_url": [
      "https://github.com/wishpath/ai-client/blob/fb1b15cbb0a586d81a2789b8d97b47389e62206e/src/main/java/org/sa/AiClient.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 379,
    "stars": 0
  },
  {
    "full_name": "kon0di0da/ChatGPT-SDK",
    "name": "ChatGPT-SDK",
    "description": "孙雨ChatGPT-SDK实现",
    "html_url": [
      "https://github.com/kon0di0da/ChatGPT-SDK/blob/6e529a832f6581dd4974a628d2d9da9c335d181f/src/test/java/cn/bugstack/chatgpt/test/HttpClientTest.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 636,
    "stars": 0
  },
  {
    "full_name": "anuragjatofficial/code-pulse",
    "name": "code-pulse",
    "description": "CodePulse, AI Interview Platform. Practice with AI-driven simulations tailored to your skills and industry. Get instant feedback and performance insights to refine your approach. ",
    "html_url": [
      "https://github.com/anuragjatofficial/code-pulse/blob/9844efb1954157bf56b235b6cea98347046ad1f5/backend/codePlus/src/main/java/com/codePlus/services/ChatgptSerivceImpl.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 19583,
    "stars": 2
  },
  {
    "full_name": "a616567126/GPT-WEB-JAVA",
    "name": "GPT-WEB-JAVA",
    "description": "基于JDK8 AI 聊天机器人！微信公众号 Midjourney画图、卡密兑换、web 支持ChatGPT、Midjourney画图、sd画图，卡密兑换，易支付，公众号引流，邮件注册🔥",
    "html_url": [
      "https://github.com/a616567126/GPT-WEB-JAVA/blob/8b92bdafd58c9b8fcbe02a8a9321735d23348abd/src/main/java/com/intelligent/bot/service/gpt/ChatGPTStream.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 14836,
    "stars": 764
  },
  {
    "full_name": "ivermektin/caledonia",
    "name": "caledonia",
    "description": "Caledonia is a Java-based open-source tool designed to allow end users to aggregate notes and then interrogate them for insights using the power of OpenAI’s GPT model.",
    "html_url": [
      "https://github.com/ivermektin/caledonia/blob/c4fb3a62e91c31d274e0a2b4b9630bff8a97ff1d/src/main/java/org/ivermektin/caledonia/services/webServices/AIService.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 1954,
    "stars": 1
  },
  {
    "full_name": "DereWah/Skript-GPT",
    "name": "Skript-GPT",
    "description": "A Skript Addon that allows users to interface with the OpenAI API and lets them send completion requests.",
    "html_url": [
      "https://github.com/DereWah/Skript-GPT/blob/74424305472271ea13af31096d16eb7e1d404c39/src/main/java/org/derewah/skriptgpt/util/HttpRequest.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 1000,
    "stars": 6
  },
  {
    "full_name": "Qoumis/GPT-LODs-Spring_API",
    "name": "GPT-LODs-Spring_API",
    "description": "Rest API for remote use of GPT-LODS+",
    "html_url": [
      "https://github.com/Qoumis/GPT-LODs-Spring_API/blob/57b83be2e05f62d4e8906b175bf0f904369e1f2a/src/main/java/GPT/ChatGPT.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 511,
    "stars": 0
  },
  {
    "full_name": "pkini2002/ChatGPT-App",
    "name": "ChatGPT-App",
    "description": "A simple ChatGPT app built using OpenAI API using Java for the backend and OkHttp library for creating HTTP requests",
    "html_url": [
      "https://github.com/pkini2002/ChatGPT-App/blob/e0d500ae8cfa72d41c50d871fbae51cfd4a6efd6/app/src/main/java/com/example/chatgpt/MainActivity.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 912,
    "stars": 0
  },
  {
    "full_name": "virat122/My_GPT-Generative-Pre-trained-Transformer",
    "name": "My_GPT-Generative-Pre-trained-Transformer",
    "description": "final",
    "html_url": [
      "https://github.com/virat122/My_GPT-Generative-Pre-trained-Transformer/blob/ce58993130ee203f410a69971bbcdbf522c38434/app/src/main/java/com/example/mygpt/MainActivity.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 988,
    "stars": 3
  },
  {
    "full_name": "coderabbit214/bibliothecarius",
    "name": "bibliothecarius",
    "description": "Quickly build services to integrate your local data and AI models.",
    "html_url": [
      "https://github.com/coderabbit214/bibliothecarius/blob/813e63a4cfba270e590d97e4a488bbe14de2a69d/bibliothecarius/src/main/java/com/coderabbit214/bibliothecarius/openai/OpenAiService.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 10004,
    "stars": 455
  },
  {
    "full_name": "jukofyork/aiassistant",
    "name": "aiassistant",
    "description": "An Eclipse IDE plugin that uses OpenAI compatible API.",
    "html_url": [
      "https://github.com/jukofyork/aiassistant/blob/d4ceb746e96b8c9fc5fd3b089fdd686e497fcfc5/eclipse.plugin.aiassistant/src/eclipse/plugin/aiassistant/Constants.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 22091,
    "stars": 9
  },
  {
    "full_name": "my-fastcms/nexfly",
    "name": "nexfly",
    "description": "Nexfly是一款深度整合Spring-Ai框架构建的微服务开源项目，拥有RAG，以及AI编排等功能，旨在简化包含人工智能功能的应用程序的开发，避免不必要的复杂性，让企业接入ai能力变得更加容易",
    "html_url": [
      "https://github.com/my-fastcms/nexfly/blob/78a17c81f53d24092ffceab8004cf7f86f8f21b6/nexfly-common/ai-common/src/main/java/com/nexfly/ai/tongyi/api/TongYiAiImageApi.java",
      "https://github.com/my-fastcms/nexfly/blob/78a17c81f53d24092ffceab8004cf7f86f8f21b6/nexfly-common/ai-common/src/main/java/com/nexfly/ai/tongyi/api/TongYiAiApiConstants.java"
    ],
    "model": [
      "openai",
      "qwen"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 14033,
    "stars": 7
  },
  {
    "full_name": "omarkashour/ComputerScienceAssistant",
    "name": "ComputerScienceAssistant",
    "description": "An Assistant application for Birzeit University students that contains all the students needs for the major, Plus an integrated ai assistant powered by gpt-3.5-turbo.",
    "html_url": [
      "https://github.com/omarkashour/ComputerScienceAssistant/blob/6728894679ce42eede7b71dccc41d87dfbc35c20/CsAssistant/src/Old.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 2387,
    "stars": 1
  },
  {
    "full_name": "botirk38/fact-checker",
    "name": "fact-checker",
    "description": "TruthLens is a cutting-edge video analysis platform that leverages artificial intelligence to scrutinize claims made in video content, providing a comprehensive fact-checking and content categorization solution.",
    "html_url": [
      "https://github.com/botirk38/fact-checker/blob/9080c77ea3131f1e3aa27db74dd33f305e6a8560/FactChecker/src/test/java/com/fact_checker/FactChecker/service/VideoProcessorTest.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 6674,
    "stars": 5
  },
  {
    "full_name": "GregorGolen/adoptpetLLMusage",
    "name": "adoptpetLLMusage",
    "description": "Example of POC for hyper declarative programming paradigm. In this simple app business logic (in this case reduced to service) is generated ad hoc by AI and dynamically executed in the runtime.",
    "html_url": [
      "https://github.com/GregorGolen/adoptpetLLMusage/blob/e23f7780e92cbd2ac6f09141ea1ad87038f5c008/src/main/java/org/example/OpenAIService.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 13732,
    "stars": 0
  },
  {
    "full_name": "miladhub/chat-ai",
    "name": "chat-ai",
    "description": "Example of using a conversational AI with embeddings with Java",
    "html_url": [
      "https://github.com/miladhub/chat-ai/blob/54ca485138459b4db030eced75a0637154854789/chat-ai-main/src/main/java/chatai/HttpUrlConnectionOpenAiClient.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 1489,
    "stars": 0
  },
  {
    "full_name": "ImethP2/archie-chatbot",
    "name": "archie-chatbot",
    "description": "chatbot app for android powered by chatgpt",
    "html_url": [
      "https://github.com/ImethP2/archie-chatbot/blob/c25a99142dd2c721584b9902788557f09210684e/MyApplication/app/src/main/java/com/example/myapplication/MainActivity.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 952,
    "stars": 0
  },
  {
    "full_name": "cupybara/java-langchains",
    "name": "java-langchains",
    "description": "A Java 8+ LangChain implementation. Build powerful LLM based applications in an (enterprise) Java context.",
    "html_url": [
      "https://github.com/cupybara/java-langchains/blob/28a4ad79c72801e4df5dbe6cc5456b31686c487f/src/main/java/io/github/cupybara/javalangchains/chains/llm/openai/OpenAiChain.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 3074,
    "stars": 39
  },
  {
    "full_name": "zhao458114067/gpt-wechat",
    "name": "gpt-wechat",
    "description": "公众号接入chatGPT,只需要有公众账号、chatGPT账号、通过配置启动，开箱即用。 token计算，自动组合聊天上下文。天气预报/天气预警推送功能",
    "html_url": [
      "https://github.com/zhao458114067/gpt-wechat/blob/fbbdea424c696c6eaf21cd84a2e3af4ed0386144/src/main/java/com/gpt/wechat/service/impl/ChatGptServiceImpl.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 2256,
    "stars": 8
  },
  {
    "full_name": "PastKing/ChatGPT-Android",
    "name": "ChatGPT-Android",
    "description": "基于Android Studio的ChatGPT服务",
    "html_url": [
      "https://github.com/PastKing/ChatGPT-Android/blob/3a6744eb82c6638f98a13f3366079f80568d014d/app/src/main/java/com/example/gpt/MainActivity.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 927,
    "stars": 10
  },
  {
    "full_name": "hkh1012/langboot",
    "name": "langboot",
    "description": "Using Langchain's ideas to build SpringBoot AI applications   |  用langchain的思想，构建SpringBoot AI应用",
    "html_url": [
      "https://github.com/hkh1012/langboot/blob/03227e6b0216329d58e87ecf0de5edf649763cd1/src/main/java/com/hkh/ai/chain/llm/capabilities/generation/vision/openai/OpenAiVisionChatService.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 87550,
    "stars": 171
  },
  {
    "full_name": "zhangyunan1994/ChattyAI",
    "name": "ChattyAI",
    "description": "This project is a ChatGPT UI system that utilizes OpenAI to provide a chatbot service with user management, billing, and sensitive word filtering. The system has a simple and user-friendly interface and is cloud-based for secure and stable operation globally.",
    "html_url": [
      "https://github.com/zhangyunan1994/ChattyAI/blob/a1e768bbfa4e801eab4fcf7d78669afeeeed3d28/chattyai-java/openai-java/src/test/java/cike/openai/ChattyAIServiceTest.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 16021,
    "stars": 46
  },
  {
    "full_name": "SirBento/AskBento",
    "name": "AskBento",
    "description": "An OpenAI chatting Application",
    "html_url": [
      "https://github.com/SirBento/AskBento/blob/ec3244cb929f1396ac54ced5fa5e6979e79ce803/app/src/main/java/com/example/askbento/MainActivity.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 2994,
    "stars": 2
  },
  {
    "full_name": "dddadan/chat-gpt-wechat",
    "name": "chat-gpt-wechat",
    "description": "chatgpt微信聊天小程序。java编写服务器，实现chatgpt接口的调用，微信小程序用于聊天。二者基于webSocket进行通信",
    "html_url": [
      "https://github.com/dddadan/chat-gpt-wechat/blob/68bab51ebb3bde268894b17ca1f5b2198dbc1f65/gpt-manage/ants-admin/src/main/test/com/ants/test/AntsApplicationTest.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 90045,
    "stars": 62
  },
  {
    "full_name": "shenyubao/javachain",
    "name": "javachain",
    "description": "JavaChain 用于快速搭建LLM应用，参考了 LangChain 的架构设计，基于Java8实现。",
    "html_url": [
      "https://github.com/shenyubao/javachain/blob/70ca2acb2c8c9452a2c3150a03ccdd04666b3617/src/main/java/com/shenyubao/javachain/llms/AzureOpenAI.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 4631,
    "stars": 36
  },
  {
    "full_name": "bigboxer23/meural-control",
    "name": "meural-control",
    "description": "Push content to a Meural display from sources not supported by the official software. Supported sources include OpenAI TextCompletion (Dall-e 3), OpenAI ChatGPT (Dall-e 3), a Google Photos Album, James Webb Space Telescope, or an external URL.",
    "html_url": [
      "https://github.com/bigboxer23/meural-control/blob/96155c9269339fb1904fccf06b191e68e50f3fc8/src/main/java/com/bigboxer23/meural_control/OpenAIComponent.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 2620,
    "stars": 7
  },
  {
    "full_name": "didalgolab/chatgpt-intellij-plugin",
    "name": "chatgpt-intellij-plugin",
    "description": "Yet another JetBrains extension that enables you to use ChatGPT within your favorite IDE.",
    "html_url": [
      "https://github.com/didalgolab/chatgpt-intellij-plugin/blob/af97a8df4c42280855d092a74aff4977fd98db99/src/main/java/com/didalgo/intellij/chatgpt/settings/GeneralSettingsPanel.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 10823,
    "stars": 35
  },
  {
    "full_name": "Qoumis/GPT-LODs_plus",
    "name": "GPT-LODs_plus",
    "description": "A Chat Application for Enriching and Validating  ChatGPT Responses through Knowledge Graphs",
    "html_url": [
      "https://github.com/Qoumis/GPT-LODs_plus/blob/61a7aa650b0321b7531461db8df80b6fd2ba3040/src/main/java/GPT/ChatGPT.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 2103,
    "stars": 0
  },
  {
    "full_name": "Venkat2552004/MiniGPT",
    "name": "MiniGPT",
    "description": "MiniGPT is a Chatbot that uses the powerful Gemini for text generation using given input prompts",
    "html_url": [
      "https://github.com/Venkat2552004/MiniGPT/blob/5da695e8b41b9f89d6d29819ea1a0c3acd9fc8cc/app/src/main/java/com/example/minigpt/MainActivity.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 900,
    "stars": 1
  },
  {
    "full_name": "Flashify-Inc/Flashify",
    "name": "Flashify",
    "description": "Flashcard learning tool leveraging AI for rapid flashcard generation",
    "html_url": [
      "https://github.com/Flashify-Inc/Flashify/blob/6997bf96edadd547f020cb1b80182a26317855ae/app/src/main/java/com/example/flashify/MagicTextViewActivity.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 2629,
    "stars": 0
  },
  {
    "full_name": "BR184/ChatGPT-Vue-Springboot",
    "name": "ChatGPT-Vue-Springboot",
    "description": "基于Spring Boot + Redis + ChatGPT + Spring Security 的 GPT 个性化助理平台。用户可以自定义或共享 GPT 的 Prompt 等参数，获得更加个性化的服务。并可创建并保留多条对话记录，实时显示剩余对话Token等。",
    "html_url": [
      "https://github.com/BR184/ChatGPT-Vue-Springboot/blob/2fd92c9a61048634916f01f9f1f43b0b356af30a/chatgGPTProject/src/test/java/com/klbr184/ChatTest.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 17978,
    "stars": 1
  },
  {
    "full_name": "lazzy07/llm_as_np_heuristic",
    "name": "llm_as_np_heuristic",
    "description": null,
    "html_url": [
      "https://github.com/lazzy07/llm_as_np_heuristic/blob/d71b560b334397d65c8d529b47b89f196a97d893/src/lazzy07/llmheuristic/GptApi.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 836498,
    "stars": 0
  },
  {
    "full_name": "FatihEmin48/OpenAI-Image-Generation-App",
    "name": "OpenAI-Image-Generation-App",
    "description": "Image Generator App",
    "html_url": [
      "https://github.com/FatihEmin48/OpenAI-Image-Generation-App/blob/476b082912ec9640dda056b2eff6af01a0a217eb/Image%20Generator/app/src/main/java/com/fatiheminkarahan/imagegenerator/ImageGenerator.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 862,
    "stars": 0
  },
  {
    "full_name": "leonid20000/OdinRunes",
    "name": "OdinRunes",
    "description": "Odin Runes, a java-based GPT client, facilitates interaction with your preferred GPT model right through your favorite text editor. There is more: It also facilitates prompt-engineering by extracting context from diverse sources using technologies such as OCR, enhancing overall productivity and saving costs.",
    "html_url": [
      "https://github.com/leonid20000/OdinRunes/blob/bf0b90485f08286aabbff8c604dae377de64c3e7/src/main/java/org/odinware/odinrunes/OpenAIWellsOfWisdom.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 8537,
    "stars": 82
  },
  {
    "full_name": "U109/z-chatgpt-data",
    "name": "z-chatgpt-data",
    "description": "Chatgpt套壳程序后端实现",
    "html_url": [
      "https://github.com/U109/z-chatgpt-data/blob/c45e8ea6044bbb99299f79b6f62b5ba334ed8d39/src/main/java/com/zzz/service/IOpenAiApi.java",
      "https://github.com/U109/z-chatgpt-data/blob/c45e8ea6044bbb99299f79b6f62b5ba334ed8d39/src/main/java/com/zzz/session/defaults/DefaultOpenAiSession.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 1620,
    "stars": 1
  },
  {
    "full_name": "rohanworld/Snapify",
    "name": "Snapify",
    "description": "Text-to-Image Conversion Android App based on OpenAI's Dall-E API",
    "html_url": [
      "https://github.com/rohanworld/Snapify/blob/d62eddee951c64e4aa20d8cb748129fe40ddcf3b/app/src/main/java/com/rohan/android/java/app/texttoimage/snapify/MainActivity.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 870,
    "stars": 0
  },
  {
    "full_name": "MatanelM/ApplicationModerationModule",
    "name": "ApplicationModerationModule",
    "description": "Android java module for messages moderation using openai moderation api",
    "html_url": [
      "https://github.com/MatanelM/ApplicationModerationModule/blob/277fd9db90848df61abd0e372941017c1d9e6096/moderation/src/main/java/com/example/moderation/openai/Moderator.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 2037,
    "stars": 0
  },
  {
    "full_name": "KhaledElshokri/Slouch-Patrol",
    "name": "Slouch-Patrol",
    "description": "A wearable device to monitor slouching by providing the user with a real-time score by leveraging IMUs for data collection.",
    "html_url": [
      "https://github.com/KhaledElshokri/Slouch-Patrol/blob/cf3c8371a442420e57825045e35ec3308942f9ee/SlouchPatrolApp/app/src/main/java/com/example/slouch_patrol_app/Controller/Activities/ChatBotActivity.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 3789,
    "stars": 1
  },
  {
    "full_name": "lutencjusz/SimpleNeuralNetwork",
    "name": "SimpleNeuralNetwork",
    "description": "SimpleNeuralNetwork",
    "html_url": [
      "https://github.com/lutencjusz/SimpleNeuralNetwork/blob/1abc5f96f9e6cbd87b011ff613148671182e1106/src/main/java/util/ChatGptApi.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 1407,
    "stars": 0
  },
  {
    "full_name": "lemonguge/autogen4j",
    "name": "autogen4j",
    "description": "Design inspired by Microsoft's AutoGen. 设计灵感源自微软的 AutoGen，除了传统的 Single-Agent 模式，引入了 Multi-Agent 协作解决复杂的问题。对于 Java 开发者而言，助力你探索不同的应用场景和业务需求。",
    "html_url": [
      "https://github.com/lemonguge/autogen4j/blob/582da1489b11d4f4079451c93637adb7e9dce1b1/src/main/java/cn/homj/autogen4j/support/Client.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 3018,
    "stars": 14
  },
  {
    "full_name": "itlemon/chatgpt4j",
    "name": "chatgpt4j",
    "description": "chatgpt4j 是一个用于访问 ChatGPT API 的 Java 客户端库，支持 OpenAI 全部的接口，几行代码就可以帮助用户实现将 ChatGPT 快速接入到自己的项目中。",
    "html_url": [
      "https://github.com/itlemon/chatgpt4j/blob/167893c3b5a4ae051d1cd3bdfddf6425fa232e40/src/main/java/cn/codingguide/chatgpt4j/api/OpenAiApi.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 4486,
    "stars": 16
  },
  {
    "full_name": "liaocatcat/openai-spring-sse",
    "name": "openai-spring-sse",
    "description": "chatgpt-java,sse输出，需要配合前端使用",
    "html_url": [
      "https://github.com/liaocatcat/openai-spring-sse/blob/6e40a263b8853c0bd18fd8cb5d42c988f27b3aa5/openai-spring-boot-starter/src/main/java/cn/gjsm/miukoo/utils/OpenAiStreamClient.java",
      "https://github.com/liaocatcat/openai-spring-sse/blob/6e40a263b8853c0bd18fd8cb5d42c988f27b3aa5/openai-spring-boot-starter/src/main/java/cn/gjsm/miukoo/utils/OpenAiUtils.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 994,
    "stars": 2
  },
  {
    "full_name": "paulparkinson/ai-and-oracle-for-good",
    "name": "ai-and-oracle-for-good",
    "description": "Developing with OpenAI, Hugging Face, and Oracle Database and AI Services (Use Cases for the Better Good)",
    "html_url": [
      "https://github.com/paulparkinson/ai-and-oracle-for-good/blob/a11fc3f2b65f9e61ae05b9559c16f131065a0794/src/main/java/oracleai/GenerateAPictureStoryUsingOnlySpeech.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "profiq/docgen",
    "name": "docgen",
    "description": "IntelliJ plugin to generate Python documentation using OpenAI's GPT model",
    "html_url": [
      "https://github.com/profiq/docgen/blob/ae496bc476cf25dccba8951397d47c0eacad396a/src/main/java/com/profiq/codexor/GenerateDocumentationAction.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 1049,
    "stars": 2
  },
  {
    "full_name": "Frinkles/ChatGPT-Android",
    "name": "ChatGPT-Android",
    "description": "An android integration of ChatGPT and DALLE",
    "html_url": [
      "https://github.com/Frinkles/ChatGPT-Android/blob/c40b39b6de6c8f4d23cb0bd9f0c06897b54b44ad/app/src/main/java/com/ai/alchemist/MainActivity.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 1635,
    "stars": 0
  },
  {
    "full_name": "super6wenzi/chatgpt-aidoc",
    "name": "chatgpt-aidoc",
    "description": "OpenAI chatGPT 微信小程序 大型预训练语言模型 A weChat based on OpenAI API (gpt-3.5-turbo) GPT-4，AI营销助手，chatgpt3.5，chatgpt4，人工智能细化落地",
    "html_url": [
      "https://github.com/super6wenzi/chatgpt-aidoc/blob/504d723cf14733d8c053205c7cc566a6db75b5db/foodgptapi-master/weegoo-module/weegoo-application/src/main/java/cn/weegoo/food/service/SseEmitterUTF8Service.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 35377,
    "stars": 4
  },
  {
    "full_name": "infott2t/JavaSwingChatGpt",
    "name": "JavaSwingChatGpt",
    "description": "자바 스윙에서 구현한 ChatGPT입니다. OpenAI의 API Key가 필요합니다.",
    "html_url": [
      "https://github.com/infott2t/JavaSwingChatGpt/blob/0a87798576310d606ca5a3364a329994a42e3034/app/src/main/java/gptcode/SwingUI.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 555,
    "stars": 0
  },
  {
    "full_name": "Skythinker616/gpt-assistant-android",
    "name": "gpt-assistant-android",
    "description": "免费的ChatGPT API的安卓语音助手，可用音量键唤起并进行语音交流，支持联网、Vision拍照识图、提问模板等功能 | A free ChatGPT API voice assistant for Android, activated via volume keys for voice interaction, supporting features such as network connectivity, Vision photo recognition, and question templates.",
    "html_url": [
      "https://github.com/Skythinker616/gpt-assistant-android/blob/11e531b018f98698d7ef55e3f93d9bccb21af6b0/app/src/main/java/com/skythinker/gptassistant/GlobalDataHolder.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 11978,
    "stars": 837
  },
  {
    "full_name": "auzpatwary37/matsim_llm_plugins",
    "name": "matsim_llm_plugins",
    "description": "The goal of this project is to write plugins for connecting large language model (LLM) agents to MATSim.",
    "html_url": [
      "https://github.com/auzpatwary37/matsim_llm_plugins/blob/1a0a2b2b05182e85ece25968cad99ef4df811009/matsim_llm_plugins/src/main/java/rest/ChatCompletionClient.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 2816,
    "stars": 1
  },
  {
    "full_name": "UwUTastisch/JavaBeth",
    "name": "JavaBeth",
    "description": "This is a LLM-DiscordBot, that can write with users in Specific Channles.",
    "html_url": [
      "https://github.com/UwUTastisch/JavaBeth/blob/fa8b323e2ac7bed2e38c8f6052624e66f659d842/src/main/java/net/uwutastisch/beth/BethJava.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 537,
    "stars": 0
  },
  {
    "full_name": "persistencelkg/GPT-UnitTest-Plugin",
    "name": "GPT-UnitTest-Plugin",
    "description": "基于GPT的单元测试用例插件",
    "html_url": [
      "https://github.com/persistencelkg/GPT-UnitTest-Plugin/blob/2c5be82fd751ced0468ce9d661b1be9cfb057d9c/src/main/java/org/lkg/core/RequestService.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 2785,
    "stars": 0
  },
  {
    "full_name": "TarunSingh2002/Tell-tale",
    "name": "Tell-tale",
    "description": "The Tell Tale App is a native application designed to provide customizable and engaging bedtime stories for children. By leveraging the ChatGPT API, Java backend, and XML for design, this app offers a seamless and enjoyable experience for both parents and children alike.",
    "html_url": [
      "https://github.com/TarunSingh2002/Tell-tale/blob/e289b4c1d26408e844c2f2fb764e12381db8b562/app/src/main/java/com/example/myapplication/MainActivity.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 14671,
    "stars": 4
  },
  {
    "full_name": "VerisimilitudeX/TaxGPT",
    "name": "TaxGPT",
    "description": "Say goodbye to the hassle of tax season with TaxGPT, the GPT-4-Vision powered AI tax assistant that helps you navigate the complex world of taxation with ease and precision.",
    "html_url": [
      "https://github.com/VerisimilitudeX/TaxGPT/blob/41decee997884090ef88ec4e548b24712d5e4022/app/src/main/java/taxgpt/TaxGPT.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 774,
    "stars": 9
  },
  {
    "full_name": "TheSittingCat/belief_enhanced_diarc",
    "name": "belief_enhanced_diarc",
    "description": "This is the repository for the implementation of Diarc with an LLM as the belief maintainer. ",
    "html_url": [
      "https://github.com/TheSittingCat/belief_enhanced_diarc/blob/27db883630170cf166657e1e9af454f478005bc2/core/src/main/java/edu/tufts/hrilab/llm/openai/OpenaiClient.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 342897,
    "stars": 0
  },
  {
    "full_name": "feddericovonwernich/spring-ai-function-calling-service",
    "name": "spring-ai-function-calling-service",
    "description": "Utility library that configures a service that can process user input and call annotated methods using an OpenIA model.",
    "html_url": [
      "https://github.com/feddericovonwernich/spring-ai-function-calling-service/blob/e7c3cd1f4b07c367ffe4d805805a88cb45fbbc83/spring-ai-function-calling-service/src/main/java/io/github/feddericovonwernich/spring_ai/function_calling_service/openia/service/ServiceOpenAI.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 3721,
    "stars": 0
  },
  {
    "full_name": "ai-for-java/openai4j",
    "name": "openai4j",
    "description": "Java client library for OpenAI API",
    "html_url": [
      "https://github.com/ai-for-java/openai4j/blob/9433575caf7e3d889b8e2c8f3e50276eeba9d8d0/src/main/java/dev/ai4j/openai4j/OpenAiClient.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 10083,
    "stars": 143
  },
  {
    "full_name": "isliudong/GPT-copilot-plugin",
    "name": "GPT-copilot-plugin",
    "description": "GPT plugin for IntelliJIDEA",
    "html_url": [
      "https://github.com/isliudong/GPT-copilot-plugin/blob/ccf4f8f23da0d657ac47e175d15d76c69f58fa44/src/main/java/com/ld/chatgptcopilot/util/ChatGPTCopilotRequestUtil.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 7819,
    "stars": 0
  },
  {
    "full_name": "Emirateyang/llm-agent",
    "name": "llm-agent",
    "description": null,
    "html_url": [
      "https://github.com/Emirateyang/llm-agent/blob/53b7b9aee115760a613639328f7c1e82de0a29c9/llm-agent-azure/src/main/java/com/llmagent/azure/embedding/AzureAiEmbeddingModel.java",
      "https://github.com/Emirateyang/llm-agent/blob/53b7b9aee115760a613639328f7c1e82de0a29c9/llm-agent-azure/src/main/java/com/llmagent/azure/chat/AzureAiChatModel.java",
      "https://github.com/Emirateyang/llm-agent/blob/53b7b9aee115760a613639328f7c1e82de0a29c9/llm-agent-azure/src/main/java/com/llmagent/azure/chat/AzureAiStreamingChatModel.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 62493,
    "stars": 5
  },
  {
    "full_name": "shican1234/chatgpt-java-uniapp",
    "name": "chatgpt-java-uniapp",
    "description": "java开发的chatgpt小程序  前端使用uniapp,可打包多端运行,APP,H5,公众号,小程序等 ,三级分销,卡密充值,提供opai的反向代理,支持WEB端，SD绘画等AI绘画功能。基础的CHATPDF阅读功能，MarkDown语法，代码高亮，表格格式化等。",
    "html_url": [
      "https://github.com/shican1234/chatgpt-java-uniapp/blob/92e687e9073304fe97b8d3d9371e82677a568e5e/renren-api/src/main/java/io/renren/commom/CommonService.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 21483,
    "stars": 340
  },
  {
    "full_name": "Pragadhesh/RoamingKitchen-Bunnyshell",
    "name": "RoamingKitchen-Bunnyshell",
    "description": "Roaming Kitchen application",
    "html_url": [
      "https://github.com/Pragadhesh/RoamingKitchen-Bunnyshell/blob/66df91ed172cd2a3ee93b9a204df56a35b9729ec/Backend/src/main/java/com/app/theroamingkitchen/service/MenuItemService.java",
      "https://github.com/Pragadhesh/RoamingKitchen-Bunnyshell/blob/66df91ed172cd2a3ee93b9a204df56a35b9729ec/Backend/src/main/java/com/app/theroamingkitchen/service/FoodDishService.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 37687,
    "stars": 0
  },
  {
    "full_name": "Achaljs/AskMe",
    "name": "AskMe",
    "description": "your Own AI Assistant Jenny, She can do lots of amazing things , she is powered by openAI",
    "html_url": [
      "https://github.com/Achaljs/AskMe/blob/ee7979b0a3d9b585d162b68034ba6a245671e18d/app/src/main/java/com/example/askit/MainActivity.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 2057,
    "stars": 0
  },
  {
    "full_name": "quaziii/LSLLM",
    "name": "LSLLM",
    "description": null,
    "html_url": [
      "https://github.com/quaziii/LSLLM/blob/a53484cce52ef52c9af24e0f75d24dd172d9e8f2/src/ai/synthesis/LLM/GPT35Request.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 221317,
    "stars": 1
  },
  {
    "full_name": "ManithLD/GameOn-AndroidApp",
    "name": "GameOn-AndroidApp",
    "description": "Personal project: fullstack android app. Designed to help and encourage users to be healthier.",
    "html_url": [
      "https://github.com/ManithLD/GameOn-AndroidApp/blob/0dbf80eec651c010ac4a5b43e8760ab80eea6847/app/src/main/java/com/example/gameon/homeFragment.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 4090,
    "stars": 4
  },
  {
    "full_name": "Starcloud-Cloud/java-langchain",
    "name": "java-langchain",
    "description": "一个Java 8+的LangChain实现。在(企业)Java环境中构建强大的基于LLM的应用程序。附带详细的Java入门的LLM学习课程",
    "html_url": [
      "https://github.com/Starcloud-Cloud/java-langchain/blob/2ffc61a93d39d797ce67fcba055147819f340f51/src/main/java/com/starcloud/ops/llm/langchain/core/model/chat/ChatOpenAI.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 12158,
    "stars": 86
  },
  {
    "full_name": "Nasdanika/retrieval-augmented-generation",
    "name": "retrieval-augmented-generation",
    "description": "RAG in Java",
    "html_url": [
      "https://github.com/Nasdanika/retrieval-augmented-generation/blob/9c8d576a0c7a1b4dfc7fa5219b4b5a29b4e83f36/open-ai/src/test/java/org/nasdanika/rag/openai/tests/TestAzureOpenAI.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 16056,
    "stars": 0
  },
  {
    "full_name": "DerikZhang/SkyCode",
    "name": "SkyCode",
    "description": "JetBrain plugin for connecting openai gpt api",
    "html_url": [
      "https://github.com/DerikZhang/SkyCode/blob/1af3704f5017ed84a57f7335c553078fc49288e3/src/main/java/com/wowho/skycode/settings/OpenAISettingsPanel.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 4595,
    "stars": 2
  },
  {
    "full_name": "ronojoyb23/course-builder-lite",
    "name": "course-builder-lite",
    "description": "demo code for coursebuilder using whisper API/OpenAI Chat GPT",
    "html_url": [
      "https://github.com/ronojoyb23/course-builder-lite/blob/766bc5863c653dfaf1d67eb4a9030c7259708cf3/coursebuilder/src/main/java/com/example/coursebuilder/demo/services/TranscriptionService.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 890,
    "stars": 0
  },
  {
    "full_name": "maartenn/chess-chatgpt-images",
    "name": "chess-chatgpt-images",
    "description": "project to play chess on chess.com with chatgpt using screenshots of the board",
    "html_url": [
      "https://github.com/maartenn/chess-chatgpt-images/blob/c0af58d3011600fd3c4380d7d000fee7572e6ea7/src/main/java/org/example/Main.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 531,
    "stars": 0
  },
  {
    "full_name": "RahulVanchate008/digital-library-backend",
    "name": "digital-library-backend",
    "description": "Digital Library using Elasticsearch and OpenAI Chatbot:",
    "html_url": [
      "https://github.com/RahulVanchate008/digital-library-backend/blob/8def8b43efe0d7fce7eb1c3af0bddf7ea6dad1d3/digital-library-backend/src/main/java/com/webprogramming/project/service/UserServiceImpl.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 1539,
    "stars": 0
  },
  {
    "full_name": "supratim-coder/AndroidAppWithChatbot",
    "name": "AndroidAppWithChatbot",
    "description": "This is an Android Application developed on Android studio with Java language. It is integrated with Gemini 1.5 flash API model which acts as an AI chatbot",
    "html_url": [
      "https://github.com/supratim-coder/AndroidAppWithChatbot/blob/d8d4a66723de1b965eadf51f9e417c82845868f6/app/src/main/java/com/example/gupshup/ChatGPTFragment.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 3667,
    "stars": 1
  },
  {
    "full_name": "ilenhanako/Gobble",
    "name": "Gobble",
    "description": "Developed a native Android app that centralizes reviews from other platforms, and utilizes Generative AI, ChatGPT’s LLM to give restaurant recommendations based on user preferences and the restaurants’ profiles.",
    "html_url": [
      "https://github.com/ilenhanako/Gobble/blob/437ee7545e686616140292c734b9963dbcb9067c/app/src/main/java/com/sutd/t4app/ui/restaurant/CompareFragment.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 10023,
    "stars": 1
  },
  {
    "full_name": "icecoins/ChatGPT_Server",
    "name": "ChatGPT_Server",
    "description": "使用springboot+websocket与APP进行即时通讯，中转 https://api.openai.com 的流量",
    "html_url": [
      "https://github.com/icecoins/ChatGPT_Server/blob/7f43b7603e0d5a3e9f57b4ecfd04aef4291ca51f/src/main/java/com/mod_api/WebSocket.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 730,
    "stars": 11
  },
  {
    "full_name": "jpr-devx/PeopleCodeOpenAI_Extension",
    "name": "PeopleCodeOpenAI_Extension",
    "description": "Repo solely for the extension of Dr. David Wolber's (University of San Francisco, CS514) PeopleCodeOpenAI library",
    "html_url": [
      "https://github.com/jpr-devx/PeopleCodeOpenAI_Extension/blob/78cae19a2d528f83025437b2679f62fc29761a84/src/main/java/ai/peoplecode/OpenAIConversation.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 473,
    "stars": 0
  },
  {
    "full_name": "shixiangcap/llama-pinyinIME",
    "name": "llama-pinyinIME",
    "description": "Android Pinyin IME for port of Facebook's LLaMA model in C/C++",
    "html_url": [
      "https://github.com/shixiangcap/llama-pinyinIME/blob/98d2f301f15550387dddd5eb09d479aa4febbae3/app/src/main/java/com/sx/llama/pinyinime/PinyinIME.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 68509,
    "stars": 25
  },
  {
    "full_name": "icecoins/ChatGPT_Android",
    "name": "ChatGPT_Android",
    "description": "an android demo to use openai's api  / 一个调用openai接口实现与ChatGPT对话的APP示例",
    "html_url": [
      "https://github.com/icecoins/ChatGPT_Android/blob/7b28ea64b2f2e8ebaab4040a2414e37ccac124db/app/src/main/java/com/chat/Chat.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 2627,
    "stars": 52
  },
  {
    "full_name": "tinystruct/smalltalk",
    "name": "smalltalk",
    "description": "A tinystruct-based chat module which integrated with @OpenAI GPT-4 / 3.5-turbo / ChatGPT. @tinystruct",
    "html_url": [
      "https://github.com/tinystruct/smalltalk/blob/10b542f4bd2defb2bec7cd64d8d23f71c49e196d/src/main/java/custom/application/v1/smalltalk.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 22196,
    "stars": 353
  },
  {
    "full_name": "abdummm/Artificial-Network-Based-Video-Engine",
    "name": "Artificial-Network-Based-Video-Engine",
    "description": "This Java-based application leverages JavaFX and the OpenAI API to transform text prompts into customizable videos. Key features include the ability to add and sync audio, edit individual frames, adjust aspect ratios, and modify text attributes such as font size and color.",
    "html_url": [
      "https://github.com/abdummm/Artificial-Network-Based-Video-Engine/blob/37710965117b66b0391e6afed2199411803ef6c6/src/main/java/com/example/quranfx/HelloApplication.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 3982,
    "stars": 0
  },
  {
    "full_name": "GGGuYu/voice_GPT_APP_with_memo",
    "name": "voice_GPT_APP_with_memo",
    "description": "中文GPT语音助手安卓APP，有短期的记忆系统，主要负责聊天，需要使用OPENAIkey",
    "html_url": [
      "https://github.com/GGGuYu/voice_GPT_APP_with_memo/blob/6d9858421fc89787b1025bec378092e96bce38ea/app/src/main/java/mit/alibaba/nuidemo/ChatActivity.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 62190,
    "stars": 7
  },
  {
    "full_name": "ainoya/openai-java-generated-client",
    "name": "openai-java-generated-client",
    "description": "Java client library for OpenAI API, generated using openai-generator with modifications to the official spec for error-free generation and functionality",
    "html_url": [
      "https://github.com/ainoya/openai-java-generated-client/blob/694c5459ddd1a9b8909ec4ed4cb7df74417227be/src/main/java/com/github/ainoya/client/ApiClient.java"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 228499,
    "stars": 1
  },
  {
    "full_name": "LeeEunjeong1/GPTalk",
    "name": "GPTalk",
    "description": "Used GPT-3 API",
    "html_url": [
      "https://github.com/LeeEunjeong1/GPTalk/blob/3615a49aa18f2b46f4cf71c472032d01b81b290c/app/src/main/java/com/example/gptalk/utils/ApiClient.kt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin"
    ],
    "fork": false,
    "loc": 2256,
    "stars": 2
  },
  {
    "full_name": "Enso-Soft/GPT-Chat",
    "name": "GPT-Chat",
    "description": "GPT API를 이용한 Chat Bot ",
    "html_url": [
      "https://github.com/Enso-Soft/GPT-Chat/blob/abc2406f2453718aeeb648fac70938cbe3664c95/app/src/main/java/kr/tmsoft/gptchat/data/remote/openai/OpenaiService.kt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin"
    ],
    "fork": false,
    "loc": 3374,
    "stars": 0
  },
  {
    "full_name": "moallemi/ChatGPT-basic-android-client",
    "name": "ChatGPT-basic-android-client",
    "description": "Source code for the ChatGPT Basic Android Client app on YouTube",
    "html_url": [
      "https://github.com/moallemi/ChatGPT-basic-android-client/blob/6371e19686ba4d5f45420725bc953488109d9481/app/src/main/java/com/android/myapplication/ApiService.kt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin"
    ],
    "fork": false,
    "loc": 883,
    "stars": 7
  },
  {
    "full_name": "Nuvalence/data-gpt",
    "name": "data-gpt",
    "description": "Using OpenAI / GPT-3 to crunch data",
    "html_url": [
      "https://github.com/Nuvalence/data-gpt/blob/b85755571e10676c5653258f3efd847e1de83ea5/src/main/kotlin/io/nuvalence/datagpt/config/OpenAiProperties.kt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin"
    ],
    "fork": false,
    "loc": 48720,
    "stars": 0
  },
  {
    "full_name": "Tejas-Pandule/TalkGenie",
    "name": "TalkGenie",
    "description": "Talk Genie- OpenAI-based Chatbot Android Application",
    "html_url": [
      "https://github.com/Tejas-Pandule/TalkGenie/blob/82f81e1f7ab113e3340979eda7991addeb124937/app/src/main/java/com/tejas/talkgenie/api/ApiUtility.kt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin"
    ],
    "fork": false,
    "loc": 1375,
    "stars": 0
  },
  {
    "full_name": "achrafhammi/TP-GPT-ANDROID",
    "name": "TP-GPT-ANDROID",
    "description": "Ce TP consiste d'une application mobile qui est une chat avec le modele de OpenAI GPT 3.5",
    "html_url": [
      "https://github.com/achrafhammi/TP-GPT-ANDROID/blob/4731c0ecba5a899cec287217a3e9fd7160998c62/app/src/main/java/achraf/tp_gpt_chat/ApiService.kt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin"
    ],
    "fork": false,
    "loc": 925,
    "stars": 0
  },
  {
    "full_name": "0bera1/ArtificialIntelligenceAssistant-App-Chat-GPT3-Technology",
    "name": "ArtificialIntelligenceAssistant-App-Chat-GPT3-Technology",
    "description": "Chat with artificial intelligence or obtain any photo or drawing you want from artificial intelligence. Utilized Kotlin and the OpenAI API. ",
    "html_url": [
      "https://github.com/0bera1/ArtificialIntelligenceAssistant-App-Chat-GPT3-Technology/blob/0bc64c6908c1898b5e8112c28f81a7576346ced6/newProjects/app/src/main/java/com/example/myapplication/api/ApiUtilities.kt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin"
    ],
    "fork": false,
    "loc": 1470,
    "stars": 1
  },
  {
    "full_name": "muratozturk5/OpenAI-Dall-E-2",
    "name": "OpenAI-Dall-E-2",
    "description": "Kotlin DALL·E 2 is a new AI system that can create realistic images and art from a description in natural language.",
    "html_url": [
      "https://github.com/muratozturk5/OpenAI-Dall-E-2/blob/9529bd131b69bd7bfe0d484dd15d10e9c16ecdd7/app/src/main/java/com/muratozturk/openai_dall_e_2/common/Constants.kt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin"
    ],
    "fork": false,
    "loc": 1890,
    "stars": 70
  },
  {
    "full_name": "mhasancse15/OpenAI-Dall-E",
    "name": "OpenAI-Dall-E",
    "description": "OpenAI Dall•E Application Build With Kotlin MVVM (Model - View - ViewModel) Clean Architecture, Beautiful Design UI, Smooth Animations Using Tools And Components Supported By Google And By Most Of The Android Development Community",
    "html_url": [
      "https://github.com/mhasancse15/OpenAI-Dall-E/blob/f801c3e12d02a24a457c85e8e9489bb521840d11/app/src/main/java/com/mahmudul/openai_dall_e_2/common/Constants.kt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin"
    ],
    "fork": false,
    "loc": 1861,
    "stars": 16
  },
  {
    "full_name": "YassinMk/ChatAi-Mobile",
    "name": "ChatAi-Mobile",
    "description": "Mobile application for conversing with ChatGPT",
    "html_url": [
      "https://github.com/YassinMk/ChatAi-Mobile/blob/286852a786840968cdf5c8231de0d925a7c5b174/app/src/main/java/com/android/myapplication/ApiService.kt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin"
    ],
    "fork": false,
    "loc": 881,
    "stars": 0
  },
  {
    "full_name": "akifisitan/MobiGPT",
    "name": "MobiGPT",
    "description": "Android App consuming the OpenAI Chat API",
    "html_url": [
      "https://github.com/akifisitan/MobiGPT/blob/7916f62d7f2fb12a166e4acd4578bed1e37602ba/app/src/main/java/com/aeg/mobigpt/api/RetrofitInstance.kt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin"
    ],
    "fork": false,
    "loc": 1391,
    "stars": 0
  },
  {
    "full_name": "zjh7890/gpt-tools",
    "name": "gpt-tools",
    "description": null,
    "html_url": [
      "https://github.com/zjh7890/gpt-tools/blob/eedf5fabef556f68568a2b7894215b6f1cdbe49c/core/src/main/kotlin/com/github/zjh7890/gpttools/settings/llmSetting/LLMSetting.kt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin"
    ],
    "fork": false,
    "loc": 20419,
    "stars": 29
  },
  {
    "full_name": "babogoos/PodcastToLearn",
    "name": "PodcastToLearn",
    "description": "A podcast player for helping people learn language by listening daily news with AI powered Large Language Models service.",
    "html_url": [
      "https://github.com/babogoos/PodcastToLearn/blob/87354855c3a4c6ca1b98b5d2c182e59ca31f6543/android/app/src/main/java/com/dionchang/podcasttolearn/data/network/constant/OpenAiApi.kt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin"
    ],
    "fork": false,
    "loc": 6323,
    "stars": 2
  },
  {
    "full_name": "TWJessieChen/Android-ChatGPT-API-Example",
    "name": "Android-ChatGPT-API-Example",
    "description": "Android ChatGPT API Example",
    "html_url": [
      "https://github.com/TWJessieChen/Android-ChatGPT-API-Example/blob/cc3db86b54afb4e8b395aff51a7c3bcc1c495d8e/app/src/main/java/com/jc666/androidchatgptexample/http/RetrofitInstance.kt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin"
    ],
    "fork": false,
    "loc": 1777,
    "stars": 1
  },
  {
    "full_name": "nohjunh/ChatGPTAndroid",
    "name": "ChatGPTAndroid",
    "description": "OpenAI ChatGPT for Android",
    "html_url": [
      "https://github.com/nohjunh/ChatGPTAndroid/blob/c251a109445da545d3a055263f3bdb3477d589f5/app/src/main/java/com/nohjunh/test/network/RetrofitInstance.kt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin"
    ],
    "fork": false,
    "loc": 1522,
    "stars": 89
  },
  {
    "full_name": "cssxsh/mirai-openai-plugin",
    "name": "mirai-openai-plugin",
    "description": "Mirai Console OpenAI ChatBot 插件",
    "html_url": [
      "https://github.com/cssxsh/mirai-openai-plugin/blob/563d5417201fb3edceb723682d9b247155c3ac06/src/main/kotlin/xyz/cssxsh/openai/edit/EditController.kt",
      "https://github.com/cssxsh/mirai-openai-plugin/blob/563d5417201fb3edceb723682d9b247155c3ac06/src/main/kotlin/xyz/cssxsh/openai/chat/ChatController.kt",
      "https://github.com/cssxsh/mirai-openai-plugin/blob/563d5417201fb3edceb723682d9b247155c3ac06/src/main/kotlin/xyz/cssxsh/openai/moderation/ModerationController.kt",
      "https://github.com/cssxsh/mirai-openai-plugin/blob/563d5417201fb3edceb723682d9b247155c3ac06/src/main/kotlin/xyz/cssxsh/openai/completion/CompletionController.kt",
      "https://github.com/cssxsh/mirai-openai-plugin/blob/563d5417201fb3edceb723682d9b247155c3ac06/src/main/kotlin/xyz/cssxsh/openai/finetune/FineTuneController.kt",
      "https://github.com/cssxsh/mirai-openai-plugin/blob/563d5417201fb3edceb723682d9b247155c3ac06/src/main/kotlin/xyz/cssxsh/openai/audio/AudioController.kt",
      "https://github.com/cssxsh/mirai-openai-plugin/blob/563d5417201fb3edceb723682d9b247155c3ac06/src/main/kotlin/xyz/cssxsh/openai/OkHttp.kt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin"
    ],
    "fork": false,
    "loc": 3339,
    "stars": 130
  },
  {
    "full_name": "CJCrafter/ChatGPT-Java-API",
    "name": "ChatGPT-Java-API",
    "description": "Unofficial Java API supporting Chat, Assistants, and more!",
    "html_url": [
      "https://github.com/CJCrafter/ChatGPT-Java-API/blob/6f42852e460e2b935a5dbd3c53df112ba958aea2/src/main/kotlin/com/cjcrafter/openai/AzureOpenAI.kt",
      "https://github.com/CJCrafter/ChatGPT-Java-API/blob/6f42852e460e2b935a5dbd3c53df112ba958aea2/src/test/kotlin/com/cjcrafter/openai/chat/MockedChatStreamTest.kt",
      "https://github.com/CJCrafter/ChatGPT-Java-API/blob/6f42852e460e2b935a5dbd3c53df112ba958aea2/src/main/kotlin/com/cjcrafter/openai/RequestHelper.kt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin"
    ],
    "fork": false,
    "loc": 6166,
    "stars": 70
  },
  {
    "full_name": "DeimosHall/OpenAI-API-Kotlin",
    "name": "OpenAI-API-Kotlin",
    "description": "API to use GPT from OpenAI",
    "html_url": [
      "https://github.com/DeimosHall/OpenAI-API-Kotlin/blob/afef814705aca29a9577f7e93ed06840a8d8d4e0/library/src/main/java/com/deimos/openaiapi/OpenAI.kt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin"
    ],
    "fork": false,
    "loc": 1057,
    "stars": 17
  },
  {
    "full_name": "sunnywalden/intellij-thirdparty-chatgpt-plugin",
    "name": "intellij-thirdparty-chatgpt-plugin",
    "description": "thirdparty chatgpt plugin for intellij platform",
    "html_url": [
      "https://github.com/sunnywalden/intellij-thirdparty-chatgpt-plugin/blob/e026a890668107189d6ee1f53429720e8a242905/src/main/kotlin/com/sunnywalden/chatgpt/services/OpenAiService.kt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin"
    ],
    "fork": false,
    "loc": 1840,
    "stars": 0
  },
  {
    "full_name": "sectlying/BotGPT",
    "name": "BotGPT",
    "description": "对接OpenAI ChatGPT API提供私聊、群聊AI对话的Mirai Console插件(QQ机器人)",
    "html_url": [
      "https://github.com/sectlying/BotGPT/blob/bccb62c31f5f9dedd55e044860bcf69a623041c4/src/main/kotlin/Config.kt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin"
    ],
    "fork": false,
    "loc": 485,
    "stars": 1
  },
  {
    "full_name": "SeptiawanAjiP/ChatGPT-DiaLoGue",
    "name": "ChatGPT-DiaLoGue",
    "description": "🤖 Your AI-Based Virtual English Tutor",
    "html_url": [
      "https://github.com/SeptiawanAjiP/ChatGPT-DiaLoGue/blob/44e03952cfb713ff556f46acbd944c393792a219/app/src/main/java/com/dewakoding/dialogue/net/RetrofitClient.kt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin"
    ],
    "fork": false,
    "loc": 3391,
    "stars": 14
  },
  {
    "full_name": "uyqn/gipt",
    "name": "gipt",
    "description": "GIPT is a script that writes your conventional commit messages for you, using OPENAI's API.",
    "html_url": [
      "https://github.com/uyqn/gipt/blob/02bd1970b4ffa9d0d22248abc81c9aabc502f838/src/main/kotlin/openai/clients/OpenAiClientImpl.kt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin"
    ],
    "fork": false,
    "loc": 8602,
    "stars": 1
  },
  {
    "full_name": "sanjushahgupta/chat-gpt",
    "name": "chat-gpt",
    "description": "Chat with an AI using your OpenAI API key with this app.",
    "html_url": [
      "https://github.com/sanjushahgupta/chat-gpt/blob/ed4c8be720fd0bc7a934fb328df979344368473e/app/src/main/java/com/digitalaya/chat/ChatInterface.kt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin"
    ],
    "fork": false,
    "loc": 1530,
    "stars": 0
  },
  {
    "full_name": "Helltar/artific_intellig_bot",
    "name": "artific_intellig_bot",
    "description": "AI Telegram Bot, ChatGPT, Dalle2, Whisper, GPT-4 Vision, Stability AI",
    "html_url": [
      "https://github.com/Helltar/artific_intellig_bot/blob/e580f4a5bb1bdca3c78af98977300c7d074f5487/src/main/kotlin/com/helltar/aibot/commands/user/images/DallE2.kt",
      "https://github.com/Helltar/artific_intellig_bot/blob/e580f4a5bb1bdca3c78af98977300c7d074f5487/src/main/kotlin/com/helltar/aibot/commands/user/images/GPT4Vision.kt",
      "https://github.com/Helltar/artific_intellig_bot/blob/e580f4a5bb1bdca3c78af98977300c7d074f5487/src/main/kotlin/com/helltar/aibot/commands/user/images/DalleVariations.kt",
      "https://github.com/Helltar/artific_intellig_bot/blob/e580f4a5bb1bdca3c78af98977300c7d074f5487/src/main/kotlin/com/helltar/aibot/commands/user/chat/ChatGPT.kt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin"
    ],
    "fork": false,
    "loc": 2447,
    "stars": 24
  },
  {
    "full_name": "tshenolo/chatgpt-integration",
    "name": "chatgpt-integration",
    "description": "This repository provides an example integration guide for incorporating ChatGPT into an existing application",
    "html_url": [
      "https://github.com/tshenolo/chatgpt-integration/blob/93518e7d52c7df47fc56cc9b943e890b144b4a69/kotlin/kotlin.kt",
      "https://github.com/tshenolo/chatgpt-integration/blob/93518e7d52c7df47fc56cc9b943e890b144b4a69/php/GenerateResponseTest.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin",
      "php"
    ],
    "fork": false,
    "loc": 473,
    "stars": 2
  },
  {
    "full_name": "Smart-Recommendations/Smart-Recommendations",
    "name": "Smart-Recommendations",
    "description": "Mobile front end client using LLM technology for sourcing desired personal entertainment",
    "html_url": [
      "https://github.com/Smart-Recommendations/Smart-Recommendations/blob/a4e152b444b11a268abde81efd126cb1fa4b3694/app/src/main/java/com/example/smartrecommendationsai/network/ChatGPTApiClient.kt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin"
    ],
    "fork": false,
    "loc": 1471,
    "stars": 1
  },
  {
    "full_name": "fbwogur121/Internship_TmaxSoft",
    "name": "Internship_TmaxSoft",
    "description": "TmaxSoft 인턴십 intelliJ LLM 플러그인_TmaxPlugin 개발 프로젝트",
    "html_url": [
      "https://github.com/fbwogur121/Internship_TmaxSoft/blob/cef3b607b807ac0466174a3def0d1454d975c303/src/main/kotlin/com/Tmax/tmaxPlugin/api/ChatGptApiClient.kt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin"
    ],
    "fork": false,
    "loc": 2486,
    "stars": 0
  },
  {
    "full_name": "Ivy-Apps/automate",
    "name": "automate",
    "description": "An experiment for automating tasks using state machines and AI models like ChatGPT and Dall-E.",
    "html_url": [
      "https://github.com/Ivy-Apps/automate/blob/5affbfd9b5f1d9ba8e95518d16513db491bbe9c2/Automate/openai-api/src/main/kotlin/automate/openai/chatgpt/ChatGptApi.kt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin"
    ],
    "fork": false,
    "loc": 3432,
    "stars": 3
  },
  {
    "full_name": "JetBrains-Research/llm-integration-plugin-template",
    "name": "llm-integration-plugin-template",
    "description": null,
    "html_url": [
      "https://github.com/JetBrains-Research/llm-integration-plugin-template/blob/70a89950c8e62245c8f458d35695b6c5271cfd74/src/main/kotlin/com/intellij/ml/llm/template/models/openai/OpenAIRequests.kt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin"
    ],
    "fork": false,
    "loc": 1114,
    "stars": 1
  },
  {
    "full_name": "namuan/gpt-fx",
    "name": "gpt-fx",
    "description": "ChatGPT clone with JavaFX",
    "html_url": [
      "https://github.com/namuan/gpt-fx/blob/89bef13e2b6b51ea36142041ff672df9b33471a0/src/main/kotlin/com/github/namuan/gptfx/GptApi.kt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin"
    ],
    "fork": false,
    "loc": 1217,
    "stars": 5
  },
  {
    "full_name": "tddworks/openai-kotlin",
    "name": "openai-kotlin",
    "description": "OpenAI clients for kotlin multiplatform SDK, supports OpenAI, Anthropic, Azure, Ollama with TDD",
    "html_url": [
      "https://github.com/tddworks/openai-kotlin/blob/617da56d222b1599d6fdc6a6e8e213f0129cb433/openai-client/openai-client-core/src/commonMain/kotlin/com/tddworks/openai/api/OpenAI.kt",
      "https://github.com/tddworks/openai-kotlin/blob/617da56d222b1599d6fdc6a6e8e213f0129cb433/openai-gateway/openai-gateway-core/src/jvmTest/kotlin/com/tddworks/openai/gateway/api/OpenAIGatewayITest.kt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin"
    ],
    "fork": false,
    "loc": 10322,
    "stars": 26
  },
  {
    "full_name": "propush/openaigptclient-spring-boot-starter",
    "name": "openaigptclient-spring-boot-starter",
    "description": "Spring Boot Starter for OpenAI GPT Client",
    "html_url": [
      "https://github.com/propush/openaigptclient-spring-boot-starter/blob/45c4b465a2ca3b663e7e1240b1fd0d19d55a2dc2/src/test/kotlin/com/pushkin/openaigptclient/openai/client/impl/OpenaiClientImplUnitTest.kt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin"
    ],
    "fork": false,
    "loc": 797,
    "stars": 1
  },
  {
    "full_name": "mhconradt/drone-gpt",
    "name": "drone-gpt",
    "description": "Chat that uses GPT-4V to fly a drone",
    "html_url": [
      "https://github.com/mhconradt/drone-gpt/blob/25398e31e3ab969cd1c6b3cddd5291d63aa6f454/app/src/main/java/com/example/dronegpt/chat/ChatCompletionAPI.kt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin"
    ],
    "fork": false,
    "loc": 2569,
    "stars": 4
  },
  {
    "full_name": "s9hn/COSMO",
    "name": "COSMO",
    "description": "📲 COSMO Android provides a computer science education application using OpenAI(ChatGPT, Claude).",
    "html_url": [
      "https://github.com/s9hn/COSMO/blob/ce0c00cd6a61d81d1be5d05d7b62253026edb5c0/core/network/src/main/java/kw/team/network/di/ApiModule.kt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "LittleOwle/littleowle-ai-ollama-commit-plugin-intellij-platform",
    "name": "littleowle-ai-ollama-commit-plugin-intellij-platform",
    "description": "Ollama AI Commit Plugin by Jamil Services for IntelliJ Platform",
    "html_url": [
      "https://github.com/LittleOwle/littleowle-ai-ollama-commit-plugin-intellij-platform/blob/90e532bd78e2f4090754c41876e43d01041500f6/src/main/kotlin/littleowle/ai/ollama/commit/settings/AppSettings.kt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "lmos-ai/lmos-router",
    "name": "lmos-router",
    "description": "Efficient Agent Routing with SOTA Language and Embedding Models.",
    "html_url": [
      "https://github.com/lmos-ai/lmos-router/blob/ba23ff7f48d9f80b23723238f70b56c54aefd7cc/lmos-router-llm/src/test/kotlin/ai/ancf/lmos/router/llm/DefaultModelClientTest.kt",
      "https://github.com/lmos-ai/lmos-router/blob/acb1a0911ba64ce061a6739035db79b6bd776e33/lmos-router-vector/src/main/kotlin/ai/ancf/lmos/router/vector/Models.kt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin"
    ],
    "fork": false,
    "loc": 21933,
    "stars": 33
  },
  {
    "full_name": "Kan7sh/Image-Genius",
    "name": "Image-Genius",
    "description": "Image Genius: Android App using Kotlin, Firebase. 1) Generates Logo using AI from OpenAI's API DALL-E. 2) Convert Images to PDF. Perform CRUD operations on them. 3) Share Documents with others in common room using Firebase cloud storage. 4) Make Notes private using Speech to Text.",
    "html_url": [
      "https://github.com/Kan7sh/Image-Genius/blob/94328be16dfc3039b41d431055dcf9c1adceeb73/app/src/main/java/com/main/mainproject/DALLE.kt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin"
    ],
    "fork": false,
    "loc": 5114,
    "stars": 3
  },
  {
    "full_name": "BrianJr03/Issa-Recipe-App",
    "name": "Issa-Recipe-App",
    "description": "A simple recipe app powered by ChatGPT",
    "html_url": [
      "https://github.com/BrianJr03/Issa-Recipe-App/blob/a47163d5b1f5169f0cc6c1227de4f319a29c0fef/app/src/main/java/jr/brian/issarecipeapp/model/remote/OpenAIImage.kt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin"
    ],
    "fork": false,
    "loc": 5635,
    "stars": 27
  },
  {
    "full_name": "kossy205/ChatGpt-Android-App",
    "name": "ChatGpt-Android-App",
    "description": "Built before OpenAi launched the ChatGPT android app. Uses the OpenAI's GPT-3 \"davinci\" model. It integrates Firebase Auth for secure authentication, Firestore for real-time chat storage, Room DB for offline access, and Retrofit for the API interactions.  It was designed to provide android users easy and quick access to ChatGPT.",
    "html_url": [
      "https://github.com/kossy205/ChatGpt-Android-App/blob/b7270298817fe41e37caa2bc96a84bf2ef578d8c/app/src/main/java/com/example/chatgptapp1/ServiceBuilder.kt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin"
    ],
    "fork": false,
    "loc": 3634,
    "stars": 1
  },
  {
    "full_name": "esperar/ChatGPT-boot",
    "name": "ChatGPT-boot",
    "description": "Use httpclient to use open ai chat gpt question open source api.",
    "html_url": [
      "https://github.com/esperar/ChatGPT-boot/blob/3f8aee6ed563bd69793c9ad029397322c44aaf6e/src/main/kotlin/esperer/openai/service/ChatGPTQuestionServiceImpl.kt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin"
    ],
    "fork": false,
    "loc": 407,
    "stars": 0
  },
  {
    "full_name": "xebia-functional/xef",
    "name": "xef",
    "description": "Building applications with LLMs through composability, in Kotlin, Scala, ...",
    "html_url": [
      "https://github.com/xebia-functional/xef/blob/727745d579fea55379b113b3bf774107d58b9ed4/core/src/commonMain/kotlin/com/xebia/functional/xef/Config.kt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin"
    ],
    "fork": false,
    "loc": 432490,
    "stars": 189
  },
  {
    "full_name": "youminxue/onegai-codegpt-plugin",
    "name": "onegai-codegpt-plugin",
    "description": "onegai-codegpt-plugin is an IntelliJ IDEA plugin that leverages the power of the ChatGPT API to generate code and tests from natural language descriptions. ",
    "html_url": [
      "https://github.com/youminxue/onegai-codegpt-plugin/blob/621a6c1fead6ba3a2c7bf6293d42600e4c135a86/src/test/kotlin/com/snacks/onegai/codegpt/plugin/ui/settings/SettingsPanelTest.kt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin"
    ],
    "fork": false,
    "loc": 492,
    "stars": 0
  },
  {
    "full_name": "Trree/cool-chat",
    "name": "cool-chat",
    "description": "android chatgpt",
    "html_url": [
      "https://github.com/Trree/cool-chat/blob/ee7e29f64acadb722224fb0b17cbbab8a0c1b3bd/app/src/main/java/com/github/coolchat/chatgpt/chat.kt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin"
    ],
    "fork": false,
    "loc": 4436,
    "stars": 0
  },
  {
    "full_name": "eclipse-lmos/lmos-router",
    "name": "lmos-router",
    "description": "Efficient Agent Routing with SOTA Language and Embedding Models",
    "html_url": [
      "https://github.com/eclipse-lmos/lmos-router/blob/3265198e1cbd54297423a6ea9cce563031664a65/lmos-router-llm/src/test/kotlin/ai/ancf/lmos/router/llm/DefaultModelClientTest.kt",
      "https://github.com/eclipse-lmos/lmos-router/blob/3265198e1cbd54297423a6ea9cce563031664a65/lmos-router-vector/src/main/kotlin/ai/ancf/lmos/router/vector/Models.kt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin"
    ],
    "fork": false,
    "loc": 21933,
    "stars": 33
  },
  {
    "full_name": "TouchMarsSolutions/kotlin-retrofit2-client-openai-api",
    "name": "kotlin-retrofit2-client-openai-api",
    "description": "kotlin retrofit coroutine based client library to call OpenAI API",
    "html_url": [
      "https://github.com/TouchMarsSolutions/kotlin-retrofit2-client-openai-api/blob/ed206a75817bbbcabcf57ae6c735e19777a5e2fd/src/main/kotlin/org/openapi/client/kotlin/openai/infrastructure/ApiClient.kt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin"
    ],
    "fork": false,
    "loc": 5814,
    "stars": 0
  },
  {
    "full_name": "palexis3/GPT",
    "name": "GPT",
    "description": "GPT is a MVVM Android experimentation app currently centered around the OpenAi API.",
    "html_url": [
      "https://github.com/palexis3/GPT/blob/da0257306cfdab8365b9e299d7c05706e838fa7b/app/src/main/java/com/example/gpt/data/remote/NetworkModule.kt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin"
    ],
    "fork": false,
    "loc": 3248,
    "stars": 1
  },
  {
    "full_name": "brunodpoliveira/Fallout1DemoAI",
    "name": "Fallout1DemoAI",
    "description": "This project is a proof-of-concept demonstration of the Fallout 1 demo town, Scrapheap, built using Korge and Kotlin. The main highlight of the project is the use of GPT-3.5 Turbo to power the NPC interactions, making them dynamic and conversational.",
    "html_url": [
      "https://github.com/brunodpoliveira/Fallout1DemoAI/blob/d5e792399e32754a82c2b00d6cfdb09cfbabb547/src/commonMain/kotlin/llm/impl/OpenAIService.kt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "shivank8/ChatGPT_App",
    "name": "ChatGPT_App",
    "description": "Chat gpt android app with the help of openai API, allows users to input their questions, which are then sent to OpenAI's GPT-3 model for processing. The response generated by the model is then displayed back to the user. ",
    "html_url": [
      "https://github.com/shivank8/ChatGPT_App/blob/b481f8bb84f2da83db872d3827a0cb683f7b62d5/app/src/main/java/com/example/chatgptapp/MainActivity.kt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin"
    ],
    "fork": false,
    "loc": 812,
    "stars": 19
  },
  {
    "full_name": "SaiKrishna221b/OpenAI_integration_simpleApp",
    "name": "OpenAI_integration_simpleApp",
    "description": "Simple single screen app to demonstrate prompt and response from OpenAI",
    "html_url": [
      "https://github.com/SaiKrishna221b/OpenAI_integration_simpleApp/blob/646187e23727d0b7207f1f14edbbc8d5f63fb159/app/src/main/java/com/example/cmpe277_app3/CallOpenAIService.kt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin"
    ],
    "fork": false,
    "loc": 965,
    "stars": 0
  },
  {
    "full_name": "mufasa08/CaptionMagic-AI",
    "name": "CaptionMagic-AI",
    "description": "Utilizing OpenAI ChatGPT for auto generating instagram and other social media posts",
    "html_url": [
      "https://github.com/mufasa08/CaptionMagic-AI/blob/51afc0ce89b148f6940a4862a0094794db34ac65/shared/src/commonMain/kotlin/com/devinjapan/aisocialmediaposter/shared/data/repository/TextCompletionRepositoryImpl.kt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin"
    ],
    "fork": false,
    "loc": 12058,
    "stars": 1
  },
  {
    "full_name": "phodal/shire",
    "name": "shire",
    "description": "Shire - AI Coding Agent Language (智能研发智能体语言), which can enables communication between an LLM and control IDE for automated programming.",
    "html_url": [
      "https://github.com/phodal/shire/blob/8403ee5e83d3d8c1f844240ea52a861888113bef/src/main/kotlin/com/phodal/shire/llm/OpenAILikeProvider.kt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin"
    ],
    "fork": false,
    "loc": 45334,
    "stars": 255
  },
  {
    "full_name": "rajbagri/ChatGPT-Android-App",
    "name": "ChatGPT-Android-App",
    "description": "This is the android version of ChatGPT",
    "html_url": [
      "https://github.com/rajbagri/ChatGPT-Android-App/blob/6cf49f20c79795ef7fef69f0641c14a8e02e9f4a/app/src/main/java/com/rajbagri/chatgptclone/ChatTranslation.kt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin"
    ],
    "fork": false,
    "loc": 1641,
    "stars": 0
  },
  {
    "full_name": "carlrobertoh/CodeGPT",
    "name": "CodeGPT",
    "description": "The leading open-source AI copilot for JetBrains. Connect to any model in any environment, and customize your coding experience in any way you like.",
    "html_url": [
      "https://github.com/carlrobertoh/CodeGPT/blob/d81648549cbd56cfeea038ef3d67a546a71999ba/src/main/kotlin/ee/carlrobert/codegpt/settings/service/custom/template/CustomServiceChatCompletionTemplate.kt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin"
    ],
    "fork": false,
    "loc": 44909,
    "stars": 1648
  },
  {
    "full_name": "idineshgovind/ArtieChatBot",
    "name": "ArtieChatBot",
    "description": "This is AI based ChatBot which give answers,suggestions,tips anything you ask. this api was took from openai's api and implemented in Android using Kotlin",
    "html_url": [
      "https://github.com/idineshgovind/ArtieChatBot/blob/e6de16e43569ed073744482843cddea48a48968a/app/src/main/java/com/dinesh/artiethechatbot/MainViewModel.kt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin"
    ],
    "fork": false,
    "loc": 1637,
    "stars": 0
  },
  {
    "full_name": "esafirm/compose-ai-chat",
    "name": "compose-ai-chat",
    "description": "AI Chat Bot application like ChatGPT that (supposedly) can change its model",
    "html_url": [
      "https://github.com/esafirm/compose-ai-chat/blob/7b50df377ecca1c01b9b8717cd5a0ba15cb88ed8/common/src/commonMain/kotlin/nolambda/aichat/common/data/http/OpenAiClient.kt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "Kotlin"
    ],
    "fork": false,
    "loc": 1947,
    "stars": 8
  },
  {
    "full_name": "NangGong/GPT-Voice",
    "name": "GPT-Voice",
    "description": null,
    "html_url": [
      "https://github.com/NangGong/GPT-Voice/blob/218336726f7a517f9160f42357bad0d099f0e49a/config.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 850,
    "stars": 16
  },
  {
    "full_name": "miroslaws8/laravel-openai",
    "name": "laravel-openai",
    "description": "A laravel package to integrate openai in laravel application",
    "html_url": [
      "https://github.com/miroslaws8/laravel-openai/blob/27bd6bb410d06c8e1f7415f77fe80f71e69e3755/config/laravel-openai.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 1086,
    "stars": 5
  },
  {
    "full_name": "damkes777/openAI-API-translator",
    "name": "openAI-API-translator",
    "description": "An application built on the Laravel framework utilizing the OpenAI API to translate product descriptions and their parameters.",
    "html_url": [
      "https://github.com/damkes777/openAI-API-translator/blob/8b6c24ce8b51e382ed03633e0d885db661217644/config/openai.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "parlo12/openai",
    "name": "openai",
    "description": "Laravel OpenAI v2 Integration: A simple and flexible Laravel package for seamless integration with OpenAI API v2, enabling features like chat completions, embeddings, and more.",
    "html_url": [
      "https://github.com/parlo12/openai/blob/dd9c2b729588b7f0ed1c41f9c826081ca9178e5e/openai/src/Config/openai.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 546764,
    "stars": 0
  },
  {
    "full_name": "dreamer133/openai-api",
    "name": "openai-api",
    "description": "openAI simple api challenging",
    "html_url": [
      "https://github.com/dreamer133/openai-api/blob/f53fcc9285f53706ddea19e210ac3ea73904d0cd/classes/config.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 316,
    "stars": 0
  },
  {
    "full_name": "tonythornton435/laravel-openai-backend",
    "name": "laravel-openai-backend",
    "description": "laravel openai backend",
    "html_url": [
      "https://github.com/tonythornton435/laravel-openai-backend/blob/2d9a9c2b282b4b9753ea53fb45a5999d5c06c752/config/laravel-openai.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 890,
    "stars": 0
  },
  {
    "full_name": "sarfraznawaz2005/docchat",
    "name": "docchat",
    "description": "A laravel plugin that allows to chat with PDF documents using OpenAI and Gemini.",
    "html_url": [
      "https://github.com/sarfraznawaz2005/docchat/blob/7c430281042032a91f80435b03a4dc5a2cca4ffd/src/LLM/OpenAiProvider.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 5203,
    "stars": 1
  },
  {
    "full_name": "geekr-dev/openai-laravel",
    "name": "openai-laravel",
    "description": "Laravel OpenAI Wrapper with support for proxy",
    "html_url": [
      "https://github.com/geekr-dev/openai-laravel/blob/1f6e852842b65a53e3be309ffc362320e2834c47/config/openai.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 146,
    "stars": 7
  },
  {
    "full_name": "TonySlam/slamtony-openai",
    "name": "slamtony-openai",
    "description": null,
    "html_url": [
      "https://github.com/TonySlam/slamtony-openai/blob/f6762c6fbac795e19e8a913f3c11d63b0e51a52f/src/ChatGPT.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 173,
    "stars": 0
  },
  {
    "full_name": "openai-php/client",
    "name": "client",
    "description": "⚡️ OpenAI PHP is a supercharged community-maintained PHP API client that allows you to interact with OpenAI API.",
    "html_url": [
      "https://github.com/openai-php/client/blob/17d1a23755886b5e1fcc030bec84ecb98e2cd6d9/tests/ValueObjects/Transporter/BaseUri.php",
      "https://github.com/openai-php/client/blob/17d1a23755886b5e1fcc030bec84ecb98e2cd6d9/tests/Pest.php",
      "https://github.com/openai-php/client/blob/17d1a23755886b5e1fcc030bec84ecb98e2cd6d9/src/Factory.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 29363,
    "stars": 5391
  },
  {
    "full_name": "theodo-group/LLPhant",
    "name": "LLPhant",
    "description": "LLPhant - A comprehensive PHP Generative AI Framework using OpenAI GPT 4. Inspired by Langchain",
    "html_url": [
      "https://github.com/theodo-group/LLPhant/blob/83b360d2481b9f7b711efa0b107c2f15b591ff28/src/OpenAIConfig.php",
      "https://github.com/theodo-group/LLPhant/blob/83b360d2481b9f7b711efa0b107c2f15b591ff28/src/Audio/OpenAIAudio.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 37190,
    "stars": 1236
  },
  {
    "full_name": "laymont/chatgpt-api",
    "name": "chatgpt-api",
    "description": "Api para consumir chatgpt desde venezuela",
    "html_url": [
      "https://github.com/laymont/chatgpt-api/blob/a43b4ed062a99ce7fc877d8edd28f8796c215553/app/Http/Controllers/ChatGptController.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 855,
    "stars": 0
  },
  {
    "full_name": "AyrtonGonsallo/allmarathon",
    "name": "allmarathon",
    "description": "les marathons en france et dans le monde",
    "html_url": [
      "https://github.com/AyrtonGonsallo/allmarathon/blob/f88d0edb6e8e4c6ea7d99fea8e8e939377945c59/content/classes/chatgpt.php",
      "https://github.com/AyrtonGonsallo/allmarathon/blob/f88d0edb6e8e4c6ea7d99fea8e8e939377945c59/admin/open-ai.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 686470,
    "stars": 0
  },
  {
    "full_name": "gasievt/huggingface-openai-key-scraper",
    "name": "huggingface-openai-key-scraper",
    "description": "A PHP script to scrape OpenAI API keys that are exposed on public HuggingFace projects.",
    "html_url": [
      "https://github.com/gasievt/huggingface-openai-key-scraper/blob/481999f1d98cc16f727b8ac484b0d0a628c3d824/validate_keys.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 204,
    "stars": 9
  },
  {
    "full_name": "peterramsing/laravel-rag-test",
    "name": "laravel-rag-test",
    "description": "RAG testing and workshopping in Laravel",
    "html_url": [
      "https://github.com/peterramsing/laravel-rag-test/blob/6b23f6a2686bd414b380a32ca47b4e14c151a235/config/prism.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 21744,
    "stars": 2
  },
  {
    "full_name": "nenuadrian/project-omega",
    "name": "project-omega",
    "description": "Lightweight Model-View-Controller (MVC) framework for PHP that aims to provide a simple and efficient solution for building web applications. It emphasizes simplicity, flexibility, and performance, making it ideal for small to medium-sized projects.",
    "html_url": [
      "https://github.com/nenuadrian/project-omega/blob/3bb5b887ecdc997c59aeb40ed5e511fa07bd93e9/server/src/models/ai.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 56702,
    "stars": 0
  },
  {
    "full_name": "arkonique/gpt-embed",
    "name": "gpt-embed",
    "description": "A simple chatGPT clone that uses OpenAI on the backend to act basically like a stripped down chatGPT. Made this because I wasnted to embed chatGPT for personal uses.",
    "html_url": [
      "https://github.com/arkonique/gpt-embed/blob/5a4632480671be8b875721af0109895dece05515/api/endpoint.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 264,
    "stars": 0
  },
  {
    "full_name": "whitleyhorn/ChatGPT-PHP-Interface",
    "name": "ChatGPT-PHP-Interface",
    "description": "ChatGPT-PHP-Interface is a proof of concept for integrating ChatGPT API with PHP. It features simple scripts that generate text from prompts & keywords, useful for email automation, content generation & SEO. Leverages OpenAI's powerful natural language processing tech for customizable high-quality text generation.",
    "html_url": [
      "https://github.com/whitleyhorn/ChatGPT-PHP-Interface/blob/109e73f62ecc7fee505e768a8e91b6ca0cd39739/generate_content/functions/request_chatgpt.php",
      "https://github.com/whitleyhorn/ChatGPT-PHP-Interface/blob/109e73f62ecc7fee505e768a8e91b6ca0cd39739/generate_email/backend.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 8337,
    "stars": 6
  },
  {
    "full_name": "Jerome-W-90/chatgpt-laravel",
    "name": "chatgpt-laravel",
    "description": "Project used in tutorial that explains how to use ChatGPT in a Laravel 10 project.",
    "html_url": [
      "https://github.com/Jerome-W-90/chatgpt-laravel/blob/d077282c201b9cb55dc1b37a5c7da450a28a378b/app/Http/Controllers/ChatGPTController.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 1415,
    "stars": 9
  },
  {
    "full_name": "wildshark/copilot-chat",
    "name": "copilot-chat",
    "description": "Copilot Chat is a simple web application that uses the OpenAI API to create a chatbot that responds to user inputs. This project demonstrates how to integrate HTML, PHP, and JavaScript to build a basic chatbot interface that interacts with the OpenAI GPT-3 API.",
    "html_url": [
      "https://github.com/wildshark/copilot-chat/blob/44d824e31a55d92a144380b95810606a5f6f2ee4/api.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 104,
    "stars": 0
  },
  {
    "full_name": "snehalkadwe/laravel-openai-api",
    "name": "laravel-openai-api",
    "description": null,
    "html_url": [
      "https://github.com/snehalkadwe/laravel-openai-api/blob/7780d05892ff3adee0dfb4d8abc8216d96c1d90b/app/Http/Controllers/ImageGeneratorController.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 6465,
    "stars": 1
  },
  {
    "full_name": "jschildgen/sql-llm-demo",
    "name": "sql-llm-demo",
    "description": null,
    "html_url": [
      "https://github.com/jschildgen/sql-llm-demo/blob/7b07c8966d2a6b6f0d42c05319f4974cc0874969/api.php",
      "https://github.com/jschildgen/sql-llm-demo/blob/7b07c8966d2a6b6f0d42c05319f4974cc0874969/datahub/openai.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 34863,
    "stars": 0
  },
  {
    "full_name": "michaelklopf/chat-gpt-playground",
    "name": "chat-gpt-playground",
    "description": "Play around with chat gpt api based on Laravel, Inertia, Vite, Tailwind",
    "html_url": [
      "https://github.com/michaelklopf/chat-gpt-playground/blob/ca5982a64653a987bc412651eda94d7e43fcb3cb/app/Http/Controllers/EditWithChatGptController.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 4633,
    "stars": 1
  },
  {
    "full_name": "rossedlin/chat-gpt-laravel",
    "name": "chat-gpt-laravel",
    "description": "Chat GPT Laravel",
    "html_url": [
      "https://github.com/rossedlin/chat-gpt-laravel/blob/1cfa61507ae5fa635e4b8d29a187cd15f035fdb8/app/Http/Controllers/ChatController.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 13914,
    "stars": 3
  },
  {
    "full_name": "hidemyas/php-chatgpt-api",
    "name": "php-chatgpt-api",
    "description": "CHATGPT APİ with php ",
    "html_url": [
      "https://github.com/hidemyas/php-chatgpt-api/blob/a6dfd97466a80d65d4165c38111e26275ec4b16d/api/chat.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 58,
    "stars": 0
  },
  {
    "full_name": "iteks/laravel-openai",
    "name": "laravel-openai",
    "description": "A powerful package that seamlessly integrates OpenAI's advanced AI capabilities into your Laravel applications. This package offers quick setup and intuitive configuration to leverage AI models for chat, embeddings, and more.",
    "html_url": [
      "https://github.com/iteks/laravel-openai/blob/f2495595e6ea302450642aa7dc18b52e26fd3c84/tests/Unit/HttpClientTest.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 2241,
    "stars": 8
  },
  {
    "full_name": "EngRidhoNet/chatbot_gemini_laravel",
    "name": "chatbot_gemini_laravel",
    "description": null,
    "html_url": [
      "https://github.com/EngRidhoNet/chatbot_gemini_laravel/blob/3a0e7a9ea7b2fe327e69a3ae246f7d5d08ae18cb/app/Http/Controllers/ChatController.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 13860,
    "stars": 0
  },
  {
    "full_name": "Radulepy/PHP-ChatGPT",
    "name": "PHP-ChatGPT",
    "description": "Connect to ChatGPT / OpenAI API using plain PHP",
    "html_url": [
      "https://github.com/Radulepy/PHP-ChatGPT/blob/5a6fc3b5804a6785866e1c93505b2d0f0e3ea7ec/index.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 98,
    "stars": 21
  },
  {
    "full_name": "yavuzselimblog/chatgpt-api",
    "name": "chatgpt-api",
    "description": "php chat gpt api",
    "html_url": [
      "https://github.com/yavuzselimblog/chatgpt-api/blob/5f982ada15e52746063c5514c94c03009aed3eeb/function.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 94,
    "stars": 4
  },
  {
    "full_name": "flocko-motion/gpt-adventure",
    "name": "gpt-adventure",
    "description": "Simple text-adventure game based on OpenAI GPT API",
    "html_url": [
      "https://github.com/flocko-motion/gpt-adventure/blob/014ebdce092c21f784904369ef363522a9f20796/backend.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 319,
    "stars": 0
  },
  {
    "full_name": "LlmLaraHub/larallama",
    "name": "larallama",
    "description": "This is version 2 of LaraChain.io ream more at https://LaraLlama.io",
    "html_url": [
      "https://github.com/LlmLaraHub/larallama/blob/b13ea58d54a8b9404dab86737640b393d1d7977d/tests/Feature/Http/Controllers/SettingControllerTest.php",
      "https://github.com/LlmLaraHub/larallama/blob/b13ea58d54a8b9404dab86737640b393d1d7977d/config/llmdriver.php",
      "https://github.com/LlmLaraHub/larallama/blob/b13ea58d54a8b9404dab86737640b393d1d7977d/app/Models/Setting.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 252921,
    "stars": 162
  },
  {
    "full_name": "echolabsdev/prism",
    "name": "prism",
    "description": "A unified interface for working with LLMs in Laravel",
    "html_url": [
      "https://github.com/echolabsdev/prism/blob/21d0af30205e8bcff335a575d302d0e0ba82410b/config/prism.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 34452,
    "stars": 1536
  },
  {
    "full_name": "php-llm/llm-chain",
    "name": "llm-chain",
    "description": "PHP library for building LLM-based features and applications.",
    "html_url": [
      "https://github.com/php-llm/llm-chain/blob/f7d8aa04d4a8146112a90cf4d20ca1595a6ec7a8/src/Bridge/OpenAI/Embeddings/ModelClient.php",
      "https://github.com/php-llm/llm-chain/blob/f7d8aa04d4a8146112a90cf4d20ca1595a6ec7a8/src/Bridge/OpenAI/GPT/ModelClient.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 15002,
    "stars": 130
  },
  {
    "full_name": "akirk/cll",
    "name": "cll",
    "description": "An easy to use command line interface for ChatGPT and Ollama in PHP.",
    "html_url": [
      "https://github.com/akirk/cll/blob/0ba3186f3ae09993f14dd6887a248c66ebca2081/experiments/summarize.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 248002,
    "stars": 4
  },
  {
    "full_name": "Cornholio6969/OpenAI-wrapper-php",
    "name": "OpenAI-wrapper-php",
    "description": "A simplistic OpenAI wrapper for php.",
    "html_url": [
      "https://github.com/Cornholio6969/OpenAI-wrapper-php/blob/9667b4eafe48392ad917503209d75579b47e500e/ChatGPT.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 108,
    "stars": 0
  },
  {
    "full_name": "beikeshop/beikeshop",
    "name": "beikeshop",
    "description": "🔥🔥🔥 Free open source and easy-to-use laravel eCommerce platform，BeikeShop基于Laravel 10 框架开发开源电商系统，多语言、多货币100%全开源，已集成ChatGPT OpenAI，支持自定义可视化装修并拥有丰富的插件市场。由成都光大网络科技开发维护 QQ交流群 639108380",
    "html_url": [
      "https://github.com/beikeshop/beikeshop/blob/5d78a4e8da8800bdca7b53a13f8be8d1e8d349d7/plugins/Openai/Libraries/OpenAI/Chat.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 161235,
    "stars": 1543
  },
  {
    "full_name": "wgalindo1453/Story_Teller",
    "name": "Story_Teller",
    "description": "An interactive web application built with Laravel, integrating OpenAI's GPT-3 and DALL-E models to generate stories, images, and audio based on user input. It showcases the capabilities of AI in creative storytelling, offering users a unique and engaging experience with dynamically generated content.",
    "html_url": [
      "https://github.com/wgalindo1453/Story_Teller/blob/922f9d1d8e50fa33d9cf773e8fc65fa17d504d29/app/Http/Controllers/StoryController.php",
      "https://github.com/wgalindo1453/Story_Teller/blob/922f9d1d8e50fa33d9cf773e8fc65fa17d504d29/app/Http/Controllers/ImageController.php",
      "https://github.com/wgalindo1453/Story_Teller/blob/922f9d1d8e50fa33d9cf773e8fc65fa17d504d29/app/Http/Controllers/AudioController.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 1906,
    "stars": 1
  },
  {
    "full_name": "speakeasy-sdks/openai-php-sdk",
    "name": "openai-php-sdk",
    "description": "PHP SDK for the OpenAI API",
    "html_url": [
      "https://github.com/speakeasy-sdks/openai-php-sdk/blob/208df908f4b6b09b68b58df7571c4afaf6859901/src/Gpt.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 4246,
    "stars": 1
  },
  {
    "full_name": "byronomio/Chat-GPT-4-Spelling-Grammar-Improver",
    "name": "Chat-GPT-4-Spelling-Grammar-Improver",
    "description": "A simple and intuitive interface that leverages the power of OpenAI's GPT-4 to rectify spelling and grammar.",
    "html_url": [
      "https://github.com/byronomio/Chat-GPT-4-Spelling-Grammar-Improver/blob/23af15b02b73c49db3783834308166be1f6db438/process.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 139,
    "stars": 0
  },
  {
    "full_name": "MilitoNathan/FormationLaravelSql",
    "name": "FormationLaravelSql",
    "description": "Projet d'un chatbot fait en laravel relié à l'API OpenAI",
    "html_url": [
      "https://github.com/MilitoNathan/FormationLaravelSql/blob/7589ea7008c859f6d5a56873b172cde5f24161c0/app/Http/Controllers/ChatController.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 1504,
    "stars": 0
  },
  {
    "full_name": "SamiAbrash/Laravel_OpenAI_GPT_Integration",
    "name": "Laravel_OpenAI_GPT_Integration",
    "description": null,
    "html_url": [
      "https://github.com/SamiAbrash/Laravel_OpenAI_GPT_Integration/blob/2310a49614297daa08dbbcdfdf9d4be19879a5fa/app/Http/Controllers/OpenaiController.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 1163,
    "stars": 0
  },
  {
    "full_name": "CodeWithKyrian/chromadb-php",
    "name": "chromadb-php",
    "description": "A PHP SDK for interacting with Chroma Vector Database seamlessly.",
    "html_url": [
      "https://github.com/CodeWithKyrian/chromadb-php/blob/3f7ce55260a0f5b8afe078a7a6f21b3fc88ec53d/src/Embeddings/OpenAIEmbeddingFunction.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 2569,
    "stars": 64
  },
  {
    "full_name": "eutheuzin7/bot-telegram-OpenAI-php",
    "name": "bot-telegram-OpenAI-php",
    "description": "Esse é um pequeno bot telegram com a API openai usando apenas curl ",
    "html_url": [
      "https://github.com/eutheuzin7/bot-telegram-OpenAI-php/blob/c541c62af81210e2e287a59ed0c9b9f118b75097/bot.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 46,
    "stars": 4
  },
  {
    "full_name": "nazmulpcc/framework-x-openai-demo",
    "name": "framework-x-openai-demo",
    "description": null,
    "html_url": [
      "https://github.com/nazmulpcc/framework-x-openai-demo/blob/ea07e0e90add0ec893c6c4966eef52353930ea43/src/OpenAi.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 133,
    "stars": 3
  },
  {
    "full_name": "cosmocode/dokuwiki-plugin-aichat",
    "name": "dokuwiki-plugin-aichat",
    "description": "Chat with a LLM about your DokuWiki contents",
    "html_url": [
      "https://github.com/cosmocode/dokuwiki-plugin-aichat/blob/ee590d6c8dbb1b680fb82b4912b26c1f7204fa52/Model/OpenAI/AbstractOpenAIModel.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 12767,
    "stars": 19
  },
  {
    "full_name": "tommasogalli/JSPHPer",
    "name": "JSPHPer",
    "description": "JSPHPer is a simple but very easy to use client for OpenAI GPT3.5Turbo Model with Embedding API enabled on text files. It only uses JS & PHP.",
    "html_url": [
      "https://github.com/tommasogalli/JSPHPer/blob/6a197a38a4038cae9214b20f82f554434007ead4/embedding_api.php",
      "https://github.com/tommasogalli/JSPHPer/blob/6a197a38a4038cae9214b20f82f554434007ead4/gpt_api.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 1031,
    "stars": 1
  },
  {
    "full_name": "tatsuno-system/chatgpt-interface",
    "name": "chatgpt-interface",
    "description": "chatgptのAPIを呼び出すだけのシンプルなPHPコード",
    "html_url": [
      "https://github.com/tatsuno-system/chatgpt-interface/blob/e371693934b1d377f7c77f6bc73ab9244537fc18/index.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 60,
    "stars": 1
  },
  {
    "full_name": "izisaurio/openai",
    "name": "openai",
    "description": "A small Open AI API wrapper",
    "html_url": [
      "https://github.com/izisaurio/openai/blob/125829e0275287746b306d1cb17770abd4b295ce/lib/Chat.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 147,
    "stars": 0
  },
  {
    "full_name": "adrienbrault/instructrice",
    "name": "instructrice",
    "description": "👩‍🏫 Typed LLM Outputs in PHP. Supports GPT, Claude, Gemini or any OpenAI compatible provider!",
    "html_url": [
      "https://github.com/adrienbrault/instructrice/blob/d55a9b0e2484c312f600a3991a877de9fd082749/src/LLM/Provider/OpenAi.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 3666,
    "stars": 31
  },
  {
    "full_name": "quchuanping/chatgpt-php",
    "name": "chatgpt-php",
    "description": "chatgpt php接口对接",
    "html_url": [
      "https://github.com/quchuanping/chatgpt-php/blob/ee52cb166350701b5856d48202893892926b59b2/api/draw.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 577,
    "stars": 33
  },
  {
    "full_name": "garissman/larachain",
    "name": "larachain",
    "description": "Chat bot Using LLM Models to support your product made with Laravel.",
    "html_url": [
      "https://github.com/garissman/larachain/blob/f7ede2ca54039ec525c53aeb6fffd1b48ce0cf5b/config/larachain.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 4690,
    "stars": 2
  },
  {
    "full_name": "AishwaryaKumar387/ChatGpt-in-PHP",
    "name": "ChatGpt-in-PHP",
    "description": "ChatGpt in PHP",
    "html_url": [
      "https://github.com/AishwaryaKumar387/ChatGpt-in-PHP/blob/d6e766f491779a00638cb1783ce704fa796105a2/Index.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 143,
    "stars": 0
  },
  {
    "full_name": "code-lives/chatgpt-php",
    "name": "chatgpt-php",
    "description": "php调用 chatgpt",
    "html_url": [
      "https://github.com/code-lives/chatgpt-php/blob/e6547b397cc23d68f5ba90327f83d6bcce4a1ec1/src/ChatGpt.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 162,
    "stars": 0
  },
  {
    "full_name": "rx350h/daily_horoscopes",
    "name": "daily_horoscopes",
    "description": "gpt-3.5 model generated hoscopes",
    "html_url": [
      "https://github.com/rx350h/daily_horoscopes/blob/01a03689b81d0c649e6163d6ed679511df82b676/horoscope/get_horoscope.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 471,
    "stars": 0
  },
  {
    "full_name": "webman-php/openai",
    "name": "openai",
    "description": "OpenAI PHP asynchronous client for workerman and webman.",
    "html_url": [
      "https://github.com/webman-php/openai/blob/d5484910ed6875c2a9067a602ec7f4cf5f157fdd/src/Base.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 620,
    "stars": 63
  },
  {
    "full_name": "nstation/ChatGPT_PHP_gpt-3_5-turbo_Sample",
    "name": "ChatGPT_PHP_gpt-3_5-turbo_Sample",
    "description": "PHPを使ってChatGPTのチャットAPIのレスポンスを確認するサンプルプログラム",
    "html_url": [
      "https://github.com/nstation/ChatGPT_PHP_gpt-3_5-turbo_Sample/blob/0b995821a85c843733adc35d0690fb95b5fcfcb3/ChatGPT_PHP_gpt-3_5-turbo_Sample.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 68,
    "stars": 1
  },
  {
    "full_name": "bush1D3v/diverti_lembrete_api",
    "name": "diverti_lembrete_api",
    "description": "O DivertiLembrete é uma aplicação de lembretes, feita para criar lembretes baseados nos enviados pelo usuário, os pré-processando com a Openai apartir de uma emoção requisitada ao usuário.",
    "html_url": [
      "https://github.com/bush1D3v/diverti_lembrete_api/blob/35474e709bd183641a465cc1e7f948789f1c8871/src/Infrastructure/Reminder/Openai/ReminderTextProcessor.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 1333,
    "stars": 2
  },
  {
    "full_name": "surajoliver/convobot",
    "name": "convobot",
    "description": "An project to chat with openai using php laravel and javascript react.",
    "html_url": [
      "https://github.com/surajoliver/convobot/blob/d8c2055e847d7f3fc3bea0175a30fb38d22997d6/app/Http/Controllers/MessageController.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 6941,
    "stars": 0
  },
  {
    "full_name": "mornone/chatgpt-dcat-php-admin",
    "name": "chatgpt-dcat-php-admin",
    "description": "使用php语言dcat-admin开发chatgpt管理后台，配合前端页面(https://github.com/zhaohao19941221/chatgpt-dcat-php-admin-web)使用",
    "html_url": [
      "https://github.com/mornone/chatgpt-dcat-php-admin/blob/d688032b631154e1b42e44c6ea03af4f06e51534/app/Admin/Forms/ChatgptConfigs.php",
      "https://github.com/mornone/chatgpt-dcat-php-admin/blob/d688032b631154e1b42e44c6ea03af4f06e51534/app/Admin/Controllers/ChatgptImageEditController.php",
      "https://github.com/mornone/chatgpt-dcat-php-admin/blob/d688032b631154e1b42e44c6ea03af4f06e51534/app/Admin/Controllers/ChatgptChatController.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 259855,
    "stars": 10
  },
  {
    "full_name": "krzar/laravel-openai-api",
    "name": "laravel-openai-api",
    "description": "Open AI Api Connector for Laravel",
    "html_url": [
      "https://github.com/krzar/laravel-openai-api/blob/900abe40138371d37e3e76dff77e4728f42ed47a/src/Base/OpenAiConnector.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 2709,
    "stars": 1
  },
  {
    "full_name": "delabon/aiartgen",
    "name": "aiartgen",
    "description": "A platform for AI artists where they can leverage Opanai's DALL-E to generate modern art. Built with Laravel.",
    "html_url": [
      "https://github.com/delabon/aiartgen/blob/e9f6e447208045613cc62c316f90fbf599498da4/app/app/Services/ArtGenerationApiService.php",
      "https://github.com/delabon/aiartgen/blob/e9f6e447208045613cc62c316f90fbf599498da4/app/tests/Unit/Services/ArtGenerationApiServiceTest.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 8004,
    "stars": 1
  },
  {
    "full_name": "vdm-io/openai",
    "name": "openai",
    "description": "mirror of https://git.vdm.dev/joomla/vdm-openai",
    "html_url": [
      "https://github.com/vdm-io/openai/blob/b48881a8a4f0df13dbcbcf7f980c6aad6cd145e1/src/VastDevelopmentMethod/Openai/Joomla/Openai/Utilities/Uri.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 1653,
    "stars": 0
  },
  {
    "full_name": "dahexer/ChatGPT-Vision-PHP-Example",
    "name": "ChatGPT-Vision-PHP-Example",
    "description": "How to use openai Gpt-4 Vision API using PHP",
    "html_url": [
      "https://github.com/dahexer/ChatGPT-Vision-PHP-Example/blob/430166e89b74ef72ac317de1cf79bc59fe2459fc/example.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 66,
    "stars": 0
  },
  {
    "full_name": "Aeknasd145/ChatGPT-Assistant-API-with-Pure-PHP",
    "name": "ChatGPT-Assistant-API-with-Pure-PHP",
    "description": "This is basic a chatgpt assistant created with PHP8 and using OOP",
    "html_url": [
      "https://github.com/Aeknasd145/ChatGPT-Assistant-API-with-Pure-PHP/blob/391e585805cd550d30639db1147673e5badcd731/app/ChatGPTAssistant.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 103,
    "stars": 3
  },
  {
    "full_name": "TimAnthonyAlexander/chatgpt-wrapper",
    "name": "chatgpt-wrapper",
    "description": "ChatGPT-Wrapper is a sleek PHP interface for integrating with OpenAI's ChatGPT. ",
    "html_url": [
      "https://github.com/TimAnthonyAlexander/chatgpt-wrapper/blob/4094fc53a9e8313153b5cba3a771f630dca9a95c/src/Module/Chatbot/Chatbot.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 345,
    "stars": 0
  },
  {
    "full_name": "VolkanSah/GPT-API-Integration-in-HTML-CSS-with-JS-PHP",
    "name": "GPT-API-Integration-in-HTML-CSS-with-JS-PHP",
    "description": "A basic GPT conversation script designed to help you learn to interact with OpenAI's GPT technology. Includes best practices and a free security whitepaper.",
    "html_url": [
      "https://github.com/VolkanSah/GPT-API-Integration-in-HTML-CSS-with-JS-PHP/blob/060c15f16181546be1a58cf8fd70e7f205290a6d/gptchat.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 238,
    "stars": 85
  },
  {
    "full_name": "egebagcivan/fake-comment-generator-backend-chatgpt-api",
    "name": "fake-comment-generator-backend-chatgpt-api",
    "description": "Laravel backend for chatgpt api, fake comment generator",
    "html_url": [
      "https://github.com/egebagcivan/fake-comment-generator-backend-chatgpt-api/blob/e33418464ece7f6928a380a6684fe740052860c2/app/Http/Controllers/AiController.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 1405,
    "stars": 0
  },
  {
    "full_name": "chaana-00/CodeAlpha_ChatGPT-Integration",
    "name": "CodeAlpha_ChatGPT-Integration",
    "description": "The ChatGPT Integration",
    "html_url": [
      "https://github.com/chaana-00/CodeAlpha_ChatGPT-Integration/blob/92de5a73fd600258279ee328990c0c1f76a87ad1/GPT-API-Integration-in-HTML-CSS-with-JS-PHP-main/GPT-API-Integration-in-HTML-CSS-with-JS-PHP-main/gptchat.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 145,
    "stars": 0
  },
  {
    "full_name": "convergine/craft-content-buddy",
    "name": "craft-content-buddy",
    "description": "CraftCMS plugin, that uses OpenAI's ChatGPT for efficient creation of multi-lingual, keyword-focused articles and entries.",
    "html_url": [
      "https://github.com/convergine/craft-content-buddy/blob/4ad7bd107a25afd6dba1a2e156f75e43a0f23367/src/api/text/OpenAi.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 8031,
    "stars": 7
  },
  {
    "full_name": "movetz/php-fwdays24-llm-demo",
    "name": "php-fwdays24-llm-demo",
    "description": null,
    "html_url": [
      "https://github.com/movetz/php-fwdays24-llm-demo/blob/9eab6fbf6be800d5de8807e83b6b9fa87c8d5368/src/AiBot/EmbeddingBasedBot.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "xuchunyang/llm",
    "name": "llm",
    "description": "试用 Laravel Zero 写个 LLM CLI 工具",
    "html_url": [
      "https://github.com/xuchunyang/llm/blob/8861ed9a34f6e6f596b91611f68bbe3826675166/app/Commands/ChatCommand.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 396,
    "stars": 0
  },
  {
    "full_name": "bladealex9848/ChatGPT",
    "name": "ChatGPT",
    "description": "Aplicación que te permite interactuar con la API de OpenAI y utilizar el modelo GPT-3.",
    "html_url": [
      "https://github.com/bladealex9848/ChatGPT/blob/6f30f353efd40414e6a5366ff69250cf3b4a2642/basico.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 159,
    "stars": 24
  },
  {
    "full_name": "chrispage1/ai-image-searching-laravel",
    "name": "ai-image-searching-laravel",
    "description": "Example of using OpenAI GPT Turbo 4 in Laravel",
    "html_url": [
      "https://github.com/chrispage1/ai-image-searching-laravel/blob/cb8c6c3b2881e884e5609d3e1ef831b0d0b392f6/app/Jobs/FetchDataFromOpenAi.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 3599,
    "stars": 0
  },
  {
    "full_name": "AGC007/ChatGPT-APi--PHP",
    "name": "ChatGPT-APi--PHP",
    "description": "♾️ ChatGPT [API] - (PHP-AGC007)",
    "html_url": [
      "https://github.com/AGC007/ChatGPT-APi--PHP/blob/398a74cc37e5d11eba44a93af73cb3e7e8eb06a5/ChatGPT_API.PHP"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 31,
    "stars": 21
  },
  {
    "full_name": "karamusluk/OpenAI-GPT-3-API-Wrapper-for-PHP-8",
    "name": "OpenAI-GPT-3-API-Wrapper-for-PHP-8",
    "description": "PHP 8 Wrapper for OpenAI GPT-3 API.",
    "html_url": [
      "https://github.com/karamusluk/OpenAI-GPT-3-API-Wrapper-for-PHP-8/blob/62d8b0b89a5b6eac3550a57d6ad09a9192306582/OpenAI.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 290,
    "stars": 29
  },
  {
    "full_name": "dirk1983/ChatGPT-4",
    "name": "ChatGPT-4",
    "description": "GPT-4已正式发布，调用ChatGPT4接口需要申请，请加微信群或在项目讨论区交流创业心得吧！群内可批发账号，代充开Plus，免费的反代地址，获取网站源码，对接各种资源。欢迎各位中国的ChatGPT爱好者和创业者一起谋划点大事！",
    "html_url": [
      "https://github.com/dirk1983/ChatGPT-4/blob/2812b7e4eecee30eaebb657ba3ec83c1ebed11d3/stream.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 0,
    "stars": -2
  },
  {
    "full_name": "alnutile/php-llms",
    "name": "php-llms",
    "description": "Laravel and LLMs ",
    "html_url": [
      "https://github.com/alnutile/php-llms/blob/593c5e3eca6bf64bb305e72b8e101c00dd9826d3/config/llmdriver.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 16976,
    "stars": 23
  },
  {
    "full_name": "GithubRealFan/PHP-Based-ChatGPT-API",
    "name": "PHP-Based-ChatGPT-API",
    "description": "This example is base of using ChatGPT.",
    "html_url": [
      "https://github.com/GithubRealFan/PHP-Based-ChatGPT-API/blob/d827ba445103fbd5ef255f0ea7f73a0b65b0aaad/openai_api.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 354,
    "stars": 17
  },
  {
    "full_name": "wpaimuse/ai-muse",
    "name": "ai-muse",
    "description": "AI Chatbot and AI Content Generation with over 300+ models from OpenAI (ChatGPT), Google AI and OpenRouter. Generate contents and images with AI Muse.",
    "html_url": [
      "https://github.com/wpaimuse/ai-muse/blob/445436ea20027fbfeadb0659ad667c314cbac2a0/src/Services/OpenAI/Transporters/HttpTransporter.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "tawafmesar/GPTNote",
    "name": "GPTNote",
    "description": "This website offers note management with AI assistance through a linked app to OpenAI models. Users can summarize and explain their notes before saving them. The site was built using HTML, CSS, PHP, MySQL, and integrated OpenAI models.",
    "html_url": [
      "https://github.com/tawafmesar/GPTNote/blob/e62fe9c6fb3f96cfb620067fb32cc9d81747d887/chatbot.php",
      "https://github.com/tawafmesar/GPTNote/blob/e62fe9c6fb3f96cfb620067fb32cc9d81747d887/files/ini.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 24797,
    "stars": 3
  },
  {
    "full_name": "ruscoe/openai-php",
    "name": "openai-php",
    "description": "A PHP library for the OpenAI API.",
    "html_url": [
      "https://github.com/ruscoe/openai-php/blob/9e4809a21acc220f72d87c484d81c5befac9643d/src/OpenAI.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 762,
    "stars": 3
  },
  {
    "full_name": "vormkracht10/laravel-embeddings",
    "name": "laravel-embeddings",
    "description": "Create embeddings for your Eloquent models to use with OpenAI",
    "html_url": [
      "https://github.com/vormkracht10/laravel-embeddings/blob/a9fd1ffbf5c09d13a38466514f9961e12b5af9e6/src/Engines/OpenAiEngine.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 1134,
    "stars": 7
  },
  {
    "full_name": "passionweb-manuel-schnabel/open-ai-api",
    "name": "open-ai-api",
    "description": "Shows the usage of the OpenAI API within TYPO3. Sends an example request with the entered prompt.",
    "html_url": [
      "https://github.com/passionweb-manuel-schnabel/open-ai-api/blob/c545b9e4abc54949be77b9f8342eadffd27149a0/Classes/Controller/AiController.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 344,
    "stars": 0
  },
  {
    "full_name": "elementoracle/ai_content",
    "name": "ai_content",
    "description": "OpenAI integration with WordPress Elementor for automated content generation.",
    "html_url": [
      "https://github.com/elementoracle/ai_content/blob/bc232c24572158114536f61a0c25e7606387729d/elementor-openai/dynamic-tags/dynamic-tag-openai.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 133,
    "stars": 8
  },
  {
    "full_name": "yllw-digital/laravel-chatgpt-mock-api",
    "name": "laravel-chatgpt-mock-api",
    "description": "Generate smart API mocks in Laravel using ChatGPT prompts",
    "html_url": [
      "https://github.com/yllw-digital/laravel-chatgpt-mock-api/blob/3b5cd52bcc247bef63f11d72a2b74ddebe55972a/src/LaravelChatgptMockApi.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 284,
    "stars": 139
  },
  {
    "full_name": "kognetiks/kognetiks-chatbot",
    "name": "kognetiks-chatbot",
    "description": "Kognetiks Chatbot for WordPress is a plugin that allows you to effortlessly integrate OpenAI's ChatGPT API into your website, providing a powerful, AI-driven chatbot for enhanced user experience and personalized support.",
    "html_url": [
      "https://github.com/kognetiks/kognetiks-chatbot/blob/c7acbe902cf77ee28090edc82a63a2d493a7359c/includes/utilities/chatbot-file-download.php",
      "https://github.com/kognetiks/kognetiks-chatbot/blob/c7acbe902cf77ee28090edc82a63a2d493a7359c/includes/chatbot-call-image-api.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 29286,
    "stars": 57
  },
  {
    "full_name": "initMAX/Zabbix-UI-Widgets-ChatGPT",
    "name": "Zabbix-UI-Widgets-ChatGPT",
    "description": "The ChatGPT widget integrates AI capabilities into your Zabbix dashboard, allowing interaction with OpenAI models directly from the widget.",
    "html_url": [
      "https://github.com/initMAX/Zabbix-UI-Widgets-ChatGPT/blob/78eff010c95bbbb077f1661098d91d97b75ccabc/includes/WidgetForm.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 1378,
    "stars": 10
  },
  {
    "full_name": "roadlabs/PHP-GPT-3.5-Proxy-API",
    "name": "PHP-GPT-3.5-Proxy-API",
    "description": "For use with Slack, Teams, ect. Saves user and bot history so bot can reference in future responses.",
    "html_url": [
      "https://github.com/roadlabs/PHP-GPT-3.5-Proxy-API/blob/422c230bc88222e0530797b494da2e109690c883/chatgpt.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 101,
    "stars": 0
  },
  {
    "full_name": "ZylerKade/chatgpt-website-clone",
    "name": "chatgpt-website-clone",
    "description": "An easy-to-install ChatGPT clone you can host on your own web server and access from a web browser.",
    "html_url": [
      "https://github.com/ZylerKade/chatgpt-website-clone/blob/2913e44abd95173f2523869c08d606433125defb/class/Class.ChatGPT.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 1500,
    "stars": 10
  },
  {
    "full_name": "bensonruan/ReplyWithChatGPT",
    "name": "ReplyWithChatGPT",
    "description": "A WordPress plugin that integrate with OpenAI's ChatGPT API, use AI generated response to help you reply comments",
    "html_url": [
      "https://github.com/bensonruan/ReplyWithChatGPT/blob/a2dd46a1f176d5cb73a435a99edf98ffac42de6b/wp-content/plugins/ai-reply/ai-reply-js.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 248,
    "stars": 6
  },
  {
    "full_name": "SanHacks/ImagineAI",
    "name": "ImagineAI",
    "description": "Generate Products In Magento Powered By OpenAI Dall-E 2 Model .",
    "html_url": [
      "https://github.com/SanHacks/ImagineAI/blob/b1bca92bae91f7b38d5a44101f6470dd2792757f/Helper/GenerateImage.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 861,
    "stars": 2
  },
  {
    "full_name": "adrielzimbril/Turbo-AI",
    "name": "Turbo-AI",
    "description": "Turbo AI's intelligent text generation feature harnesses the power of artificial intelligence to provide users with a seamless and efficient content creation experience. ",
    "html_url": [
      "https://github.com/adrielzimbril/Turbo-AI/blob/aef0a2cb3bdc8575aeae031cb7fdf584c2b9392a/app/Http/Controllers/Backend/Admin/AIController.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 965859,
    "stars": 3
  },
  {
    "full_name": "crembelski/iacommunication",
    "name": "iacommunication",
    "description": "This package allows you to communicate with OpenAI via a simple interface.",
    "html_url": [
      "https://github.com/crembelski/iacommunication/blob/66d29d995a13167a9b5eb2befbd37870b40c6a89/src/services/OpenAI.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 230,
    "stars": 1
  },
  {
    "full_name": "stellarhk/ChatGPT4.0-Web-Stellar",
    "name": "ChatGPT4.0-Web-Stellar",
    "description": "本项目已更新GPT-4o以及GPT-4-32k模型，现在免费加群讨论，即将达到500人上限，欲加从速！",
    "html_url": [
      "https://github.com/stellarhk/ChatGPT4.0-Web-Stellar/blob/a0e808fd2db1a697b7e9b8383037b8eeb8dc36fa/config.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 11081,
    "stars": 114
  },
  {
    "full_name": "chrisreedio/laravel-openai-sdk",
    "name": "laravel-openai-sdk",
    "description": "OpenAI integration for Laravel",
    "html_url": [
      "https://github.com/chrisreedio/laravel-openai-sdk/blob/885f51ac60eabaa9ff333e6db87ebd1e54e1b782/src/Connectors/OpenAIConnector.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 1839,
    "stars": 3
  },
  {
    "full_name": "cty1735/chatGpt-web",
    "name": "chatGpt-web",
    "description": "chatGpt web PC版本，支持填apiKey，也可自行修改样式，二次开发，部署属于自己的chatgpt！",
    "html_url": [
      "https://github.com/cty1735/chatGpt-web/blob/9487362d7d4e0dd54bee9a3d29b04cde9e342627/config.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 2199,
    "stars": 0
  },
  {
    "full_name": "blinq-dev/php-openai-api",
    "name": "php-openai-api",
    "description": "PHP OpenAI Api - A library wrapper around the OpenAI API.",
    "html_url": [
      "https://github.com/blinq-dev/php-openai-api/blob/607972a18cb8fb9d53101b26003ac5aee5b54657/src/Drivers/OpenAI.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 714,
    "stars": 5
  },
  {
    "full_name": "orhanerday/open-ai",
    "name": "open-ai",
    "description": "OpenAI PHP SDK : Most downloaded, forked, contributed, huge community supported, and used PHP (Laravel , Symfony, Yii, Cake PHP or any PHP framework) SDK for OpenAI GPT-3 and DALL-E. It also supports chatGPT-like streaming. (ChatGPT AI is supported)",
    "html_url": [
      "https://github.com/orhanerday/open-ai/blob/81016584c047eda0deb6f56dc3b43378af8d5980/src/Url.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 2562,
    "stars": 2345
  },
  {
    "full_name": "yukihamada/voiceGPTweb",
    "name": "voiceGPTweb",
    "description": "🔊voiceGPTweb is a user-friendly web application that enables voice-based conversations with language models such as GPT-3 and GPT-4. The project's goal is to achieve more natural language processing, increase knowledge, and create a new ecosystem where open extensions such as plugins can be added.",
    "html_url": [
      "https://github.com/yukihamada/voiceGPTweb/blob/04bfb121e49d69ce18d115c183b2f3139837e2c9/class/OpenAIAPI.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 2940,
    "stars": 5
  },
  {
    "full_name": "AtomicRoland/ChatGPT-8bit",
    "name": "ChatGPT-8bit",
    "description": "ChatGPT client for 8bit Acorn computers",
    "html_url": [
      "https://github.com/AtomicRoland/ChatGPT-8bit/blob/2a1dc852d331e798876c59ce98c5860b989e377c/proxy/proxy.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 2065,
    "stars": 0
  },
  {
    "full_name": "bnoordsij/chatgpt-api",
    "name": "chatgpt-api",
    "description": "This is a wrapper for the chatGPT API to specify the response format",
    "html_url": [
      "https://github.com/bnoordsij/chatgpt-api/blob/a5164040265c2a666d32b444c4eef5af1f4a81df/src/Api/Client.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 448,
    "stars": 0
  },
  {
    "full_name": "h2ndev/AutoResponderTicketGPT-for-WHMCS",
    "name": "AutoResponderTicketGPT-for-WHMCS",
    "description": "Addon cho WHMCS, tự động phản hồi các ticket mới bằng cách sử dụng API ChatGPT. Addon này lấy nội dung và tiêu đề của ticket mới, gửi chúng đến ChatGPT API để tạo câu trả lời, và sau đó phản hồi lại ticket dưới tư cách là admin.",
    "html_url": [
      "https://github.com/h2ndev/AutoResponderTicketGPT-for-WHMCS/blob/f4476ed7f3fd30c5e893d0019b6fe86cb9cdd8cc/modules/addons/autoresponder/hooks.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 178,
    "stars": 0
  },
  {
    "full_name": "prikpot/chatgpt-wordpress",
    "name": "chatgpt-wordpress",
    "description": "A ChatGPT plugin for Wordpress",
    "html_url": [
      "https://github.com/prikpot/chatgpt-wordpress/blob/0616935fddf7c943d331a4ac565b3ae89a718d14/chatgpt-client.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 149,
    "stars": 1
  },
  {
    "full_name": "zerexly/QUICKAI-2.3",
    "name": "QUICKAI-2.3",
    "description": "OpenAI Content & Image Generator and Writing Assistant (SaaS).",
    "html_url": [
      "https://github.com/zerexly/QUICKAI-2.3/blob/0ed895db97e21d4d38329d5a0bce9a0c5363bfa0/includes/lib/orhanerday/open-ai/src/Url.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 264920,
    "stars": 26
  },
  {
    "full_name": "thojou/openai-php-client",
    "name": "openai-php-client",
    "description": "The OpenAi PHP Client is a user-friendly PHP library designed to facilitate interactions with the OpenAI Rest API.",
    "html_url": [
      "https://github.com/thojou/openai-php-client/blob/409e5a77580a5a37fdf97a88644f8704a58ef4cf/src/OpenAi.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 1185,
    "stars": 0
  },
  {
    "full_name": "virgiliud/wp-gpt-starter",
    "name": "wp-gpt-starter",
    "description": "A starter plugin for connecting WordPress to OpenAI's API.",
    "html_url": [
      "https://github.com/virgiliud/wp-gpt-starter/blob/42c3cefa0dd14418c24dd30f906adf87b28da781/includes/class-wpgpt-endpoint.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 438,
    "stars": 14
  },
  {
    "full_name": "RevertIT/mybb-rt_chatgpt",
    "name": "mybb-rt_chatgpt",
    "description": "RT ChatGPT  is a plugin which utilizes OpenAI API to generate responses in selected forums and do tasks. The plugin can be extended and new models can be added with ease!",
    "html_url": [
      "https://github.com/RevertIT/mybb-rt_chatgpt/blob/31bccd3bac642131e32f15b8b8a1eedf102db41b/inc/plugins/rt/src/ChatGPT/Models/Moderation.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 1263,
    "stars": 7
  },
  {
    "full_name": "mikestratton/aicms",
    "name": "aicms",
    "description": "Artificially Intelligent Content Management System - Built Using OpenAI's API and Laravel",
    "html_url": [
      "https://github.com/mikestratton/aicms/blob/6ee351319034238116f7b1a40612f0afea512647/app/Http/Controllers/AIController.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 5997,
    "stars": 3
  },
  {
    "full_name": "ablancodev/tellme",
    "name": "tellme",
    "description": "TellMe project",
    "html_url": [
      "https://github.com/ablancodev/tellme/blob/c55d43f9a91007232b03501e48c7bb6f9fcca9b7/wordpress-plugin/tellme/core/TellmeIA.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 816,
    "stars": 0
  },
  {
    "full_name": "dirk1983/chatgpt-wechat-personal",
    "name": "chatgpt-wechat-personal",
    "description": "在微信个人订阅号中通过调用OpenAI最新接口和gpt-3.5-turbo模型实现ChatGPT聊天机器人的功能",
    "html_url": [
      "https://github.com/dirk1983/chatgpt-wechat-personal/blob/a0857f646fcede01a04726d79c1bba0d3bec6072/weixin.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 0,
    "stars": -2
  },
  {
    "full_name": "vishanurag/diploma-final-year-project",
    "name": "diploma-final-year-project",
    "description": "This repository contains all the Documentations & Code of DiAIGen Website which is required to build an 'AI Based Website Builder' Website",
    "html_url": [
      "https://github.com/vishanurag/diploma-final-year-project/blob/731e571ecc8eef8c89785e189c1ab55f4edb6ca5/Project-Website/components/api-functions.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 65687,
    "stars": 2
  },
  {
    "full_name": "ArSn/chatgpt-client",
    "name": "chatgpt-client",
    "description": "A simple chatGPT-like openAI client to talk to",
    "html_url": [
      "https://github.com/ArSn/chatgpt-client/blob/452a3f80685f73df6aa3c7641d8b496a113c7c3b/server.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 271,
    "stars": 5
  },
  {
    "full_name": "lfalcao/wp-gpt-content",
    "name": "wp-gpt-content",
    "description": "PHP script that reviews and improve WordPress content using ChatGPT to enhance SEO",
    "html_url": [
      "https://github.com/lfalcao/wp-gpt-content/blob/cd119142d04a5b12e328ca3464f9d40c1cf0537f/wp-gpt-content.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 148,
    "stars": 0
  },
  {
    "full_name": "skito/aipi-php",
    "name": "aipi-php",
    "description": "Universal API client for common AI models",
    "html_url": [
      "https://github.com/skito/aipi-php/blob/0b18c996f39add6a840993040f0745eadaab5189/src/Models/openai-embeddings.php",
      "https://github.com/skito/aipi-php/blob/0b18c996f39add6a840993040f0745eadaab5189/src/Models/openai-speech.php",
      "https://github.com/skito/aipi-php/blob/0b18c996f39add6a840993040f0745eadaab5189/src/Models/openai-completitions.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 3592,
    "stars": 33
  },
  {
    "full_name": "Firiks/php-openai-wrapper",
    "name": "php-openai-wrapper",
    "description": "PHP wrapper for OpenAI API.",
    "html_url": [
      "https://github.com/Firiks/php-openai-wrapper/blob/081b03f18b4638624af2ace2d04a5eba3eb7c49a/src/PhpOpenaiWrapper.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 619,
    "stars": 0
  },
  {
    "full_name": "krishmk1009/Langchain_Based_custom_Chabot-Wordpress-Plugin",
    "name": "Langchain_Based_custom_Chabot-Wordpress-Plugin",
    "description": "EasyLangChainChatbot-WordPress is a user-friendly and efficient language chain-based chatbot plugin designed specifically for WordPress websites. With this plugin, you can seamlessly integrate a powerful chatbot feature into your WordPress site, enabling users to interact with the chatbot through WhatsApp messages or by uploading documents.",
    "html_url": [
      "https://github.com/krishmk1009/Langchain_Based_custom_Chabot-Wordpress-Plugin/blob/beb352a621c1929becdcb4045480d5af88707271/Mychatbot.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 595,
    "stars": 4
  },
  {
    "full_name": "dirk1983/chatgpt",
    "name": "chatgpt",
    "description": "演示站现在可以免费使用ChatGPT对话和画图了。全网最易部署，响应速度最快的ChatGPT环境。PHP版调用OpenAI接口进行问答和画图，采用Stream流模式通信，一边生成一边输出。前端采用EventSource，支持Markdown格式解析，支持公式显示，代码有着色处理，支持画图。页面UI简洁，支持上下文连续会话。源码只有几个文件，没用任何框架，支持所有PHP版本，全部开源，极易二开。保姆级教程，账号等周边资源，欢迎进群交流，一切全免费。",
    "html_url": [
      "https://github.com/dirk1983/chatgpt/blob/f715dcaad280c8f4ca99638a4dcca30d48d01b36/stream.php",
      "https://github.com/dirk1983/chatgpt/blob/f715dcaad280c8f4ca99638a4dcca30d48d01b36/key.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 0,
    "stars": -2
  },
  {
    "full_name": "oszuidwest/teksttvgpt",
    "name": "teksttvgpt",
    "description": "WordPress plug-in die tekst tv berichten schrijft met OpenAI's GPT",
    "html_url": [
      "https://github.com/oszuidwest/teksttvgpt/blob/996567e7bfb5a3f34baa5d9d07e7423f9047ba7b/src/Plugin.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 8871,
    "stars": 0
  },
  {
    "full_name": "Littlemonk-java/moss",
    "name": "moss",
    "description": "chatgpt",
    "html_url": [
      "https://github.com/Littlemonk-java/moss/blob/cefb5c0c3e13747aa717d73b0c6ef4f630cddc4e/app/admin/controller/Apikey.php",
      "https://github.com/Littlemonk-java/moss/blob/cefb5c0c3e13747aa717d73b0c6ef4f630cddc4e/app/api/controller/Chat.php",
      "https://github.com/Littlemonk-java/moss/blob/cefb5c0c3e13747aa717d73b0c6ef4f630cddc4e/app/api/controller/Gpt4.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 28656,
    "stars": 0
  },
  {
    "full_name": "ahaseeb99/healthly",
    "name": "healthly",
    "description": "This project is a dynamic and user-centric website for Healthly (healthly.live), a platform dedicated to covering all aspects of well-being. It empowers users with personalized meditation experiences and comprehensive health content creation, leveraging AI to deliver holistic wellness plans.",
    "html_url": [
      "https://github.com/ahaseeb99/healthly/blob/501dcca6e01b7fd437d68229c72f83314f99c9ef/app/Http/Controllers/OpenAi/GeneratorController.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 392004,
    "stars": 0
  },
  {
    "full_name": "olegopro/gpt-tools",
    "name": "gpt-tools",
    "description": "Репозиторий gpt-tools включает PHP скрипты для автоматизации задач с текстами, используя API OpenAI. Полезен для разработки и управления кодом.",
    "html_url": [
      "https://github.com/olegopro/gpt-tools/blob/9684fd125b063bd055fc7510b9525e9271a2e852/tools/commit_generator.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 1257,
    "stars": 0
  },
  {
    "full_name": "kambo-1st/langchain-php",
    "name": "langchain-php",
    "description": "⚡ Building applications with LLMs through composability in PHP ⚡",
    "html_url": [
      "https://github.com/kambo-1st/langchain-php/blob/48f9db4b841a72eb2a42377758477a201c64a0b4/tests/VectorStores/SimpleStupidVectorStoreTest.php",
      "https://github.com/kambo-1st/langchain-php/blob/48f9db4b841a72eb2a42377758477a201c64a0b4/tests/Embeddings/OpenAIEmbeddingsTest.php",
      "https://github.com/kambo-1st/langchain-php/blob/48f9db4b841a72eb2a42377758477a201c64a0b4/tests/Chains/CombineDocuments/StuffDocumentsChainTest.php",
      "https://github.com/kambo-1st/langchain-php/blob/48f9db4b841a72eb2a42377758477a201c64a0b4/tests/LLMs/OpenAIChatTest.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 6663,
    "stars": 304
  },
  {
    "full_name": "lymesh/Txt-to-Voice",
    "name": "Txt-to-Voice",
    "description": "txt to voice for openai（GPT）",
    "html_url": [
      "https://github.com/lymesh/Txt-to-Voice/blob/f4d187cc742a1a6193a81d38f485869097135620/txt%20to%20voice.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 89,
    "stars": 0
  },
  {
    "full_name": "zef-dev/convoworks-gpt",
    "name": "convoworks-gpt",
    "description": "Convoworks GPT integrates OpenAI GPT into WordPress, enabling chat, custom API endpoints, and hook-based processing with GPT components for versatile content handling and automation.",
    "html_url": [
      "https://github.com/zef-dev/convoworks-gpt/blob/11df8cf736073d05062dd23ac255e441b0a3a304/src/Convo/Gpt/GptApi.php",
      "https://github.com/zef-dev/convoworks-gpt/blob/11df8cf736073d05062dd23ac255e441b0a3a304/src/Convo/Gpt/Pckg/GptPackageDefinition.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 11441,
    "stars": 27
  },
  {
    "full_name": "galaxytwenty/PmGPT",
    "name": "PmGPT",
    "description": "Have a conversation with the ChatGPT gpt-3.5-turbo model",
    "html_url": [
      "https://github.com/galaxytwenty/PmGPT/blob/4ed08a83da7ced394f67b7fa34546592a9e5d346/src/GLX20/PmGPT/task/GPTResponseTask.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 378,
    "stars": 7
  },
  {
    "full_name": "Masood404/scheduler",
    "name": "scheduler",
    "description": "Scheduler is a web application that provides scheduling capabilities to help you manage your tasks effectively. It is developed in PHP. The application integrates with various APIs, including a Weather API and OpenAI GPT.",
    "html_url": [
      "https://github.com/Masood404/scheduler/blob/1dc0b00c6b169d4388f34620fbb3d751db1e157d/includes/scripts/OpenAIChatHandler.php",
      "https://github.com/Masood404/scheduler/blob/1dc0b00c6b169d4388f34620fbb3d751db1e157d/includes/setup/setup.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 40282,
    "stars": 3
  },
  {
    "full_name": "privet-fun/phpbb_ailabs",
    "name": "phpbb_ailabs",
    "description": "phpBB extension for Midjourney, ChatGPT and DALL-E (OpenAI), Gemini and Gemini Vision (Google), Claude (Anthropic), Stable Diffusion (Stability AI), Pika (Pika.art)",
    "html_url": [
      "https://github.com/privet-fun/phpbb_ailabs/blob/427587444b40ebd73907d57ebd6b7f398d5eedbe/privet/ailabs/controller/dalle.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 6059,
    "stars": 14
  },
  {
    "full_name": "devscast/lugha",
    "name": "lugha",
    "description": "Lugha is a PHP Generative AI Framework to build chatbot, RAG systems and AI-powered applications",
    "html_url": [
      "https://github.com/devscast/lugha/blob/c8d741268fb54f22d3827c0a13345d5520f35719/src/Provider/Service/Client/OpenAIClient.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 3573,
    "stars": 30
  },
  {
    "full_name": "alexlancer/codeigniter4_chatgpt_assistant",
    "name": "codeigniter4_chatgpt_assistant",
    "description": "Integrating ChatGPT in Codeigniter 4 via OpenAI API",
    "html_url": [
      "https://github.com/alexlancer/codeigniter4_chatgpt_assistant/blob/110c47319778acb16e9e2279ee07be92033e2cc4/app/Controllers/Api/Api.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 56188,
    "stars": 6
  },
  {
    "full_name": "s-gardette/gptdescriptionimprover",
    "name": "gptdescriptionimprover",
    "description": "The GPT Description Improver is a PrestaShop module that improves product descriptions using OpenAI's ChatGPT. It adds a button next to the description field in the product editing page, which, when clicked, improves the product description using ChatGPT's AI capabilities.",
    "html_url": [
      "https://github.com/s-gardette/gptdescriptionimprover/blob/bb115246b241cd5d28a89c49dbf52f85831e7a9a/gptdescriptionimprover.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 300,
    "stars": 0
  },
  {
    "full_name": "bghira/chatgpt-video-generator",
    "name": "chatgpt-video-generator",
    "description": "Generate small, comedic videos, from ChatGPT. Entirely coded by ChatGPT, and me.",
    "html_url": [
      "https://github.com/bghira/chatgpt-video-generator/blob/c7ecf0eb60b708360f0fa43dacf33149d4cca0b2/classes/OpenAI.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 2683,
    "stars": 2
  },
  {
    "full_name": "shawnveltman/laravel-openai",
    "name": "laravel-openai",
    "description": "An OpenAI API wrapper that uses HTTP facade for easier testing and test faking",
    "html_url": [
      "https://github.com/shawnveltman/laravel-openai/blob/1f6e27193fe21b50012fc157f8ade6176913def8/tests/ProviderResponseTraitTest.php",
      "https://github.com/shawnveltman/laravel-openai/blob/1f6e27193fe21b50012fc157f8ade6176913def8/src/AssistantOpenAiTrait.php",
      "https://github.com/shawnveltman/laravel-openai/blob/1f6e27193fe21b50012fc157f8ade6176913def8/tests/AssistantOpenAiTraitTest.php",
      "https://github.com/shawnveltman/laravel-openai/blob/1f6e27193fe21b50012fc157f8ade6176913def8/tests/FileAndVectorAssistantOpenAiTraitTest.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 2691,
    "stars": 0
  },
  {
    "full_name": "kevinbenabdelhak/WP-Text-to-Voice-AI",
    "name": "WP-Text-to-Voice-AI",
    "description": "WP Text to Voice AI est un plugin qui converti le contenu textuel de vos articles et pages en fichier MP3 audio à l'aide de l'API OpenAI. Avec le shortcode [transcription_ia] vous pourrez afficher un lecteur MP3 personnalisé.",
    "html_url": [
      "https://github.com/kevinbenabdelhak/WP-Text-to-Voice-AI/blob/27d2fa5c00027050a9581a6cf03e38559153d73d/WP%20Text%20to%20Voice%20AI/includes/ajax.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 419,
    "stars": 0
  },
  {
    "full_name": "iwasakiyosuke5/pre-RAG",
    "name": "pre-RAG",
    "description": null,
    "html_url": [
      "https://github.com/iwasakiyosuke5/pre-RAG/blob/6cb6a793a79f7a7c69a4771a941080ee541a7390/app/Http/Controllers/SearchController.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 1049186,
    "stars": 0
  },
  {
    "full_name": "MauricioPerera/Rckflr-AI-Image-Thingamabob",
    "name": "Rckflr-AI-Image-Thingamabob",
    "description": "This WordPress plugin uses the OpenAI API to automatically add alt text, caption, and description to images when they are added to the media library. The generated content is based on the image and is output in JSON format. The plugin includes a settings page where you can enter your OpenAI API key.",
    "html_url": [
      "https://github.com/MauricioPerera/Rckflr-AI-Image-Thingamabob/blob/db3ce08ab1e1e308c32f2c949b62e098c9ab3511/Rckflr-AI-Image-Thingamabob.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 177,
    "stars": 0
  },
  {
    "full_name": "PapaRascal2020/sidekick",
    "name": "sidekick",
    "description": "Say hello to Sidekick! A Laravel package that provides a common syntax for using Claude, Mistral, Cohere and OpenAi APIs.",
    "html_url": [
      "https://github.com/PapaRascal2020/sidekick/blob/1aac40bf0e173634aa7aafe5ce887813ff38fcc1/src/Drivers/OpenAi.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 3423,
    "stars": 25
  },
  {
    "full_name": "smartsendercommunity/openAI",
    "name": "openAI",
    "description": "Интеграция с openAI (создатели chatGPT)",
    "html_url": [
      "https://github.com/smartsendercommunity/openAI/blob/dae2c29e60d186b35bc5a467f5d8d506d68e2ce3/chatGPT.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 436,
    "stars": 0
  },
  {
    "full_name": "unconv/php-gpt-funcs",
    "name": "php-gpt-funcs",
    "description": "GPT-4 Function Calling Example in PHP",
    "html_url": [
      "https://github.com/unconv/php-gpt-funcs/blob/9f28ff820934bbbe6e410ccf0794f6cf0d8f0e8a/chatbot_without_library.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 1279,
    "stars": 36
  },
  {
    "full_name": "gustavobrigatti/assisstant-gpt-study",
    "name": "assisstant-gpt-study",
    "description": "Projeto de estudo do assistente GPT, utilizando as chamadas de funções e retorno de dado para o usuário, utilizando threads.",
    "html_url": [
      "https://github.com/gustavobrigatti/assisstant-gpt-study/blob/2357c62b561729ae1ecaeb04a7c3e0e6ff89887a/app/Services/GPTService.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 209315,
    "stars": 0
  },
  {
    "full_name": "yrvelez/auto_vignette",
    "name": "auto_vignette",
    "description": "Toy example of how LLMs can be used to create survey experiments",
    "html_url": [
      "https://github.com/yrvelez/auto_vignette/blob/d4e92a0834121ee3f54a4dcf03d804d040239ab4/process_text.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 288,
    "stars": 0
  },
  {
    "full_name": "cognesy/instructor-php",
    "name": "instructor-php",
    "description": "Structured data outputs with LLMs, in PHP. Designed for simplicity, transparency, and control.",
    "html_url": [
      "https://github.com/cognesy/instructor-php/blob/54957d9312cd14b3c72607e26ab2e9b9444393e2/config/llm.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 66660,
    "stars": 265
  },
  {
    "full_name": "CiobanuPaul/Website---PHP",
    "name": "Website---PHP",
    "description": "A website of a faculty. It uses PHP and MySQL. It provides securized authentication for different types of users, each user having different possible functionalities. It uses libraries such as PHPMailer, FPDF, jpgraph. It also uses an API to OpenAI.",
    "html_url": [
      "https://github.com/CiobanuPaul/Website---PHP/blob/d6c36c90a85c98b962140653a674e9dec45a8307/htdocs/openai.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 2741,
    "stars": 0
  },
  {
    "full_name": "otiemann/moodle-plugins",
    "name": "moodle-plugins",
    "description": "Adapted Moodle plugin to local language and usage of gpt-4 turbo model",
    "html_url": [
      "https://github.com/otiemann/moodle-plugins/blob/c0871aba4f64f192abe4446a3b900aae9e169c86/locallib.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 121,
    "stars": 0
  },
  {
    "full_name": "alexz006/ChatGPT-Example",
    "name": "ChatGPT-Example",
    "description": "Example of a ChatGPT on PHP and JS: GPT-3, GPT-3.5 and GPT-4 (chat.openai.com)",
    "html_url": [
      "https://github.com/alexz006/ChatGPT-Example/blob/35a3424b5bd238ba27b0f94717cf968ae94cfe05/openai_chat_api.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 392,
    "stars": 28
  },
  {
    "full_name": "tylerkessler/wp-gpt-assistant-widget",
    "name": "wp-gpt-assistant-widget",
    "description": "Adds a Chat GPT Widget to connect to Survey Analyst Assistant.",
    "html_url": [
      "https://github.com/tylerkessler/wp-gpt-assistant-widget/blob/16849604917324c4e3256ed6eafd161ae2b94655/gpt-admin.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 476,
    "stars": 1
  },
  {
    "full_name": "jkalaj/InvoicePDFParserGPT",
    "name": "InvoicePDFParserGPT",
    "description": "This program uses the PDF to Text library from xpdf as the pre-processing for an invoice, converts the pdf file into text, and uses a ChatGPT API for parsing and organizing that data. Using this API made what felt like was impossible for smaller pre-trained models ran locally and OCR extremely easy since PDF's are a mess when converted to text. ",
    "html_url": [
      "https://github.com/jkalaj/InvoicePDFParserGPT/blob/164bacc7c95e5293310c8b2ff646fdf285eae1ee/PDFtoText/upload.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 230,
    "stars": 0
  },
  {
    "full_name": "developers-savyour/openai",
    "name": "openai",
    "description": "Open AI API Integration with Laravel",
    "html_url": [
      "https://github.com/developers-savyour/openai/blob/a94c8b4d0b43879e0a86b91328bed9b11d539682/src/OpenAIClient.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 362,
    "stars": 0
  },
  {
    "full_name": "salehhashemi1992/ai-code-guard",
    "name": "ai-code-guard",
    "description": "Automatically reviews code changes in pull requests using OpenAI models to generate thoughtful suggestions for improving code quality.",
    "html_url": [
      "https://github.com/salehhashemi1992/ai-code-guard/blob/862e2269f7fe3dfc3ae6d99bec2f76acfc65f07e/src/main.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 291,
    "stars": 10
  },
  {
    "full_name": "KimBranzell/WP-Auto-Alt-Text",
    "name": "WP-Auto-Alt-Text",
    "description": "WIP: A plugin that generates an alt text on upload, or when editing existing images. Uses GPT-4 with Vision to understand and analyze the images.",
    "html_url": [
      "https://github.com/KimBranzell/WP-Auto-Alt-Text/blob/7e43ee89c0532f4941f7cfcd2479825a9f25d701/includes/class-openai.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 4244,
    "stars": 2
  },
  {
    "full_name": "adminazhar/intelli-content",
    "name": "intelli-content",
    "description": "IntelliContent is a WordPress plugin that leverages the power of OpenAI to generate high-quality content for your website. Seamlessly integrate AI-generated articles directly into the Gutenberg editor, with customizable settings for model selection, temperature, and more. Enhance your content creation workflow and save time with IntelliContent.",
    "html_url": [
      "https://github.com/adminazhar/intelli-content/blob/ba3df4b6da7d817f4c8454c88f851d37cba0dc19/intelli-content.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 342,
    "stars": 1
  },
  {
    "full_name": "ibrhmky/chatgpt-assistant",
    "name": "chatgpt-assistant",
    "description": "Integrates with OpenAI API to provide an AI-powered assistant.",
    "html_url": [
      "https://github.com/ibrhmky/chatgpt-assistant/blob/c0135a6ed3ba5f33ba285f9104eae2451275384b/chatgpt-assistant.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 1423,
    "stars": 0
  },
  {
    "full_name": "fmesasc/OpenAI-Telegram-Chatbot",
    "name": "OpenAI-Telegram-Chatbot",
    "description": "OpenAI-Telegram-Chatbot es un bot de Telegram que utiliza la API de OpenAI para generar respuestas de conversación. Está diseñado para mantener conversaciones de manera natural y ofrecer respuestas útiles y precisas a las preguntas que se le hagan. ",
    "html_url": [
      "https://github.com/fmesasc/OpenAI-Telegram-Chatbot/blob/0bd4dac2525f537d3e459ebc024e24eda762b3fd/index.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 252,
    "stars": 2
  },
  {
    "full_name": "mredd2222/wpdocugenius",
    "name": "wpdocugenius",
    "description": "WP DocuGenius scans your theme's functions and leverages OpenAI’s GPT model to generate summaries, parameter explanations, and return details—transforming complex code into readable, user-friendly documentation directly in the WordPress admin.",
    "html_url": [
      "https://github.com/mredd2222/wpdocugenius/blob/c8b5e0e3c49c8569921c39ff1c518fd2f4af1d59/index.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 328,
    "stars": 0
  },
  {
    "full_name": "flamecoders/Gpt-Chat-Builder",
    "name": "Gpt-Chat-Builder",
    "description": "Create Ai powered chat bot for your wordpress website in one click",
    "html_url": [
      "https://github.com/flamecoders/Gpt-Chat-Builder/blob/d139ef9c5a691ceaf9e60c408c074bb966eddc04/gpt_chat_builder.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 1424,
    "stars": 5
  },
  {
    "full_name": "yedidiaklein/moodle-repository_txttoimg",
    "name": "moodle-repository_txttoimg",
    "description": "Moodle repo for openai images api",
    "html_url": [
      "https://github.com/yedidiaklein/moodle-repository_txttoimg/blob/1f6afbc039d2b07b6cdd37d927e4dc1e1d5dbd3b/lib.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 263,
    "stars": 3
  },
  {
    "full_name": "daveymason/ai-lesson-planner",
    "name": "ai-lesson-planner",
    "description": "A Wordpress plugin that leverages AI to create auto-translated culturally sensitive high quality lesson plans within the TEFL context",
    "html_url": [
      "https://github.com/daveymason/ai-lesson-planner/blob/af06eb781f91743dbc4aece9ce4f9090d5047927/ai-lesson-planner.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 500,
    "stars": 3
  },
  {
    "full_name": "erdum/php-open-ai-assistant-sdk",
    "name": "php-open-ai-assistant-sdk",
    "description": "A PHP class for seamless interaction with the OpenAI Assistant API, enabling developers to build powerful AI assistants capable of performing a variety of tasks.",
    "html_url": [
      "https://github.com/erdum/php-open-ai-assistant-sdk/blob/f5048628d039ba0d5fecad7b24d9999b08b2afa3/src/OpenAIAssistant.php"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "php"
    ],
    "fork": false,
    "loc": 542,
    "stars": 20
  },
  {
    "full_name": "JW150/Custom-Knowledge-GPT-Creation-through-Web-Crawling",
    "name": "Custom-Knowledge-GPT-Creation-through-Web-Crawling",
    "description": "The project aims to develop a system that crawls content from one or more websites, processes the data into structured knowledge files, and uses that content to create a custom GPT model. The system will allow users to input URLs, from which the crawler will extract relevant text data such as articles, blog posts, or knowledge base entries. ",
    "html_url": [
      "https://github.com/JW150/Custom-Knowledge-GPT-Creation-through-Web-Crawling/blob/b31fa6e288794ba043ebddc8c23f9777fa0bc2df/config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 10917,
    "stars": 0
  },
  {
    "full_name": "destilabs/optimautogpt",
    "name": "optimautogpt",
    "description": "Framework for finetunning the ToolFormer-based LM in a few shots manner",
    "html_url": [
      "https://github.com/destilabs/optimautogpt/blob/982b29b6f056696fd51c3fec307de659d5af258a/finetoolformer/constants.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 312,
    "stars": 24
  },
  {
    "full_name": "zihao-ai/vdc",
    "name": "vdc",
    "description": "This is the official implementation of ICLR 2024 paper \"VDC: Versatile Data Cleanser based on Visual-Linguistic Inconsistency by Multimodal Large Language Models\".",
    "html_url": [
      "https://github.com/zihao-ai/vdc/blob/21398213811baccb16b5ecb2b9f53da1726b395c/LLMs/llm_models/openai_api_pool.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 523,
    "stars": 18
  },
  {
    "full_name": "lightrainofmay/examgen",
    "name": "examgen",
    "description": "This software is an automated question generation and essay creation tool designed for educational purposes. It allows users to upload text files (PDF or TXT) and automatically generates multiple-choice questions, fill-in-the-blank questions, and essay questions based on the content. ",
    "html_url": [
      "https://github.com/lightrainofmay/examgen/blob/8f6c8521ae8226bba0539e852294ba7e542c6727/config.py",
      "https://github.com/lightrainofmay/examgen/blob/8f6c8521ae8226bba0539e852294ba7e542c6727/app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 275,
    "stars": 1
  },
  {
    "full_name": "WangRongsheng/CareGPT",
    "name": "CareGPT",
    "description": "🌞 CareGPT (关怀GPT)是一个医疗大语言模型，同时它集合了数十个公开可用的医疗微调数据集和开放可用的医疗大语言模型，包含LLM的训练、测评、部署等以促进医疗LLM快速发展。Medical LLM, Open Source Driven for a Healthy Future.",
    "html_url": [
      "https://github.com/WangRongsheng/CareGPT/blob/73700012a8bbfe71456dd1da08b58cb847e7828d/ChatGPT/3_finetune.py",
      "https://github.com/WangRongsheng/CareGPT/blob/73700012a8bbfe71456dd1da08b58cb847e7828d/ChatGPT/2_uploadFile.py",
      "https://github.com/WangRongsheng/CareGPT/blob/73700012a8bbfe71456dd1da08b58cb847e7828d/ChatGPT/4_use.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 181090,
    "stars": 900
  },
  {
    "full_name": "Sgvkamalakar/ChatGPT_CLI",
    "name": "ChatGPT_CLI",
    "description": "ChatGPT CLI: A user-friendly Python tool for effortless conversations with OpenAI's GPT models via the command line. Interact, prompt, and explore GPT-3.5 capabilities effortlessly.",
    "html_url": [
      "https://github.com/Sgvkamalakar/ChatGPT_CLI/blob/bde3924bf467ef850fead7ee360d434c09870c74/config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 298,
    "stars": 3
  },
  {
    "full_name": "mathijsvdv/phrasify",
    "name": "phrasify",
    "description": "Anki add-on that uses LLMs like ChatGPT to turn your vocabulary flashcards into fresh sentences on the fly and have conversations using your vocabulary.",
    "html_url": [
      "https://github.com/mathijsvdv/phrasify/blob/7c147df97b0156e0f81c9d0dfb1071fa5c5659cd/experiments/request_openai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3329,
    "stars": 3
  },
  {
    "full_name": "OrderAndCh4oS/gpt-3-wine-recommendations",
    "name": "gpt-3-wine-recommendations",
    "description": "Quick demo script of text generation, search and recommendations with OpenAI gpt-3 embeddings",
    "html_url": [
      "https://github.com/OrderAndCh4oS/gpt-3-wine-recommendations/blob/37b7a15278b8f805e38f3c1af8c090e68de94906/get-fine-tunes.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 148845,
    "stars": 0
  },
  {
    "full_name": "kstyagi23/Ethina",
    "name": "Ethina",
    "description": "Unified LLM Inference.",
    "html_url": [
      "https://github.com/kstyagi23/Ethina/blob/ffdf6cb2ca876c745d3a01d35467e5782f31c188/ethina/providers/openai/client.py",
      "https://github.com/kstyagi23/Ethina/blob/ffdf6cb2ca876c745d3a01d35467e5782f31c188/build/lib/ethina/providers/openai/client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 423,
    "stars": 0
  },
  {
    "full_name": "Afeez1131/openAI-image-generation",
    "name": "openAI-image-generation",
    "description": "Code samples for the article titled Exploring Python and the OpenAI API for Generating Images with DALL",
    "html_url": [
      "https://github.com/Afeez1131/openAI-image-generation/blob/5c27eb995faf3a2368c7561d1a9a03b70c8d2a08/generate_image_api.py",
      "https://github.com/Afeez1131/openAI-image-generation/blob/5c27eb995faf3a2368c7561d1a9a03b70c8d2a08/generate_download_image.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 108,
    "stars": 0
  },
  {
    "full_name": "oravecj/llm_examples",
    "name": "llm_examples",
    "description": null,
    "html_url": [
      "https://github.com/oravecj/llm_examples/blob/32e5e8539776fd9b0788bc38c3ea31c0b7d92c16/examples/config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "LearnPrompt/LLMs-cookbook",
    "name": "LLMs-cookbook",
    "description": "Examples and guides for using the LLMs",
    "html_url": [
      "https://github.com/LearnPrompt/LLMs-cookbook/blob/699981bffa9eb98dda67f0230c52cc498fb05c6d/gpt3.5/3_finetune.py",
      "https://github.com/LearnPrompt/LLMs-cookbook/blob/699981bffa9eb98dda67f0230c52cc498fb05c6d/gpt3.5/2_uploadFile.py",
      "https://github.com/LearnPrompt/LLMs-cookbook/blob/699981bffa9eb98dda67f0230c52cc498fb05c6d/gpt3.5/4_use.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 6796,
    "stars": 257
  },
  {
    "full_name": "goldfishh/chatgpt-tool-hub",
    "name": "chatgpt-tool-hub",
    "description": "An open-source chatgpt tool ecosystem where you can combine tools with chatgpt and use natural language to do anything.",
    "html_url": [
      "https://github.com/goldfishh/chatgpt-tool-hub/blob/d294f16426a93c40c79cfb6ca3215648b8549ae4/chatgpt_tool_hub/common/constants.py",
      "https://github.com/goldfishh/chatgpt-tool-hub/blob/d294f16426a93c40c79cfb6ca3215648b8549ae4/chatgpt_tool_hub/models/__init__.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 12353,
    "stars": 1285
  },
  {
    "full_name": "os1ma/learning-langchain",
    "name": "learning-langchain",
    "description": "勉強会「プロンプトエンジニアリングから始めるLangChain入門」で使用したソースコード",
    "html_url": [
      "https://github.com/os1ma/learning-langchain/blob/051bb1ad461f475840b68a7ab084e9b0be973ab0/learning_langchain/0.requests.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 146,
    "stars": 14
  },
  {
    "full_name": "KennyRich/GraphRAG",
    "name": "GraphRAG",
    "description": "A tutorial about RAG and Graph database at Pydata London 2024",
    "html_url": [
      "https://github.com/KennyRich/GraphRAG/blob/92c86c881ea4e9cd4ae48514768886834034011f/config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1106,
    "stars": 33
  },
  {
    "full_name": "dracoeques/article_analyzer",
    "name": "article_analyzer",
    "description": "Analyze articles using OpenAI's ChatGPT LLM and LangChain",
    "html_url": [
      "https://github.com/dracoeques/article_analyzer/blob/97bfd1f0a80dfeb7c1c72aaa9db24f5d8f9cdc9a/helpers.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1427,
    "stars": 2
  },
  {
    "full_name": "Tensornetics/digital-twin-technology",
    "name": "digital-twin-technology",
    "description": "The goal of the digital-twin-technology project is to build an embodied digital twin of the user. This digital twin, built by Tensornetics LLC, utilizes cutting-edge AI technology such as OpenAI and NVIDIA Nemo, to provide a highly-realistic and interactive representation of the user. The project is deployed using Kubernetes",
    "html_url": [
      "https://github.com/Tensornetics/digital-twin-technology/blob/474cfa68158a596fd289db76ceb9d9afc4a3518e/api/openai/openai_api.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 168,
    "stars": 1
  },
  {
    "full_name": "ttashatss/shopperbot-llm",
    "name": "shopperbot-llm",
    "description": null,
    "html_url": [
      "https://github.com/ttashatss/shopperbot-llm/blob/dfec09c320812ee9d86b8aefed714044260a3675/functions/gpt.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 203,
    "stars": 0
  },
  {
    "full_name": "ubaskota/IOT_LLM",
    "name": "IOT_LLM",
    "description": "IOT with LLM",
    "html_url": [
      "https://github.com/ubaskota/IOT_LLM/blob/9a7deadb8c299958122f5a4afacaf6c6246adfba/iot_research/openAI/cancel_finetune.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 6060,
    "stars": 0
  },
  {
    "full_name": "NancySingleton/vector-embeddings-seo-proof-of-concept",
    "name": "vector-embeddings-seo-proof-of-concept",
    "description": null,
    "html_url": [
      "https://github.com/NancySingleton/vector-embeddings-seo-proof-of-concept/blob/3e6aa2da2d5c182f759b6c8c530c29ee8f1e5400/utils/embedding_helper.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 225,
    "stars": 0
  },
  {
    "full_name": "Trong-Nguyen-DT/Tranning_Langchain",
    "name": "Tranning_Langchain",
    "description": null,
    "html_url": [
      "https://github.com/Trong-Nguyen-DT/Tranning_Langchain/blob/92eddc063268d964aa49d7b8ceb569b07bd995d4/OpenAI/crul.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1033,
    "stars": 0
  },
  {
    "full_name": "withmartian/leaderboard-backend",
    "name": "leaderboard-backend",
    "description": "Open sourced backend for Martian's LLM Inference Provider Leaderboard",
    "html_url": [
      "https://github.com/withmartian/leaderboard-backend/blob/949d3b8ce3f39ec5ae9cdf9dff4ecbfd909690b8/providers/concrete_providers/openai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 929,
    "stars": 18
  },
  {
    "full_name": "daneah/openaiapi",
    "name": "openaiapi",
    "description": "A light wrapper around the OpenAI API using apiron",
    "html_url": [
      "https://github.com/daneah/openaiapi/blob/55f0ac2a1df7adb5b48e1da7285d46819e440e65/test/test_openaiapi.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 449,
    "stars": 3
  },
  {
    "full_name": "answerlink/IntelliQ",
    "name": "IntelliQ",
    "description": "Advanced Multi-Turn QA System with LLM and Intent Recognition. 基于LLM大语言模型意图识别、参数抽取结合slot词槽技术实现多轮问答、NL2API. 打造Function Call多轮问答最佳实践",
    "html_url": [
      "https://github.com/answerlink/IntelliQ/blob/d6b920b51fd8e8d76fa1d4fcfda41e9106286b3b/config/__init__.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 762,
    "stars": 600
  },
  {
    "full_name": "venom-mancer/OracleMind-discord",
    "name": "OracleMind-discord",
    "description": "OracleMind is using Openai(Chatgpt) API to answer questions and chat with you to make your time fun , It also draw image for you to bring fun to discord :)",
    "html_url": [
      "https://github.com/venom-mancer/OracleMind-discord/blob/ce1b68d70668d80d696acf7b8062f9d01a504014/chat/image_creation.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 367,
    "stars": 18
  },
  {
    "full_name": "nichind/Telegram-ChatGPT-Bot",
    "name": "Telegram-ChatGPT-Bot",
    "description": "Telegram ChatGPT bot with language, lore & model selection",
    "html_url": [
      "https://github.com/nichind/Telegram-ChatGPT-Bot/blob/539df05f82ea77adea47ee6d7d7e61500c1cc0e9/utils/openai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 652,
    "stars": 5
  },
  {
    "full_name": "victorodg/chatgpt-terminal",
    "name": "chatgpt-terminal",
    "description": "Use ChatGPT via linux terminal",
    "html_url": [
      "https://github.com/victorodg/chatgpt-terminal/blob/7eee4138229de90e0c2daa69de4783b818c2e54f/gpt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 26,
    "stars": 3
  },
  {
    "full_name": "andersonvc/jira-rrhea",
    "name": "jira-rrhea",
    "description": "Use GPT-2/3 to auto-complete JIRA ticket descriptions.  The results will likely be garbage, but think of all the productivity gains.",
    "html_url": [
      "https://github.com/andersonvc/jira-rrhea/blob/dd6d2574e003a037cafcaf8a55b652dd67400c9f/backend/backend/configs.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 12854,
    "stars": 4
  },
  {
    "full_name": "eubinecto/idiomify",
    "name": "idiomify",
    "description": "Exploring the Efficacy of Idiomify: How Effective is GPT-3 for Teaching Idioms to EFL Writers?",
    "html_url": [
      "https://github.com/eubinecto/idiomify/blob/413fadb76fd63582c6741cae78c5964a1ddda610/explore/explore_openai_api_valid_check.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 169,
    "stars": 16
  },
  {
    "full_name": "RETBOT/ChatDynamix",
    "name": "ChatDynamix",
    "description": "Este repositorio es un proyecto de desarrollo de un chat utilizando la tecnología de OpenAI. El objetivo principal es construir un chatbot inteligente y conversacional que pueda mantener interacciones naturales y fluidas con los usuarios.",
    "html_url": [
      "https://github.com/RETBOT/ChatDynamix/blob/ddd6c25302f6eb56708efb95e11ecc45933f1da6/Linux/code/BasicChat.py",
      "https://github.com/RETBOT/ChatDynamix/blob/ddd6c25302f6eb56708efb95e11ecc45933f1da6/Linux/code/Server.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 560,
    "stars": 2
  },
  {
    "full_name": "JackyLeeDesign/chatGPT-Heroku-Proxy-API",
    "name": "chatGPT-Heroku-Proxy-API",
    "description": "This project provides a proxy for the ChatGPT API using Flask and Heroku. It allows you to send requests from your local environment to your deployed Heroku app, which then forwards those requests to OpenAI's ChatGPT API.",
    "html_url": [
      "https://github.com/JackyLeeDesign/chatGPT-Heroku-Proxy-API/blob/7d5521ae6fc8bd8026bb8539da611d30097c3776/proxy_server.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 86,
    "stars": 0
  },
  {
    "full_name": "Rakib-hosen/autogen_test",
    "name": "autogen_test",
    "description": null,
    "html_url": [
      "https://github.com/Rakib-hosen/autogen_test/blob/6097b1b8c5d073854844f2b578a464ef30ecd12a/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 192,
    "stars": 0
  },
  {
    "full_name": "TurbanatorSJS/OpenAIConnector",
    "name": "OpenAIConnector",
    "description": "This repository contains a Python script to interact with the OpenAI API for performing text completions using the GPT-3.5 Turbo model.",
    "html_url": [
      "https://github.com/TurbanatorSJS/OpenAIConnector/blob/745a8ee834bae8d05feeb48c8bfc1e028a996751/openaiAutomator.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 44,
    "stars": 0
  },
  {
    "full_name": "nikatlas/narrator",
    "name": "narrator",
    "description": "AI Character conversations. Python, Qdrant, PostgreSQL, Langchain, RAG",
    "html_url": [
      "https://github.com/nikatlas/narrator/blob/cbce509947d90179b59384bd6033ee307586584c/narrator/constants.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 7185,
    "stars": 1
  },
  {
    "full_name": "Cdaprod/Openai_Function_Calling_with_Placeholders",
    "name": "Openai_Function_Calling_with_Placeholders",
    "description": null,
    "html_url": [
      "https://github.com/Cdaprod/Openai_Function_Calling_with_Placeholders/blob/6fc357fbc57fc8836731e2f7be47c34b543360e9/flask_api.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 423,
    "stars": 0
  },
  {
    "full_name": "wusteven815/gpt-george",
    "name": "gpt-george",
    "description": "A voice assistant powered by GPT-4 and its function API",
    "html_url": [
      "https://github.com/wusteven815/gpt-george/blob/a50fd75d5d59a3f662cbedaab12d9f9d6413999a/Hume/hume_controller.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 915,
    "stars": 3
  },
  {
    "full_name": "zmovane/huggingface-space-aigc",
    "name": "huggingface-space-aigc",
    "description": null,
    "html_url": [
      "https://github.com/zmovane/huggingface-space-aigc/blob/6c9d636b474daa2db56afdc2cff8947c440dcbda/app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 545,
    "stars": 0
  },
  {
    "full_name": "letnonesurvive/bot_telegram_openai",
    "name": "bot_telegram_openai",
    "description": null,
    "html_url": [
      "https://github.com/letnonesurvive/bot_telegram_openai/blob/5349cf713141cd9f7d4fa18053719c733a18b52c/request_manager.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 282,
    "stars": 0
  },
  {
    "full_name": "vatsalsaglani/gpt4-v-initial-experiment",
    "name": "gpt4-v-initial-experiment",
    "description": "Initial Experiment with GPT-4-Vision Preview",
    "html_url": [
      "https://github.com/vatsalsaglani/gpt4-v-initial-experiment/blob/3366954d552c6d29eb9bc2e1b8adde4d88f63091/server/text2speech.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3449,
    "stars": 0
  },
  {
    "full_name": "vatsalsaglani/FuncReAct",
    "name": "FuncReAct",
    "description": "A ReAct type thought framework written using OpenAI function calling. Has the ability to BYOA (bring your own actions)",
    "html_url": [
      "https://github.com/vatsalsaglani/FuncReAct/blob/bec1b9308efcc710701a79c0a30a2d762ea6d1ea/config/config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 676,
    "stars": 17
  },
  {
    "full_name": "jacopotagliabue/foundation-models-for-dbt-entity-matching",
    "name": "foundation-models-for-dbt-entity-matching",
    "description": "Playground for using large language models into the Modern Data Stack for entity matching",
    "html_url": [
      "https://github.com/jacopotagliabue/foundation-models-for-dbt-entity-matching/blob/a7901b5853aee4909af0c1cf2cdaffb37760438c/src/original/open_ai_playground.py",
      "https://github.com/jacopotagliabue/foundation-models-for-dbt-entity-matching/blob/a7901b5853aee4909af0c1cf2cdaffb37760438c/src/original/serverless/handler.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 420,
    "stars": 108
  },
  {
    "full_name": "zhiqix/NL2GQL",
    "name": "NL2GQL",
    "description": "The LLM of NL2GQL with NebulaGraph or Neo4j",
    "html_url": [
      "https://github.com/zhiqix/NL2GQL/blob/f71debaed9659be5344910b6f3dedb8adc992dfe/Config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 349686,
    "stars": 92
  },
  {
    "full_name": "safakan/TalkWithYourFiles",
    "name": "TalkWithYourFiles",
    "description": "An LLM GUI application; enables you to interact with your files, offering dynamic parameters that can modify response behavior during runtime.",
    "html_url": [
      "https://github.com/safakan/TalkWithYourFiles/blob/855d6196975ed7e238c50638b175b4c642be2f57/TalkWithYourFiles/backend_utils/api_key_handler.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 874,
    "stars": 92
  },
  {
    "full_name": "ChristopheZhao/ChaGPT-API-Call",
    "name": "ChaGPT-API-Call",
    "description": "Python calls ChatGPT API, multi-turn dialogue support",
    "html_url": [
      "https://github.com/ChristopheZhao/ChaGPT-API-Call/blob/ad9b674f4a4cbd176bb9e56b8db2a9dce80e39c3/config/chatgpt_config.py",
      "https://github.com/ChristopheZhao/ChaGPT-API-Call/blob/ad9b674f4a4cbd176bb9e56b8db2a9dce80e39c3/src/openai_request.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 705,
    "stars": 116
  },
  {
    "full_name": "john-h-k/gsh",
    "name": "gsh",
    "description": "A GPT-4 based shell language",
    "html_url": [
      "https://github.com/john-h-k/gsh/blob/0380f82597b5877cf93daff985d1cd9204d67257/gsh"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 113,
    "stars": 0
  },
  {
    "full_name": "noahsbates/LLM-Bias-Study",
    "name": "LLM-Bias-Study",
    "description": "Measuring ChatGPT's political bias through analyzing its poems and other generated texts.",
    "html_url": [
      "https://github.com/noahsbates/LLM-Bias-Study/blob/67ab148538831de9b6e2915d8334a007c129557e/utils/dataRequest/chatGPT_4_query.py",
      "https://github.com/noahsbates/LLM-Bias-Study/blob/67ab148538831de9b6e2915d8334a007c129557e/utils/dataRequest/chatGPT_3_5_query.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 102129,
    "stars": 5
  },
  {
    "full_name": "dubmix/RAG-chatbot",
    "name": "RAG-chatbot",
    "description": "Build and deploy a RAG app from scratch using Chroma and the OpenAI API",
    "html_url": [
      "https://github.com/dubmix/RAG-chatbot/blob/a9beb1527079d5f83da91ad4f7a9925fb9990fdc/api/settings.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1970,
    "stars": 1
  },
  {
    "full_name": "TtheBC01/openai-embeddings",
    "name": "openai-embeddings",
    "description": "demo of openai's embeddings api",
    "html_url": [
      "https://github.com/TtheBC01/openai-embeddings/blob/96561acad0badf646016d45463876b01679dd6c0/embeddings.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 94,
    "stars": 0
  },
  {
    "full_name": "Alienbushman/LLM-Spire",
    "name": "LLM-Spire",
    "description": "This is is a project near and dear to my heart using a bit of django and vue to get a quick POC up for running local LLM's",
    "html_url": [
      "https://github.com/Alienbushman/LLM-Spire/blob/1446cb8020638aa80d827c4bba9a2037f51724a3/Backend/online-gpt/model.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1368,
    "stars": 2
  },
  {
    "full_name": "V3CT0RBUG/kyumnii",
    "name": "kyumnii",
    "description": "A Twitch Chat AI that reads twitch chat and creates a text to speech response using Google Cloud API and OpenAI's GPT-3 text completion model.",
    "html_url": [
      "https://github.com/V3CT0RBUG/kyumnii/blob/cee656dcd3f3989c28e8908be9b3b6e6f9efeb1d/chat.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 487,
    "stars": 0
  },
  {
    "full_name": "komis-dev/ROMBot-AI",
    "name": "ROMBot-AI",
    "description": "A chatbot implementation in Python with a constructor that initialises the OpenAIApiClient instance and an embeddings concurrent dictionary.",
    "html_url": [
      "https://github.com/komis-dev/ROMBot-AI/blob/878e7e2e0418032a36793c4b1b49f623b873c650/client-side-implementation.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "shellwork/XJTLU-Software-RAG",
    "name": "XJTLU-Software-RAG",
    "description": null,
    "html_url": [
      "https://github.com/shellwork/XJTLU-Software-RAG/blob/d4a4dbc8ef5f50564ae8e73c80481db82bd86801/backup/configs/model_config.py",
      "https://github.com/shellwork/XJTLU-Software-RAG/blob/d4a4dbc8ef5f50564ae8e73c80481db82bd86801/dataprocess/Step3_transformer/old/fill_protocol.py",
      "https://github.com/shellwork/XJTLU-Software-RAG/blob/d4a4dbc8ef5f50564ae8e73c80481db82bd86801/dataprocess/Step3_transformer/old/question_protocol.py"
    ],
    "model": [
      "openai",
      "qwen"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 84591,
    "stars": 0
  },
  {
    "full_name": "dasun-sathsara/aix",
    "name": "aix",
    "description": "Facilitate seamless interactions with various AI models, making it easier to manage and save conversations.",
    "html_url": [
      "https://github.com/dasun-sathsara/aix/blob/575ac3ff2ca5a5068722c7147d2f6bf64d806f5a/aix/api/openai_api.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 481,
    "stars": 1
  },
  {
    "full_name": "Doge-Pound/3D-TALKING-AVATAR",
    "name": "3D-TALKING-AVATAR",
    "description": "A 3D talking Avatar uses azure Cognitive speech and training model to neural engine to adapt user voice.",
    "html_url": [
      "https://github.com/Doge-Pound/3D-TALKING-AVATAR/blob/bca72be515dd58a715dfe5834dd0bf7e5a6e2f51/chat.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 200,
    "stars": 2
  },
  {
    "full_name": "tharaka911/python-openAI",
    "name": "python-openAI",
    "description": "This is small python script to make a api call to the opneapi text-davinci-003 model",
    "html_url": [
      "https://github.com/tharaka911/python-openAI/blob/3992dc4668c5147d2251e7d906263e2426e87600/python-chatgpt.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 18,
    "stars": 0
  },
  {
    "full_name": "Lughx/lumi_openai",
    "name": "lumi_openai",
    "description": null,
    "html_url": [
      "https://github.com/Lughx/lumi_openai/blob/78592d3076fe200543ae0cf4d3911f87f0b39fe9/chat.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 192,
    "stars": 0
  },
  {
    "full_name": "timothywarner/elements",
    "name": "elements",
    "description": "The Elements of Prompt Engineering Live Training Course",
    "html_url": [
      "https://github.com/timothywarner/elements/blob/3316cc9c79f8d1efaa05a23fa4ef072ab4edbd89/resources/reference-materials/src/py.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 45082,
    "stars": 25
  },
  {
    "full_name": "Everlyn-Labs/ANTRP",
    "name": "ANTRP",
    "description": "Intervening Anchor Token: Decoding Strategy in Alleviating Hallucinations for MLLMs",
    "html_url": [
      "https://github.com/Everlyn-Labs/ANTRP/blob/a92084661bce5f83b791aeadeff09ed9a3535217/eval_utils/openai_demo.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1484067,
    "stars": 158
  },
  {
    "full_name": "xiaoyuge/kingfish-python",
    "name": "kingfish-python",
    "description": "Python在LLM、数据分析、数据可视化、excel办公自动化、爬虫、并发编程、WEB开发等方面的示例代码以及一些个人项目代码",
    "html_url": [
      "https://github.com/xiaoyuge/kingfish-python/blob/f4d8645fb3cea48065b21d48a5ad2de263ac3fd4/openai/davinci_model.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 161235,
    "stars": 32
  },
  {
    "full_name": "jpvargasdev/travel_buddy_api",
    "name": "travel_buddy_api",
    "description": "AI Assistant using Langchain",
    "html_url": [
      "https://github.com/jpvargasdev/travel_buddy_api/blob/54b679ab8f80673b4d0d878035cf6f07ab6fa019/app/chatgpt/chat.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 431,
    "stars": 5
  },
  {
    "full_name": "onex7777/Llm-basedDialogueSystems",
    "name": "Llm-basedDialogueSystems",
    "description": "基于大模型的多轮对话系统",
    "html_url": [
      "https://github.com/onex7777/Llm-basedDialogueSystems/blob/ae51d1844fcfc367d0acd239919ab5f20cde0f93/config/__init__.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 725,
    "stars": 5
  },
  {
    "full_name": "LeoNouz/Auto_Agents",
    "name": "Auto_Agents",
    "description": "The AI-Autonomous-Agents is an intelligent application designed to automate data collection, facilitate meaningful conversations between AI agents, and generate summary documents based on their discussions. The system leverages the OpenAI GPT-3.5 Turbo API to interact with AI agents and generate insightful summaries.",
    "html_url": [
      "https://github.com/LeoNouz/Auto_Agents/blob/6da7f8b937e3f04915692e28596e0f0252f5574e/utils/chatgpt_api.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 417,
    "stars": 1
  },
  {
    "full_name": "daily-demos/llm-translator",
    "name": "llm-translator",
    "description": null,
    "html_url": [
      "https://github.com/daily-demos/llm-translator/blob/55e641956b8cf7b63a630d6084cab5d108325df9/server/services/open_ai_service.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 31456,
    "stars": 1
  },
  {
    "full_name": "Prabhsingh0401/Accessing-OPENAI-API",
    "name": "Accessing-OPENAI-API",
    "description": "Python Code on accessing the OPEN AI API",
    "html_url": [
      "https://github.com/Prabhsingh0401/Accessing-OPENAI-API/blob/911c90b1a5aece5ac7b3715639f11078423851f6/API-ByEndPoint.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 44,
    "stars": 0
  },
  {
    "full_name": "cestoliv/hippolyte",
    "name": "hippolyte",
    "description": "Hippolyte (LLM Assistant based on your knowledge)",
    "html_url": [
      "https://github.com/cestoliv/hippolyte/blob/611d3ab248f752aeb4c75bf60d5ddbd8a1dbb0b9/openapi.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 177,
    "stars": 0
  },
  {
    "full_name": "bkhanal-11/chatgpt-stable-diffusion",
    "name": "chatgpt-stable-diffusion",
    "description": "This repository is created to test my knowledge on ChatGPT and Stable Diffusion.",
    "html_url": [
      "https://github.com/bkhanal-11/chatgpt-stable-diffusion/blob/cd1b106fbad0578366b9c01ba465739d18e3e952/chatGPT.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 26,
    "stars": 1
  },
  {
    "full_name": "Blankeeir/6As-NUSNCS",
    "name": "6As-NUSNCS",
    "description": "A cutting-edge traffic management system based on large-language model. Integration of LLMS with existing data sources to enhance traffic flows, slash congestion, and boost green mobility.",
    "html_url": [
      "https://github.com/Blankeeir/6As-NUSNCS/blob/687e196084fd36ddb9d9d8118c75ae7fd56880b0/config/chatgpt_config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1553,
    "stars": 1
  },
  {
    "full_name": "lynnliu030/LLM-SQL-Demo",
    "name": "LLM-SQL-Demo",
    "description": null,
    "html_url": [
      "https://github.com/lynnliu030/LLM-SQL-Demo/blob/e6fe385413ee7d2d23327afa29726afa010ab050/examples/pandas/simple_math_openai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "nnikolovskiii/code_explore",
    "name": "code_explore",
    "description": "Chat with code libraries, git repos and docs using your own preferred LLM.",
    "html_url": [
      "https://github.com/nnikolovskiii/code_explore/blob/0ae8e30673a6f78501d6ecf52361223a1e22b073/app/llms/openai_embedding.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 5057,
    "stars": 1
  },
  {
    "full_name": "coolbeevip/langchain-lab",
    "name": "langchain-lab",
    "description": "This experiment will verify different use cases of LLM using LangChain, which include chat, role-playing, and document-based QA.",
    "html_url": [
      "https://github.com/coolbeevip/langchain-lab/blob/bc5077aaa23522e2aa4eafd89a201f29f1bda2ec/src/langchain_lab/__init__.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 5272,
    "stars": 8
  },
  {
    "full_name": "felafax/felafax-gateway",
    "name": "felafax-gateway",
    "description": "felafax-gateway is a fast and lightweight proxy for LLMs, written in Rust. Designed for low latency and high scalability.",
    "html_url": [
      "https://github.com/felafax/felafax-gateway/blob/e13dfd9a86788fe2f521d6951de25c8521ec53a5/tests/python/chat.py",
      "https://github.com/felafax/felafax-gateway/blob/e13dfd9a86788fe2f521d6951de25c8521ec53a5/tests/python/chat_stream.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2169,
    "stars": 2
  },
  {
    "full_name": "canyuchen/ClinicalBench",
    "name": "ClinicalBench",
    "description": "Code for the paper \"ClinicalBench: Can LLMs Beat Traditional ML Models in Clinical Prediction?\"",
    "html_url": [
      "https://github.com/canyuchen/ClinicalBench/blob/095adccd05b6f9d2eab77e9b10b7659e83ca9078/pyhealth/medcode/pretrained_embeddings/lm_emb/openai_retriever.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 11792065,
    "stars": 14
  },
  {
    "full_name": "biff-ai/gpt-magic",
    "name": "gpt-magic",
    "description": "Extend JupyterLab with GPT magic commands",
    "html_url": [
      "https://github.com/biff-ai/gpt-magic/blob/cd5e10b2c854214bec4f8393ecd045e7e53abfee/gpt/__init__.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 334,
    "stars": 19
  },
  {
    "full_name": "Shenzhi-Wang/recon",
    "name": "recon",
    "description": "The official source code for \"Boosting LLM Agents with Recursive Contemplation for Effective Deception Handling\" (ACL 2024, Findings)",
    "html_url": [
      "https://github.com/Shenzhi-Wang/recon/blob/f015037193f75324be75b1ee0f982f72e76c25e1/api_config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2350,
    "stars": 11
  },
  {
    "full_name": "Dingolytics/golem-gpt",
    "name": "golem-gpt",
    "description": "Framework for building actionable agents to achieve goals specified by user, powered by OpenAI GPT-4 and GPT-3.5",
    "html_url": [
      "https://github.com/Dingolytics/golem-gpt/blob/ca762a2a074d347a12e9e892bab8b43f5ab8f453/golemgpt/utils/images/prompt.py",
      "https://github.com/Dingolytics/golem-gpt/blob/ca762a2a074d347a12e9e892bab8b43f5ab8f453/golemgpt/cognitron/openai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1994,
    "stars": 13
  },
  {
    "full_name": "xuancuongdoo/openai_realtime_api_chatbot",
    "name": "openai_realtime_api_chatbot",
    "description": null,
    "html_url": [
      "https://github.com/xuancuongdoo/openai_realtime_api_chatbot/blob/33412be067c3cdea8a653300ab52b9bb37401a56/config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 305,
    "stars": 0
  },
  {
    "full_name": "GarciaG1/Rasberry_Pico",
    "name": "Rasberry_Pico",
    "description": "Proyecto donde se hace uso de una Rasberry Pico W y la api de OPENAI",
    "html_url": [
      "https://github.com/GarciaG1/Rasberry_Pico/blob/ea87c570fc8f12875b3a81b47bba104fb8e1ce63/chatgpt.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 22,
    "stars": 0
  },
  {
    "full_name": "jensnesten/openAI",
    "name": "openAI",
    "description": "Run and modify chatGPT and Dall-E locally using the openAI API",
    "html_url": [
      "https://github.com/jensnesten/openAI/blob/6fa63e15523c3b5b730b128e394dcc4a6f5d0e51/GPT-3/gpt3.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 210,
    "stars": 0
  },
  {
    "full_name": "OgeonX/OpenAIFineTune",
    "name": "OpenAIFineTune",
    "description": null,
    "html_url": [
      "https://github.com/OgeonX/OpenAIFineTune/blob/d9610e2a7ef25e56ceddb32cc4de35cc14c2e520/check_available_api_endpoints.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 222,
    "stars": 0
  },
  {
    "full_name": "programmer-ke/katiba-chat",
    "name": "katiba-chat",
    "description": "A RAG app for the Kenyan Constitution",
    "html_url": [
      "https://github.com/programmer-ke/katiba-chat/blob/3c9de9fd72013dacfce7bb9927b42f5339320a90/src/katiba_chat/adapters/generation.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 32852,
    "stars": 0
  },
  {
    "full_name": "dimitri-rusin/openai-keymanager",
    "name": "openai-keymanager",
    "description": null,
    "html_url": [
      "https://github.com/dimitri-rusin/openai-keymanager/blob/4192515b60fa6a47357808402bcbcabf2cc7eac2/openai_forwarder.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 31,
    "stars": 0
  },
  {
    "full_name": "jeromtom/PromptSculpt-AI",
    "name": "PromptSculpt-AI",
    "description": "PromptSculpt AI makes CAD models in Fusion 360 from prompts by the user.",
    "html_url": [
      "https://github.com/jeromtom/PromptSculpt-AI/blob/741ef24fea188063f65d3119e81e851feb9d2f93/PromptSculpt-AI-2.0/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 52903,
    "stars": 2
  },
  {
    "full_name": "WoodwindCDT/Cosine-Cassandra",
    "name": "Cosine-Cassandra",
    "description": "My custom solution for a Vector Database. This project combines Apache Cassandra, Vector Embedding (1,536 Dimension), and a local web-based application for viewing the DB info.",
    "html_url": [
      "https://github.com/WoodwindCDT/Cosine-Cassandra/blob/43e54d4756117803f8f12c5821da8a1069cd02e5/helpers/Messenger.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 441,
    "stars": 1
  },
  {
    "full_name": "SomaRe/Invoice_generator_using_LLM",
    "name": "Invoice_generator_using_LLM",
    "description": null,
    "html_url": [
      "https://github.com/SomaRe/Invoice_generator_using_LLM/blob/fe111de58f812a00f70e8912b31aa30db1f789da/utils/config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 449,
    "stars": 0
  },
  {
    "full_name": "Loen15/ai_assistant",
    "name": "ai_assistant",
    "description": "client API bot for Telegram (with openAI)",
    "html_url": [
      "https://github.com/Loen15/ai_assistant/blob/d872845e00931c1fc5a76cbee2d7e6e7e9e05875/userbot/constants_example.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 336,
    "stars": 0
  },
  {
    "full_name": "emdad-i/Car_repair",
    "name": "Car_repair",
    "description": "OpenAI based car repair suggestions from a fault described",
    "html_url": [
      "https://github.com/emdad-i/Car_repair/blob/80e95127b234707dcabf540267fa4cfe98b48809/app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 59,
    "stars": 1
  },
  {
    "full_name": "shawwn/openai-python",
    "name": "openai-python",
    "description": null,
    "html_url": [
      "https://github.com/shawwn/openai-python/blob/af644d68ad9def1984cbd83fd8f8068851a187c7/openai/__init__.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3462,
    "stars": 0
  },
  {
    "full_name": "OpenCodeInterpreter/OpenCodeInterpreter",
    "name": "OpenCodeInterpreter",
    "description": "OpenCodeInterpreter is a suite of open-source code generation systems aimed at bridging the gap between large language models and sophisticated proprietary systems like the GPT-4 Code Interpreter. It significantly enhances code generation capabilities by integrating execution and iterative refinement functionalities.",
    "html_url": [
      "https://github.com/OpenCodeInterpreter/OpenCodeInterpreter/blob/9674d8a521df7f92becd8a7a8e60a8792e71869a/evaluation/evaluate/multi_turn/chat_with_gpt.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 10971,
    "stars": 1664
  },
  {
    "full_name": "Optima-CityU/llm4ad",
    "name": "llm4ad",
    "description": "large language model for algorithm design",
    "html_url": [
      "https://github.com/Optima-CityU/llm4ad/blob/36545c4be75aecd836fe1256cd077b95e8e1e7e5/example/online_bin_packing/run_funsearch.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 572470,
    "stars": 368
  },
  {
    "full_name": "jerome3o/schemallm",
    "name": "schemallm",
    "description": "Use LLMs to generate valid JSON that conforms to a JSONSchema definition",
    "html_url": [
      "https://github.com/jerome3o/schemallm/blob/048167f3a6cc4ba0c0a0c074acea280517803a97/legacy/homellm/llm.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2577,
    "stars": 12
  },
  {
    "full_name": "Whitev2/async-openai",
    "name": "async-openai",
    "description": "A complete async library for working with openAI",
    "html_url": [
      "https://github.com/Whitev2/async-openai/blob/2dc8e78f43a779a8d930f4127457b67e2a3a4641/ai_openchat/base_openai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 770,
    "stars": 6
  },
  {
    "full_name": "bitcoder/openai_conversation_custom",
    "name": "openai_conversation_custom",
    "description": "Home Assistant Integration with OpenAI for image analysis - a PoC",
    "html_url": [
      "https://github.com/bitcoder/openai_conversation_custom/blob/276262e7494815a77d9a0076a4b8c47e900030c3/myopenai_client/core.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 516,
    "stars": 2
  },
  {
    "full_name": "The-Swarm-Corporation/swarm-models",
    "name": "swarm-models",
    "description": "A simple to use package to call various model providers such as openai, anthropic, and others with utmost reliability, security, and performance.",
    "html_url": [
      "https://github.com/The-Swarm-Corporation/swarm-models/blob/76b76af2c55c5459f55675db4468c75898c814d5/examples/models/gpt4_v_example.py",
      "https://github.com/The-Swarm-Corporation/swarm-models/blob/76b76af2c55c5459f55675db4468c75898c814d5/tests/test_openaitts.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 7896,
    "stars": 13
  },
  {
    "full_name": "SunzidHassan/24_LLM-OSL",
    "name": "24_LLM-OSL",
    "description": null,
    "html_url": [
      "https://github.com/SunzidHassan/24_LLM-OSL/blob/8445db8c0f0d5cf6d68e057eb5429de21acb1705/gptPayload.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 398825,
    "stars": 2
  },
  {
    "full_name": "Teppei-Kanayama/chatgpt-cli",
    "name": "chatgpt-cli",
    "description": "Markdownを活用したChatGPTのCLI",
    "html_url": [
      "https://github.com/Teppei-Kanayama/chatgpt-cli/blob/3876c3359850c959783758576c3b4ee890f36716/cli.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 47,
    "stars": 0
  },
  {
    "full_name": "zmuen/YouTube-Comment-Analysis-and-Moderation",
    "name": "YouTube-Comment-Analysis-and-Moderation",
    "description": "LLM-Based YouTube Comment Analysis and Moderation",
    "html_url": [
      "https://github.com/zmuen/YouTube-Comment-Analysis-and-Moderation/blob/5f3e73ec4bd47088cf4f32e22f0ea2ce9bbbe777/05_ping_openai.py",
      "https://github.com/zmuen/YouTube-Comment-Analysis-and-Moderation/blob/5f3e73ec4bd47088cf4f32e22f0ea2ce9bbbe777/06_prediction.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 466,
    "stars": 1
  },
  {
    "full_name": "ev-moon/mmt_eval",
    "name": "mmt_eval",
    "description": "Comparison of different Language Models for Multilingual Machine Translation",
    "html_url": [
      "https://github.com/ev-moon/mmt_eval/blob/2615a9fd7c1f4bb6d5dfbe29b5bcb914402bdaca/query_chatgpt.py",
      "https://github.com/ev-moon/mmt_eval/blob/2615a9fd7c1f4bb6d5dfbe29b5bcb914402bdaca/query_chatgpt_parallel.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 616,
    "stars": 0
  },
  {
    "full_name": "sasadangelo/langchain-tutorials",
    "name": "langchain-tutorials",
    "description": null,
    "html_url": [
      "https://github.com/sasadangelo/langchain-tutorials/blob/6ecd50960922ed0bed69e281d77353219d73775e/lesson-1/myopenai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2252,
    "stars": 0
  },
  {
    "full_name": "DanaStok/AI_Trip_Planner",
    "name": "AI_Trip_Planner",
    "description": " This innovative application leverages AI to make travel planning a breeze. It generates personalized itineraries, suggests destinations based on activities and seasons, finds the best flights and hotels using SerpApi, and even provides stunning destination visuals with Dall-E.",
    "html_url": [
      "https://github.com/DanaStok/AI_Trip_Planner/blob/d38e375e2e6b9796858f72033c12c7919932c61a/Code/openai_dalle_call.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 12327,
    "stars": 0
  },
  {
    "full_name": "Mossaaba/taskerAi",
    "name": "taskerAi",
    "description": "Python Automation with ChatGPT",
    "html_url": [
      "https://github.com/Mossaaba/taskerAi/blob/243a975e201538720922bcfa727cfb960a87057b/python-chatgpt.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 84,
    "stars": 0
  },
  {
    "full_name": "garciaae/fastvapi",
    "name": "fastvapi",
    "description": "Fastapi and OpenAI Realtime API POC",
    "html_url": [
      "https://github.com/garciaae/fastvapi/blob/eedeef4601defa5a3b524aeaa4a46ed5459d4d80/app/api/realtime/openai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2052,
    "stars": 0
  },
  {
    "full_name": "Reason-Wang/NAT",
    "name": "NAT",
    "description": "The official implementation of paper \"Learning From Failure: Integrating Negative Examples when Fine-tuning Large Language Models as Agents\"",
    "html_url": [
      "https://github.com/Reason-Wang/NAT/blob/5f2541202a63c5e848e959588c49ed60a161b104/api/openai/generation.py",
      "https://github.com/Reason-Wang/NAT/blob/5f2541202a63c5e848e959588c49ed60a161b104/data/generate.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1176900,
    "stars": 26
  },
  {
    "full_name": "cuio/NeuralinkGPT",
    "name": "NeuralinkGPT",
    "description": "NeuralinkLLM is an open-source project dedicated to creating a robust interface for interacting and connecting your Brain via NeuralinkGPT with LLMs.",
    "html_url": [
      "https://github.com/cuio/NeuralinkGPT/blob/dd0ae2e288746d6b0b999b61774c4dfb0e915997/unittest/test_api_connections.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 355,
    "stars": 11
  },
  {
    "full_name": "huangzhuxing/openai-forward",
    "name": "openai-forward",
    "description": null,
    "html_url": [
      "https://github.com/huangzhuxing/openai-forward/blob/69fd87932dbe4581eff0b7e7b1842a6292feb4d0/tests/test_env.py",
      "https://github.com/huangzhuxing/openai-forward/blob/69fd87932dbe4581eff0b7e7b1842a6292feb4d0/openai_forward/base.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1493,
    "stars": 0
  },
  {
    "full_name": "JuchangKim/LangChain",
    "name": "LangChain",
    "description": null,
    "html_url": [
      "https://github.com/JuchangKim/LangChain/blob/0c2a1038247479da15a37be0c5a740ee77d3d98d/libs/partners/openai/tests/unit_tests/embeddings/test_azure_embeddings.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 509397,
    "stars": 0
  },
  {
    "full_name": "zoidberg01/openai-forward1",
    "name": "openai-forward1",
    "description": null,
    "html_url": [
      "https://github.com/zoidberg01/openai-forward1/blob/4f30c1ee38711ba3546e375cf116ef696127778f/tests/test_env.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1517,
    "stars": 0
  },
  {
    "full_name": "CristiVlad25/gpt-cli",
    "name": "gpt-cli",
    "description": "Access GPT3, ChatGPT, and GPT4 straight from your terminal",
    "html_url": [
      "https://github.com/CristiVlad25/gpt-cli/blob/c774982d691385c6de4b791fe5ce239f824d1337/gpt.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 76,
    "stars": 176
  },
  {
    "full_name": "Suxmx/nonebot_plugin_chatgpt_on_qq",
    "name": "nonebot_plugin_chatgpt_on_qq",
    "description": "基于chatGPT-3.5-turboAPI的nonebot插件",
    "html_url": [
      "https://github.com/Suxmx/nonebot_plugin_chatgpt_on_qq/blob/67c9ac8a42ac362997f562bf54bbdbeda1ee772b/config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1163,
    "stars": 55
  },
  {
    "full_name": "tech-branch/ask-gpt",
    "name": "ask-gpt",
    "description": "Send prompts to OpenAI GPT models from your favourite launcher",
    "html_url": [
      "https://github.com/tech-branch/ask-gpt/blob/fbf1a507959d3cc27ce1da183967febf77c67cae/alfred/python/qa.py",
      "https://github.com/tech-branch/ask-gpt/blob/fbf1a507959d3cc27ce1da183967febf77c67cae/alfred/python/qal.py",
      "https://github.com/tech-branch/ask-gpt/blob/fbf1a507959d3cc27ce1da183967febf77c67cae/raycast/ask-gpt.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 465,
    "stars": 21
  },
  {
    "full_name": "Ezharjan/AcademicGPT",
    "name": "AcademicGPT",
    "description": "Stores here is the revised version of ChatGPT-Academic project. For better utilities of the tool and for better research environment.",
    "html_url": [
      "https://github.com/Ezharjan/AcademicGPT/blob/cd6503377ec6c6c303465ac313b1a1213b403548/config-eg.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 7167,
    "stars": 28
  },
  {
    "full_name": "hand-e-fr/OpenHosta",
    "name": "OpenHosta",
    "description": "A lightweight library integrating LLM natively into Python",
    "html_url": [
      "https://github.com/hand-e-fr/OpenHosta/blob/9f6a4e8556f990aa98e17d70813b736033e572bf/src/OpenHosta/OpenHosta.py",
      "https://github.com/hand-e-fr/OpenHosta/blob/9f6a4e8556f990aa98e17d70813b736033e572bf/tests/functionnalTests/test_mandatory.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 6629,
    "stars": 30
  },
  {
    "full_name": "okcd00/CDConfusor",
    "name": "CDConfusor",
    "description": "A repo about (re-producting) training a CSC model with generated samples.",
    "html_url": [
      "https://github.com/okcd00/CDConfusor/blob/53afeeb9bb1c029d417e247f9d7e3f3ebad93929/src/ime_recorder.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4214819,
    "stars": 3
  },
  {
    "full_name": "pieteradejong/openai-experiments",
    "name": "openai-experiments",
    "description": "OpenAI experiments, as an active user of ChatGPT4",
    "html_url": [
      "https://github.com/pieteradejong/openai-experiments/blob/7238b559d5297ef66ea47a08e19cd2c745fbbfe0/app/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 77,
    "stars": 0
  },
  {
    "full_name": "0m364/ChatGPT-pdf-filler",
    "name": "ChatGPT-pdf-filler",
    "description": "App to use your openai API to read and fill PDFs ",
    "html_url": [
      "https://github.com/0m364/ChatGPT-pdf-filler/blob/0161be30a420d5e6d6dc59c1cb828be9a0abdc2c/Pdf-filler.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 52,
    "stars": 0
  },
  {
    "full_name": "chrisjchandler/GordonAI",
    "name": "GordonAI",
    "description": "AI chat built on GPT3.5 model ",
    "html_url": [
      "https://github.com/chrisjchandler/GordonAI/blob/90a7e7b5938590e2d0806e67606f797fe706102b/chatbot.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 329,
    "stars": 0
  },
  {
    "full_name": "ethan-jiang-1/llm_exam",
    "name": "llm_exam",
    "description": null,
    "html_url": [
      "https://github.com/ethan-jiang-1/llm_exam/blob/6e239c193dc35d6230f9e5494eeeab5194489805/gpt_plain/gpt_exam_model_list.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 16448,
    "stars": 1
  },
  {
    "full_name": "grupooruss/Pentesting-LLM",
    "name": "Pentesting-LLM",
    "description": "Pack de scripts para pentesting superficial a LLM modelo de lenguaje colosal​ o LLM (siglas en inglés para Large Language Model)",
    "html_url": [
      "https://github.com/grupooruss/Pentesting-LLM/blob/9ade95c6a15f820fcc2de125968ab05bff401323/PromptInjectionTest.py",
      "https://github.com/grupooruss/Pentesting-LLM/blob/9ade95c6a15f820fcc2de125968ab05bff401323/DDos%20Testing%20LLM.py",
      "https://github.com/grupooruss/Pentesting-LLM/blob/9ade95c6a15f820fcc2de125968ab05bff401323/Supply%20Chain%20Basic%20Test.py",
      "https://github.com/grupooruss/Pentesting-LLM/blob/9ade95c6a15f820fcc2de125968ab05bff401323/Insecure%20Output%20Handling.py",
      "https://github.com/grupooruss/Pentesting-LLM/blob/9ade95c6a15f820fcc2de125968ab05bff401323/Excessive%20Agency%20Test.py",
      "https://github.com/grupooruss/Pentesting-LLM/blob/9ade95c6a15f820fcc2de125968ab05bff401323/Sensitive%20Information%20Disclosure%20Vulnerabilities%20Test.py",
      "https://github.com/grupooruss/Pentesting-LLM/blob/9ade95c6a15f820fcc2de125968ab05bff401323/Overreliance%20Test.py",
      "https://github.com/grupooruss/Pentesting-LLM/blob/9ade95c6a15f820fcc2de125968ab05bff401323/Model%20Theft%20Test.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 272,
    "stars": 4
  },
  {
    "full_name": "unclecode/hermes",
    "name": "hermes",
    "description": "🎥➡️📝 Hermes: Blazing-fast video transcription powered by AI gods! Transcribe 6.5 minutes of video in just 1 second using Groq's LPU. Choose your transcription deity: MLX Whisper (local), Groq (speed demon), or OpenAI (cloud classic). Convert speech to text faster than Hermes delivering messages on Olympus!",
    "html_url": [
      "https://github.com/unclecode/hermes/blob/806e1833167bc7735d470d3ab37f1f566b6aa463/hermes/strategies/provider/openai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1556,
    "stars": 80
  },
  {
    "full_name": "sakshieng/GeoRescue-Disaster-Relief",
    "name": "GeoRescue-Disaster-Relief",
    "description": "Enhance disaster relief and response efforts by leveraging satellite imagery during disasters like floods and wildfires, integrating existing geospatial information, and utilizing environmental data for affected regions.",
    "html_url": [
      "https://github.com/sakshieng/GeoRescue-Disaster-Relief/blob/9a7ec75ed4f04ce9cf068156e33e598808816347/backend/external_apis/open_api_model.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1383289,
    "stars": 1
  },
  {
    "full_name": "Crypto69/openai-api-test",
    "name": "openai-api-test",
    "description": "Testing the openai api",
    "html_url": [
      "https://github.com/Crypto69/openai-api-test/blob/d986e454a4a711be6b7e8f41bc88af7cbce668d7/Vision.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 182,
    "stars": 0
  },
  {
    "full_name": "AdamStanley3112/20-questions-game-vs-LLM",
    "name": "20-questions-game-vs-LLM",
    "description": "A streamlit app which allows user to play 20 questions against an LLM agent.",
    "html_url": [
      "https://github.com/AdamStanley3112/20-questions-game-vs-LLM/blob/c9b8936dadc20564bc4b1f0c5253c7c3f83fc140/app/client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 159,
    "stars": 0
  },
  {
    "full_name": "Mwni/promptkit",
    "name": "promptkit",
    "description": "Python framework for complex LLM prompting",
    "html_url": [
      "https://github.com/Mwni/promptkit/blob/7067bafa6099df15100e3918b2c83f9407a382eb/promptkit/llms/openai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 439,
    "stars": 0
  },
  {
    "full_name": "stevwhi/Neuroviz",
    "name": "Neuroviz",
    "description": "Full Stack Web-Based Educational Neuroscience Tool. Using a stack of HTML, CSS, JavaScript(Three.js), Python(Flask), and SQL, developed a tool users explore the brain via 3D graphics accompanied by: web-pulled textual content, GPT-generated quiz system, database-based offline functionality, flashcard generation, model manipulation panel.",
    "html_url": [
      "https://github.com/stevwhi/Neuroviz/blob/0d599eed6623809d325a58a841adc35ab60f0d2e/test_app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 960592,
    "stars": 0
  },
  {
    "full_name": "dreamhunter2333/chatgpt-tarot-divination",
    "name": "chatgpt-tarot-divination",
    "description": "AI 算命，占卜，塔罗牌，姓名五格，周公解梦，生辰八字，梅花易数",
    "html_url": [
      "https://github.com/dreamhunter2333/chatgpt-tarot-divination/blob/c6cfd1ffaf3f0b993a8b6a3acc0384a8fe17615e/src/config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 5254,
    "stars": 561
  },
  {
    "full_name": "kafkasl/talk2apis",
    "name": "talk2apis",
    "description": "Talk and use your APIs using only natural language thanks to LLMs and HTTP integration. ",
    "html_url": [
      "https://github.com/kafkasl/talk2apis/blob/e35d48675cb30b2274bbeb92d68a25433abbb7da/auth.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1209990,
    "stars": 11
  },
  {
    "full_name": "dongguanting/FollowRAG",
    "name": "FollowRAG",
    "description": "The demo, code and data of FollowRAG",
    "html_url": [
      "https://github.com/dongguanting/FollowRAG/blob/a689316295574742cc670b5f72b305e2d705c077/FollowRAG/utils/call_llm.py",
      "https://github.com/dongguanting/FollowRAG/blob/a689316295574742cc670b5f72b305e2d705c077/FollowRAG/eval/rag_eval.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 199395,
    "stars": 72
  },
  {
    "full_name": "ohnotnow/bulma2tailwind",
    "name": "bulma2tailwind",
    "description": "Convert templates from bulma to tailwind using LLM calls",
    "html_url": [
      "https://github.com/ohnotnow/bulma2tailwind/blob/d0bf8afb0cfa00cd7180c2b861467eb8cc4d8b96/gepetto/dalle.py",
      "https://github.com/ohnotnow/bulma2tailwind/blob/d0bf8afb0cfa00cd7180c2b861467eb8cc4d8b96/gepetto/gpt.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1079,
    "stars": 2
  },
  {
    "full_name": "choi-jyoon/CHATGPT_API_APP",
    "name": "CHATGPT_API_APP",
    "description": "openai api key tutorial",
    "html_url": [
      "https://github.com/choi-jyoon/CHATGPT_API_APP/blob/d49a4f0d9aa36a610723259b59be6f7aba9ba63f/ai_vision_local.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 148,
    "stars": 0
  },
  {
    "full_name": "inwonakng/llm-chat",
    "name": "llm-chat",
    "description": null,
    "html_url": [
      "https://github.com/inwonakng/llm-chat/blob/3f7278a81d19b1bf27a4f5710268393c30921da3/llm_chat/api.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 474,
    "stars": 0
  },
  {
    "full_name": "Snaxerl/ChatGPT-Discord-Bot",
    "name": "ChatGPT-Discord-Bot",
    "description": "OpenAI API-Key required",
    "html_url": [
      "https://github.com/Snaxerl/ChatGPT-Discord-Bot/blob/ee6c152ddf46b767605cc6f4ceb606327064e489/bot.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 32,
    "stars": 0
  },
  {
    "full_name": "BBQGOD/TTT-ML-Discover",
    "name": "TTT-ML-Discover",
    "description": "Discovering Test-Time Training on Traditional ML Models.",
    "html_url": [
      "https://github.com/BBQGOD/TTT-ML-Discover/blob/375f9418cc59b1e2284374774c17c9805693b4d4/KNN_FS_LLM_code/args.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2758,
    "stars": 2
  },
  {
    "full_name": "delToros/Automation_ChatGPT",
    "name": "Automation_ChatGPT",
    "description": "This is a small script that uses OpenAI API to create a script to move all files older than 30 days to another folder. Both scripts here",
    "html_url": [
      "https://github.com/delToros/Automation_ChatGPT/blob/377ec21f92d47900742aecd7f83b77a23c14a5af/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 37,
    "stars": 1
  },
  {
    "full_name": "leo-need-more-coffee/rag_builder",
    "name": "rag_builder",
    "description": null,
    "html_url": [
      "https://github.com/leo-need-more-coffee/rag_builder/blob/288a96332daecb702d7f93827fd957403ddd1bd8/integrations/openai/openai_vectorizer.py",
      "https://github.com/leo-need-more-coffee/rag_builder/blob/288a96332daecb702d7f93827fd957403ddd1bd8/integrations/openai/openai_llm.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 800,
    "stars": 0
  },
  {
    "full_name": "nullmastermind/ComfyUI_LLM",
    "name": "ComfyUI_LLM",
    "description": null,
    "html_url": [
      "https://github.com/nullmastermind/ComfyUI_LLM/blob/2f792480cef23ffdcfb9686817a99e17c33f0615/custom_nodes/ComfyUI_LLM/inputs/openai_model_node.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 989,
    "stars": 0
  },
  {
    "full_name": "officialkrunalkumar/009-ChatGPT-AI-Application",
    "name": "009-ChatGPT-AI-Application",
    "description": "This makes use of openAI's API and uses the model gpt-4.",
    "html_url": [
      "https://github.com/officialkrunalkumar/009-ChatGPT-AI-Application/blob/21b7c9e8dbb47a6743367a1fa849b36ee88fb94b/Custom%20Code.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 34,
    "stars": 0
  },
  {
    "full_name": "WillaQuinn/BragBot",
    "name": "BragBot",
    "description": "A chatbot embedded within the HelloSciCom website that is trained on the company's accomplishments and clientele.",
    "html_url": [
      "https://github.com/WillaQuinn/BragBot/blob/f8ca17b794736710b1b8905e5a59d523a3169798/app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 85735,
    "stars": 0
  },
  {
    "full_name": "kingkwongsta/llm-fine-tune",
    "name": "llm-fine-tune",
    "description": null,
    "html_url": [
      "https://github.com/kingkwongsta/llm-fine-tune/blob/68ac0647016ce956f5a31fa7a06b3d5253b17e59/upload_openai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2913,
    "stars": 0
  },
  {
    "full_name": "icepaq/QuranSearch",
    "name": "QuranSearch",
    "description": "Similarity search of Quran verses using OpenAI embeddings and chromadb",
    "html_url": [
      "https://github.com/icepaq/QuranSearch/blob/4d3fc5ed9d82b4f593073d1bdff555cadbda2750/backend/embed_quran.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 126459,
    "stars": 1
  },
  {
    "full_name": "muneebalichishti01/The-Last-Show",
    "name": "The-Last-Show",
    "description": "Innovative Full Stack Obituary Generator leveraging React and AWS, delivering customized eulogies with a touch of personalization.",
    "html_url": [
      "https://github.com/muneebalichishti01/The-Last-Show/blob/cd08ac695d8aceff869fb952d47436d039999b51/functions/create-obituary/generate-obituary/generate_obituary.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 31554,
    "stars": 0
  },
  {
    "full_name": "soba1104/llm_experiment",
    "name": "llm_experiment",
    "description": "llm experiment scripts",
    "html_url": [
      "https://github.com/soba1104/llm_experiment/blob/5525f6469f4f7dad4373d8cc4d2e75f4eb03eb69/scripts/chatgpt_hello.py",
      "https://github.com/soba1104/llm_experiment/blob/5525f6469f4f7dad4373d8cc4d2e75f4eb03eb69/scripts/chatgpt_vision_ocr.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 132,
    "stars": 0
  },
  {
    "full_name": "lionellevine/emili",
    "name": "emili",
    "description": "EMILI (Emotionally Intelligent Listener) adds emotion tags sourced from video to your OpenAI API calls",
    "html_url": [
      "https://github.com/lionellevine/emili/blob/1839800664f5cda6f6b2a1b2d82aca6238c314dc/vision-test.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 28628,
    "stars": 2
  },
  {
    "full_name": "ohnotnow/copywrite_pipeline_experiment",
    "name": "copywrite_pipeline_experiment",
    "description": "Write blog posts using LLMs",
    "html_url": [
      "https://github.com/ohnotnow/copywrite_pipeline_experiment/blob/ed4053b7e396f21ce7827189b1665ce867f3f738/gepetto/dalle.py",
      "https://github.com/ohnotnow/copywrite_pipeline_experiment/blob/ed4053b7e396f21ce7827189b1665ce867f3f738/gepetto/gpt.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1177,
    "stars": 2
  },
  {
    "full_name": "ohnotnow/svic-o-tron",
    "name": "svic-o-tron",
    "description": "Discord bot using LLMs",
    "html_url": [
      "https://github.com/ohnotnow/svic-o-tron/blob/f2d1e4ee158458559ec656babb13fe4a7683408b/gepetto/dalle.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1500,
    "stars": 1
  },
  {
    "full_name": "lightningorb/chatJeepTea",
    "name": "chatJeepTea",
    "description": "ChatGPT-based voice Telegram bot",
    "html_url": [
      "https://github.com/lightningorb/chatJeepTea/blob/9f3a47d73e096574356242de7489428aa3c96062/src/think.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1140,
    "stars": 19
  },
  {
    "full_name": "nitsanavni/tdd-machine",
    "name": "tdd-machine",
    "description": "A ChatGPT-Powered TDD Machine",
    "html_url": [
      "https://github.com/nitsanavni/tdd-machine/blob/871484e47c50c2e4d1ac5c49d3fe69f88a14b8cb/chat.py",
      "https://github.com/nitsanavni/tdd-machine/blob/871484e47c50c2e4d1ac5c49d3fe69f88a14b8cb/chat-and-execute.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 575,
    "stars": 9
  },
  {
    "full_name": "allenai/SciRIFF",
    "name": "SciRIFF",
    "description": "Dataset and evaluation suite enabling LLM instruction-following for scientific literature understanding.",
    "html_url": [
      "https://github.com/allenai/SciRIFF/blob/e396d00ac844351bc4e166744c79f8fb53020c65/sciriff/eval/metrics/lm_judge.py",
      "https://github.com/allenai/SciRIFF/blob/e396d00ac844351bc4e166744c79f8fb53020c65/batch_jobs.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 8243,
    "stars": 40
  },
  {
    "full_name": "bgalitsky/Truth-O-Meter-Making-ChatGPT-Truthful",
    "name": "Truth-O-Meter-Making-ChatGPT-Truthful",
    "description": "fact checking of GPT and other LLMs",
    "html_url": [
      "https://github.com/bgalitsky/Truth-O-Meter-Making-ChatGPT-Truthful/blob/b94190254f5cc90fa38244962742a5d951909724/truthometer/external_apis/openai_api_manager.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 102567,
    "stars": 21
  },
  {
    "full_name": "pelagecha/LLM-Agents",
    "name": "LLM-Agents",
    "description": "Creating advanced Large Language Model agents under supervision of Prof. Long Tran-Thanh",
    "html_url": [
      "https://github.com/pelagecha/LLM-Agents/blob/a4c5640e499f585a0ee05a703e2bfad5efc78c3d/setup_api.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 42386,
    "stars": 2
  },
  {
    "full_name": "jio-gl/voiceverse-ai",
    "name": "voiceverse-ai",
    "description": "Prototype Webapp for Voice2Text to Interact with GPT-4",
    "html_url": [
      "https://github.com/jio-gl/voiceverse-ai/blob/312f407bd39423e45e2bc1776eec48d0c2929aa5/app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "amitpuri/LLM-Image-2-Image",
    "name": "LLM-Image-2-Image",
    "description": "LLM Image-2-Image",
    "html_url": [
      "https://github.com/amitpuri/LLM-Image-2-Image/blob/0bc62c571b77a13b6f352557ff37bfdfa1555bb3/openai-img-2-img.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 47,
    "stars": 0
  },
  {
    "full_name": "likaiqiang/chatgpt-document-reader",
    "name": "chatgpt-document-reader",
    "description": "一个electron应用，让chatgpt外接知识库，不只是pdf，还支持各种编程语言，代码检索",
    "html_url": [
      "https://github.com/likaiqiang/chatgpt-document-reader/blob/89611b20ac01fa41a5c6c1c340865da31736b114/src/assets/python_code/semantic_splitter_text.py",
      "https://github.com/likaiqiang/chatgpt-document-reader/blob/89611b20ac01fa41a5c6c1c340865da31736b114/src/assets/python_code/semantic_splitter_code.py",
      "https://github.com/likaiqiang/chatgpt-document-reader/blob/89611b20ac01fa41a5c6c1c340865da31736b114/src/assets/python_code/semantic_splitter.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 27135,
    "stars": 4
  },
  {
    "full_name": "asherf/pmeng",
    "name": "pmeng",
    "description": "Prompt Engineering and Evaluation",
    "html_url": [
      "https://github.com/asherf/pmeng/blob/854256e50a7a6e82395c01869267025e68ace513/helpers.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "ohnotnow/gepetto-discord-bot",
    "name": "gepetto-discord-bot",
    "description": "A discord bot that uses OpenAI's API's to response to user prompts",
    "html_url": [
      "https://github.com/ohnotnow/gepetto-discord-bot/blob/ad2716d00717cbe0876b5d33d8b372c44ed5c39b/gepetto/dalle.py",
      "https://github.com/ohnotnow/gepetto-discord-bot/blob/ad2716d00717cbe0876b5d33d8b372c44ed5c39b/gepetto/gpt.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2274,
    "stars": 0
  },
  {
    "full_name": "vaiserYT/ChatAI",
    "name": "ChatAI",
    "description": "ChatAI - it's simple fullstack website on django + react and celery, using OpenAI chat gpt",
    "html_url": [
      "https://github.com/vaiserYT/ChatAI/blob/d87fd52b00b0f54a629b538a8607d399e0a38717/backend/core/api/chatGPT_reqest.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 5219,
    "stars": 0
  },
  {
    "full_name": "Pratikreddy/genai-templates",
    "name": "genai-templates",
    "description": "These are for template api requests for using llms in python.",
    "html_url": [
      "https://github.com/Pratikreddy/genai-templates/blob/cde8e17bce678feff742030cd721d2f1db4d2e24/openaimultivisionjson.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 438,
    "stars": 1
  },
  {
    "full_name": "Maximilian-Winter/ToolAgents",
    "name": "ToolAgents",
    "description": "ToolAgents is a lightweight and flexible framework for creating function-calling agents with various language models and APIs.",
    "html_url": [
      "https://github.com/Maximilian-Winter/ToolAgents/blob/1941132ee1dfd052d9c27301274ed247de805692/tests/test_chat_api_agent.py",
      "https://github.com/Maximilian-Winter/ToolAgents/blob/1941132ee1dfd052d9c27301274ed247de805692/examples/basic/example_chat_api_agent.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 21724,
    "stars": 25
  },
  {
    "full_name": "krystian-ai/ai-cmd",
    "name": "ai-cmd",
    "description": "AI-Command (ai-cmd): Execute command line tasks intelligently using OpenAI-powered natural language prompts.",
    "html_url": [
      "https://github.com/krystian-ai/ai-cmd/blob/1528e3ff367c83a88fd614a8dbcfe80a305959b5/tests/test_aicmd.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 277,
    "stars": 10
  },
  {
    "full_name": "RohanGudla/Atari-Reinforcement-Learning",
    "name": "Atari-Reinforcement-Learning",
    "description": "A focused dive into creating AIs that can outplay human players in Atari games, combining retro entertainment with modern neural networks.",
    "html_url": [
      "https://github.com/RohanGudla/Atari-Reinforcement-Learning/blob/c431e84201053e02ec7898370ffb3d4480773609/Tool/chatgpt_integration.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1148,
    "stars": 0
  },
  {
    "full_name": "dropbox/llm-security",
    "name": "llm-security",
    "description": "Dropbox LLM Security research code and results",
    "html_url": [
      "https://github.com/dropbox/llm-security/blob/d5cd5615de671f2461ce542669aec0e9a881b00a/src/common/openai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 710,
    "stars": 228
  },
  {
    "full_name": "expectedparrot/edsl",
    "name": "edsl",
    "description": "Design, conduct and analyze results of AI-powered surveys and experiments. Simulate social science and market research with large numbers of AI agents and LLMs.",
    "html_url": [
      "https://github.com/expectedparrot/edsl/blob/387f0e7373f7860603dcec8c52cc6b1e019611cc/edsl/inference_services/rate_limits_cache.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 68078,
    "stars": 251
  },
  {
    "full_name": "C-Loftus/talon-ai-tools",
    "name": "talon-ai-tools",
    "description": "Query LLMs and AI tools with voice commands",
    "html_url": [
      "https://github.com/C-Loftus/talon-ai-tools/blob/7a2b4c4ca8864779f6e36b9fe4bf01815520b673/Images/ai-images.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 9208,
    "stars": 71
  },
  {
    "full_name": "shihongl1998/LLM-as-a-blackbox-optimizer",
    "name": "LLM-as-a-blackbox-optimizer",
    "description": null,
    "html_url": [
      "https://github.com/shihongl1998/LLM-as-a-blackbox-optimizer/blob/280a4646a7fdcb08ec32ef329dc052098192d257/auto_prompt_image_optimization.py",
      "https://github.com/shihongl1998/LLM-as-a-blackbox-optimizer/blob/280a4646a7fdcb08ec32ef329dc052098192d257/auto_prompt_prompt_inversion.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4273,
    "stars": 67
  },
  {
    "full_name": "eugeneyan/raspberry-llm",
    "name": "raspberry-llm",
    "description": "Calling LLM APIs on a Raspberry Pi for lulz",
    "html_url": [
      "https://github.com/eugeneyan/raspberry-llm/blob/2bc457505d925a110e6ac60f9ed2774a1bace358/llm.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 647,
    "stars": 24
  },
  {
    "full_name": "jhakulin/realtime-ai",
    "name": "realtime-ai",
    "description": "Experimental Python SDK for OpenAI's Realtime API",
    "html_url": [
      "https://github.com/jhakulin/realtime-ai/blob/2d2f5cc69f3d22f69f1aebd7482ae2e5ea7ec6f8/src/realtime_ai/models/realtime_ai_options.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4086,
    "stars": 44
  },
  {
    "full_name": "speakeasy-sdks/openai-python-sdk",
    "name": "openai-python-sdk",
    "description": "Python SDK for the OpenAI API",
    "html_url": [
      "https://github.com/speakeasy-sdks/openai-python-sdk/blob/3f91275ee18c5e87c9b94a02498cf91c7ee99513/src/gpt/sdk.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2423,
    "stars": 1
  },
  {
    "full_name": "glance-io/steer-backend",
    "name": "steer-backend",
    "description": "An LLM token streaming server for a grammar assistant app",
    "html_url": [
      "https://github.com/glance-io/steer-backend/blob/3966e5750b2c80763fc7b2f65e10b549c828476a/app/services/llm/openai_service.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2806,
    "stars": 64
  },
  {
    "full_name": "jtc1246/openai-playground",
    "name": "openai-playground",
    "description": "Use other openai-compatible API services in OpenAI Playground.",
    "html_url": [
      "https://github.com/jtc1246/openai-playground/blob/96dbac8a76beb9693d76a2b7faf98c5a1edf4011/example.py",
      "https://github.com/jtc1246/openai-playground/blob/96dbac8a76beb9693d76a2b7faf98c5a1edf4011/openai_playground/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 59087,
    "stars": 1
  },
  {
    "full_name": "magician11/openai-python",
    "name": "openai-python",
    "description": "Python scripts for OpenAI",
    "html_url": [
      "https://github.com/magician11/openai-python/blob/cdbcb5687a0fe2d6e89619b6c9220818680492cb/ask-image-qs.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 451,
    "stars": 0
  },
  {
    "full_name": "miko550/TelegramBot-ChatGPT-filter-bypass",
    "name": "TelegramBot-ChatGPT-filter-bypass",
    "description": "Simple Python Server for Telegram Bot that allows you to bypass content filtering in ChatGPT. This calls the OpenAI autocompletion API for DaVinci-003.",
    "html_url": [
      "https://github.com/miko550/TelegramBot-ChatGPT-filter-bypass/blob/5f75a4d7e0f8d13cbb8c250e573b56f68c119f4d/telebot.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 86,
    "stars": 2
  },
  {
    "full_name": "munaAchyuta/jwellery_marketing_campign_using_llm",
    "name": "jwellery_marketing_campign_using_llm",
    "description": "Jwellery Shopping Assistant using LLM for Marketing Campign Purpose",
    "html_url": [
      "https://github.com/munaAchyuta/jwellery_marketing_campign_using_llm/blob/97a9b491c276efd0f9faf758bf56469f17125316/src/base.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1612,
    "stars": 0
  },
  {
    "full_name": "amelieav/langchain-basic-setup",
    "name": "langchain-basic-setup",
    "description": "Example setups for Langchain and OpenAI moderation",
    "html_url": [
      "https://github.com/amelieav/langchain-basic-setup/blob/dc5373de1bf41a552d8748a950f22b7394ebf3a7/moderation_setup.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 154,
    "stars": 1
  },
  {
    "full_name": "dstello/llm-boot",
    "name": "llm-boot",
    "description": null,
    "html_url": [
      "https://github.com/dstello/llm-boot/blob/545ea3e69ea0ccf901995ed64eea0a7a4b538592/clients.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "yunwoong7/GPT-4V-Examples",
    "name": "GPT-4V-Examples",
    "description": "Explore the power of GPT-4V with our curated examples and tutorials. This repository offers code snippets, step-by-step guides, and use case demonstrations for integrating GPT-4V into various applications. Perfect for both AI novices and experts!",
    "html_url": [
      "https://github.com/yunwoong7/GPT-4V-Examples/blob/0549b721a4796735fb5148878e21a4fe41df1932/base64_image_description_with_gpt4v.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 695,
    "stars": 3
  },
  {
    "full_name": "Jupalaja/openaiAPI-usage-playground",
    "name": "openaiAPI-usage-playground",
    "description": "Python files used to calculate the OpenAI API pricing costs and more",
    "html_url": [
      "https://github.com/Jupalaja/openaiAPI-usage-playground/blob/38517676d34f2dffe8f7a136a4efe95f2dccf647/check_usage.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 152,
    "stars": 1
  },
  {
    "full_name": "Zheng-Zong/novel_continuation",
    "name": "novel_continuation",
    "description": "使用LLM对已有小说进行续写",
    "html_url": [
      "https://github.com/Zheng-Zong/novel_continuation/blob/4da90928503ef2f860e9be5a9e4162111f55dbe0/modules/utilities.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 130585,
    "stars": 2
  },
  {
    "full_name": "PriyaQuantumicsAI/llm_app_test",
    "name": "llm_app_test",
    "description": null,
    "html_url": [
      "https://github.com/PriyaQuantumicsAI/llm_app_test/blob/866e7dc4352b05ec85e8937d663b94b3ffa45930/controller/controller.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 152,
    "stars": 0
  },
  {
    "full_name": "dilipsundarraj1/explore-openai",
    "name": "explore-openai",
    "description": "This repository has all the code thats covered in the explore openai course",
    "html_url": [
      "https://github.com/dilipsundarraj1/explore-openai/blob/a45d4bd3688ea5f8c5c56ec70d3dd34bb89f8060/basics/src/08_vision_encoded_image.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4372,
    "stars": 2
  },
  {
    "full_name": "AlbearKamoo/llm_evaluation_stem_analogies",
    "name": "llm_evaluation_stem_analogies",
    "description": null,
    "html_url": [
      "https://github.com/AlbearKamoo/llm_evaluation_stem_analogies/blob/af68cd401e7047961ef8ecd48e76de9463aadd13/chainlit.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 641,
    "stars": 0
  },
  {
    "full_name": "ShaniAharon/gpt-task",
    "name": "gpt-task",
    "description": null,
    "html_url": [
      "https://github.com/ShaniAharon/gpt-task/blob/4ba12492962012f9a8e6e587ad1638356ea4d1ae/flask_app/services/gpt_service.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 113,
    "stars": 0
  },
  {
    "full_name": "Naxem/API_OpenAI",
    "name": "API_OpenAI",
    "description": "Script python pour utiliser l'api de openAI avec interface web avec flask",
    "html_url": [
      "https://github.com/Naxem/API_OpenAI/blob/f66c1dbc11f1dd52ff86a6959efdda921e90a696/console/chatGPTVision.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 435,
    "stars": 0
  },
  {
    "full_name": "felipelube/gpt-4-images-tagger",
    "name": "gpt-4-images-tagger",
    "description": "A small app to add tags to your images using OpenAI GPT-4 with Vision",
    "html_url": [
      "https://github.com/felipelube/gpt-4-images-tagger/blob/916358a069ef195e523d5ab1de02ed4b2261b4c1/lib/prompt.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4286,
    "stars": 2
  },
  {
    "full_name": "chrishayuk/openai-realtime",
    "name": "openai-realtime",
    "description": null,
    "html_url": [
      "https://github.com/chrishayuk/openai-realtime/blob/7f29e6b404dec27527e422cc1873c530af422582/simple_session.py",
      "https://github.com/chrishayuk/openai-realtime/blob/7f29e6b404dec27527e422cc1873c530af422582/client/connection_handler.py",
      "https://github.com/chrishayuk/openai-realtime/blob/7f29e6b404dec27527e422cc1873c530af422582/simple_text_send.py",
      "https://github.com/chrishayuk/openai-realtime/blob/7f29e6b404dec27527e422cc1873c530af422582/simple_audio_to_audio.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1021,
    "stars": 1
  },
  {
    "full_name": "akaulok1234/MYCHATASSISTANTFLASK",
    "name": "MYCHATASSISTANTFLASK",
    "description": "Introducing our chatbot project: a Flask, HTML, and OpenAI API-powered system that revolutionizes user experience. With advanced language models, my chatbot understands queries with remarkable accuracy and generates coherent responses in real-time. It's user-friendly, scalable, and secure. Try it now!",
    "html_url": [
      "https://github.com/akaulok1234/MYCHATASSISTANTFLASK/blob/5cd70ecaf916d6da2ebbfa4aa0a9cfb53165e798/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "Aryan-Aman/llm_web_app",
    "name": "llm_web_app",
    "description": "A web app to chat with urls",
    "html_url": [
      "https://github.com/Aryan-Aman/llm_web_app/blob/b0982a4aa8a5cecd1828e08c02aed344569141c1/llm_chatter/services/openai_service.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 159,
    "stars": 0
  },
  {
    "full_name": "disler/poc-realtime-ai-assistant",
    "name": "poc-realtime-ai-assistant",
    "description": "Sharing early versions of Ada, a personal AI Assistant built on OpenAIs Realtime API",
    "html_url": [
      "https://github.com/disler/poc-realtime-ai-assistant/blob/c7a44ef6cb5a15de38f3d9253a5337b124822112/src/realtime_api_async_python/test_realtime_connection.py",
      "https://github.com/disler/poc-realtime-ai-assistant/blob/c7a44ef6cb5a15de38f3d9253a5337b124822112/src/realtime_api_async_python/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 5958,
    "stars": 700
  },
  {
    "full_name": "deathblade287/Objectivize",
    "name": "Objectivize",
    "description": "Autonomous LLM for deducing conclusions using objective facts inspired by AutoGPT",
    "html_url": [
      "https://github.com/deathblade287/Objectivize/blob/a68cca96585a3622955743c151a78f2a3989541c/tests/vcr/openai_filter.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 8706,
    "stars": 1
  },
  {
    "full_name": "revhappy/GPT4FreeCAD",
    "name": "GPT4FreeCAD",
    "description": "Automated GPT-4 scripting tool for FreeCAD",
    "html_url": [
      "https://github.com/revhappy/GPT4FreeCAD/blob/0851d17a8d2dc688edbf224c70be22ec01e00272/gpt4_integration.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 209,
    "stars": 57
  },
  {
    "full_name": "Sweetaroo/VulDetectBench",
    "name": "VulDetectBench",
    "description": "A Novel Benchmark evaluating the Deep Capability of Vulnerability Detection with Large Language Models",
    "html_url": [
      "https://github.com/Sweetaroo/VulDetectBench/blob/3f10aa67117c1695325921c2b51b4e4f9dc8463a/demos/gpt.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 8988,
    "stars": 25
  },
  {
    "full_name": "daxcay/ComfyUI-DataSet",
    "name": "ComfyUI-DataSet",
    "description": "Data research, preparation, and manipulation nodes for model trainers and artists.",
    "html_url": [
      "https://github.com/daxcay/ComfyUI-DataSet/blob/5c27f35e65022793b089d8e3ab2e42bd50f22722/classes/DataSet_OpenAIChat.py",
      "https://github.com/daxcay/ComfyUI-DataSet/blob/5c27f35e65022793b089d8e3ab2e42bd50f22722/classes/DataSet_OpenAIChatImageBatch.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1549,
    "stars": 50
  },
  {
    "full_name": "RGGH/OpenAI_SQL",
    "name": "OpenAI_SQL",
    "description": "PostgreSQL and LangChain OpenAI example",
    "html_url": [
      "https://github.com/RGGH/OpenAI_SQL/blob/709222f971a2693f45a10e144e35a7a4527c7017/check_usage.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 182,
    "stars": 9
  },
  {
    "full_name": "JishengBai/AudioLog",
    "name": "AudioLog",
    "description": "codes for AudioLog: LLMs-Powered Long Audio Logging with Hybrid Token-Semantic Contrastive Learning",
    "html_url": [
      "https://github.com/JishengBai/AudioLog/blob/6fc045e4703981426f5649ee747e883e9e560587/audiolog_chatGPT.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1647,
    "stars": 3
  },
  {
    "full_name": "mqraitem/Self-Gen-Typo-Attack",
    "name": "Self-Gen-Typo-Attack",
    "description": "Vision-LLMs Can Fool Themselves with Self-Generated Typographic Attacks",
    "html_url": [
      "https://github.com/mqraitem/Self-Gen-Typo-Attack/blob/a07c96405340b326df67fc09642319e0acb4273a/utils_models/utils_gpt4.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 25322,
    "stars": 4
  },
  {
    "full_name": "genia-dev/vibraniumdome",
    "name": "vibraniumdome",
    "description": "LLM Security Platform.",
    "html_url": [
      "https://github.com/genia-dev/vibraniumdome/blob/456648aba155646a96092dfda6e2fdc7ea977497/vibraniumdome-opensearch/client_example.py",
      "https://github.com/genia-dev/vibraniumdome/blob/456648aba155646a96092dfda6e2fdc7ea977497/vibraniumdome-shields/tests/shields_it/test_vibranium_shields_interaction.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 10761,
    "stars": 17
  },
  {
    "full_name": "scarletwiz/RP2040-OpenAI-Micropython",
    "name": "RP2040-OpenAI-Micropython",
    "description": "Chatting with chatGPT on WIZnet Pico Board using MicroPython",
    "html_url": [
      "https://github.com/scarletwiz/RP2040-OpenAI-Micropython/blob/c77a8647ca4785e124c228cde1408f67cee62b5f/lib/chatGPT.py",
      "https://github.com/scarletwiz/RP2040-OpenAI-Micropython/blob/c77a8647ca4785e124c228cde1408f67cee62b5f/example/chatGPT.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 322,
    "stars": 2
  },
  {
    "full_name": "c0sogi/openai-functioncalling-requestor",
    "name": "openai-functioncalling-requestor",
    "description": null,
    "html_url": [
      "https://github.com/c0sogi/openai-functioncalling-requestor/blob/e2d76448aba8de16b95b80da135386fd8f0cf86a/app/utils/function_calling/request.py",
      "https://github.com/c0sogi/openai-functioncalling-requestor/blob/e2d76448aba8de16b95b80da135386fd8f0cf86a/app/utils/api/completion.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1614,
    "stars": 0
  },
  {
    "full_name": "kkowenn/LINE-Thai-RAG-AI-Assistant",
    "name": "LINE-Thai-RAG-AI-Assistant",
    "description": "A Thai LINE chatbot using Retrieval-Augmented Generation (RAG) with Pinecone and OpenAI GPT for intelligent, real-time responses by python",
    "html_url": [
      "https://github.com/kkowenn/LINE-Thai-RAG-AI-Assistant/blob/20cfdabe6907bba481ce38c090936a8fb800acbb/app/openai_utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 664,
    "stars": 1
  },
  {
    "full_name": "LikhonScript/ollama-webui",
    "name": "ollama-webui",
    "description": null,
    "html_url": [
      "https://github.com/LikhonScript/ollama-webui/blob/ba01e1b44a58c31f82ebd960d01a132adf20e82c/backend/config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "ArthurGartner/mnad",
    "name": "mnad",
    "description": "Might Need a Drink reviews the top daily articles and suggests a drink based on the average sentiment and ABV of the drink.",
    "html_url": [
      "https://github.com/ArthurGartner/mnad/blob/b0e32a35df5efe72d37a888d2affb919087b1738/backend/aws/lambda/mnad_generate_drink_fact/lambda_function.py",
      "https://github.com/ArthurGartner/mnad/blob/b0e32a35df5efe72d37a888d2affb919087b1738/backend/aws/lambda/mnad-label-category/lambda_function.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1722701,
    "stars": 1
  },
  {
    "full_name": "tonyxone/llmops",
    "name": "llmops",
    "description": null,
    "html_url": [
      "https://github.com/tonyxone/llmops/blob/0fbf3a4c63fc3a17b97a432bd1439ad7305fcb38/llmops-api/study/8-ChatMessageHistory%E7%BB%84%E4%BB%B6/2.%E6%96%87%E4%BB%B6%E5%AF%B9%E8%AF%9D%E6%B6%88%E6%81%AF%E5%8E%86%E5%8F%B2%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E8%AE%B0%E5%BF%86.py",
      "https://github.com/tonyxone/llmops/blob/0fbf3a4c63fc3a17b97a432bd1439ad7305fcb38/llmops-api/study/7-python%2BopenAI%E5%8E%9F%E7%94%9FSDK%E5%AE%9E%E7%8E%B0%E8%AE%B0%E5%BF%86%E5%8A%9F%E8%83%BD/1.%E6%91%98%E8%A6%81%E7%BC%93%E5%86%B2%E6%B7%B7%E5%90%88%E8%AE%B0%E5%BF%86.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1900,
    "stars": 0
  },
  {
    "full_name": "LidanAvisar/Fashion-API",
    "name": "Fashion-API",
    "description": "API project harnessing AI and computer vision to recommend and virtually try on outfits. Built with FastAPI, OpenAI, Hugging Face, and Azure, demonstrating advanced tech integration and CI/CD expertise.",
    "html_url": [
      "https://github.com/LidanAvisar/Fashion-API/blob/0e70f2600a74d77c5bc9df2e5ac7db4f00909232/similar_recommendation/gptvision.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 968,
    "stars": 0
  },
  {
    "full_name": "alexndrvega/transcribble",
    "name": "transcribble",
    "description": "Transcribe .mp3 files to JSON format using OpenAI's API",
    "html_url": [
      "https://github.com/alexndrvega/transcribble/blob/f715e54ca5b6420cabbc4a98f4d50384181ec212/app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 47,
    "stars": 0
  },
  {
    "full_name": "DariaRadu/python-gpt-projects",
    "name": "python-gpt-projects",
    "description": "A collection of python projects did for learning how to code python and by leveraging the OpenAI API.",
    "html_url": [
      "https://github.com/DariaRadu/python-gpt-projects/blob/d214f6b160942763cadf736f37c670fde104cefd/PhotoOrganizer/gallery/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 531,
    "stars": 0
  },
  {
    "full_name": "officialkrunalkumar/010-Churn-Ticket-Analysis-using-OpenAi",
    "name": "010-Churn-Ticket-Analysis-using-OpenAi",
    "description": "This collects all the notes and meeting notes associated with a particular ticket and combines them. It then sends that combined data to OpenAI's ChatGPT to generate summary.",
    "html_url": [
      "https://github.com/officialkrunalkumar/010-Churn-Ticket-Analysis-using-OpenAi/blob/4dc3108a2d1c7e4a88636235aa6e0c5e5466eceb/7%20Recommended%20Churn%20Reason.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 308,
    "stars": 0
  },
  {
    "full_name": "FlyingFathead/TelegramBot-OpenAI-API",
    "name": "TelegramBot-OpenAI-API",
    "description": "A feature-rich Python-based Telegram bot for OpenAI API & Perplexity API",
    "html_url": [
      "https://github.com/FlyingFathead/TelegramBot-OpenAI-API/blob/73849399f12eceffd7c05194041576a291450c82/src/text_message_handler.py",
      "https://github.com/FlyingFathead/TelegramBot-OpenAI-API/blob/73849399f12eceffd7c05194041576a291450c82/src/api_get_openrouteservice.py",
      "https://github.com/FlyingFathead/TelegramBot-OpenAI-API/blob/73849399f12eceffd7c05194041576a291450c82/src/api_get_openweathermap.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 7350,
    "stars": 27
  },
  {
    "full_name": "Priyasi7/LangChain-SQL-Database",
    "name": "LangChain-SQL-Database",
    "description": null,
    "html_url": [
      "https://github.com/Priyasi7/LangChain-SQL-Database/blob/715d23113a4dbc5716e87d1d440e75637710fda9/check_usage.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 182,
    "stars": 0
  },
  {
    "full_name": "NuclearGeekETH/openai-realtime-python-example",
    "name": "openai-realtime-python-example",
    "description": null,
    "html_url": [
      "https://github.com/NuclearGeekETH/openai-realtime-python-example/blob/75ca113a64711a0d7ca39e143b14aaa3cc3ed95c/websocket_test.py",
      "https://github.com/NuclearGeekETH/openai-realtime-python-example/blob/75ca113a64711a0d7ca39e143b14aaa3cc3ed95c/podcast_generator.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 429,
    "stars": 18
  },
  {
    "full_name": "alokemajumder/Auto-PR-Content-Generator",
    "name": "Auto-PR-Content-Generator",
    "description": "This GitHub Action uses AI models from OpenAI and Anthropic's Claude 3 to automatically generate formatted and insightful content for pull requests based on code changes.",
    "html_url": [
      "https://github.com/alokemajumder/Auto-PR-Content-Generator/blob/d001bf76ed451a5320f0ac321383290089317b02/.github/scripts/generate_pr_content.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 316,
    "stars": 4
  },
  {
    "full_name": "microsoft/RecAI",
    "name": "RecAI",
    "description": "Bridging LLM and Recommender System.",
    "html_url": [
      "https://github.com/microsoft/RecAI/blob/eb443c649792f14d95e7519f97b292cf921e61f7/Knowledge_Plugin/utils/check_credit.py",
      "https://github.com/microsoft/RecAI/blob/eb443c649792f14d95e7519f97b292cf921e61f7/Knowledge_Plugin/DOKE/call_openai.py",
      "https://github.com/microsoft/RecAI/blob/eb443c649792f14d95e7519f97b292cf921e61f7/InteRecAgent/eval/user_simulator.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 599846,
    "stars": 796
  },
  {
    "full_name": "c0sogi/LLMChat",
    "name": "LLMChat",
    "description": "A full-stack Webui implementation of Large Language model, such as ChatGPT or LLaMA.",
    "html_url": [
      "https://github.com/c0sogi/LLMChat/blob/01f53de6630e7302fc58f103b3fad382d8d270bc/app/utils/function_calling/request.py",
      "https://github.com/c0sogi/LLMChat/blob/01f53de6630e7302fc58f103b3fad382d8d270bc/tests/test_completion_api.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 110250,
    "stars": 283
  },
  {
    "full_name": "GPT-Laboratory/SLR-automation",
    "name": "SLR-automation",
    "description": "To automate the SLR process and write paper quickly using multi agents of AI",
    "html_url": [
      "https://github.com/GPT-Laboratory/SLR-automation/blob/f0d9ee4bbef30c09e971b88c70ce9d47d5b7fac5/agents2.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1594,
    "stars": 45
  },
  {
    "full_name": "Yuvaraja28/AI_Chat_Bot_GPT3",
    "name": "AI_Chat_Bot_GPT3",
    "description": "OpenAi's ChatGPT Clone",
    "html_url": [
      "https://github.com/Yuvaraja28/AI_Chat_Bot_GPT3/blob/5549e4bd92692a1a571df7975909db7ae560e103/app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 232,
    "stars": 6
  },
  {
    "full_name": "Jean-Zombie/OpenAI-Usage-Monitor",
    "name": "OpenAI-Usage-Monitor",
    "description": "A simple menu bar app for macOS to monitor your OpenAI API usage.",
    "html_url": [
      "https://github.com/Jean-Zombie/OpenAI-Usage-Monitor/blob/4dcf2b5c088b4c48fee0232956999776e73fb6bf/openapi_client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 154,
    "stars": 6
  },
  {
    "full_name": "Vidminas/socialgenpod",
    "name": "socialgenpod",
    "description": "Converse with an LLM provider of your choice. Store your documents and chat history in a Solid pod.",
    "html_url": [
      "https://github.com/Vidminas/socialgenpod/blob/48ca89a9f9c5495bd83251133bf1472e4434b251/src/chat_app/apis/openai_api.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1802,
    "stars": 4
  },
  {
    "full_name": "asirihewage/pyChatGPT-intl",
    "name": "pyChatGPT-intl",
    "description": "Enhanced ChatGPT Wrapper for Internationalization - Python",
    "html_url": [
      "https://github.com/asirihewage/pyChatGPT-intl/blob/ad4ba090158f0adc3847f73ef234f248f6b939c1/pychatgptintl/__main_.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 984,
    "stars": 4
  },
  {
    "full_name": "sebischair/LLM-SP-CQA",
    "name": "LLM-SP-CQA",
    "description": "Paper: \"Evaluating Large Language Models in Semantic Parsing for Conversational Question Answering over Knowledge Graphs\", accepted to ICAART 2024",
    "html_url": [
      "https://github.com/sebischair/LLM-SP-CQA/blob/5192f712ae9eaa63fd4fa8eff9d037809eeb9b41/Requests.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 111624,
    "stars": 4
  },
  {
    "full_name": "nighood/rag_wiki",
    "name": "rag_wiki",
    "description": null,
    "html_url": [
      "https://github.com/nighood/rag_wiki/blob/45ef97e828eb4d7fac648e76376adc5904e0cc00/rag_azureopenai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 765,
    "stars": 0
  },
  {
    "full_name": "MinhazulHasan/document-classify-openai-vision",
    "name": "document-classify-openai-vision",
    "description": "This project provides a FastAPI-based web service that generates descriptions for uploaded images based on specified categories.",
    "html_url": [
      "https://github.com/MinhazulHasan/document-classify-openai-vision/blob/34e23e1fa346d9342c7f758deb505c561b11691e/app/services/image_service.py",
      "https://github.com/MinhazulHasan/document-classify-openai-vision/blob/34e23e1fa346d9342c7f758deb505c561b11691e/app/services/room_condition_service.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 591,
    "stars": 0
  },
  {
    "full_name": "Cohorte-ai/multi_modal_rag_demo",
    "name": "multi_modal_rag_demo",
    "description": null,
    "html_url": [
      "https://github.com/Cohorte-ai/multi_modal_rag_demo/blob/f3aac1808e0acc1d5f274992da5ce692a97aae6e/img2txt/openai_local_img.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 286,
    "stars": 0
  },
  {
    "full_name": "MORIMOTO520212/r2r-docker",
    "name": "r2r-docker",
    "description": "R2R(Rag to Riches) Fork",
    "html_url": [
      "https://github.com/MORIMOTO520212/r2r-docker/blob/0ae40c89ae32115131fccb192d0848fb14ef7a1e/core/parsers/media/img_parser.py",
      "https://github.com/MORIMOTO520212/r2r-docker/blob/0ae40c89ae32115131fccb192d0848fb14ef7a1e/core/parsers/media/openai_helpers.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 26894,
    "stars": 0
  },
  {
    "full_name": "Saurabh13042004/DocuQuery",
    "name": "DocuQuery",
    "description": "DocuQuery is an intelligent document query system that allows users to upload PDF documents and ask questions about their content using advanced natural language processing. The application leverages LangChain integrated with Google's Generative AI (Gemini 1.5 Flash) for powerful and efficient question answering. ",
    "html_url": [
      "https://github.com/Saurabh13042004/DocuQuery/blob/38ccb646a364cb396655828a275996997d4eebdc/backend/app/services/qa_service.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 9182,
    "stars": 0
  },
  {
    "full_name": "Rose-STL-Lab/AnomLLM",
    "name": "AnomLLM",
    "description": null,
    "html_url": [
      "https://github.com/Rose-STL-Lab/AnomLLM/blob/bf7827dfd63e5cd134f5b2412efc54175e5aee72/src/openai_api.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2055,
    "stars": 29
  },
  {
    "full_name": "arianeBC/website-assistant",
    "name": "website-assistant",
    "description": "Fullstack LLM application with OpenAI, Flask, React, and Pinecone",
    "html_url": [
      "https://github.com/arianeBC/website-assistant/blob/8063bb7c293d9182d3fcc4ac15b61efa4ee165c4/app/services/openai_service.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 520,
    "stars": 0
  },
  {
    "full_name": "hunkjun/openai-key-balance",
    "name": "openai-key-balance",
    "description": "查询Chatgpt/Openai key 余额及使用情况.Check the balance and usage of the OpenAI key",
    "html_url": [
      "https://github.com/hunkjun/openai-key-balance/blob/5036a28bb188a58d15f65b5f7caddd2798c82612/app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 682,
    "stars": 1
  },
  {
    "full_name": "codevbus/openai-ui",
    "name": "openai-ui",
    "description": "Test your OpenAI/GPT integrations with CI/CD testing workflows.",
    "html_url": [
      "https://github.com/codevbus/openai-ui/blob/cf8c830e84f614ac1b8fa1ae6d15c9bfa30e15a9/app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 159,
    "stars": 0
  },
  {
    "full_name": "daveshap/TutorChatbot",
    "name": "TutorChatbot",
    "description": "TIM the Tutor Chatbot - an experiment in finetuning GPT-3 to encourage curiosity",
    "html_url": [
      "https://github.com/daveshap/TutorChatbot/blob/4d0252fce6a60ae39002e3a566c233ef47d068f0/finetune.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 10762,
    "stars": 36
  },
  {
    "full_name": "Shardj/code-genie-cli",
    "name": "code-genie-cli",
    "description": "Uses OpenAI's GPT API to turn natural language into Python code and execute it on your desktop. ",
    "html_url": [
      "https://github.com/Shardj/code-genie-cli/blob/a1cc1cb8619a79024e06dec024e949a805c17c52/code_genie_cli/definitions.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 444,
    "stars": 28
  },
  {
    "full_name": "jrojer/tao-multibot",
    "name": "tao-multibot",
    "description": "LLM chat-bot infrastructure service featuring multiple bots instances with custom plugins and frontends",
    "html_url": [
      "https://github.com/jrojer/tao-multibot/blob/d66787cb7a0a8cc41f0b4fc3ad2f517ea4928579/app/src/internal/audio/audio_transcriptor.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4599,
    "stars": 6
  },
  {
    "full_name": "abuzzany/captcha2text",
    "name": "captcha2text",
    "description": "Captcha2Text is a Python library that extracts text from captcha images using OpenAI's GPT-4 vision model.",
    "html_url": [
      "https://github.com/abuzzany/captcha2text/blob/f7db9123290ecbde2cbfca0ee38c1d5272d31950/captcha_reader.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 133,
    "stars": 0
  },
  {
    "full_name": "NHLStenden-MITS/limbosh",
    "name": "limbosh",
    "description": "The honeypot shell that traps you in a conversation with an LLM pretending to be a shell.",
    "html_url": [
      "https://github.com/NHLStenden-MITS/limbosh/blob/7b6dee1af67d7e813546373c6caac6f96ff1d7d7/llm/openai_large_language_model.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1349,
    "stars": 7
  },
  {
    "full_name": "Arodoid/Whispry",
    "name": "Whispry",
    "description": "This application is a voice assistant that allows users to configure and use hotkeys to record audio, transcribe it, and interact with an AI model for responses.",
    "html_url": [
      "https://github.com/Arodoid/Whispry/blob/c24f42587e9c58baed8f98cebc939a8b2a9d1e04/utils/gpt_response.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 959,
    "stars": 0
  },
  {
    "full_name": "Bo-Yu-Columbia/document-retrieval-vector-db-application",
    "name": "document-retrieval-vector-db-application",
    "description": "Final Project for ELEN-6776 Content Storage and Distribution Networks",
    "html_url": [
      "https://github.com/Bo-Yu-Columbia/document-retrieval-vector-db-application/blob/df2112124bec08a8ff2e56421551823364151b7d/semantic-search-backend/helper.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 19791,
    "stars": 1
  },
  {
    "full_name": "sidereior/frostgiant-ai",
    "name": "frostgiant-ai",
    "description": "ballistic penetration calculator from an image of an armored vehicle. Uses EfficientNetB7 to perform image classification, approximates 6d pose with GPT-4V",
    "html_url": [
      "https://github.com/sidereior/frostgiant-ai/blob/71d025535659aa0420f0471465d54196dec2d001/asset-classifier/imglite.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3817,
    "stars": 0
  },
  {
    "full_name": "amicus-investments/gpt4twitter",
    "name": "gpt4twitter",
    "description": "Macroeconomics AI Twitter bot powered by Federal Reserve Data and OpenAI's GPT-4",
    "html_url": [
      "https://github.com/amicus-investments/gpt4twitter/blob/30d0516e34ba96f6c3d09a024138ec598dac42e4/src/app/tweet_generator.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 177,
    "stars": 2
  },
  {
    "full_name": "dore4n/interface-openai",
    "name": "interface-openai",
    "description": "Um software full stack para ser usado com a api da OpenAI",
    "html_url": [
      "https://github.com/dore4n/interface-openai/blob/886815f7bbbea590447a3a77d1df8836914a9fb1/app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 177,
    "stars": 0
  },
  {
    "full_name": "MutugiD/gpt-3",
    "name": "gpt-3",
    "description": null,
    "html_url": [
      "https://github.com/MutugiD/gpt-3/blob/16eb90dfb5f1fa41bcf70b11bf1845ed6d773ee9/Finetuning/finetune.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 64039,
    "stars": 0
  },
  {
    "full_name": "daniel112/openai-hackathon-realtime-translation",
    "name": "openai-hackathon-realtime-translation",
    "description": null,
    "html_url": [
      "https://github.com/daniel112/openai-hackathon-realtime-translation/blob/72620e918ab492ddb0b37a820f3dfb51bafa7f55/backend/modules/translator/translate.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1441,
    "stars": 36
  },
  {
    "full_name": "brown-palm/Concept-Discovery-and-Learning",
    "name": "Concept-Discovery-and-Learning",
    "description": "The code for the paper \"Pre-trained Vision-Language Models Learn Discoverable Concepts\"",
    "html_url": [
      "https://github.com/brown-palm/Concept-Discovery-and-Learning/blob/64576c5e8cee1beae6a30c0831f9159524829ceb/downstream_preparation/concept_category_map.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1469,
    "stars": 19
  },
  {
    "full_name": "jasperbruin/IBEX-LLM",
    "name": "IBEX-LLM",
    "description": null,
    "html_url": [
      "https://github.com/jasperbruin/IBEX-LLM/blob/95f7de3591f8671ab72ed57249ec6e241d3a1595/things_that_break/finetune.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 11005,
    "stars": 0
  },
  {
    "full_name": "FarrasArias/iViz_Modular_RAG",
    "name": "iViz_Modular_RAG",
    "description": null,
    "html_url": [
      "https://github.com/FarrasArias/iViz_Modular_RAG/blob/7e3e1f8fc4f7ded176f3aca9d131b444f8684548/ragbot_example.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1083,
    "stars": 1
  },
  {
    "full_name": "dinhln03/LLAMA3_for_coding",
    "name": "LLAMA3_for_coding",
    "description": "Fine tuning LLAMA3 on coding instructional dataset",
    "html_url": [
      "https://github.com/dinhln03/LLAMA3_for_coding/blob/f6d0402e9da2ff350fa32d6c0b77e237291d34e3/chatgpt_code_summary/gpt_summary.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1863286,
    "stars": 2
  },
  {
    "full_name": "fahnub/story-writer",
    "name": "story-writer",
    "description": "Finetuned GPT-3's Davinci for Story Generation for Kids",
    "html_url": [
      "https://github.com/fahnub/story-writer/blob/9d8f9c0bdd09a8c8c7de5efce23deb20bd01ea1e/finetune.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 43010,
    "stars": 9
  },
  {
    "full_name": "daveshap/PerfectEmailGenerator",
    "name": "PerfectEmailGenerator",
    "description": "Generate perfect emails for any purpose with GPT-3",
    "html_url": [
      "https://github.com/daveshap/PerfectEmailGenerator/blob/ec6eb1a396a9e49f48526939309d1f2504f4812a/finetune.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 5374,
    "stars": 24
  },
  {
    "full_name": "daveshap/InformationCompanionChatbot",
    "name": "InformationCompanionChatbot",
    "description": "Experiment for creating a safe companion chatbot (according to OpenAI rules)",
    "html_url": [
      "https://github.com/daveshap/InformationCompanionChatbot/blob/260689b8e04a96be6476b097dc7f0fa721139438/finetune.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 5098,
    "stars": 13
  },
  {
    "full_name": "daveshap/GPT3_Finetunes",
    "name": "GPT3_Finetunes",
    "description": "Public repo for my finetuning projects",
    "html_url": [
      "https://github.com/daveshap/GPT3_Finetunes/blob/135c46b4906ad6cac863fa89461304669e1dcbd5/Compassionate_Chatbot/finetune.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 6429,
    "stars": 79
  },
  {
    "full_name": "langwatch/langwatch",
    "name": "langwatch",
    "description": "Source available LLM Ops platform and LLM Optimization Studio powered by DSPy.",
    "html_url": [
      "https://github.com/langwatch/langwatch/blob/84b7d327775ba3a5786cfff0988cc90bc7429cc3/python-sdk/tests/test_guardrails.py",
      "https://github.com/langwatch/langwatch/blob/84b7d327775ba3a5786cfff0988cc90bc7429cc3/python-sdk/tests/test_openai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 223649,
    "stars": 2010
  },
  {
    "full_name": "maurominella/openai",
    "name": "openai",
    "description": "Mauro Minella Open AI & Azure Open AI Working Repo",
    "html_url": [
      "https://github.com/maurominella/openai/blob/bf167646329451aa3371e0bb9c917994fafb884a/TaskWeaver/tests/unit_tests/test_multi_llm.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 193376,
    "stars": 3
  },
  {
    "full_name": "realsuperheavy/PerfectEmailGenerator",
    "name": "PerfectEmailGenerator",
    "description": "Generate perfect emails for any purpose with GPT-3",
    "html_url": [
      "https://github.com/realsuperheavy/PerfectEmailGenerator/blob/ec6eb1a396a9e49f48526939309d1f2504f4812a/finetune.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 5374,
    "stars": 2
  },
  {
    "full_name": "xlang-foundation/xMind",
    "name": "xMind",
    "description": "xMind is a modular framework in XLang for implementing LLM Memory, Planning, and Dataflow. It enables seamless integration of advanced AI features like context retention and dynamic decision-making into your applications. Perfect for building intelligent, responsive systems with ease and flexibility.",
    "html_url": [
      "https://github.com/xlang-foundation/xMind/blob/1bac8651253d920d77c99081ecde9a1e888e7e09/Test/Test.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 10485,
    "stars": 5
  },
  {
    "full_name": "rainym00d/LLM4RS",
    "name": "LLM4RS",
    "description": "the official implementation of the RecSys 2023 paper “Uncovering ChatGPT's Capabilities in Recommender Systems”",
    "html_url": [
      "https://github.com/rainym00d/LLM4RS/blob/255c8101208d1bc10cad960ac1eb221e87689ebb/src/const.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2142,
    "stars": 169
  },
  {
    "full_name": "daily-demos/llm-talk",
    "name": "llm-talk",
    "description": "Talk to GPT-4 and create a story together.",
    "html_url": [
      "https://github.com/daily-demos/llm-talk/blob/1da9313cfe8970bc210340b64ae152c319075b65/services/open_ai_service.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4492,
    "stars": 90
  },
  {
    "full_name": "simonw/llm-whisper-api",
    "name": "llm-whisper-api",
    "description": "Run transcriptions using the OpenAI Whisper API",
    "html_url": [
      "https://github.com/simonw/llm-whisper-api/blob/5c4d35e17f906194054e2c80697bb8d36ad9140e/llm_whisper_api.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 194,
    "stars": 24
  },
  {
    "full_name": "GalvinGao/gptkeyboard",
    "name": "gptkeyboard",
    "description": "OpenAI Chat Completion right in your keyboard on iOS",
    "html_url": [
      "https://github.com/GalvinGao/gptkeyboard/blob/f519b42dee2c5cfe3f9b0a05a516a1dac96e81d5/chat_cmpl.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 83,
    "stars": 14
  },
  {
    "full_name": "neka-nat/mylangrobot",
    "name": "mylangrobot",
    "description": "Language instructions to mycobot using GPT-4V",
    "html_url": [
      "https://github.com/neka-nat/mylangrobot/blob/974a4d664e5982f1c25e0058eca7476c20786ae4/mylangrobot/gpt4v.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 870,
    "stars": 24
  },
  {
    "full_name": "LyonLeopard/openai-proxy-vercel",
    "name": "openai-proxy-vercel",
    "description": "An OpenAI API proxy running with Cloudflare worker.",
    "html_url": [
      "https://github.com/LyonLeopard/openai-proxy-vercel/blob/3852e5aa594d8637b7ff8367d59fdf0ab1cfcf28/app/app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 415,
    "stars": 3
  },
  {
    "full_name": "nicolay-r/bulk-chain",
    "name": "bulk-chain",
    "description": "A no-string framework for reasoning over your tabular data rows with any provided LLM ",
    "html_url": [
      "https://github.com/nicolay-r/bulk-chain/blob/bb46ee4ca4ae6f0ced3121157c9740244e22cec4/ext/openai_156.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 881,
    "stars": 20
  },
  {
    "full_name": "sunil-2000/llm-puzzle-interfacing",
    "name": "llm-puzzle-interfacing",
    "description": null,
    "html_url": [
      "https://github.com/sunil-2000/llm-puzzle-interfacing/blob/5687dcd2039dcb74927cef41a9f84da763c7878d/src/wordle/agent.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 432,
    "stars": 4
  },
  {
    "full_name": "Errahum/fineurai",
    "name": "fineurai",
    "description": "Fine-tuning allows improving the model's performance on specific tasks by using additional training data.",
    "html_url": [
      "https://github.com/Errahum/fineurai/blob/63808c3bebc2657650ed005b8a6dfa5451946962/src/config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1193,
    "stars": 0
  },
  {
    "full_name": "caiolombello/PrivateGPT",
    "name": "PrivateGPT",
    "description": "Private GPT is a customized version of OpenAI's ChatGPT, designed to provide a powerful and versatile interaction experience with artificial intelligence technologies. This assistant can transform how you utilize AI in various daily applications.",
    "html_url": [
      "https://github.com/caiolombello/PrivateGPT/blob/8e0e06aaea87c2a79f6574559d4963f18475c5a8/routes/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1226,
    "stars": 0
  },
  {
    "full_name": "Baschoen23/MaeGPT-Public",
    "name": "MaeGPT-Public",
    "description": "Mae GPT is a custom interface for interacting with language models using the OpenAI API library with custom truncation and recall functionality along with the ability to interact with other models including Dall-E 2 and Dall-E 3.",
    "html_url": [
      "https://github.com/Baschoen23/MaeGPT-Public/blob/522a9413d0ead37296b955a93bcc521fe7b4d866/visionBase64.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1223,
    "stars": 1
  },
  {
    "full_name": "Juesgape/Translate_master",
    "name": "Translate_master",
    "description": "This program will help you translate large excel data to the language that you want to by using the OPENAI API and passing it the desired prompt",
    "html_url": [
      "https://github.com/Juesgape/Translate_master/blob/3ef27052d07da0de9d34936385400ae37ef26193/src/translate_content.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 96,
    "stars": 0
  },
  {
    "full_name": "SymbiotAI/IntelliFind",
    "name": "IntelliFind",
    "description": "This is the python implementation of a backend API that accepts text queries, and runs them through OpenAI embeddings API and saves the results in ChromaDB",
    "html_url": [
      "https://github.com/SymbiotAI/IntelliFind/blob/29b659e62198d7dae2e124eaa97c042fdfb5c82e/src/openai_embeddings/request.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1632,
    "stars": 0
  },
  {
    "full_name": "shu3hamiitkgp/CineSphere",
    "name": "CineSphere",
    "description": "Movie recommendations using Knowledge Graphs and LLMs",
    "html_url": [
      "https://github.com/shu3hamiitkgp/CineSphere/blob/68713c7c8933ed5b5523a834e560559e5eff61e0/modules/plot_vector_search.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 821,
    "stars": 0
  },
  {
    "full_name": "albertoPicasso/conversational-assistant-for-educational-purposes",
    "name": "conversational-assistant-for-educational-purposes",
    "description": "Language Teaching Demo, a powerful showcase of the integration of cutting-edge natural language processing models for speech-to-text (STT), language understanding (LLM), and text-to-speech (TTS). This project leverages Whisper(Remote and local), ChatGPT and Gemma, and Vits and openAI TTS to create an immersive language learning experience.",
    "html_url": [
      "https://github.com/albertoPicasso/conversational-assistant-for-educational-purposes/blob/0ed4279ef73c3c9db64bdebd6e81a1a1ef3714e1/Servidor/TTSs/openAITTS.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1423,
    "stars": 0
  },
  {
    "full_name": "harikabkr/backend-django",
    "name": "backend-django",
    "description": "Django integration with Chatgpt",
    "html_url": [
      "https://github.com/harikabkr/backend-django/blob/edd54645c93ed3aee06ae3c991acf42e9174731e/chatBackendService/chatapi/views.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 191,
    "stars": 0
  },
  {
    "full_name": "mjbraun95/discord_bots",
    "name": "discord_bots",
    "description": "A comprehensive Discord bot framework using Python, integrating finance APIs, OpenAI's GPT models for chat completions, and various utilities for enhanced interaction and data analysis within Discord servers. Used to analyze stock market data using OpenAI and Yahoo Finance",
    "html_url": [
      "https://github.com/mjbraun95/discord_bots/blob/68dcb78eccb8ea11d298ce9a9ce294c822fadede/bot2.py",
      "https://github.com/mjbraun95/discord_bots/blob/68dcb78eccb8ea11d298ce9a9ce294c822fadede/bot1.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 252,
    "stars": 1
  },
  {
    "full_name": "Besugo03/UniQuizGPT",
    "name": "UniQuizGPT",
    "description": "A Gradio application for quizzing yourself, integrated with LLMs to give explainations.",
    "html_url": [
      "https://github.com/Besugo03/UniQuizGPT/blob/c389d53681790ab134c54e8663babf30c2200bb7/InterrogateGPT.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2184,
    "stars": 0
  },
  {
    "full_name": "uams01/openai-python",
    "name": "openai-python",
    "description": null,
    "html_url": [
      "https://github.com/uams01/openai-python/blob/47504d56f3aa7224c3a609e217e5cddac700b442/openai/__init__.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 6240,
    "stars": 0
  },
  {
    "full_name": "harrison-e/llmsh",
    "name": "llmsh",
    "description": "BASH for everyone!",
    "html_url": [
      "https://github.com/harrison-e/llmsh/blob/c4d6db1279283a75d470bc58d98ab03cd49fb21d/llmsh"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 53,
    "stars": 0
  },
  {
    "full_name": "radbrt/map-gpt-embeddings",
    "name": "map-gpt-embeddings",
    "description": null,
    "html_url": [
      "https://github.com/radbrt/map-gpt-embeddings/blob/f3badc970d7f60c67c1333665f36891de8329c17/map_gpt_embeddings/stream.py",
      "https://github.com/radbrt/map-gpt-embeddings/blob/f3badc970d7f60c67c1333665f36891de8329c17/map_gpt_embeddings/mappers.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 490,
    "stars": 0
  },
  {
    "full_name": "unkn0wncode/popclip-openAI",
    "name": "popclip-openAI",
    "description": "Send selected text to GPT 3.5 Turbo / GPT 4 Turbo / GPT 4 Turbo Preview with any prompt you want.",
    "html_url": [
      "https://github.com/unkn0wncode/popclip-openAI/blob/9b8a660642918119f647d66a9d5a6eb67b69b79e/Old%20py/PyGPT.popclipext/gpt.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 72,
    "stars": 3
  },
  {
    "full_name": "princeton-nlp/CharXiv",
    "name": "CharXiv",
    "description": "[NeurIPS 2024] CharXiv: Charting Gaps in Realistic Chart Understanding in Multimodal LLMs",
    "html_url": [
      "https://github.com/princeton-nlp/CharXiv/blob/536f83ca0a6d67606af8bdc105a15e648495b400/src/generate_lib/gpt.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 91927,
    "stars": 117
  },
  {
    "full_name": "mattschmitz/TrashGPT",
    "name": "TrashGPT",
    "description": "Trash sorter using OpenAI API",
    "html_url": [
      "https://github.com/mattschmitz/TrashGPT/blob/3f7f8e6a11f34ada1dd9b3c7d7147a74a6798026/esp32files/api.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 283,
    "stars": 0
  },
  {
    "full_name": "Kumar2258/ResumeTOJson",
    "name": "ResumeTOJson",
    "description": "Resume To Json Using LLM (Chatgpt)",
    "html_url": [
      "https://github.com/Kumar2258/ResumeTOJson/blob/55524ae27a043fbb994e6427cdeade5db1297309/resumeTOjson.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 69,
    "stars": 0
  },
  {
    "full_name": "hincky/gpt-api-wrapper",
    "name": "gpt-api-wrapper",
    "description": "封装openai，gpt3，gpt3.5，gpt4的api调用及支持上下文的对话接口",
    "html_url": [
      "https://github.com/hincky/gpt-api-wrapper/blob/8d78dd921cb8159512a0de7c2c7fceae90a8a08c/proxy.py",
      "https://github.com/hincky/gpt-api-wrapper/blob/8d78dd921cb8159512a0de7c2c7fceae90a8a08c/proxy_v2.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1003,
    "stars": 0
  },
  {
    "full_name": "aunell/automated-llm-eval",
    "name": "automated-llm-eval",
    "description": null,
    "html_url": [
      "https://github.com/aunell/automated-llm-eval/blob/58968a25b6d82fa35b2d1cbc0e87272ac6383cf9/automated_llm_eval/create_chat_completion.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 13361,
    "stars": 1
  },
  {
    "full_name": "whiletrue-industries/odds",
    "name": "odds",
    "description": "ckangpt",
    "html_url": [
      "https://github.com/whiletrue-industries/odds/blob/f833eef1afd23070eff8b4d08d4d43d38a8ca57d/odds/common/embedder/openai/openai_embedder.py",
      "https://github.com/whiletrue-industries/odds/blob/f833eef1afd23070eff8b4d08d4d43d38a8ca57d/odds/common/llm/openai/openai_llm_runner.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 40652,
    "stars": 1
  },
  {
    "full_name": "psshah/ai-llm",
    "name": "ai-llm",
    "description": "AI-LLM course and project",
    "html_url": [
      "https://github.com/psshah/ai-llm/blob/1b5b8ffb6001ba58d1b74bda0bdb2204e01528f8/app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 173,
    "stars": 0
  },
  {
    "full_name": "IgnacioChalub/llm-navweb-tesis",
    "name": "llm-navweb-tesis",
    "description": null,
    "html_url": [
      "https://github.com/IgnacioChalub/llm-navweb-tesis/blob/f6cafc1737c0488ab7f9ae016fab66529f4e2fa5/engine/speech/speech.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 9157,
    "stars": 0
  },
  {
    "full_name": "LaoWater/LLM-Create-Process-Train",
    "name": "LLM-Create-Process-Train",
    "description": "A deep journey into LLMs, exploring best path to fine-tune a model based on a long diary.",
    "html_url": [
      "https://github.com/LaoWater/LLM-Create-Process-Train/blob/3b41333e5020e5917d16036bf65dd77e17faf5ac/Trancendence_Versions/Current%20Version_4/Initial%20Data%20Preparing/preparing_data_v4_step8_Uploading&ReviewFile_OpenAI.py",
      "https://github.com/LaoWater/LLM-Create-Process-Train/blob/3b41333e5020e5917d16036bf65dd77e17faf5ac/Data%20Preparation,%20Cleaning%20&%20Processing/preparing_data_v3_step8_Uploading&ReviewFile_OpenAI.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 837683,
    "stars": 0
  },
  {
    "full_name": "SurjaHead/recipe-generator",
    "name": "recipe-generator",
    "description": "This app uses OpenAI's GPT-4 model to generate recipes based on the ingredients in the image you upload.",
    "html_url": [
      "https://github.com/SurjaHead/recipe-generator/blob/42805f91228d271064e35295883e80f3d33d27c9/app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "mic1on/chatGPT-web",
    "name": "chatGPT-web",
    "description": "chatGPT私有化部署",
    "html_url": [
      "https://github.com/mic1on/chatGPT-web/blob/432cccdd9d00e25ab6eb20a6202397b9b1f5c24f/api/api.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 6116,
    "stars": 709
  },
  {
    "full_name": "wuup/gpt4-chatbot",
    "name": "gpt4-chatbot",
    "description": "simple gpt-4 chatbot base with UI, configurable, in python",
    "html_url": [
      "https://github.com/wuup/gpt4-chatbot/blob/c06326be991ed3782e69b2dec751f3fd9c1d9266/app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 191,
    "stars": 12
  },
  {
    "full_name": "TorhamDev/GPT-profile-selector",
    "name": "GPT-profile-selector",
    "description": "let ChatGPT select a profile picture for you!",
    "html_url": [
      "https://github.com/TorhamDev/GPT-profile-selector/blob/d28600f4c832217c9c5951fae17f4d2dbc1a706f/gpt/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 495,
    "stars": 5
  },
  {
    "full_name": "Saik0s/AlfredGPT",
    "name": "AlfredGPT",
    "description": "Alfred workflow for generating completion using OpenAI Completion API",
    "html_url": [
      "https://github.com/Saik0s/AlfredGPT/blob/d43d808fa1a6576451e40d530b997ecc2473925b/alfred.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 430,
    "stars": 3
  },
  {
    "full_name": "anoopshrma/ChatGPT-with-Rasa",
    "name": "ChatGPT-with-Rasa",
    "description": "Contains boilerplate code to get started in Rasa",
    "html_url": [
      "https://github.com/anoopshrma/ChatGPT-with-Rasa/blob/dae9a1a0431bad362aa50688a6c1894c1270fae1/actions/actions.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 320,
    "stars": 5
  },
  {
    "full_name": "graylewis/GPT-AA",
    "name": "GPT-AA",
    "description": "GTP-AA (GTP-3 Academic Assistant) is an academic project and constraint/abstraction layer for doing machine-assisted open question grading through OpenAI's GPT-3 API.",
    "html_url": [
      "https://github.com/graylewis/GPT-AA/blob/e9faa4047be449733dd0540cae5101e538249051/index.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 450,
    "stars": 2
  },
  {
    "full_name": "javastarboy/WeChatGPT_JSB",
    "name": "WeChatGPT_JSB",
    "description": "本项目实现了【微信公众号对接OpenAI】，实现了 ChatGPT 聊天对话功能，仅需要手机与公众号聊天即可，其余的交给代码实现。 没有任何门槛。",
    "html_url": [
      "https://github.com/javastarboy/WeChatGPT_JSB/blob/6f2f21f6cdf3993cbffdc490316a8262df2dff31/settings.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "manav1411/OpenAI_Interfacer",
    "name": "OpenAI_Interfacer",
    "description": "A program that allows the user to interface with the gpt4 API intuitively.",
    "html_url": [
      "https://github.com/manav1411/OpenAI_Interfacer/blob/228ba3050b013e9c3a5692105b62b56b1576b2e0/gpt4.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 67,
    "stars": 0
  },
  {
    "full_name": "DoMo-98/chatBOT-GPT",
    "name": "chatBOT-GPT",
    "description": "This project is a Telegram chatbot that uses OpenAI language models, it's inspired by OpenAI's ChatGPT.",
    "html_url": [
      "https://github.com/DoMo-98/chatBOT-GPT/blob/f0dd53e04526b7d7d545c30f783f928f936a5e19/src/openai_api/gpt_request.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 354,
    "stars": 0
  },
  {
    "full_name": "seanpixel/do-anything-beta",
    "name": "do-anything-beta",
    "description": "Trying out gorilla-7B-GGML with a bit of prompt engineering",
    "html_url": [
      "https://github.com/seanpixel/do-anything-beta/blob/f5acc3fce8b65e24d4967802cf5fb0bd4a07c46a/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 42,
    "stars": 0
  },
  {
    "full_name": "moh-ariful/django-chatbot",
    "name": "django-chatbot",
    "description": "Buiding Chatbot aplication using Django and OpenAI",
    "html_url": [
      "https://github.com/moh-ariful/django-chatbot/blob/b5a88de369ff9e4b0f86509cfc589db65f735b43/landingpage/views.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 193,
    "stars": 2
  },
  {
    "full_name": "thequantumquirk/marp-shot-llm",
    "name": "marp-shot-llm",
    "description": null,
    "html_url": [
      "https://github.com/thequantumquirk/marp-shot-llm/blob/8cc2d7b21ed27c86a50735342c9002b624e474cf/examples/inference/api_server_langchain/query_langchain_sdk.py",
      "https://github.com/thequantumquirk/marp-shot-llm/blob/8cc2d7b21ed27c86a50735342c9002b624e474cf/examples/inference/api_server_openai/query_openai_sdk.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 21194,
    "stars": 0
  },
  {
    "full_name": "officialkrunalkumar/011-ChurnGPT-2.0",
    "name": "011-ChurnGPT-2.0",
    "description": "This is an advanced version of our previous Churn Analysis ChurnGPT 1.0 and 1.5.",
    "html_url": [
      "https://github.com/officialkrunalkumar/011-ChurnGPT-2.0/blob/f10510bad1f20ae3448775713aa3ae097fbffaa6/6%20Generate%20Summary.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 367,
    "stars": 0
  },
  {
    "full_name": "raceee/llm_analyst",
    "name": "llm_analyst",
    "description": null,
    "html_url": [
      "https://github.com/raceee/llm_analyst/blob/ee71cea9796122ca23f3517d0ccd2efbc4130cb1/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 124,
    "stars": 0
  },
  {
    "full_name": "rutajit-staystylist/LLM-trial",
    "name": "LLM-trial",
    "description": null,
    "html_url": [
      "https://github.com/rutajit-staystylist/LLM-trial/blob/552e071d0c4caea9eae50ae48597a2a50f4a58b5/app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 71,
    "stars": 0
  },
  {
    "full_name": "PixelNoob/ai-twitter",
    "name": "ai-twitter",
    "description": "Automate twitter tweets with openAI",
    "html_url": [
      "https://github.com/PixelNoob/ai-twitter/blob/fb650b0d8979e7ba3d3bef5cb77341fa6abfe7ec/app.py",
      "https://github.com/PixelNoob/ai-twitter/blob/fb650b0d8979e7ba3d3bef5cb77341fa6abfe7ec/app3.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 214,
    "stars": 0
  },
  {
    "full_name": "ziutus/ai_assistant_lenie_server",
    "name": "ai_assistant_lenie_server",
    "description": "Lenie is small AI assistent which help search of private links, copies of pages and transcriptions of youtube movies using LLM and embeddings search. This is server part.",
    "html_url": [
      "https://github.com/ziutus/ai_assistant_lenie_server/blob/3095380a1b377652f6a7e2b5cfd19d0727b9f48a/ai_dev3/tydzien2_3_image_generation.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 39695,
    "stars": 0
  },
  {
    "full_name": "amauri-giovani/openai-fine-tuning",
    "name": "openai-fine-tuning",
    "description": null,
    "html_url": [
      "https://github.com/amauri-giovani/openai-fine-tuning/blob/c6f6777397f12434bc35ec2f64ca22b559f1fe66/fine-tuning/finetune.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3479,
    "stars": 0
  },
  {
    "full_name": "LucasHJin/ConvoAI",
    "name": "ConvoAI",
    "description": "Speech processing model for digital platforms using AI",
    "html_url": [
      "https://github.com/LucasHJin/ConvoAI/blob/259eaaf2dc8dc5ba9ccccfa254cd0970495b7362/audio_capture/image_analysis.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 440452,
    "stars": 3
  },
  {
    "full_name": "mattjh1/gRAG",
    "name": "gRAG",
    "description": "Graph gen ETL and RAG api",
    "html_url": [
      "https://github.com/mattjh1/gRAG/blob/a55c6b96a138a80c3f30825152c52275e2401b70/tests/conftest.py",
      "https://github.com/mattjh1/gRAG/blob/a55c6b96a138a80c3f30825152c52275e2401b70/src/app/core/config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 16216,
    "stars": 2
  },
  {
    "full_name": "rohit-rptless/uni",
    "name": "uni",
    "description": "Uniform interface to make a LLM call with over various different models",
    "html_url": [
      "https://github.com/rohit-rptless/uni/blob/be640e47b56f1aa21549616556200cc5f0ee9c54/tests/test_wrapper.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 102,
    "stars": 0
  },
  {
    "full_name": "yingshang/lanuage-talk-listen",
    "name": "lanuage-talk-listen",
    "description": "用飞书、微信、钉钉+chatgpt来锻炼英语口语和听力能力，利用openai的生成文本功能生成具体英语对话场景",
    "html_url": [
      "https://github.com/yingshang/lanuage-talk-listen/blob/27f01c2bfc8404bad6a96a6e59a2b4dac1ae151c/core/openai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2240,
    "stars": 84
  },
  {
    "full_name": "usail-hkust/JailTrickBench",
    "name": "JailTrickBench",
    "description": "Bag of Tricks: Benchmarking of Jailbreak Attacks on LLMs. Empirical tricks for LLM Jailbreaking. (NeurIPS 2024)",
    "html_url": [
      "https://github.com/usail-hkust/JailTrickBench/blob/f56ba765f8ec465f25c01d41a86c77070bbd5e8c/baseline/DrAttack/drattack/utils/sentence_tokenizer.py",
      "https://github.com/usail-hkust/JailTrickBench/blob/f56ba765f8ec465f25c01d41a86c77070bbd5e8c/baseline/TAP/language_models.py",
      "https://github.com/usail-hkust/JailTrickBench/blob/f56ba765f8ec465f25c01d41a86c77070bbd5e8c/baseline/DrAttack/gpt_automation/gpt_generate_content.py",
      "https://github.com/usail-hkust/JailTrickBench/blob/f56ba765f8ec465f25c01d41a86c77070bbd5e8c/baseline/GPTFuzz/gptfuzzer/llm/llm.py",
      "https://github.com/usail-hkust/JailTrickBench/blob/f56ba765f8ec465f25c01d41a86c77070bbd5e8c/baseline/AutoDAN/utils/opt_utils.py",
      "https://github.com/usail-hkust/JailTrickBench/blob/f56ba765f8ec465f25c01d41a86c77070bbd5e8c/FastChat/fastchat/serve/api_provider.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 238507,
    "stars": 137
  },
  {
    "full_name": "cnsdqd-dyb/VillagerAgent-Minecraft-multiagent-framework",
    "name": "VillagerAgent-Minecraft-multiagent-framework",
    "description": "(VillagerAgent ACL 2024) A Graph based Minecraft multi agents framework",
    "html_url": [
      "https://github.com/cnsdqd-dyb/VillagerAgent-Minecraft-multiagent-framework/blob/bbc7eeadaf86c5b5991a0f962aad9f476d72bf04/tiny_start.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4271497,
    "stars": 65
  },
  {
    "full_name": "AlexandreSajus/Taipy-GPT4-Demo",
    "name": "Taipy-GPT4-Demo",
    "description": "GPT-4 Chat Web App created in 80 lines of Python using Taipy",
    "html_url": [
      "https://github.com/AlexandreSajus/Taipy-GPT4-Demo/blob/3a2ce29ef29f59c6a727b11ae7f27e6992437fb0/app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 86,
    "stars": 2
  },
  {
    "full_name": "ReneNorth/bi-llm",
    "name": "bi-llm",
    "description": "A tiny experiment to test LLM's usage for data exploration for a Tableau dashboard ",
    "html_url": [
      "https://github.com/ReneNorth/bi-llm/blob/1b9411b07d4db8ea2cd2f7df425965509aeb21fe/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 154,
    "stars": 3
  },
  {
    "full_name": "Jay-Madden/aeris",
    "name": "aeris",
    "description": "Aeris (Autonomous Engine for Real-time Intelligent Support) a lightweight framework for building LLM integrated assistants",
    "html_url": [
      "https://github.com/Jay-Madden/aeris/blob/1b223695bb739fa60e167fb3676e702983fe6767/llm/openai/client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 767,
    "stars": 5
  },
  {
    "full_name": "jalbrekt85/CL-EA-OpenAI",
    "name": "CL-EA-OpenAI",
    "description": "Chainlink external adapter for OpenAI API",
    "html_url": [
      "https://github.com/jalbrekt85/CL-EA-OpenAI/blob/34fe9aecc454eae9e6a72cfb9a093867ed8e4cfe/adapter.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 238,
    "stars": 2
  },
  {
    "full_name": "hitthecodelabs/NordicTranslator-GPT-PALM",
    "name": "NordicTranslator-GPT-PALM",
    "description": "Translating article titles and descriptions from English to Norwegian using ChatGPT and PALM APIs",
    "html_url": [
      "https://github.com/hitthecodelabs/NordicTranslator-GPT-PALM/blob/76103142d78fe1f5d73e5441a2673583041697d0/token_usage_tracker.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 9718,
    "stars": 2
  },
  {
    "full_name": "fangkun119/llm_lab",
    "name": "llm_lab",
    "description": null,
    "html_url": [
      "https://github.com/fangkun119/llm_lab/blob/5aa0f29ab2650c883137ffb4d01052fa7485f8dc/lib/config/llm_vendor.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3496,
    "stars": 0
  },
  {
    "full_name": "SamLee-dedeboy/Awesum",
    "name": "Awesum",
    "description": "open-source repository for 2024 VIS paper: Towards Dataset-scale and Feature-oriented Evaluation of Large Language Model Prompts.",
    "html_url": [
      "https://github.com/SamLee-dedeboy/Awesum/blob/d3ad800f1eb0c5879d74a6e384bd80c8c846b827/preprocess/data/embed_likert/embed_likert.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 47092,
    "stars": 5
  },
  {
    "full_name": "GautamSharda/AgentGPT-LLM-Tools",
    "name": "AgentGPT-LLM-Tools",
    "description": null,
    "html_url": [
      "https://github.com/GautamSharda/AgentGPT-LLM-Tools/blob/eeab8d6248bcb6358e6951cbdaee4c5faef2bb0d/platform/reworkd_platform/settings.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 56333,
    "stars": 1
  },
  {
    "full_name": "rockroman/rag_ai_v2",
    "name": "rag_ai_v2",
    "description": null,
    "html_url": [
      "https://github.com/rockroman/rag_ai_v2/blob/79fb0c8d542bbb0938cf2a101fb6bc0b7b37a82c/openai_helper.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 323,
    "stars": 0
  },
  {
    "full_name": "cutemiya/gpt-service",
    "name": "gpt-service",
    "description": "gpt-service for hackaton",
    "html_url": [
      "https://github.com/cutemiya/gpt-service/blob/5f545d7a1bdcb8802e6e580d806e84447547ceb9/g4f/Provider/ChatForAi.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4300,
    "stars": 1
  },
  {
    "full_name": "skitsanos/llm-chatbot",
    "name": "llm-chatbot",
    "description": "Various examples on implementing Chat UI with multiple LLMs",
    "html_url": [
      "https://github.com/skitsanos/llm-chatbot/blob/7f8d78747838e75854b1da5b2bcf37987e0f56e6/chat_utils/llm.py",
      "https://github.com/skitsanos/llm-chatbot/blob/7f8d78747838e75854b1da5b2bcf37987e0f56e6/chat_utils/core.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 819,
    "stars": 1
  },
  {
    "full_name": "CryptoLordSheogorath/gpt4discord",
    "name": "gpt4discord",
    "description": "Simple python for anyone running GPT4ALL or using OpenAI APIs to connect their model to discord and have a chat. ",
    "html_url": [
      "https://github.com/CryptoLordSheogorath/gpt4discord/blob/06436ec63ecfedc4c8503a85d1075f6b59abfad6/aibot.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 106,
    "stars": 0
  },
  {
    "full_name": "faranak-cs/AI_Hackathon_challange_RAG",
    "name": "AI_Hackathon_challange_RAG",
    "description": "Project submitted in National AI Challenge 2024",
    "html_url": [
      "https://github.com/faranak-cs/AI_Hackathon_challange_RAG/blob/483f79a628586cbf89f7d26810ce2ac77781a62d/openai_helper.py",
      "https://github.com/faranak-cs/AI_Hackathon_challange_RAG/blob/483f79a628586cbf89f7d26810ce2ac77781a62d/pdf_ai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 274,
    "stars": 0
  },
  {
    "full_name": "rostya-codes/openai-api-tgbot",
    "name": "openai-api-tgbot",
    "description": "🔰 OpenAI API Telegram chat bot. Libs: aiogram3.",
    "html_url": [
      "https://github.com/rostya-codes/openai-api-tgbot/blob/5406f18885144260f033d7385caf00f289e25ad3/app/generators.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 336,
    "stars": 1
  },
  {
    "full_name": "Elizabeth819/GPT4Video-cobra-auto",
    "name": "GPT4Video-cobra-auto",
    "description": "Cobra-auto is a local application using GPT-4o to analyze video for autonomous driving scenerios, including sequential actions",
    "html_url": [
      "https://github.com/Elizabeth819/GPT4Video-cobra-auto/blob/e442caf76f3b1014d540782c63e0997432d80b61/ActionSummary-predict_explain-fsl-sys-Cn-cutin.py",
      "https://github.com/Elizabeth819/GPT4Video-cobra-auto/blob/e442caf76f3b1014d540782c63e0997432d80b61/Credits.py",
      "https://github.com/Elizabeth819/GPT4Video-cobra-auto/blob/e442caf76f3b1014d540782c63e0997432d80b61/VO.py",
      "https://github.com/Elizabeth819/GPT4Video-cobra-auto/blob/e442caf76f3b1014d540782c63e0997432d80b61/ChapterAnalyzer.py",
      "https://github.com/Elizabeth819/GPT4Video-cobra-auto/blob/e442caf76f3b1014d540782c63e0997432d80b61/ChapterAnalyzer-zh.py",
      "https://github.com/Elizabeth819/GPT4Video-cobra-auto/blob/e442caf76f3b1014d540782c63e0997432d80b61/ActionSummary.py",
      "https://github.com/Elizabeth819/GPT4Video-cobra-auto/blob/e442caf76f3b1014d540782c63e0997432d80b61/ActionSummary-predict_explain-fsl-sys-Cn-overtaking.py",
      "https://github.com/Elizabeth819/GPT4Video-cobra-auto/blob/e442caf76f3b1014d540782c63e0997432d80b61/webui-complex.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 15033,
    "stars": 2
  },
  {
    "full_name": "bdekraker/WebcamGPT-Vision",
    "name": "WebcamGPT-Vision",
    "description": "Lightweight GPT-4 Vision processing over the Webcam",
    "html_url": [
      "https://github.com/bdekraker/WebcamGPT-Vision/blob/81b5a9de6161c9ee8faf0c895e27cbbba0e367b6/python-version/process_image.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 603,
    "stars": 284
  },
  {
    "full_name": "krypted/Lightweight-GPT-Log-Anomaly-Detector",
    "name": "Lightweight-GPT-Log-Anomaly-Detector",
    "description": "Python-based anomaly detector that uses the ChatGPT API to look for anomalies in untrained and lightly trained troves of macOS system logs",
    "html_url": [
      "https://github.com/krypted/Lightweight-GPT-Log-Anomaly-Detector/blob/2f8d1fbf210d699ddb83a9e825898bf33fff49a5/gpt.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 921,
    "stars": 20
  },
  {
    "full_name": "vtuber-plan/langport",
    "name": "langport",
    "description": "Langport is a language model inference service",
    "html_url": [
      "https://github.com/vtuber-plan/langport/blob/f8d4b6c11a1bafae8601f11b0f5acb4470b3feb6/langport/service/server/chatgpt_generation_worker.py",
      "https://github.com/vtuber-plan/langport/blob/f8d4b6c11a1bafae8601f11b0f5acb4470b3feb6/langport/utils/__init__.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 7137,
    "stars": 94
  },
  {
    "full_name": "mattlgroff/pdf-to-markdown",
    "name": "pdf-to-markdown",
    "description": "Using GPT-4 Vision and GPT-4 Turbo, take a PDF as input and get a markdown file as output.",
    "html_url": [
      "https://github.com/mattlgroff/pdf-to-markdown/blob/6de01840b283be038a3c9bb16f31b5d37b483cae/image_to_markdown.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 593,
    "stars": 95
  },
  {
    "full_name": "M0gician/RaccoonBench",
    "name": "RaccoonBench",
    "description": "[ACL 2024] Raccoon: Prompt Extraction Benchmark of LLM-Integrated Applications",
    "html_url": [
      "https://github.com/M0gician/RaccoonBench/blob/cf87b226c54d8d6c9278e6ef31d261299ef948cc/Raccoon/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1958,
    "stars": 12
  },
  {
    "full_name": "ScorchChamp/replicate-GPT",
    "name": "replicate-GPT",
    "description": "Replicate any image using Dall-E 3 and GPT-Vision!",
    "html_url": [
      "https://github.com/ScorchChamp/replicate-GPT/blob/eea2ea5695abd1574b049f1e1870a18c43660bdf/run.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 104,
    "stars": 6
  },
  {
    "full_name": "OmniSpective/OmniBridge",
    "name": "OmniBridge",
    "description": "Access different AI models in a one place",
    "html_url": [
      "https://github.com/OmniSpective/OmniBridge/blob/5732e07c2fb90ad60c196aab047877c5936bc457/omnibridge/wrappers/wrapper_instances/gpt_wrapper.py",
      "https://github.com/OmniSpective/OmniBridge/blob/5732e07c2fb90ad60c196aab047877c5936bc457/omnibridge/wrappers/wrapper_instances/dalle_wrapper.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1924,
    "stars": 22
  },
  {
    "full_name": "SamPink/Visionary-Assistant",
    "name": "Visionary-Assistant",
    "description": "Visionary Assistant is an innovative tool that captures your screen, analyzes the content using OpenAI's advanced GPT-4 model, and provides auditory feedback on what it sees. This project is perfect for users who want to leverage AI for real-time screen analysis and auditory response.",
    "html_url": [
      "https://github.com/SamPink/Visionary-Assistant/blob/bac0829592cd9becbfbe513ee8c2934ef6a53864/talk.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 124,
    "stars": 1
  },
  {
    "full_name": "awongh/chain_llm",
    "name": "chain_llm",
    "description": "LLM Chaining Library",
    "html_url": [
      "https://github.com/awongh/chain_llm/blob/38f7526397d2cd0172fdd97b05055ec4b7cead8d/chain_llm/llm_generation.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 127,
    "stars": 0
  },
  {
    "full_name": "snatarajan8/gpt4-is-a-software-engineer",
    "name": "gpt4-is-a-software-engineer",
    "description": "This is a repository that contains code exclusively written by GPT-4",
    "html_url": [
      "https://github.com/snatarajan8/gpt4-is-a-software-engineer/blob/ab06c195dce4f7a47ad7db1d875210031357e048/ask-gpt.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 8295,
    "stars": 1
  },
  {
    "full_name": "fansyangz/ChemRAG",
    "name": "ChemRAG",
    "description": null,
    "html_url": [
      "https://github.com/fansyangz/ChemRAG/blob/1103f5dec5f94dbe0b7626f231ecd4b848013d53/tuning/GPT4_FT.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 120643,
    "stars": 0
  },
  {
    "full_name": "xycertbsi/Aphonia-AI-v2",
    "name": "Aphonia-AI-v2",
    "description": "Egy moduláris AI ami az OpenAI-al müködik!",
    "html_url": [
      "https://github.com/xycertbsi/Aphonia-AI-v2/blob/f9b6457168b3a1e712d74e2b8f3a6d6197fa9579/textmodel_gpt3.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 488,
    "stars": 0
  },
  {
    "full_name": "box-8/box-7-rag",
    "name": "box-7-rag",
    "description": null,
    "html_url": [
      "https://github.com/box-8/box-7-rag/blob/2a7186715f25332c41c1664d3f8a37c57befe970/utils/box-vision.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 107,
    "stars": 0
  },
  {
    "full_name": "zazikant/LagchainCodes",
    "name": "LagchainCodes",
    "description": "Repo of all my langchain codes",
    "html_url": [
      "https://github.com/zazikant/LagchainCodes/blob/04baee929c90c5acb3e2a0d895549576105e1194/pandasai_GPT.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1772,
    "stars": 1
  },
  {
    "full_name": "logicalroot/gpt-4v-demos",
    "name": "gpt-4v-demos",
    "description": "🤖 GPT-4V Demos • Test the model's vision capabilities in your browser using Streamlit • Easy setup",
    "html_url": [
      "https://github.com/logicalroot/gpt-4v-demos/blob/b519b15eb17d51e5be394ae764bf7ca838e0fefc/pages/2_%F0%9F%A7%BE_OCR.py",
      "https://github.com/logicalroot/gpt-4v-demos/blob/b519b15eb17d51e5be394ae764bf7ca838e0fefc/pages/0_%F0%9F%93%B7_Camera.py",
      "https://github.com/logicalroot/gpt-4v-demos/blob/b519b15eb17d51e5be394ae764bf7ca838e0fefc/pages/1_%F0%9F%91%95_Product_Descriptions.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 657,
    "stars": 18
  },
  {
    "full_name": "ninekirin/LLMHomework",
    "name": "LLMHomework",
    "description": "LLM Homework, a platform for teachers and students to properly use large language models for homework and assignments.",
    "html_url": [
      "https://github.com/ninekirin/LLMHomework/blob/a03b3cea0d764ff5fb13830db0c66df335de37ad/backend/core/config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 11533,
    "stars": 1
  },
  {
    "full_name": "jmilldotdev/llm-providers",
    "name": "llm-providers",
    "description": "Minimal-dependency common interface for REST API providers of Large Language Models. ",
    "html_url": [
      "https://github.com/jmilldotdev/llm-providers/blob/93f37d57bd172e085d3ec6a89ba06f04614fab56/llm_providers/openai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 429,
    "stars": 2
  },
  {
    "full_name": "jay-bird777/Image_description",
    "name": "Image_description",
    "description": "A bot that describes what is in the picture using python and OpenAI",
    "html_url": [
      "https://github.com/jay-bird777/Image_description/blob/578590b5835e039f8e93a3acb840f0d498166ec6/hgp-vision/vision.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 58,
    "stars": 0
  },
  {
    "full_name": "SproutNan/LLM_ConceptFinder",
    "name": "LLM_ConceptFinder",
    "description": "Find any concept in LLMs through CAVs",
    "html_url": [
      "https://github.com/SproutNan/LLM_ConceptFinder/blob/d8fcc5228908e2eca0f50852c97308d26ed3abfe/gpt_api.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 881,
    "stars": 0
  },
  {
    "full_name": "luisgradossalinas/aws-openai-dalle-public",
    "name": "aws-openai-dalle-public",
    "description": null,
    "html_url": [
      "https://github.com/luisgradossalinas/aws-openai-dalle-public/blob/566e662e6b1e82b724b111a6adf249c5cfaad583/lambda/openai/__init__.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 64244,
    "stars": 21
  },
  {
    "full_name": "abhishekkale320/Create-a-conversational-PDF-chatbot-using-Open-AI-Open-Source-LLM-APIs-and-FastAPI1",
    "name": "Create-a-conversational-PDF-chatbot-using-Open-AI-Open-Source-LLM-APIs-and-FastAPI1",
    "description": null,
    "html_url": [
      "https://github.com/abhishekkale320/Create-a-conversational-PDF-chatbot-using-Open-AI-Open-Source-LLM-APIs-and-FastAPI1/blob/08070af7ed9c3e0e95d93327bc2709031a5dce1f/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 70,
    "stars": 0
  },
  {
    "full_name": "fujitatomoya/ros2ai",
    "name": "ros2ai",
    "description": "ros2ai is a next-generation ROS 2 command line interface extension with LLMs",
    "html_url": [
      "https://github.com/fujitatomoya/ros2ai/blob/bd611349250a8b0717dd44f2182316e421697519/ros2ai/api/constants.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1757,
    "stars": 256
  },
  {
    "full_name": "antgroup/agentUniverse",
    "name": "agentUniverse",
    "description": "agentUniverse is a LLM multi-agent framework that allows developers to easily build multi-agent applications. ",
    "html_url": [
      "https://github.com/antgroup/agentUniverse/blob/ed8f55b52b65f8da539f87593e5448258658038a/agentuniverse/llm/default/baichuan_openai_style_llm.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 46406,
    "stars": 1482
  },
  {
    "full_name": "sharonzhou/long_stable_diffusion",
    "name": "long_stable_diffusion",
    "description": "Long-form text-to-images generation, using a pipeline of deep generative models (GPT-3 and Stable Diffusion)",
    "html_url": [
      "https://github.com/sharonzhou/long_stable_diffusion/blob/bfa1fd8b88c60b445dc9ebc586093d9753ef0d73/stable_diffusion.py",
      "https://github.com/sharonzhou/long_stable_diffusion/blob/bfa1fd8b88c60b445dc9ebc586093d9753ef0d73/run.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 648,
    "stars": 689
  },
  {
    "full_name": "YangLing0818/SuperCorrect-llm",
    "name": "SuperCorrect-llm",
    "description": "SuperCorrect: Supervising and Correcting Language Models with Error-Driven Insights",
    "html_url": [
      "https://github.com/YangLing0818/SuperCorrect-llm/blob/f0a71f5808310e7db84d799038a01fdd8499d983/llm_evaluation.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 14419,
    "stars": 71
  },
  {
    "full_name": "ytyz1307zzh/RefAug",
    "name": "RefAug",
    "description": "Code for EMNLP 2024 paper \"Learn Beyond The Answer: Training Language Models with Reflection for Mathematical Reasoning\"",
    "html_url": [
      "https://github.com/ytyz1307zzh/RefAug/blob/05739a720d2c9f9451d610e72429eb2a1c5535fa/src/utils/gpt_utils.py",
      "https://github.com/ytyz1307zzh/RefAug/blob/05739a720d2c9f9451d610e72429eb2a1c5535fa/src/evaluate/error_analysis.py",
      "https://github.com/ytyz1307zzh/RefAug/blob/05739a720d2c9f9451d610e72429eb2a1c5535fa/src/evaluate/gpt_extract_answer.py",
      "https://github.com/ytyz1307zzh/RefAug/blob/05739a720d2c9f9451d610e72429eb2a1c5535fa/src/evaluate/mint/eval_mint.py",
      "https://github.com/ytyz1307zzh/RefAug/blob/05739a720d2c9f9451d610e72429eb2a1c5535fa/src/utils/openai_parallel_request.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 939484,
    "stars": 54
  },
  {
    "full_name": "ksgr5566/AutoTuneNLP",
    "name": "AutoTuneNLP",
    "description": "A comprehensive toolkit for seamless data generation and fine-tuning of NLP models, all conveniently packed into a single block.",
    "html_url": [
      "https://github.com/ksgr5566/AutoTuneNLP/blob/82a4f60f4942b6d4329b60cc4a5991b381adcfbd/utils/data.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 521,
    "stars": 3
  },
  {
    "full_name": "archibate/gpt4o",
    "name": "gpt4o",
    "description": "Blazing fast 🚀 code assistant in NeoVim powered by GPT-4o ✨, offering intelligent code completion and editing to elevate developer productivity.",
    "html_url": [
      "https://github.com/archibate/gpt4o/blob/6a10f2694dd347357f1d5e725e08fb65c4c2b658/rplugin/python3/gpt4o/resources.py",
      "https://github.com/archibate/gpt4o/blob/6a10f2694dd347357f1d5e725e08fb65c4c2b658/rplugin/python3/gpt4o/chat_provider.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1958,
    "stars": 4
  },
  {
    "full_name": "syuchua/chatapi",
    "name": "chatapi",
    "description": "一个基于openai apikey与chatgpt对话的简易实现",
    "html_url": [
      "https://github.com/syuchua/chatapi/blob/c1b42a1fad9b63c53b171d6ad19597ec9400fe47/api.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 258,
    "stars": 1
  },
  {
    "full_name": "alfa2beta3/Voice-GPT",
    "name": "Voice-GPT",
    "description": "An app that is using GPT3.5 API and text to voice converter - Developed during OpenAI Hackathon",
    "html_url": [
      "https://github.com/alfa2beta3/Voice-GPT/blob/222473de280b69095de733e133888b124a364c4a/server/server.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3593,
    "stars": 0
  },
  {
    "full_name": "Anish6964/ai-webcam",
    "name": "ai-webcam",
    "description": "This project captures an image from a webcam stream, analyzes it using OpenAI GPT-4, and reads out a description of the image. The description is limited to 25 words or 150 characters.",
    "html_url": [
      "https://github.com/Anish6964/ai-webcam/blob/74cae39e3baab0eae566ecc403cd5368517d9490/camera.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 98,
    "stars": 1
  },
  {
    "full_name": "cmagganas/christos-rag-agent",
    "name": "christos-rag-agent",
    "description": "a RAG agent that answers questions about a job applicant's qualifications and fitness to a specific position, using llm frameworks to provide context and reference answers",
    "html_url": [
      "https://github.com/cmagganas/christos-rag-agent/blob/1ce2082bdc26b00396ea0b4a7009d07d4b6a2ca8/app/app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4236,
    "stars": 0
  },
  {
    "full_name": "estevaofon/transcribe-image",
    "name": "transcribe-image",
    "description": "Transcribe images using openai",
    "html_url": [
      "https://github.com/estevaofon/transcribe-image/blob/b5dac52051e4c2ca05314f91e75dedc42cf7a142/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 69,
    "stars": 0
  },
  {
    "full_name": "CeHao-NUS/LLM_correction",
    "name": "LLM_correction",
    "description": null,
    "html_url": [
      "https://github.com/CeHao-NUS/LLM_correction/blob/c6aec90d74bf15c687db709a5c3a01be113c3cd7/src/llm/openai/completor_vision.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 902,
    "stars": 0
  },
  {
    "full_name": "bnabis93/vision-language-examples",
    "name": "vision-language-examples",
    "description": "Vision-lanugage model example code.",
    "html_url": [
      "https://github.com/bnabis93/vision-language-examples/blob/40367f3c1d8342c91001621facbdc9de9cdc8c20/embedding/00-openai-text-embedding/embedding.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 7152,
    "stars": 9
  },
  {
    "full_name": "Skoumann/TinyChat",
    "name": "TinyChat",
    "description": "TinyChat is a discord bot for ChatGPT",
    "html_url": [
      "https://github.com/Skoumann/TinyChat/blob/d1b9abfd5ececf605ce30ca90d8cbefc0d863476/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 90,
    "stars": 0
  },
  {
    "full_name": "bibinkunjumon2020/chatbot-example-langchain-llama-index",
    "name": "chatbot-example-langchain-llama-index",
    "description": "For querying your docs,sending memory,using chat interaction",
    "html_url": [
      "https://github.com/bibinkunjumon2020/chatbot-example-langchain-llama-index/blob/08f1718e306c3d5544e0fe5864784edebe60160a/main3(query).py",
      "https://github.com/bibinkunjumon2020/chatbot-example-langchain-llama-index/blob/08f1718e306c3d5544e0fe5864784edebe60160a/main3_working.py",
      "https://github.com/bibinkunjumon2020/chatbot-example-langchain-llama-index/blob/08f1718e306c3d5544e0fe5864784edebe60160a/main4.py",
      "https://github.com/bibinkunjumon2020/chatbot-example-langchain-llama-index/blob/08f1718e306c3d5544e0fe5864784edebe60160a/main_14_09_23.py",
      "https://github.com/bibinkunjumon2020/chatbot-example-langchain-llama-index/blob/08f1718e306c3d5544e0fe5864784edebe60160a/main_21_sep.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1451,
    "stars": 1
  },
  {
    "full_name": "arnenoori/receipts-full-stack",
    "name": "receipts-full-stack",
    "description": "next.js & typescript gpt-v vision receipts tracker",
    "html_url": [
      "https://github.com/arnenoori/receipts-full-stack/blob/f7e9a69cdbfdda258b30789a90571ff674901d38/backend-old/src/api/receipt_processing.py",
      "https://github.com/arnenoori/receipts-full-stack/blob/f7e9a69cdbfdda258b30789a90571ff674901d38/backend-old/testing/receipt_processing_tests.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 35531,
    "stars": 0
  },
  {
    "full_name": "Onelevenvy/flock",
    "name": "flock",
    "description": "Flock is a workflow-based low-code platform for rapidly building chatbots, RAG, and coordinating multi-agent teams.（Flock 是一个基于workflow工作流的低代码平台，用于快速构建聊天机器人、RAG、Agent和Muti-Agent应用。）",
    "html_url": [
      "https://github.com/Onelevenvy/flock/blob/ffb751c8775c8bb85da0045dbf8637574e59c0b3/backend/app/core/model_providers/openai/config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 87767,
    "stars": 875
  },
  {
    "full_name": "panxingfeng/agent_chat_wechat",
    "name": "agent_chat_wechat",
    "description": "使用langchain/Ollama开发智能体agent聊天机器人框架，基于VChat框架支持微信的群聊和个人用户聊天，实现飞书机器人的接入，也可接入使用react进行前端UI(支持二次开发)开发框架的AI支持。",
    "html_url": [
      "https://github.com/panxingfeng/agent_chat_wechat/blob/cdf55abf082fb0a4fe6447a574c605614ec7315c/config/config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2777,
    "stars": 65
  },
  {
    "full_name": "vocodedev/vocode-core",
    "name": "vocode-core",
    "description": "🤖 Build voice-based LLM agents. Modular + open source.",
    "html_url": [
      "https://github.com/vocodedev/vocode-core/blob/e054c33a72787b6a4920f91eb8598ad0bafb4240/tests/conftest.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 28169,
    "stars": 3345
  },
  {
    "full_name": "libraryofcelsus/Aetherius_AI_Assistant",
    "name": "Aetherius_AI_Assistant",
    "description": "A completely private, locally-operated Ai Assistant/Chatbot/Sub-Agent Framework with realistic Long Term Memory and thought formation using Open Source LLMs. Qdrant is used for the Vector DB.",
    "html_url": [
      "https://github.com/libraryofcelsus/Aetherius_AI_Assistant/blob/e53e68691db41ce9414d5a0fd2c46648e3a203b2/Aetherius_API/Tools/AetherNode/eyes.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 27840,
    "stars": 295
  },
  {
    "full_name": "ADT109119/ChatPDF-LineBot",
    "name": "ChatPDF-LineBot",
    "description": "使用LnagChain+FastAPI+Vue，搭建一個可以上傳並讀取PDF回答問題的LineBot。",
    "html_url": [
      "https://github.com/ADT109119/ChatPDF-LineBot/blob/25594ee1964c3492e6ee3df1047b82b4de7fe16a/Model/Setting.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 24814,
    "stars": 14
  },
  {
    "full_name": "gargmegham/ResearchGPT",
    "name": "ResearchGPT",
    "description": "👩🏻‍🔬 ResearchGPT - OpenAI wrapper with document reading capabilities, made with Svelte and FastAPI. [NEEDS MAINTENANCE]",
    "html_url": [
      "https://github.com/gargmegham/ResearchGPT/blob/84208c0a874c5e87f9ae5c209edabb5a72c6c0af/server/database/dataclasses.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 10584,
    "stars": 16
  },
  {
    "full_name": "emooreatx/autogen_skills",
    "name": "autogen_skills",
    "description": "python skills for autogen",
    "html_url": [
      "https://github.com/emooreatx/autogen_skills/blob/9b8979fd5e809023a5e3d64772317a1d79850b9c/multimodal_vision_describe.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 332,
    "stars": 29
  },
  {
    "full_name": "johanteekens/llamaindex_oracle_views",
    "name": "llamaindex_oracle_views",
    "description": "enable views & sub sql for oracle",
    "html_url": [
      "https://github.com/johanteekens/llamaindex_oracle_views/blob/e2930f84329401ef6471ff3ad82e30be1f3836c5/llama_index/multi_modal_llms/openai_utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 985306,
    "stars": 0
  },
  {
    "full_name": "psykopotatis/openai-scripts",
    "name": "openai-scripts",
    "description": "Open AI scripts",
    "html_url": [
      "https://github.com/psykopotatis/openai-scripts/blob/afcfb3be045fadf747c96ce872dc9e7736e1b5dc/transcribe_swe.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 133,
    "stars": 0
  },
  {
    "full_name": "kritarth-mishra-1234/LLMS_AND_RAG_PIPELINE",
    "name": "LLMS_AND_RAG_PIPELINE",
    "description": "Multiple_AI_LLM_based_content",
    "html_url": [
      "https://github.com/kritarth-mishra-1234/LLMS_AND_RAG_PIPELINE/blob/ecf01a9edc45442555c4b7a5382bb60fe3bc5791/llmapis/text_to_text.py",
      "https://github.com/kritarth-mishra-1234/LLMS_AND_RAG_PIPELINE/blob/ecf01a9edc45442555c4b7a5382bb60fe3bc5791/llmapis/text_to_speech.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 20577,
    "stars": 0
  },
  {
    "full_name": "kaijie0102/ncs-llm-sensor-analysis",
    "name": "ncs-llm-sensor-analysis",
    "description": null,
    "html_url": [
      "https://github.com/kaijie0102/ncs-llm-sensor-analysis/blob/6a9c55abeda4467641fa1def4da1aaac426cecb2/conext/env_openai_api.py",
      "https://github.com/kaijie0102/ncs-llm-sensor-analysis/blob/6a9c55abeda4467641fa1def4da1aaac426cecb2/fine_tuning/test_finetuning.py",
      "https://github.com/kaijie0102/ncs-llm-sensor-analysis/blob/6a9c55abeda4467641fa1def4da1aaac426cecb2/fine_tuning/vibration_e2e_finetuned_model.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 995,
    "stars": 1
  },
  {
    "full_name": "gomezlavin/Codepath-LLM-Pre-work",
    "name": "Codepath-LLM-Pre-work",
    "description": null,
    "html_url": [
      "https://github.com/gomezlavin/Codepath-LLM-Pre-work/blob/11e4cc792f244cb9e3b3a67101d49c9f2b92985a/app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 616,
    "stars": 0
  },
  {
    "full_name": "Mattmlm/codepathLLM",
    "name": "codepathLLM",
    "description": "Codepath LLM class",
    "html_url": [
      "https://github.com/Mattmlm/codepathLLM/blob/e348dcfab62f8bfcf34b0d07affa08177c4ce829/app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 579345,
    "stars": 0
  },
  {
    "full_name": "Nedejr/Exemplo_gpt4o_mini",
    "name": "Exemplo_gpt4o_mini",
    "description": "Exemplo chatbot utilizando Flask e Api da OpenAI",
    "html_url": [
      "https://github.com/Nedejr/Exemplo_gpt4o_mini/blob/341d406458e3e35168646b156ed5232f349f7b4e/app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 321,
    "stars": 0
  },
  {
    "full_name": "devflowinc/trieve",
    "name": "trieve",
    "description": "All-in-one infrastructure for search, recommendations, RAG, and analytics offered via API",
    "html_url": [
      "https://github.com/devflowinc/trieve/blob/a225fe31f9bfbd58bbdbaa28c66c61baf18234fa/clients/python-sdk/test/test_create_batch_dataset.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 816655,
    "stars": 2229
  },
  {
    "full_name": "LambdaLabsML/Llama-3.2-vision-study",
    "name": "Llama-3.2-vision-study",
    "description": "Llama-3.2-Vision study",
    "html_url": [
      "https://github.com/LambdaLabsML/Llama-3.2-vision-study/blob/686578a8ca55ffd6be6f95b83e287a4cce8de83f/qualitative/test_vision_tasks_gpt4o.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 958,
    "stars": 10
  },
  {
    "full_name": "nh-aluu/llama_index_alt",
    "name": "llama_index_alt",
    "description": "Personal adjustments to llama_index",
    "html_url": [
      "https://github.com/nh-aluu/llama_index_alt/blob/7b4bfd7a6f6fcd93d2c845886fef0a01b5fbeb54/llama_index/multi_modal_llms/openai_utils.py",
      "https://github.com/nh-aluu/llama_index_alt/blob/7b4bfd7a6f6fcd93d2c845886fef0a01b5fbeb54/llama_index/llms/azure_openai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 60657,
    "stars": 0
  },
  {
    "full_name": "smallnew666/ChatGPT-Virtual-Live",
    "name": "ChatGPT-Virtual-Live",
    "description": "ChatGPT虚拟主播、支持B站、抖音、视频号",
    "html_url": [
      "https://github.com/smallnew666/ChatGPT-Virtual-Live/blob/741993fb3cc9ae13296d6be494994dcdd16cdd2c/douyin/douyin.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 57195,
    "stars": 288
  },
  {
    "full_name": "Applifting/god-gpt",
    "name": "god-gpt",
    "description": "God-GPT: a PoC of a godlike autonomous agent that leverages the Dalee-2 and whisper.cpp",
    "html_url": [
      "https://github.com/Applifting/god-gpt/blob/72acbe7617e5d76f391621fbcf8fea43a74ec214/tools/draw_tool.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 347,
    "stars": 13
  },
  {
    "full_name": "mmnavarr/dolores",
    "name": "dolores",
    "description": "Dolores is an python package that provides direct access to GPT-3 via dolores class instance. Instantiate dolores with your API key to create dolores with the proper configurations required to make requests to the OpenAI API.",
    "html_url": [
      "https://github.com/mmnavarr/dolores/blob/370a3adce50a306905eae29946266d4dc1149ae9/dolores/dolores.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 210,
    "stars": 5
  },
  {
    "full_name": "chakkaradeep/openai-samples",
    "name": "openai-samples",
    "description": "I am exploring the possibilities of OpenAI and what we can build with it. This repository has sample scripts or apps that I am using to learn OpenAI and other AI topics.",
    "html_url": [
      "https://github.com/chakkaradeep/openai-samples/blob/1a5d395f9c97e15edeeb7f339fe2e6aa6a8ff279/OpenAI%20Python%20Sample/openai-chat-sample.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2580,
    "stars": 52
  },
  {
    "full_name": "lissettecarlr/chat-openai-streamlit",
    "name": "chat-openai-streamlit",
    "description": "基于streamlit编写的针对openai接口的各类模型对话web应用，目前支持基本对话、文生图、图片理解、assistants（Web application for various models' dialogue based on the OpenAI API, written in Streamlit,assistants）",
    "html_url": [
      "https://github.com/lissettecarlr/chat-openai-streamlit/blob/330234738cc4c68f4aa3f4d870702028527d001b/src/pages/text_to_speech.py",
      "https://github.com/lissettecarlr/chat-openai-streamlit/blob/330234738cc4c68f4aa3f4d870702028527d001b/src/pages/gpt-4omni.py",
      "https://github.com/lissettecarlr/chat-openai-streamlit/blob/330234738cc4c68f4aa3f4d870702028527d001b/src/home.py",
      "https://github.com/lissettecarlr/chat-openai-streamlit/blob/330234738cc4c68f4aa3f4d870702028527d001b/src/pages/speech_to_text.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1145,
    "stars": 21
  },
  {
    "full_name": "heyfoz/python-dalle2-image-edit",
    "name": "python-dalle2-image-edit",
    "description": "This Python script enables users to interact with OpenAI's DALL·E 2 API for image editing. Users can specify an original image, a mask image, and a text prompt for the DALL·E 2 model to edit the image accordingly.",
    "html_url": [
      "https://github.com/heyfoz/python-dalle2-image-edit/blob/eedc0e493c3f72c7686d26c032984c61c5a5aa25/dalle2_edit.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 86,
    "stars": 4
  },
  {
    "full_name": "ganarajpr/sanskrit-translator-dspy",
    "name": "sanskrit-translator-dspy",
    "description": "Using DSPy and LLM's to translate Sanskrit verses",
    "html_url": [
      "https://github.com/ganarajpr/sanskrit-translator-dspy/blob/0634f2fc6ad0463b5b7620aa9b69aeda33d8eefe/setup.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 330,
    "stars": 9
  },
  {
    "full_name": "sinenko/TelegramChatGPTBot",
    "name": "TelegramChatGPTBot",
    "description": "The simplest Telegram bot that forwards user messages to the OpenAI API ChatGPT and outputs the received responses.",
    "html_url": [
      "https://github.com/sinenko/TelegramChatGPTBot/blob/8081e0c9eeafc1c5ffb0846dd405ea820b755679/bot.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 42,
    "stars": 0
  },
  {
    "full_name": "yjg30737/pyqt-gpt-json-example",
    "name": "pyqt-gpt-json-example",
    "description": "PyQt gpt json mode response example",
    "html_url": [
      "https://github.com/yjg30737/pyqt-gpt-json-example/blob/181d594cc6469d7b8f4ae264341ba83b2649b449/apiWidget.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 480,
    "stars": 0
  },
  {
    "full_name": "atekumalla/ai-llm-bootcamp-prework",
    "name": "ai-llm-bootcamp-prework",
    "description": "Project containing the source code for the prework assignment of the AI LLM bootcamp",
    "html_url": [
      "https://github.com/atekumalla/ai-llm-bootcamp-prework/blob/3c8020121dbfbb1a3583c34cba16de405010db41/app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 114,
    "stars": 0
  },
  {
    "full_name": "pdolinic/PyGPT",
    "name": "PyGPT",
    "description": "Minimalist OpenAI GPT-3 via Python3 Request API",
    "html_url": [
      "https://github.com/pdolinic/PyGPT/blob/4dfb6f53de97b024d2e039bc18d0dfb048fd3a78/pygpt.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 82,
    "stars": 1
  },
  {
    "full_name": "kinphw/killEng",
    "name": "killEng",
    "description": "English translator via openai, deepl, google",
    "html_url": [
      "https://github.com/kinphw/killEng/blob/100bb3b7117ed8e676856538eb65187259db8cde/killEng/translator/openai/openai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 887,
    "stars": 0
  },
  {
    "full_name": "dbtjr1103/W55RP20-EVB-Pico-Chat-with-ChatGPT-Example",
    "name": "W55RP20-EVB-Pico-Chat-with-ChatGPT-Example",
    "description": "w55rp20",
    "html_url": [
      "https://github.com/dbtjr1103/W55RP20-EVB-Pico-Chat-with-ChatGPT-Example/blob/045544c45b80891d52edb18cfaf18bef1b054e1f/w55rp20_chatgpt_ethernet.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 122,
    "stars": 0
  },
  {
    "full_name": "Jehuty-ML/chatgpt-academic",
    "name": "chatgpt-academic",
    "description": "我自己用的chatgpt-academic",
    "html_url": [
      "https://github.com/Jehuty-ML/chatgpt-academic/blob/3a6d0d72abd91fc62ed6a1b53ecd26149312c680/config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 9477,
    "stars": 2
  },
  {
    "full_name": "SandorSeres/llm_locally",
    "name": "llm_locally",
    "description": "Test what LLM + RAG setup can run  locally using 8G VRAM GPU",
    "html_url": [
      "https://github.com/SandorSeres/llm_locally/blob/dc07f58e8e8afecabfc92fe8699f0d21a553a7a8/streaming.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 902,
    "stars": 1
  },
  {
    "full_name": "ccqpein/garage",
    "name": "garage",
    "description": "Full of trash, and some other stuffs",
    "html_url": [
      "https://github.com/ccqpein/garage/blob/ad40240d650bb7942f90ac4561e486c8aa1bc3d6/python/openapi-realtime-api-demo/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 30678,
    "stars": 0
  },
  {
    "full_name": "tecton-ai/tecton-blog-llm-example",
    "name": "tecton-blog-llm-example",
    "description": "Sample code for a blog post about LLMs",
    "html_url": [
      "https://github.com/tecton-ai/tecton-blog-llm-example/blob/ce08c23763800bba4c4f11c06c0e12f0e25e7226/tecton-repo/business_logic/sentiment_function.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 270,
    "stars": 0
  },
  {
    "full_name": "alfredcs/dialogue-guided-x",
    "name": "dialogue-guided-x",
    "description": "Multi-modal RAG based generative AI ",
    "html_url": [
      "https://github.com/alfredcs/dialogue-guided-x/blob/285cbb8c12c647a112031ef123798d057ba7fa95/multimodel/utils/gpt-4v-demos/pages/0_%F0%9F%93%B7_Camera.py",
      "https://github.com/alfredcs/dialogue-guided-x/blob/285cbb8c12c647a112031ef123798d057ba7fa95/multimodel/utils/gpt-4v-demos/pages/1_%F0%9F%91%95_Product_Descriptions.py",
      "https://github.com/alfredcs/dialogue-guided-x/blob/285cbb8c12c647a112031ef123798d057ba7fa95/multimodel/utils/gpt4v-streamlit-voiceover/app.py",
      "https://github.com/alfredcs/dialogue-guided-x/blob/285cbb8c12c647a112031ef123798d057ba7fa95/multimodel/utils/Gemini_Pro_Streamlit_Dashboard/home_2.py",
      "https://github.com/alfredcs/dialogue-guided-x/blob/285cbb8c12c647a112031ef123798d057ba7fa95/multimodel/demos/rad_tools.py",
      "https://github.com/alfredcs/dialogue-guided-x/blob/285cbb8c12c647a112031ef123798d057ba7fa95/multimodel/demos/home_4.py",
      "https://github.com/alfredcs/dialogue-guided-x/blob/285cbb8c12c647a112031ef123798d057ba7fa95/multimodel/home_5.py",
      "https://github.com/alfredcs/dialogue-guided-x/blob/285cbb8c12c647a112031ef123798d057ba7fa95/multimodel/demos/home_6.py",
      "https://github.com/alfredcs/dialogue-guided-x/blob/285cbb8c12c647a112031ef123798d057ba7fa95/multimodel/demos/home_7.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 32841,
    "stars": 0
  },
  {
    "full_name": "DataformerAI/dataformer",
    "name": "dataformer",
    "description": "Solving data for LLMs - Create quality synthetic datasets!",
    "html_url": [
      "https://github.com/DataformerAI/dataformer/blob/0cf88cc22a20a6d5d115773ae9aac8970d7812e3/src/dataformer/llms/api_providers.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3285,
    "stars": 148
  },
  {
    "full_name": "foundation-multimodal-models/ConBench",
    "name": "ConBench",
    "description": "[NeurIPS'24] Official implementation of paper \"Unveiling the Tapestry of Consistency in Large Vision-Language Models\".",
    "html_url": [
      "https://github.com/foundation-multimodal-models/ConBench/blob/e1b0325cda543c1d43530e7f65a26dedcf16bb6d/eval/GPT-4o.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 648,
    "stars": 35
  },
  {
    "full_name": "mirror12k/llm-shell",
    "name": "llm-shell",
    "description": "Utility to integrate ChatGPT (or other LLMs) into your shell.",
    "html_url": [
      "https://github.com/mirror12k/llm-shell/blob/300c18cffb0a1eb00fb159229907e161505a4fd4/llm_shell/chatgpt_support.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1024,
    "stars": 14
  },
  {
    "full_name": "prateekkale/knowledgegraph-gpt-python",
    "name": "knowledgegraph-gpt-python",
    "description": "This is small project to showcase how we can use chatgpt api to generate knowledge graphs using python. Idea is not to showcase fancy graphs but to extract entities and their relationships",
    "html_url": [
      "https://github.com/prateekkale/knowledgegraph-gpt-python/blob/13c011b531e0365bea79e846eddc5524adf60881/knowledgegraph.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 137,
    "stars": 7
  },
  {
    "full_name": "loveAtCorner/LLMs_proxy",
    "name": "LLMs_proxy",
    "description": "Develop transfer proxy service based on openai format interface service",
    "html_url": [
      "https://github.com/loveAtCorner/LLMs_proxy/blob/74ebf9c40df8f3d15e9140955eafa6f47d902a66/proxy.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 152,
    "stars": 0
  },
  {
    "full_name": "jboudou007/DiscordBot",
    "name": "DiscordBot",
    "description": "This Discord bot provides insights into GitHub repositories by answering user queries directly within Discord. It uses the GitHub API to fetch repository information, the OpenAI API for natural language understanding and response generation, and integrates semantic search to find relevant files within a GitHub repository.",
    "html_url": [
      "https://github.com/jboudou007/DiscordBot/blob/852c04b6c227eba23899735f8fc9f672d7c6cb48/openai_integration.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 282,
    "stars": 0
  },
  {
    "full_name": "VolkanSah/Text-to-Speech-PyGUI-for-Whisper",
    "name": "Text-to-Speech-PyGUI-for-Whisper",
    "description": "This is a simple Python-based GUI application that allows users to generate speech from text using the OpenAI API. The application provides a user-friendly interface for inputting text and selecting from different voices to create personalized audio output.",
    "html_url": [
      "https://github.com/VolkanSah/Text-to-Speech-PyGUI-for-Whisper/blob/98d0a93a7092b45f28d2fcad9f8ec773916c38ac/run.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 110,
    "stars": 1
  },
  {
    "full_name": "KeplerKang/ChatGPT-Virtual-Live",
    "name": "ChatGPT-Virtual-Live",
    "description": "VTuber",
    "html_url": [
      "https://github.com/KeplerKang/ChatGPT-Virtual-Live/blob/d9bd449ff318c3e875a2d2953cf4b8af12cfde17/douyin/douyin.py",
      "https://github.com/KeplerKang/ChatGPT-Virtual-Live/blob/d9bd449ff318c3e875a2d2953cf4b8af12cfde17/wechat.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 57226,
    "stars": 0
  },
  {
    "full_name": "erko-perko/Menti-Quiz-Bot",
    "name": "Menti-Quiz-Bot",
    "description": "Python script that uses OpenAI API to choose the correct answer of Menti quiz.",
    "html_url": [
      "https://github.com/erko-perko/Menti-Quiz-Bot/blob/1fdabaad653fdda0c3743f87fb2feb18272327cb/menti_quiz_bot.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 124,
    "stars": 0
  },
  {
    "full_name": "akarimbux/openai-demo",
    "name": "openai-demo",
    "description": "A set of scripts to generate DALL-E images and build a ReCAPTCHA in Gradio",
    "html_url": [
      "https://github.com/akarimbux/openai-demo/blob/228cc40a0eb28175f44fb771c2b71c0db7d59523/utils/api.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 182,
    "stars": 0
  },
  {
    "full_name": "kwindla/openai-realtime-test-cases",
    "name": "openai-realtime-test-cases",
    "description": "Examples / testing",
    "html_url": [
      "https://github.com/kwindla/openai-realtime-test-cases/blob/cb26f19a8475857767a080fb9b5538a4466d15be/keyboard-input.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 554,
    "stars": 0
  },
  {
    "full_name": "uukuguy/speechless",
    "name": "speechless",
    "description": "LLM based agents with proactive interactions, long-term memory, external tool integration, and local deployment capabilities.",
    "html_url": [
      "https://github.com/uukuguy/speechless/blob/765c57cf46d7f0212f70b13f2a8ed1eec4c50f4d/speechless/generate/openai.py",
      "https://github.com/uukuguy/speechless/blob/765c57cf46d7f0212f70b13f2a8ed1eec4c50f4d/speechless/api/server.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3505374,
    "stars": 100
  },
  {
    "full_name": "comp-int-hum/llm_based_post_ocr_correction_analysis",
    "name": "llm_based_post_ocr_correction_analysis",
    "description": null,
    "html_url": [
      "https://github.com/comp-int-hum/llm_based_post_ocr_correction_analysis/blob/f24bf35f5f4938c2de764ddda41b0be075182529/scripts/gpt_4o_image.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2257,
    "stars": 0
  },
  {
    "full_name": "yassinemab/mistral-hackathon",
    "name": "mistral-hackathon",
    "description": null,
    "html_url": [
      "https://github.com/yassinemab/mistral-hackathon/blob/14bd00f78e0f74fcd47b18b83c858586366798ad/backend/functions/load/load_pdf.py",
      "https://github.com/yassinemab/mistral-hackathon/blob/14bd00f78e0f74fcd47b18b83c858586366798ad/full_pdf_pipeline.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 98661,
    "stars": 0
  },
  {
    "full_name": "ryujt/CodeSage",
    "name": "CodeSage",
    "description": "Code Sage는 OpenAI의 API를 활용하여 프로젝트 코드베이스에 대한 질문에 답변하는 AI 기반 도구입니다.",
    "html_url": [
      "https://github.com/ryujt/CodeSage/blob/e0236186a80c6aee335b12392a9538cda18423a4/SageLibs/config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2120,
    "stars": 17
  },
  {
    "full_name": "bulletproofmedic/OpenAI-WebApp",
    "name": "OpenAI-WebApp",
    "description": "Local Web App for Interacting with OpenAI API (GPT3.5/4)",
    "html_url": [
      "https://github.com/bulletproofmedic/OpenAI-WebApp/blob/8b954111c1ade42679c82d9b447cb590473fd976/app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 426,
    "stars": 0
  },
  {
    "full_name": "Shanshi66/ai-service",
    "name": "ai-service",
    "description": "a common ai service build on langchain",
    "html_url": [
      "https://github.com/Shanshi66/ai-service/blob/4acab72b39bddd9815af1b07db4d370096413b0c/src/models/config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 746,
    "stars": 1
  },
  {
    "full_name": "lawtj/llm_course",
    "name": "llm_course",
    "description": null,
    "html_url": [
      "https://github.com/lawtj/llm_course/blob/fa8cd325cccac47a54940aebf27ca3964e2fd7e1/app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 625,
    "stars": 0
  },
  {
    "full_name": "NeenaSpace/RestaurantData_backend",
    "name": "RestaurantData_backend",
    "description": "This project aims to help users find restaurants that cater to their specific dietary preferences, such as vegan, vegetarian, gluten-free, etc. It gathers and processes data from Google Places API and uses OpenAI API to extract relevant dietary information from restaurant reviews. ",
    "html_url": [
      "https://github.com/NeenaSpace/RestaurantData_backend/blob/d3f62b1ddd1d6c2f9d350b1288e41acf92e7dd37/backend/src/openai_integration.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 951190,
    "stars": 0
  },
  {
    "full_name": "fredconex/PixelLlama",
    "name": "PixelLlama",
    "description": "Ollama client written in Python",
    "html_url": [
      "https://github.com/fredconex/PixelLlama/blob/f6cb452e56f138ba22b5d593b43affb7e17f3109/utils/settings_manager.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3433,
    "stars": 2
  },
  {
    "full_name": "j66n/acte",
    "name": "acte",
    "description": "A framework to build GUI-like Agent Tools, enhancement to Function Calling of LLM AI.",
    "html_url": [
      "https://github.com/j66n/acte/blob/95baff8b80f358598a453f50cb7503748c1ffd14/acte/chatbot/openai_chatbot.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2652,
    "stars": 93
  },
  {
    "full_name": "EQTPartners/GenCeption",
    "name": "GenCeption",
    "description": "GenCeption is an annotation-free MLLM (Multimodal Large Language Model) evaluation framework that merely requires unimodal data to assess inter-modality semantic coherence and inversely reflects the models' inclination to hallucinate.",
    "html_url": [
      "https://github.com/EQTPartners/GenCeption/blob/95b2fb947607d4321898b749f5038f54e4c3f358/genception/exp_gpt.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 825,
    "stars": 13
  },
  {
    "full_name": "aimerou/gradio-chatgpt-app",
    "name": "gradio-chatgpt-app",
    "description": "A demonstration of a chatbot interface that uses the OpenAI ChatGPT API",
    "html_url": [
      "https://github.com/aimerou/gradio-chatgpt-app/blob/e8f2c86965bc3ec81473cc74c0066ecc046119bc/mywebgpt.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 92,
    "stars": 44
  },
  {
    "full_name": "habaneraa/TransLaTeX",
    "name": "TransLaTeX",
    "description": "TransLaTeX is a simple tool for translating LaTeX projects using Large Language Models. It can automatically translate LaTeX sources from any language to any other language with precision and customization.",
    "html_url": [
      "https://github.com/habaneraa/TransLaTeX/blob/bd599b9b102425f6a9b09451f61bcbb877028227/trans_latex/llm.py",
      "https://github.com/habaneraa/TransLaTeX/blob/bd599b9b102425f6a9b09451f61bcbb877028227/trans_latex/ui/widgets/config_pages.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1129,
    "stars": 20
  },
  {
    "full_name": "mastermindML/mastermind",
    "name": "mastermind",
    "description": "MASTERMIND agent creation for controlled agency using aGLM BDI and RAGE",
    "html_url": [
      "https://github.com/mastermindML/mastermind/blob/90f5007ed7e7fea4ac60739cd595a7a3a6ab699e/terminai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1964,
    "stars": 2
  },
  {
    "full_name": "oleksandriegorov/lunch_recommender_chatgpt",
    "name": "lunch_recommender_chatgpt",
    "description": "Files from an experimental ChatGPT-assisted development of a webapp",
    "html_url": [
      "https://github.com/oleksandriegorov/lunch_recommender_chatgpt/blob/c23274b75599e704233ac3258ec8917c7ee0b039/app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 256,
    "stars": 0
  },
  {
    "full_name": "Ar11rA/py-prompt-engg",
    "name": "py-prompt-engg",
    "description": "Understanding Genai and prompt engineering",
    "html_url": [
      "https://github.com/Ar11rA/py-prompt-engg/blob/7772f2558e8ac4cd3ab635fd9b640efe0a3eb474/1_basics/content_generation.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1051836,
    "stars": 0
  },
  {
    "full_name": "giaco91/llm_apps",
    "name": "llm_apps",
    "description": "A collection of LLM based boilerplate apps",
    "html_url": [
      "https://github.com/giaco91/llm_apps/blob/eea869ad4e68131be0b2675107a5a4f8effee13e/openai_apps/chat_streaming_app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 355,
    "stars": 0
  },
  {
    "full_name": "DevinNorgarb/llama-index-notebook",
    "name": "llama-index-notebook",
    "description": null,
    "html_url": [
      "https://github.com/DevinNorgarb/llama-index-notebook/blob/72b357b3f4b36bd0951a5a2501838b7ed7116bef/llama-index-legacy/llama_index/legacy/multi_modal_llms/openai_utils.py",
      "https://github.com/DevinNorgarb/llama-index-notebook/blob/72b357b3f4b36bd0951a5a2501838b7ed7116bef/llama-index-legacy/llama_index/legacy/embeddings/azure_openai.py",
      "https://github.com/DevinNorgarb/llama-index-notebook/blob/72b357b3f4b36bd0951a5a2501838b7ed7116bef/llama-index-legacy/llama_index/legacy/llms/azure_openai.py",
      "https://github.com/DevinNorgarb/llama-index-notebook/blob/72b357b3f4b36bd0951a5a2501838b7ed7116bef/llama-index-integrations/llms/llama-index-llms-azure-openai/llama_index/llms/azure_openai/base.py",
      "https://github.com/DevinNorgarb/llama-index-notebook/blob/72b357b3f4b36bd0951a5a2501838b7ed7116bef/llama-index-legacy/llama_index/legacy/llms/openai_utils.py",
      "https://github.com/DevinNorgarb/llama-index-notebook/blob/72b357b3f4b36bd0951a5a2501838b7ed7116bef/llama-index-integrations/llms/llama-index-llms-openai/llama_index/llms/openai/utils.py",
      "https://github.com/DevinNorgarb/llama-index-notebook/blob/72b357b3f4b36bd0951a5a2501838b7ed7116bef/llama-index-integrations/node_parser/llama-index-node-parser-relational-dashscope/llama_index/node_parser/dashscope/base.py"
    ],
    "model": [
      "openai",
      "qwen"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1107356,
    "stars": 0
  },
  {
    "full_name": "ironmanfpv/Data-Agent-with-RAG",
    "name": "Data-Agent-with-RAG",
    "description": "Sieves through structured and unstructured data. Responds to Query. AI. An RAG walkthrough.",
    "html_url": [
      "https://github.com/ironmanfpv/Data-Agent-with-RAG/blob/3518f33a8d8c407e77ef3cbd6e99d72fd2125e02/ai/Lib/site-packages/llama_index/legacy/multi_modal_llms/openai_utils.py",
      "https://github.com/ironmanfpv/Data-Agent-with-RAG/blob/3518f33a8d8c407e77ef3cbd6e99d72fd2125e02/ai/Lib/site-packages/llama_index/embeddings/openai/utils.py",
      "https://github.com/ironmanfpv/Data-Agent-with-RAG/blob/3518f33a8d8c407e77ef3cbd6e99d72fd2125e02/ai/Lib/site-packages/llama_index/legacy/embeddings/azure_openai.py",
      "https://github.com/ironmanfpv/Data-Agent-with-RAG/blob/3518f33a8d8c407e77ef3cbd6e99d72fd2125e02/ai/Lib/site-packages/llama_index/legacy/llms/azure_openai.py",
      "https://github.com/ironmanfpv/Data-Agent-with-RAG/blob/3518f33a8d8c407e77ef3cbd6e99d72fd2125e02/ai/Lib/site-packages/llama_index/legacy/llms/openai_utils.py",
      "https://github.com/ironmanfpv/Data-Agent-with-RAG/blob/3518f33a8d8c407e77ef3cbd6e99d72fd2125e02/ai/Lib/site-packages/llama_index/llms/openai/utils.py",
      "https://github.com/ironmanfpv/Data-Agent-with-RAG/blob/3518f33a8d8c407e77ef3cbd6e99d72fd2125e02/ai/Lib/site-packages/openai/_client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1409081,
    "stars": 2
  },
  {
    "full_name": "sparklydavid/LLM-Ai-Practice",
    "name": "LLM-Ai-Practice",
    "description": "Building Ai Agenet using LlamaIndex",
    "html_url": [
      "https://github.com/sparklydavid/LLM-Ai-Practice/blob/e9abf4f85d85ffe8dd9cfcf58f30999a8d609899/ai/Lib/site-packages/llama_index/legacy/multi_modal_llms/openai_utils.py",
      "https://github.com/sparklydavid/LLM-Ai-Practice/blob/e9abf4f85d85ffe8dd9cfcf58f30999a8d609899/ai/Lib/site-packages/llama_index/multi_modal_llms/openai/utils.py",
      "https://github.com/sparklydavid/LLM-Ai-Practice/blob/e9abf4f85d85ffe8dd9cfcf58f30999a8d609899/ai/Lib/site-packages/llama_index/embeddings/openai/utils.py",
      "https://github.com/sparklydavid/LLM-Ai-Practice/blob/e9abf4f85d85ffe8dd9cfcf58f30999a8d609899/ai/Lib/site-packages/llama_index/legacy/embeddings/azure_openai.py",
      "https://github.com/sparklydavid/LLM-Ai-Practice/blob/e9abf4f85d85ffe8dd9cfcf58f30999a8d609899/ai/Lib/site-packages/llama_index/legacy/llms/azure_openai.py",
      "https://github.com/sparklydavid/LLM-Ai-Practice/blob/e9abf4f85d85ffe8dd9cfcf58f30999a8d609899/ai/Lib/site-packages/llama_index/legacy/llms/openai_utils.py",
      "https://github.com/sparklydavid/LLM-Ai-Practice/blob/e9abf4f85d85ffe8dd9cfcf58f30999a8d609899/ai/Lib/site-packages/llama_index/llms/openai/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1415099,
    "stars": 1
  },
  {
    "full_name": "Blackbird-3/rag",
    "name": "rag",
    "description": null,
    "html_url": [
      "https://github.com/Blackbird-3/rag/blob/b25e09cb349b161a049db326b83835edbb66d397/.venv/Lib/site-packages/llama_index/legacy/multi_modal_llms/openai_utils.py",
      "https://github.com/Blackbird-3/rag/blob/b25e09cb349b161a049db326b83835edbb66d397/.venv/Lib/site-packages/llama_index/legacy/embeddings/azure_openai.py",
      "https://github.com/Blackbird-3/rag/blob/b25e09cb349b161a049db326b83835edbb66d397/.venv/Lib/site-packages/llama_index/legacy/llms/azure_openai.py",
      "https://github.com/Blackbird-3/rag/blob/b25e09cb349b161a049db326b83835edbb66d397/.venv/Lib/site-packages/llama_index/legacy/llms/openai_utils.py",
      "https://github.com/Blackbird-3/rag/blob/b25e09cb349b161a049db326b83835edbb66d397/.venv/Lib/site-packages/llama_index/llms/openai/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3109112,
    "stars": 1
  },
  {
    "full_name": "ReAlice-Inc/rag-app",
    "name": "rag-app",
    "description": null,
    "html_url": [
      "https://github.com/ReAlice-Inc/rag-app/blob/852d6c169eb508a89aea69325e1bbe1746ff5103/ragenv/Lib/site-packages/llama_index/legacy/multi_modal_llms/openai_utils.py",
      "https://github.com/ReAlice-Inc/rag-app/blob/852d6c169eb508a89aea69325e1bbe1746ff5103/ragenv/Lib/site-packages/llama_index/embeddings/openai/utils.py",
      "https://github.com/ReAlice-Inc/rag-app/blob/852d6c169eb508a89aea69325e1bbe1746ff5103/ragenv/Lib/site-packages/llama_index/legacy/embeddings/azure_openai.py",
      "https://github.com/ReAlice-Inc/rag-app/blob/852d6c169eb508a89aea69325e1bbe1746ff5103/ragenv/Lib/site-packages/llama_index/legacy/llms/azure_openai.py",
      "https://github.com/ReAlice-Inc/rag-app/blob/852d6c169eb508a89aea69325e1bbe1746ff5103/ragenv/Lib/site-packages/llama_index/legacy/llms/openai_utils.py",
      "https://github.com/ReAlice-Inc/rag-app/blob/852d6c169eb508a89aea69325e1bbe1746ff5103/ragenv/Lib/site-packages/llama_index/llms/openai/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1517483,
    "stars": 0
  },
  {
    "full_name": "Manith-Ratnayake/LLM_Application",
    "name": "LLM_Application",
    "description": "RAG LLM trained on private knowledge base with OpenAi ",
    "html_url": [
      "https://github.com/Manith-Ratnayake/LLM_Application/blob/8e47e941ecdfdbf6426f43185e123e9951d08ca1/Lib/site-packages/llama_index/legacy/multi_modal_llms/openai_utils.py",
      "https://github.com/Manith-Ratnayake/LLM_Application/blob/8e47e941ecdfdbf6426f43185e123e9951d08ca1/Lib/site-packages/llama_index/legacy/embeddings/azure_openai.py",
      "https://github.com/Manith-Ratnayake/LLM_Application/blob/8e47e941ecdfdbf6426f43185e123e9951d08ca1/Lib/site-packages/llama_index/legacy/llms/azure_openai.py",
      "https://github.com/Manith-Ratnayake/LLM_Application/blob/8e47e941ecdfdbf6426f43185e123e9951d08ca1/Lib/site-packages/llama_index/legacy/llms/openai_utils.py",
      "https://github.com/Manith-Ratnayake/LLM_Application/blob/8e47e941ecdfdbf6426f43185e123e9951d08ca1/Lib/site-packages/llama_index/llms/openai/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1625608,
    "stars": 0
  },
  {
    "full_name": "Siminoabcd/python-ai-agent",
    "name": "python-ai-agent",
    "description": "RAG AI Agent built using LlamaIndex Library",
    "html_url": [
      "https://github.com/Siminoabcd/python-ai-agent/blob/ef92b57f1bf5b90ce8d16d4eb2f1d9574df4ec3c/ai/Lib/site-packages/llama_index/legacy/multi_modal_llms/openai_utils.py",
      "https://github.com/Siminoabcd/python-ai-agent/blob/ef92b57f1bf5b90ce8d16d4eb2f1d9574df4ec3c/ai/Lib/site-packages/llama_index/multi_modal_llms/openai/utils.py",
      "https://github.com/Siminoabcd/python-ai-agent/blob/ef92b57f1bf5b90ce8d16d4eb2f1d9574df4ec3c/ai/Lib/site-packages/llama_index/embeddings/openai/utils.py",
      "https://github.com/Siminoabcd/python-ai-agent/blob/ef92b57f1bf5b90ce8d16d4eb2f1d9574df4ec3c/ai/Lib/site-packages/llama_index/legacy/embeddings/azure_openai.py",
      "https://github.com/Siminoabcd/python-ai-agent/blob/ef92b57f1bf5b90ce8d16d4eb2f1d9574df4ec3c/ai/Lib/site-packages/llama_index/legacy/llms/azure_openai.py",
      "https://github.com/Siminoabcd/python-ai-agent/blob/ef92b57f1bf5b90ce8d16d4eb2f1d9574df4ec3c/ai/Lib/site-packages/llama_index/legacy/llms/openai_utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2272569,
    "stars": 0
  },
  {
    "full_name": "PragyaGupta2912/NIFTY-50-ESG-chatbot",
    "name": "NIFTY-50-ESG-chatbot",
    "description": "The streamlit web-app chatbot answers the questions regarding the ESG metrics of the NIFTY 50 companies.",
    "html_url": [
      "https://github.com/PragyaGupta2912/NIFTY-50-ESG-chatbot/blob/9a72df268c188062aaa9c421601503dbcafc4504/env/Lib/site-packages/llama_index/legacy/multi_modal_llms/openai_utils.py",
      "https://github.com/PragyaGupta2912/NIFTY-50-ESG-chatbot/blob/9a72df268c188062aaa9c421601503dbcafc4504/env/Lib/site-packages/llama_index/embeddings/openai/utils.py",
      "https://github.com/PragyaGupta2912/NIFTY-50-ESG-chatbot/blob/9a72df268c188062aaa9c421601503dbcafc4504/env/Lib/site-packages/llama_index/legacy/embeddings/azure_openai.py",
      "https://github.com/PragyaGupta2912/NIFTY-50-ESG-chatbot/blob/9a72df268c188062aaa9c421601503dbcafc4504/env/Lib/site-packages/llama_index/legacy/llms/azure_openai.py",
      "https://github.com/PragyaGupta2912/NIFTY-50-ESG-chatbot/blob/9a72df268c188062aaa9c421601503dbcafc4504/env/Lib/site-packages/llama_index/legacy/llms/openai_utils.py",
      "https://github.com/PragyaGupta2912/NIFTY-50-ESG-chatbot/blob/9a72df268c188062aaa9c421601503dbcafc4504/env/Lib/site-packages/llama_index/llms/openai/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2070328,
    "stars": 1
  },
  {
    "full_name": "assiahm/RAG",
    "name": "RAG",
    "description": null,
    "html_url": [
      "https://github.com/assiahm/RAG/blob/6d76f8587e1c53b51125f2c89abc9c8dcb2f33b2/env/Lib/site-packages/llama_index/legacy/multi_modal_llms/openai_utils.py",
      "https://github.com/assiahm/RAG/blob/6d76f8587e1c53b51125f2c89abc9c8dcb2f33b2/env/Lib/site-packages/llama_index/legacy/embeddings/azure_openai.py",
      "https://github.com/assiahm/RAG/blob/6d76f8587e1c53b51125f2c89abc9c8dcb2f33b2/env/Lib/site-packages/llama_index/legacy/llms/azure_openai.py",
      "https://github.com/assiahm/RAG/blob/6d76f8587e1c53b51125f2c89abc9c8dcb2f33b2/env/Lib/site-packages/llama_index/legacy/llms/openai_utils.py",
      "https://github.com/assiahm/RAG/blob/6d76f8587e1c53b51125f2c89abc9c8dcb2f33b2/env/Lib/site-packages/openai/_client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 5056532,
    "stars": 0
  },
  {
    "full_name": "seratch/ChatGPT-in-Slack",
    "name": "ChatGPT-in-Slack",
    "description": "Swift demonstration of how to build a Slack app that enables end-users to interact with a ChatGPT bot",
    "html_url": [
      "https://github.com/seratch/ChatGPT-in-Slack/blob/3ba1134b82f91f35b26e5e17a16713ae0f4747c6/app/env.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3876,
    "stars": 497
  },
  {
    "full_name": "chancharikmitra/CCoT",
    "name": "CCoT",
    "description": "[CVPR 2024] Official Code for the Paper \"Compositional Chain-of-Thought Prompting for Large Multimodal Models\"",
    "html_url": [
      "https://github.com/chancharikmitra/CCoT/blob/9ceecb7c3e9d337bf389e1c2af260b86bcc35a6b/GPT-4V/GPT4V_Whoops.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 17671,
    "stars": 130
  },
  {
    "full_name": "AJaySi/AI-Writer",
    "name": "AI-Writer",
    "description": "ALwrity - All in One AI Content Platform. Contextual AI Content generation for Website, Social media & Ad copywriting. Prevents AI hallucinations, Web Researched factual, SEO optimized content. Get blog Images. Create your AI Agents Content team. Generate content with RAG, Local documents, web urls, PDFs. Open Source AI writer. (WIP)",
    "html_url": [
      "https://github.com/AJaySi/AI-Writer/blob/77b9cea22644484ddf33a030784e6404b763485a/lib/gpt_providers/image_to_text_gen/openai_vision_image_details.py",
      "https://github.com/AJaySi/AI-Writer/blob/77b9cea22644484ddf33a030784e6404b763485a/lib/gpt_providers/image_to_text_gen/openai_vision_img_details.py",
      "https://github.com/AJaySi/AI-Writer/blob/77b9cea22644484ddf33a030784e6404b763485a/lib/ai_seo_tools/image_alt_text_generator.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 78333,
    "stars": 476
  },
  {
    "full_name": "AaronWard/generative-ai-workbook",
    "name": "generative-ai-workbook",
    "description": "Central repository for all LLM development",
    "html_url": [
      "https://github.com/AaronWard/generative-ai-workbook/blob/92daf75da25a25e6a23ea5d7a1ede9d4f023a54c/personal_projects/18.autogen-discord-rag/utils/api_utils.py",
      "https://github.com/AaronWard/generative-ai-workbook/blob/92daf75da25a25e6a23ea5d7a1ede9d4f023a54c/personal_projects/5.historia-lingua/app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "fangwentong/openai-proxy",
    "name": "openai-proxy",
    "description": "Transparent proxy for OpenAI API",
    "html_url": [
      "https://github.com/fangwentong/openai-proxy/blob/7f4fae9f031f8ea2b579c3e9f3571a6bdad1768e/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 275,
    "stars": 19
  },
  {
    "full_name": "crjaaa/UniLLM",
    "name": "UniLLM",
    "description": "UniLLM is an AI Model Gateway.",
    "html_url": [
      "https://github.com/crjaaa/UniLLM/blob/a187be152a2a2c31a772f7faa5e24e640a36a766/utils.py",
      "https://github.com/crjaaa/UniLLM/blob/a187be152a2a2c31a772f7faa5e24e640a36a766/public.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1198,
    "stars": 2
  },
  {
    "full_name": "naimenz/inverse-scaling-eval-pipeline",
    "name": "inverse-scaling-eval-pipeline",
    "description": "Basic pipeline for running different sized GPT models and plotting the results",
    "html_url": [
      "https://github.com/naimenz/inverse-scaling-eval-pipeline/blob/34c8c7b066c5134fd26d6658ffa1522d2785d1d4/eval_pipeline/openai_api.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 876312,
    "stars": 9
  },
  {
    "full_name": "iahuang/codex",
    "name": "codex",
    "description": "Codex is a concept programming language powered by the OpenAI model of the same name.",
    "html_url": [
      "https://github.com/iahuang/codex/blob/3298f33cee1749382d7dedbcb61a4405252431e5/codex/openai/__init__.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1692,
    "stars": 2
  },
  {
    "full_name": "UninspiredCarrot/pepper",
    "name": "pepper",
    "description": "This a Vertically Integrated Project for Sustainable Development in University of Strathclyde on the Pepper Robot. We wanted to make Pepper into a shopping assistant who can chat with the customer using OpenAI's GPT, direct them to products and more.",
    "html_url": [
      "https://github.com/UninspiredCarrot/pepper/blob/bb6adfc5f0ae0433a4bef8f7fca051a293b0b2e5/textProcess.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 419,
    "stars": 0
  },
  {
    "full_name": "fit-alessandro-berti/csv-pm-llm-parsing",
    "name": "csv-pm-llm-parsing",
    "description": "LLM-based CSV parsing for Process Mining purposes",
    "html_url": [
      "https://github.com/fit-alessandro-berti/csv-pm-llm-parsing/blob/db469b7c3f15687212d6834500554ad931598e9d/csv_pm_llm_parsing/timest_parser.py",
      "https://github.com/fit-alessandro-berti/csv-pm-llm-parsing/blob/db469b7c3f15687212d6834500554ad931598e9d/csv_pm_llm_parsing/pm_columns_detection.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 692,
    "stars": 0
  },
  {
    "full_name": "Pomelkin/smiles-rag",
    "name": "smiles-rag",
    "description": "A rag pipeline for the case \"RAG with additional information about the quality of embeddings\"",
    "html_url": [
      "https://github.com/Pomelkin/smiles-rag/blob/9c7704e8ea43c19e010264a63032a12b9665e566/pipeline/rag/generator.py",
      "https://github.com/Pomelkin/smiles-rag/blob/9c7704e8ea43c19e010264a63032a12b9665e566/eval/evaluator.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 686,
    "stars": 2
  },
  {
    "full_name": "callumcanavan/image-renamer",
    "name": "image-renamer",
    "description": "Use GPT-4 Vision to rename image files.",
    "html_url": [
      "https://github.com/callumcanavan/image-renamer/blob/168e77cc4edfc5e612f93d6ad985f4de46d8552b/label_images.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 101,
    "stars": 1
  },
  {
    "full_name": "preritdas/jeeves",
    "name": "jeeves",
    "description": "An omnipowerful personal assistant powered by LLMs, Zapier NLA, and custom actions.",
    "html_url": [
      "https://github.com/preritdas/jeeves/blob/56a93be0459f21f047fff23cfc8a0a72edbf51a0/jeeves/voice_tools/transcribe.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 284464,
    "stars": 16
  },
  {
    "full_name": "hzz765/hass_llm_assist",
    "name": "hass_llm_assist",
    "description": "LLM conversation agent to control your devices in Home Assistant",
    "html_url": [
      "https://github.com/hzz765/hass_llm_assist/blob/f32c26451b8f350d78ecdbac84e005ec7065e9db/custom_components/llm_conversation_assist/const.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1319,
    "stars": 37
  },
  {
    "full_name": "mpsych/LLMP",
    "name": "LLMP",
    "description": null,
    "html_url": [
      "https://github.com/mpsych/LLMP/blob/c2e4fc3ccf704047576eb2e02c418b1c0912efcf/LLMP/chatgpt.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4143,
    "stars": 0
  },
  {
    "full_name": "marcoromagnolo/similtext",
    "name": "similtext",
    "description": "Verify similary in texts by using tfidf vector an openai",
    "html_url": [
      "https://github.com/marcoromagnolo/similtext/blob/3dd9928bead748b57414c10c4a0578a84780c423/openai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 350,
    "stars": 0
  },
  {
    "full_name": "james-uc/llm-bootcamp-jwang",
    "name": "llm-bootcamp-jwang",
    "description": null,
    "html_url": [
      "https://github.com/james-uc/llm-bootcamp-jwang/blob/09960c6fdac9a1cb2201fe9c98a7bcc191710222/app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2805,
    "stars": 0
  },
  {
    "full_name": "kenn50/GPT-OCR",
    "name": "GPT-OCR",
    "description": "A simple python script that can OCR a clipboard image using GPT 4 vision",
    "html_url": [
      "https://github.com/kenn50/GPT-OCR/blob/7cc31787950d78ba5fde160a7a41468961877e2f/GPT_OCR.pyw"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 136,
    "stars": 0
  },
  {
    "full_name": "Stalin0/Proyecto_Analisis",
    "name": "Proyecto_Analisis",
    "description": "Este proyecto trata de un ChatBot haciendo uso de una API que OpenAI, esta en microservicios con gestión de usuarios en NodeJs Y el ChatBot en Python con la base datos en PostgreSQL",
    "html_url": [
      "https://github.com/Stalin0/Proyecto_Analisis/blob/5c26b4da651772758c78a18698152bea60695182/Back/microservice/chatbot/app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 398477,
    "stars": 1
  },
  {
    "full_name": "khulnasoft/GPT-DB",
    "name": "GPT-DB",
    "description": null,
    "html_url": [
      "https://github.com/khulnasoft/GPT-DB/blob/0882a317d3d67cd6817c746030c34c38f4dcf7a9/examples/rag/rag_embedding_api_example.py",
      "https://github.com/khulnasoft/GPT-DB/blob/0882a317d3d67cd6817c746030c34c38f4dcf7a9/gptdb/util/network/_cli.py",
      "https://github.com/khulnasoft/GPT-DB/blob/0882a317d3d67cd6817c746030c34c38f4dcf7a9/examples/awel/data_analyst_assistant.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "Luodian/Otter",
    "name": "Otter",
    "description": "🦦 Otter, a multi-modal model based on OpenFlamingo (open-sourced version of DeepMind's Flamingo), trained on MIMIC-IT and showcasing improved instruction-following and in-context learning ability.",
    "html_url": [
      "https://github.com/Luodian/Otter/blob/1e7eb9a6fb12ef410082e796c463b99495637b85/pipeline/benchmarks/models/gpt4v.py",
      "https://github.com/Luodian/Otter/blob/1e7eb9a6fb12ef410082e796c463b99495637b85/pipeline/benchmarks/datasets/mathvista.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 27779,
    "stars": 3256
  },
  {
    "full_name": "niuzaisheng/ScreenAgent",
    "name": "ScreenAgent",
    "description": "ScreenAgent: A Computer Control Agent Driven by Visual Language Large Model (IJCAI-24)",
    "html_url": [
      "https://github.com/niuzaisheng/ScreenAgent/blob/2312c852908dda5fbc43d903fad5929a9dec649d/client/interface_api/gpt4_client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 85507,
    "stars": 461
  },
  {
    "full_name": "shamspias/chat-gpt-celery-flask",
    "name": "chat-gpt-celery-flask",
    "description": "A sample implementation of a chatbot using Flask, Celery, and GPT-3. It demonstrates how to create a simple chatbot that uses GPT-3 as the language generation model and Celery for handling asynchronous tasks.",
    "html_url": [
      "https://github.com/shamspias/chat-gpt-celery-flask/blob/05f45131cc25460baa0f7d24f27696b34635d863/app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 202,
    "stars": 23
  },
  {
    "full_name": "LiangYang666/ChatAnywhere",
    "name": "ChatAnywhere",
    "description": "使用GPT-3.5 API创建的Copilot，支持office、word、wps中使用，任意软件内选中文本补全内容，word copilot",
    "html_url": [
      "https://github.com/LiangYang666/ChatAnywhere/blob/109c39a1feca312a722582e65284694e647e8dc4/openai_api.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 198,
    "stars": 164
  },
  {
    "full_name": "OpenCSGs/llm-inference",
    "name": "llm-inference",
    "description": "llm-inference is a platform for publishing and managing llm inference, providing a wide range of out-of-the-box features for model deployment, such as UI, RESTful API, auto-scaling, computing resource management, monitoring, and more.",
    "html_url": [
      "https://github.com/OpenCSGs/llm-inference/blob/4ea759902cdaa07f37adc0510d13e5505afa1136/llmserve/common/evaluation.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 11891,
    "stars": 81
  },
  {
    "full_name": "FreedomIntelligence/GPT-API-Accelerate",
    "name": "GPT-API-Accelerate",
    "description": "The \"GPT-API-Accelerate\" project provides a set of Python classes for accelerating the process of generating responses to prompts using the OpenAI GPT-3.5 API.",
    "html_url": [
      "https://github.com/FreedomIntelligence/GPT-API-Accelerate/blob/d52369de6ccba599b6417fe22260fdeba0b96f15/PostRobot.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 278,
    "stars": 23
  },
  {
    "full_name": "Text-to-Audio/Make-An-Audio-3",
    "name": "Make-An-Audio-3",
    "description": "Make-An-Audio-3: Transforming Text/Video into Audio via Flow-based Large Diffusion Transformers",
    "html_url": [
      "https://github.com/Text-to-Audio/Make-An-Audio-3/blob/85a05596762677ef4aa0a1c9f9bf3762b4ca9490/preprocess/n2s_by_openai.py",
      "https://github.com/Text-to-Audio/Make-An-Audio-3/blob/85a05596762677ef4aa0a1c9f9bf3762b4ca9490/preprocess/struct_to_natural.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 403708,
    "stars": 99
  },
  {
    "full_name": "MaxHalford/andor-faq-llm",
    "name": "andor-faq-llm",
    "description": "🎲 Answering tabletop game questions using an LLM",
    "html_url": [
      "https://github.com/MaxHalford/andor-faq-llm/blob/c1522d27c4c028582fee0b01e4f34844f940fc9c/ui.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 7156,
    "stars": 2
  },
  {
    "full_name": "YangLing0818/IterComp",
    "name": "IterComp",
    "description": "IterComp: Iterative Composition-Aware Feedback Learning from Model Gallery for Text-to-Image Generation",
    "html_url": [
      "https://github.com/YangLing0818/IterComp/blob/a7a62f9aa3b9a4fad9ec49c0ae61b75f7fcbddf8/data/RPG/mllm.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 45428,
    "stars": 189
  },
  {
    "full_name": "agatha-duzan/feature-intervention-for-unlearning",
    "name": "feature-intervention-for-unlearning",
    "description": "Project for the Reprogramming AI Models Hackathon, team EPFL",
    "html_url": [
      "https://github.com/agatha-duzan/feature-intervention-for-unlearning/blob/38a4061fad3a13c521ecd86d9bd387f3e6d4f056/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 18966,
    "stars": 3
  },
  {
    "full_name": "warrenphilly/L.E.V.I.-Virtual-Voice-Assistant",
    "name": "L.E.V.I.-Virtual-Voice-Assistant",
    "description": "Meet LEVI, your AI speech assistant with a twist! Merging speech recognition, text-to-speech, and OpenAI's GPT-4, it listens, chats, and responds with a sassy edge. Perfect for tech enthusiasts and anyone seeking a witty AI companion, LEVI redefines daily interactions with smart, humorous exchanges.",
    "html_url": [
      "https://github.com/warrenphilly/L.E.V.I.-Virtual-Voice-Assistant/blob/1748fa268b3a615fef6628fd2dcc7118500d1ab2/levi.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 110,
    "stars": 2
  },
  {
    "full_name": "eramireztorres/hs_torch_optimizer",
    "name": "hs_torch_optimizer",
    "description": "An automated system that optimizes pytorch machine learning models using LLM-guided improvements.",
    "html_url": [
      "https://github.com/eramireztorres/hs_torch_optimizer/blob/c8ed8e13123bff301e9b04c7eb56195df3223470/src/openai_model_api.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3568,
    "stars": 0
  },
  {
    "full_name": "PrimisAI/nexus",
    "name": "nexus",
    "description": "A powerful Python framework for orchestrating AI agents and managing complex LLM-driven tasks with ease.",
    "html_url": [
      "https://github.com/PrimisAI/nexus/blob/09d278c204ea3f3610a29f815f4ae4699f4858b3/primisai/nexus/core/ai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3726,
    "stars": 54
  },
  {
    "full_name": "mkhfring/llm-for-ccd",
    "name": "llm-for-ccd",
    "description": "Source code and data for large language models research",
    "html_url": [
      "https://github.com/mkhfring/llm-for-ccd/blob/a0bb3070b4bf6e6797457a660961ee5905d129ad/llm_for_ccd/chatgpt-api-cross-lingual.py",
      "https://github.com/mkhfring/llm-for-ccd/blob/a0bb3070b4bf6e6797457a660961ee5905d129ad/llm_for_ccd/chatgpt.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3352,
    "stars": 2
  },
  {
    "full_name": "jeffreyzhanghc/auto-scraper",
    "name": "auto-scraper",
    "description": "GPT-powered-generalizable scraping method",
    "html_url": [
      "https://github.com/jeffreyzhanghc/auto-scraper/blob/77e41440d61d73477baca6b643c70b4bfbfd5ba6/src/general_info/seed_url_detector.py",
      "https://github.com/jeffreyzhanghc/auto-scraper/blob/77e41440d61d73477baca6b643c70b4bfbfd5ba6/test/test.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 12116,
    "stars": 0
  },
  {
    "full_name": "openaisolutions/AutodidactAI",
    "name": "AutodidactAI",
    "description": "AutodidactAI is an AI-driven platform that empowers continuous learning and self-improvement. Inspired by the concept of ikigai, AutodidactAI seeks to find purpose in knowledge acquisition and enhance its performance through iterative feedback and adaptation, embodying the principles of self-directed learning and continuous improvement",
    "html_url": [
      "https://github.com/openaisolutions/AutodidactAI/blob/1b49ca29cbc6bc4c2d7f7b187191893f788b6bd0/auto-code.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 244,
    "stars": 9
  },
  {
    "full_name": "tomdries/parallelprompts",
    "name": "parallelprompts",
    "description": "Make openai requests in parallel for batch processing.",
    "html_url": [
      "https://github.com/tomdries/parallelprompts/blob/f4cbf9576144677de0225e474d60c55b9650d7d4/old/parallel_processing_tools.py",
      "https://github.com/tomdries/parallelprompts/blob/f4cbf9576144677de0225e474d60c55b9650d7d4/api_request_parallel_processor.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 11135,
    "stars": 0
  },
  {
    "full_name": "lee-b/dset",
    "name": "dset",
    "description": "Automatic machine-learning dataset processing pipelines, using an LLM",
    "html_url": [
      "https://github.com/lee-b/dset/blob/41ccc9a301fa01c40b70dbad9f1268e1108ff6ca/src/dset/openai_api.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 650,
    "stars": 0
  },
  {
    "full_name": "dongyh20/Octopus",
    "name": "Octopus",
    "description": "🐙Octopus, an embodied vision-language model trained with RLEF, emerging superior in embodied visual planning and programming.",
    "html_url": [
      "https://github.com/dongyh20/Octopus/blob/b3503322117ce3a05b84e9e9edf9547d5e8b6acf/octopus/Otter/pipeline/benchmarks/models/gpt4v.py",
      "https://github.com/dongyh20/Octopus/blob/b3503322117ce3a05b84e9e9edf9547d5e8b6acf/octopus/Otter/pipeline/benchmarks/datasets/mathvista.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 58902,
    "stars": 289
  },
  {
    "full_name": "sirlaurie/chatgpt-for-telegram",
    "name": "chatgpt-for-telegram",
    "description": "a telegram bot for ChatGPT via OpenAI and Gemini API",
    "html_url": [
      "https://github.com/sirlaurie/chatgpt-for-telegram/blob/b504a51c045c88c7732b3a47e4dacbb5754fc76b/src/handlers/image_gen_handler.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1680,
    "stars": 0
  },
  {
    "full_name": "BAAI-DCAI/M3D",
    "name": "M3D",
    "description": "M3D: Advancing 3D Medical Image Analysis with Multi-Modal Large Language Models",
    "html_url": [
      "https://github.com/BAAI-DCAI/M3D/blob/0ff4a7aed832b191dbad16eb3d9a46238da65a23/Bench/eval/GPT4V/test_gpt4v_cap.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 17657,
    "stars": 329
  },
  {
    "full_name": "fengsxy/gpt_batch",
    "name": "gpt_batch",
    "description": "A simple tool to batch process messages using OpenAI's GPT models. `GPTBatcher` allows for efficient handling of multiple requests simultaneously, ensuring quick responses and robust error management.",
    "html_url": [
      "https://github.com/fengsxy/gpt_batch/blob/5ae50375a96a3065afa13a4e71e3f270de0903ed/tests/test_batcher.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 319,
    "stars": 40
  },
  {
    "full_name": "flageval-baai/FlagEvalMM",
    "name": "FlagEvalMM",
    "description": "A Flexible Framework for Comprehensive Multimodal Model Evaluation",
    "html_url": [
      "https://github.com/flageval-baai/FlagEvalMM/blob/fc19bfdcf7beaeeec6da643127806fcd6abd986f/flagevalmm/models/test_api_models.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 29966,
    "stars": 63
  },
  {
    "full_name": "Lum1104/EIBench",
    "name": "EIBench",
    "description": "EIBench: Assessing the Emotion Interpretation ability of Vision Large Language Models",
    "html_url": [
      "https://github.com/Lum1104/EIBench/blob/aff98d088367e60ac412905dd534f0cf062386b7/EIBench/baselines/Otter/pipeline/benchmarks/models/gpt4v.py",
      "https://github.com/Lum1104/EIBench/blob/aff98d088367e60ac412905dd534f0cf062386b7/EIBench/baselines/Otter/pipeline/benchmarks/datasets/mathvista.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 50388,
    "stars": 17
  },
  {
    "full_name": "PoBruno/weldev-flask-chatgpt-api",
    "name": "weldev-flask-chatgpt-api",
    "description": "A sample implementation of a chatbot using Flask, Celery, and GPT-3. It demonstrates how to create a simple chatbot that uses GPT-3 as the language generation model and Celery for handling asynchronous tasks.",
    "html_url": [
      "https://github.com/PoBruno/weldev-flask-chatgpt-api/blob/02d696db436288999656ab0f943ea27fef3c5996/app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 202,
    "stars": 1
  },
  {
    "full_name": "OpenCSGs/llm-finetune",
    "name": "llm-finetune",
    "description": "The framework of training large language models，support lora, full parameters fine tune etc, define yaml to start training/fine tune of your defined models, data and methods. Easy define and easy start. ",
    "html_url": [
      "https://github.com/OpenCSGs/llm-finetune/blob/d5cabf447548edf5b846c233c5a48b36f617a254/llmadmin/common/evaluation.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 6429,
    "stars": 28
  },
  {
    "full_name": "Utkarsh31-cell/ray-llm",
    "name": "ray-llm",
    "description": null,
    "html_url": [
      "https://github.com/Utkarsh31-cell/ray-llm/blob/2f62adb5c3b3258d4f5d2bb3061aad9750ddd334/rayllm/common/evaluation.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 11401,
    "stars": 0
  },
  {
    "full_name": "anyscale/example-llmserving-aviary",
    "name": "example-llmserving-aviary",
    "description": "Example Starting Code for LLM Serving with Aviary",
    "html_url": [
      "https://github.com/anyscale/example-llmserving-aviary/blob/e1f352f24ef9d9b08598a0198cef6c071f650bfa/Aviary_Backend_Deployment/aviary/common/evaluation.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3173,
    "stars": 0
  },
  {
    "full_name": "eramireztorres/hs_model_optimizer",
    "name": "hs_model_optimizer",
    "description": "An automated system that optimizes machine learning models using LLM-guided improvements. It iterates over scikit-learn and XGBoost classifiers, dynamically applying LLM-suggested improvements to models and hyperparameters, ensuring optimal model selection for classification tasks.",
    "html_url": [
      "https://github.com/eramireztorres/hs_model_optimizer/blob/e2d24aa1156a1a96dd4c5e0ca877f70893af0b43/src/openai_model_api.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2232,
    "stars": 1
  },
  {
    "full_name": "emcf/engshell",
    "name": "engshell",
    "description": "An English-language shell for any OS, powered by LLMs",
    "html_url": [
      "https://github.com/emcf/engshell/blob/27f1c07a0427c787e636b54c21d135c53b385f11/engshell.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 147,
    "stars": 2181
  },
  {
    "full_name": "SHI-Labs/VCoder",
    "name": "VCoder",
    "description": "[CVPR 2024] VCoder: Versatile Vision Encoders for Multimodal Large Language Models",
    "html_url": [
      "https://github.com/SHI-Labs/VCoder/blob/4e85acef896cee7843257d5d844ec945407efb13/vcoder_llava/eval/gpt4_query.py",
      "https://github.com/SHI-Labs/VCoder/blob/4e85acef896cee7843257d5d844ec945407efb13/vcoder_llava/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 9879,
    "stars": 278
  },
  {
    "full_name": "intel/llm-on-ray",
    "name": "llm-on-ray",
    "description": "Pretrain, finetune and serve LLMs on Intel platforms with Ray",
    "html_url": [
      "https://github.com/intel/llm-on-ray/blob/8ca5e248ec39dae69be9d90b825ca5729ea9676b/examples/inference/api_server_openai/query_openai_sdk.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 26372,
    "stars": 128
  },
  {
    "full_name": "JoeLeelyf/OVBench",
    "name": "OVBench",
    "description": "OVBench: How Far is Your Video-LLMs from Real-World Online Video Understanding?",
    "html_url": [
      "https://github.com/JoeLeelyf/OVBench/blob/810ba1d9ee73af45efc03d67572562d1f92f13f0/models/GPT.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 293638,
    "stars": 61
  },
  {
    "full_name": "calvinlaughlin/LargeLanguageLegoModels",
    "name": "LargeLanguageLegoModels",
    "description": "Using text-based lego instructions to fine tune an LLM for novel building.",
    "html_url": [
      "https://github.com/calvinlaughlin/LargeLanguageLegoModels/blob/496ce58f35fc1e660e9abede696013a4e41560ce/vision/vision2txt.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 75065,
    "stars": 4
  },
  {
    "full_name": "yeszie/KsiegiWieczyste",
    "name": "KsiegiWieczyste",
    "description": "Masowe pobieranie treści ksiąg wieczystych, przetwarzanie wyników przez model Open AI do wygenerowania pliku zbiorczego.",
    "html_url": [
      "https://github.com/yeszie/KsiegiWieczyste/blob/09abd4839b612b60196cff7471df903ab11795e6/HTML2XLS/ai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 242,
    "stars": 0
  },
  {
    "full_name": "N1RM4L13/PhantomForge",
    "name": "PhantomForge",
    "description": "PhantomForge is a cutting-edge synthetic data generation framework designed to supercharge Large Language Model (LLM) training and evaluation by leveraging advanced techniques like evol_instruct, evol_quality, and MAGPIE",
    "html_url": [
      "https://github.com/N1RM4L13/PhantomForge/blob/ab99b5cf61f3fcccd32b740e52e6a44385f72fa2/src/phantomforge/core/data_generator.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 212,
    "stars": 0
  },
  {
    "full_name": "davidghobson1/llm-political-personas",
    "name": "llm-political-personas",
    "description": "Evaluating large language models (LLMs) for their political leanings and abilities to impersonate different political personas",
    "html_url": [
      "https://github.com/davidghobson1/llm-political-personas/blob/6686f3400c4e434c9f3aff48d110c00cf14d1464/Libraries/inference.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 190661,
    "stars": 0
  },
  {
    "full_name": "thelostpotato27/drive_assist",
    "name": "drive_assist",
    "description": "creating an LLM assistant for files in databases. Planned to be used for both data lakes and personal drives",
    "html_url": [
      "https://github.com/thelostpotato27/drive_assist/blob/c4210095856171bc9b572dec56a851216d60a9c2/google_auth.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 38,
    "stars": 0
  },
  {
    "full_name": "bradyespey/SmartTagGPT",
    "name": "SmartTagGPT",
    "description": "SmartTagGPT automates tagging reminders in Apple Reminders using OpenAI’s GPT models. Export your reminder data, use a fine-tune GPT model for personalized tag suggestions, and set up Apple Shortcuts to tag untagged reminders automatically. Supports both fine-tuned and base GPT-3.5 models.",
    "html_url": [
      "https://github.com/bradyespey/SmartTagGPT/blob/cfd34670e03dd7419af299ea5c4e48988b1d9b91/fine_tuning.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 278,
    "stars": 2
  },
  {
    "full_name": "jmaguin/daily-digest",
    "name": "daily-digest",
    "description": "A news aggregation site that uses a combination of web scraping, an SQL Database, and a LLM to generate summaries of news articles. The web scraper is built using BeautifulSoup and aggregates data from various news outlets. The data is stored in an SQLite3 database.",
    "html_url": [
      "https://github.com/jmaguin/daily-digest/blob/76e2854eb8c4dc8e4dfc93d5bf52d513ce724754/loading.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2226,
    "stars": 1
  },
  {
    "full_name": "AndrewMayneProjects/MapVision",
    "name": "MapVision",
    "description": "This application provides a web interface for uploading images, splitting them into tiles, and analyzing each tile using OpenAI's GPT-4 with Vision capabilities. Users can specify the size of the tiles and provide a prompt for the analysis. The application also supports searching for specific terms within the analysis results.",
    "html_url": [
      "https://github.com/AndrewMayneProjects/MapVision/blob/afc7241dc819a6b879053b6b1e0e79884d496da9/app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 448,
    "stars": 0
  },
  {
    "full_name": "Haimantika/RAG_TIL_conference_demo",
    "name": "RAG_TIL_conference_demo",
    "description": null,
    "html_url": [
      "https://github.com/Haimantika/RAG_TIL_conference_demo/blob/da43fbfe739a5a14a737756ad4429cd61bf1ca24/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 181,
    "stars": 7
  },
  {
    "full_name": "mu-cai/matryoshka-mm",
    "name": "matryoshka-mm",
    "description": "Matryoshka Multimodal Models",
    "html_url": [
      "https://github.com/mu-cai/matryoshka-mm/blob/8a9c91948143015c792de57b5b6a590035cac4a9/IG-VLM/model_processor/gpt4_model_processor.py",
      "https://github.com/mu-cai/matryoshka-mm/blob/8a9c91948143015c792de57b5b6a590035cac4a9/lmms-eval/lmms_eval/tasks/mmbench/cc_utils.py",
      "https://github.com/mu-cai/matryoshka-mm/blob/8a9c91948143015c792de57b5b6a590035cac4a9/lmms-eval/lmms_eval/tasks/mmbench/cn_utils.py",
      "https://github.com/mu-cai/matryoshka-mm/blob/8a9c91948143015c792de57b5b6a590035cac4a9/lmms-eval/lmms_eval/models/gpt4v.py",
      "https://github.com/mu-cai/matryoshka-mm/blob/8a9c91948143015c792de57b5b6a590035cac4a9/lmms-eval/lmms_eval/tasks/ferret/utils.py",
      "https://github.com/mu-cai/matryoshka-mm/blob/8a9c91948143015c792de57b5b6a590035cac4a9/lmms-eval/lmms_eval/tasks/mmvet/utils.py",
      "https://github.com/mu-cai/matryoshka-mm/blob/8a9c91948143015c792de57b5b6a590035cac4a9/lmms-eval/lmms_eval/tasks/mathvista/mathvista_evals.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 118700,
    "stars": 109
  },
  {
    "full_name": "jasonacox/TinyLLM",
    "name": "TinyLLM",
    "description": "Setup and run a local LLM and Chatbot using consumer grade hardware. ",
    "html_url": [
      "https://github.com/jasonacox/TinyLLM/blob/c63d5cb38a90df1410854a098aea94e529e8a013/benchmark.py",
      "https://github.com/jasonacox/TinyLLM/blob/c63d5cb38a90df1410854a098aea94e529e8a013/agents/news.py",
      "https://github.com/jasonacox/TinyLLM/blob/c63d5cb38a90df1410854a098aea94e529e8a013/chatbot/server.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 18573,
    "stars": 262
  },
  {
    "full_name": "Adri6336/latin-translator",
    "name": "latin-translator",
    "description": "Uses OpenAI's GPT-3 to translate text into Latin",
    "html_url": [
      "https://github.com/Adri6336/latin-translator/blob/461515fbc58a22f9a6026bb5e3d274980d9d4675/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 68,
    "stars": 2
  },
  {
    "full_name": "HKUSTDial/ChartInsights",
    "name": "ChartInsights",
    "description": "Officical repository for the paper“ChartInsights: Evaluating Multimodal Large Language Models for Low-Level Chart Question Answering”(EMNLP'24)",
    "html_url": [
      "https://github.com/HKUSTDial/ChartInsights/blob/be27f2c83e8936d026b2bf3018d7e1402cbc7f93/Scripts/Overall_Evalution_On_GPT-4o.py",
      "https://github.com/HKUSTDial/ChartInsights/blob/be27f2c83e8936d026b2bf3018d7e1402cbc7f93/Scripts/Vary_Chart_Element.py",
      "https://github.com/HKUSTDial/ChartInsights/blob/be27f2c83e8936d026b2bf3018d7e1402cbc7f93/Scripts/Vary_Chart_Quality.py",
      "https://github.com/HKUSTDial/ChartInsights/blob/be27f2c83e8936d026b2bf3018d7e1402cbc7f93/Scripts/Vary_Chart_Element.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 464181,
    "stars": 19
  },
  {
    "full_name": "AK3847/Codebase-Analyzer",
    "name": "Codebase-Analyzer",
    "description": "A python-script to analyze your GitHub repository via ChatGPT LLM for code improvements, bug fixes etc.",
    "html_url": [
      "https://github.com/AK3847/Codebase-Analyzer/blob/6aee58fa8050930135bdb7c5d6998946547e94f4/analyze_codebase.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 271,
    "stars": 4
  },
  {
    "full_name": "itrummer/DataScienceWithGPT",
    "name": "DataScienceWithGPT",
    "description": "Resources to learn data processing with GPT and other language models",
    "html_url": [
      "https://github.com/itrummer/DataScienceWithGPT/blob/3d1d8f6407dad2d5e20a9739dc5c5c10b445335f/src/images/listing2.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 28352,
    "stars": 15
  },
  {
    "full_name": "NoahMcGraw/Activity_Tracking_Agent",
    "name": "Activity_Tracking_Agent",
    "description": "OpenAI-powered Python script that tracks user activity through screenshots and generates activity summaries",
    "html_url": [
      "https://github.com/NoahMcGraw/Activity_Tracking_Agent/blob/679a1930e7644546b3d21d18fc1c6a9496f4daf2/prompt_gpt.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 304,
    "stars": 1
  },
  {
    "full_name": "AttuneIntelligence/ai-builder",
    "name": "ai-builder",
    "description": "Attune Intelligence's foundational DevOps environment, hosting and deployment and inference scripts for Mixtral8x7B models.",
    "html_url": [
      "https://github.com/AttuneIntelligence/ai-builder/blob/26b00a18d7664d598704f3264fff77640a2fd68d/src/openai_inference/openai_gpt4_vision.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1282,
    "stars": 2
  },
  {
    "full_name": "zhangjinyiyi/model_agent",
    "name": "model_agent",
    "description": "an llm-based expert on system modeling and simulation",
    "html_url": [
      "https://github.com/zhangjinyiyi/model_agent/blob/06594923ddf4023ba0aafd7c78aab2e9ac972812/modelagent/llm/llm_image2table.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 200220,
    "stars": 0
  },
  {
    "full_name": "aws-samples/llm-evaluation-methodology",
    "name": "llm-evaluation-methodology",
    "description": null,
    "html_url": [
      "https://github.com/aws-samples/llm-evaluation-methodology/blob/8bdb132de3d24f62d77f6892acaffe88100d47b5/infra/prompt_app/src/datamodel/model/openai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 6739,
    "stars": 44
  },
  {
    "full_name": "Joselier3/time-traveler",
    "name": "time-traveler",
    "description": "Time-based RAG for banking Q&A",
    "html_url": [
      "https://github.com/Joselier3/time-traveler/blob/ad00ccf773616472c0631936bd97d662924ed6dc/statement2json/statement2json.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 387,
    "stars": 0
  },
  {
    "full_name": "stephen-osullivan/llm-code-dlp-scanner",
    "name": "llm-code-dlp-scanner",
    "description": "Project to investigate using LLMs to scan code for data leaks.",
    "html_url": [
      "https://github.com/stephen-osullivan/llm-code-dlp-scanner/blob/8425aa5340173fe6f614de0e50670eac4992c332/chains.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1346,
    "stars": 0
  },
  {
    "full_name": "johnpoothokaran/apate_backend",
    "name": "apate_backend",
    "description": "Backend for Apate - an LLM based context aggregator to verify information and fight misinformation",
    "html_url": [
      "https://github.com/johnpoothokaran/apate_backend/blob/63ea86d04760cf4ced7d9e7c98134871c0323758/backend/llm_ops/openai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 671,
    "stars": 0
  },
  {
    "full_name": "JustinGuese/langchain-vectorizing-webservice",
    "name": "langchain-vectorizing-webservice",
    "description": null,
    "html_url": [
      "https://github.com/JustinGuese/langchain-vectorizing-webservice/blob/fe7a3344c61d6c654da4fbf7fd42bd5c940fd017/src/app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 417,
    "stars": 0
  },
  {
    "full_name": "klaribot/llm-agent-swarm",
    "name": "llm-agent-swarm",
    "description": "Create an army of agents speaking in English to accomplish a mission.",
    "html_url": [
      "https://github.com/klaribot/llm-agent-swarm/blob/19b785f93c937b2fa720628a9649817248ae12ef/chat_api/openai_completion/main.py",
      "https://github.com/klaribot/llm-agent-swarm/blob/19b785f93c937b2fa720628a9649817248ae12ef/chat_api/openai_chat/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1157,
    "stars": 0
  },
  {
    "full_name": "jakewalker56/llm_api_explorer",
    "name": "llm_api_explorer",
    "description": "code to interact with LLM apis",
    "html_url": [
      "https://github.com/jakewalker56/llm_api_explorer/blob/f8d584d9c4ec2d9067d4a086fb39f2d076c064e5/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 122,
    "stars": 0
  },
  {
    "full_name": "GreyDGL/PentestGPT",
    "name": "PentestGPT",
    "description": "A GPT-empowered penetration testing tool",
    "html_url": [
      "https://github.com/GreyDGL/PentestGPT/blob/2a1c5286846dc0b9963c5febcc40e492f50e31ed/pentestgpt/test_connection.py",
      "https://github.com/GreyDGL/PentestGPT/blob/2a1c5286846dc0b9963c5febcc40e492f50e31ed/pentestgpt/utils/APIs/module_import.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 6015,
    "stars": 8368
  },
  {
    "full_name": "YangLing0818/buffer-of-thought-llm",
    "name": "buffer-of-thought-llm",
    "description": "[NeurIPS 2024 Spotlight] Buffer of Thoughts: Thought-Augmented Reasoning with Large Language Models",
    "html_url": [
      "https://github.com/YangLing0818/buffer-of-thought-llm/blob/5b0230a9b4ac212c4760d24b4eda33dc21983ae7/meta_buffer.py",
      "https://github.com/YangLing0818/buffer-of-thought-llm/blob/5b0230a9b4ac212c4760d24b4eda33dc21983ae7/bot_pipeline.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3835,
    "stars": 636
  },
  {
    "full_name": "scottleibrand/gpt3-ask",
    "name": "gpt3-ask",
    "description": "Ask GPT-3 a question, and it answers based on summary of first Google result",
    "html_url": [
      "https://github.com/scottleibrand/gpt3-ask/blob/09bef922811d9fd8e87b3e83f38c07bce1a3f5d5/gpt3-ask.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 147,
    "stars": 5
  },
  {
    "full_name": "CZT0/OpenAI-Parallel-Toolkit",
    "name": "OpenAI-Parallel-Toolkit",
    "description": "OpenAI-Parallel-Toolkit is a Python library for handling multiple OpenAI API keys and parallel tasks. It provides API key rotation, multithreading for faster task execution, and utility functions to boost your OpenAI integration. Ideal for efficient large-scale OpenAI usage.",
    "html_url": [
      "https://github.com/CZT0/OpenAI-Parallel-Toolkit/blob/8e6a4c7a2b324fff26dd8050b9cb6f82d033f46c/openai_parallel_toolkit/utils/reader.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 805,
    "stars": 74
  },
  {
    "full_name": "camel-ai/agent-trust",
    "name": "agent-trust",
    "description": "The code for \"Can Large Language Model Agents Simulate Human Trust Behaviors?\"",
    "html_url": [
      "https://github.com/camel-ai/agent-trust/blob/4f31b1174f48a371e316d6663ef5d0caf5164152/agent_trust/structure_output.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 136012,
    "stars": 82
  },
  {
    "full_name": "younesbram/E-sports-AI-Coach",
    "name": "E-sports-AI-Coach",
    "description": "Real-time AI-powered coaching tool mainly for League of Legends, offering strategic in-game advice using GPT-4V and TTS.",
    "html_url": [
      "https://github.com/younesbram/E-sports-AI-Coach/blob/c17baa5c9b69e9f117bb6db4d727a14d2afd0233/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "RomanKoshkin/toLLMatch",
    "name": "toLLMatch",
    "description": "toLLMatch🔪: Context-aware LLM-based simultaneous translation",
    "html_url": [
      "https://github.com/RomanKoshkin/toLLMatch/blob/90230cfe762ef85402c38218db173dc93aa62ec9/scripts/translate_fleurs.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 274728,
    "stars": 9
  },
  {
    "full_name": "izzortsi/gpt-stuff",
    "name": "gpt-stuff",
    "description": null,
    "html_url": [
      "https://github.com/izzortsi/gpt-stuff/blob/b981ea5aa9ced003e39d6e60bc46289f4ec67b85/cli/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 581,
    "stars": 0
  },
  {
    "full_name": "hungntt/LangXAI",
    "name": "LangXAI",
    "description": "LangXAI: Integrating Large Vision Models for Generating Textual Explanations to Enhance Explainability in Visual Perception Tasks",
    "html_url": [
      "https://github.com/hungntt/LangXAI/blob/60512eea935d095245fc6b6b6b420f2c5d2a293e/text_based_exp.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2039,
    "stars": 17
  },
  {
    "full_name": "teome/llm-utils",
    "name": "llm-utils",
    "description": "Utility library, scripts, tokenization implementation and comparisons, and a barebones gradio UI for chatting to various LLM endpoints.",
    "html_url": [
      "https://github.com/teome/llm-utils/blob/5b8075ca37e78ca79e08bb10be122bad037f454d/llm_utils/interactive_test_misc.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1986,
    "stars": 1
  },
  {
    "full_name": "NovTi/FastChat_BigDL-LLM_Adapted",
    "name": "FastChat_BigDL-LLM_Adapted",
    "description": "Adapted FastChat with BigDL-LLM",
    "html_url": [
      "https://github.com/NovTi/FastChat_BigDL-LLM_Adapted/blob/156cd3cc248c731ccc0cb01e3e180976cdeec8d8/fastchat/serve/api_provider.py",
      "https://github.com/NovTi/FastChat_BigDL-LLM_Adapted/blob/156cd3cc248c731ccc0cb01e3e180976cdeec8d8/fastchat/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 28599,
    "stars": 0
  },
  {
    "full_name": "oushinco/llama-repo",
    "name": "llama-repo",
    "description": null,
    "html_url": [
      "https://github.com/oushinco/llama-repo/blob/100071d51f1220736dd8cb8ff4892f32db4b7921/fastchat/serve/api_provider.py",
      "https://github.com/oushinco/llama-repo/blob/100071d51f1220736dd8cb8ff4892f32db4b7921/fastchat/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 18410,
    "stars": 0
  },
  {
    "full_name": "ysunbp/TaxoGlimpse",
    "name": "TaxoGlimpse",
    "description": "Code and data for the VLDB 2024 benchmark paper: Are Large Language Models a Good Replacement of Taxonomies?",
    "html_url": [
      "https://github.com/ysunbp/TaxoGlimpse/blob/cbee5362a37d1b1892148f98f0f53c7649c73781/LLMs/vicuna/FastChat/fastchat/serve/api_provider.py",
      "https://github.com/ysunbp/TaxoGlimpse/blob/cbee5362a37d1b1892148f98f0f53c7649c73781/LLMs/vicuna/FastChat/fastchat/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 50004,
    "stars": 7
  },
  {
    "full_name": "THUDM/LongWriter",
    "name": "LongWriter",
    "description": "LongWriter: Unleashing 10,000+ Word Generation from Long Context LLMs",
    "html_url": [
      "https://github.com/THUDM/LongWriter/blob/4b78b665b13fc7fbd1093dcd15d9425501133941/agentwrite/plan.py",
      "https://github.com/THUDM/LongWriter/blob/4b78b665b13fc7fbd1093dcd15d9425501133941/evaluation/eval_quality.py",
      "https://github.com/THUDM/LongWriter/blob/4b78b665b13fc7fbd1093dcd15d9425501133941/agentwrite/write.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4982,
    "stars": 1666
  },
  {
    "full_name": "samholt/L2MAC",
    "name": "L2MAC",
    "description": "🚀 The LLM Automatic Computer Framework: L2MAC",
    "html_url": [
      "https://github.com/samholt/L2MAC/blob/c16dc4452e117b74eb4e04a32da02e748489ed6c/l2mac/config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 8816,
    "stars": 124
  },
  {
    "full_name": "verifai/multiLLM",
    "name": "multiLLM",
    "description": "🚀 Invoke multiple large language models concurrently and the rank results. Add new models and ranking functions quickly.. ⭐",
    "html_url": [
      "https://github.com/verifai/multiLLM/blob/7d240746b53118e74869461aa8940d9771cb7343/DynamicClass.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2085,
    "stars": 69
  },
  {
    "full_name": "visendi-labs/uffe",
    "name": "uffe",
    "description": "A sub-100 lines, self-aware, independent, somewhat capabable LLM Agent with long term memory",
    "html_url": [
      "https://github.com/visendi-labs/uffe/blob/e55c5e2a32b6cfd6ffc34c7aa18b1daa52d840c2/uffe.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 153,
    "stars": 8
  },
  {
    "full_name": "UMLCloudComputing/UniBot",
    "name": "UniBot",
    "description": "UniBot is a chatbot for universities. It utilizes Retrieval Augmented Generation (RAG) to improve the accuracy of responses.",
    "html_url": [
      "https://github.com/UMLCloudComputing/UniBot/blob/3f47c4e49998713d5e1ce77e6a563b45d5bef9d4/data/vector.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 10256923,
    "stars": 3
  },
  {
    "full_name": "Tylersuard/GPT-4-V-Self-Driving-Car",
    "name": "GPT-4-V-Self-Driving-Car",
    "description": "A repo for using GPT-4-V to drive a car in a simulation",
    "html_url": [
      "https://github.com/Tylersuard/GPT-4-V-Self-Driving-Car/blob/b6c57ba4427521dc25e0ef7ff8318ec8c340c24d/self_driving.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 86,
    "stars": 0
  },
  {
    "full_name": "lemmings67/LlamaBot",
    "name": "LlamaBot",
    "description": null,
    "html_url": [
      "https://github.com/lemmings67/LlamaBot/blob/78aa4e73b7c1d73fc23b8686e2da0efb7461f356/DiscordBot.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 90,
    "stars": 0
  },
  {
    "full_name": "danteachqe/LLMs",
    "name": "LLMs",
    "description": "a comprehensive code repo for testing LLMs ",
    "html_url": [
      "https://github.com/danteachqe/LLMs/blob/f05174b1aa78438a52e2c73650707ab662f030af/LLM/TER.py",
      "https://github.com/danteachqe/LLMs/blob/f05174b1aa78438a52e2c73650707ab662f030af/LLM/BLEU_Eval_GPT.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 137610,
    "stars": 1
  },
  {
    "full_name": "Dfsantana1/llama_index_es",
    "name": "llama_index_es",
    "description": null,
    "html_url": [
      "https://github.com/Dfsantana1/llama_index_es/blob/eab74d7991cf3acf4e037f3fe444de4ad25bd10b/llama_index_es/embeddings/azure_openai.py",
      "https://github.com/Dfsantana1/llama_index_es/blob/eab74d7991cf3acf4e037f3fe444de4ad25bd10b/llama_index_es/llms/azure_openai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 973162,
    "stars": 0
  },
  {
    "full_name": "groovy-sky/BabbleBox",
    "name": "BabbleBox",
    "description": "A user-friendly CLI tool for dynamic conversations with OpenAI's GPT-3, capable of initiating, managing, and storing multiple chat sessions seamlessly.",
    "html_url": [
      "https://github.com/groovy-sky/BabbleBox/blob/77e3a32997b0bede90a9f31b9cb356847c342af1/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 88,
    "stars": 0
  },
  {
    "full_name": "FardinAhsan146/LLM-Workshop-Content",
    "name": "LLM-Workshop-Content",
    "description": null,
    "html_url": [
      "https://github.com/FardinAhsan146/LLM-Workshop-Content/blob/7d9169812b0b84e2c39edd60e79a9dca579493de/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 127,
    "stars": 0
  },
  {
    "full_name": "skylersaucedo/llamaIndex",
    "name": "llamaIndex",
    "description": null,
    "html_url": [
      "https://github.com/skylersaucedo/llamaIndex/blob/9d65d30ce1e0d579d5546f628ec2fd52500464e1/llama_index/llama_index/embeddings/azure_openai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 961213,
    "stars": 0
  },
  {
    "full_name": "yangguo/ollama-webui",
    "name": "ollama-webui",
    "description": null,
    "html_url": [
      "https://github.com/yangguo/ollama-webui/blob/32396014b28113aa569d44d419d9646f337de757/backend/config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "lissahyacinth/llm_code_understanding",
    "name": "llm_code_understanding",
    "description": "Leaderboard for Function Understanding by LLMs",
    "html_url": [
      "https://github.com/lissahyacinth/llm_code_understanding/blob/a919a2d818d18ed1d91c8f113c8edef280900637/language_evaluator/language_evaluator/backend/openai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 751,
    "stars": 2
  },
  {
    "full_name": "BerlinWong/llm-base-demo",
    "name": "llm-base-demo",
    "description": null,
    "html_url": [
      "https://github.com/BerlinWong/llm-base-demo/blob/bc44bdee7e8e2997231b395c74f2232d72aec283/lang-env/langflow-1_0_a_61/components/OpenAIChatComponent.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 11757,
    "stars": 0
  },
  {
    "full_name": "OatmealLiu/FineR",
    "name": "FineR",
    "description": "[ICLR'24] Democratizing Fine-grained Visual Recognition with Large Language Models",
    "html_url": [
      "https://github.com/OatmealLiu/FineR/blob/6a98db0a487726f1b2ccb2fdc982af0882e766d5/agents/llm_bot.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1425538,
    "stars": 176
  },
  {
    "full_name": "deepglint/Croc",
    "name": "Croc",
    "description": "Croc: Pretraining Large Multimodal Models with Cross-Modal Comprehension",
    "html_url": [
      "https://github.com/deepglint/Croc/blob/e758f86b87cfe71786c587043c794aeb5c128d52/croc/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3237,
    "stars": 23
  },
  {
    "full_name": "JayLZhou/GraphRAG",
    "name": "GraphRAG",
    "description": "In-depth study of the graphrag ",
    "html_url": [
      "https://github.com/JayLZhou/GraphRAG/blob/bcad181e56c7c36dbfbbb0a543dc0da946accd73/Config/LLMConfig.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 8887,
    "stars": 1341
  },
  {
    "full_name": "ShiweiHe0713/TextTransformerAI",
    "name": "TextTransformerAI",
    "description": "Automate text processing and OpenAI API interactions in Python. Transform text files into valuable insights, perfect for developers and content creators. Streamline data cleaning, content generation, and insight extraction with ease",
    "html_url": [
      "https://github.com/ShiweiHe0713/TextTransformerAI/blob/f24efb10d9a859fa58b24e75c4c8fc26397dd875/src/api/to_gpt.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 9989,
    "stars": 1
  },
  {
    "full_name": "tsinghua-fib-lab/CityBench",
    "name": "CityBench",
    "description": "CityBench: Evaluating the Capabilities of Large Language Model as World Model",
    "html_url": [
      "https://github.com/tsinghua-fib-lab/CityBench/blob/222c9e5e35f1aa5488e909250671826a7df2af89/perception/visual/street_view/GPT_4o_API.py",
      "https://github.com/tsinghua-fib-lab/CityBench/blob/222c9e5e35f1aa5488e909250671826a7df2af89/perception/visual/remote_sensing/GPT_4o_API_rs.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 6904,
    "stars": 31
  },
  {
    "full_name": "mcwoodring/chainlit_demo",
    "name": "chainlit_demo",
    "description": "Practical LLM Bootcamp for Developers",
    "html_url": [
      "https://github.com/mcwoodring/chainlit_demo/blob/e4220fe92c23a73b6b5ca7039deedf28c08d5cd3/app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2697,
    "stars": 0
  },
  {
    "full_name": "Vinit-Chandak/Major-Project",
    "name": "Major-Project",
    "description": "All the project files for my MTP - Analysis of LLMs for Visual Understanding",
    "html_url": [
      "https://github.com/Vinit-Chandak/Major-Project/blob/c15d7502cf8585f90082318e61c02ce34156672e/gpt4o.py",
      "https://github.com/Vinit-Chandak/Major-Project/blob/c15d7502cf8585f90082318e61c02ce34156672e/gpt4o/gpt4o.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 28092,
    "stars": 0
  },
  {
    "full_name": "williamgomez71/llama_index_spanish",
    "name": "llama_index_spanish",
    "description": null,
    "html_url": [
      "https://github.com/williamgomez71/llama_index_spanish/blob/3a0eacbb7b739a5d869ef242065f589cfb3b532e/llama_index_spanish/embeddings/azure_openai.py",
      "https://github.com/williamgomez71/llama_index_spanish/blob/3a0eacbb7b739a5d869ef242065f589cfb3b532e/llama_index_spanish/llms/azure_openai.py",
      "https://github.com/williamgomez71/llama_index_spanish/blob/3a0eacbb7b739a5d869ef242065f589cfb3b532e/llama_index_spanish/multi_modal_llms/openai.py",
      "https://github.com/williamgomez71/llama_index_spanish/blob/3a0eacbb7b739a5d869ef242065f589cfb3b532e/llama_index_spanish/llms/openai_utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 446047,
    "stars": 0
  },
  {
    "full_name": "godlejr/LLM-LMM-lecture",
    "name": "LLM-LMM-lecture",
    "description": "LLM/LMM part01/part02/part03 실습코드",
    "html_url": [
      "https://github.com/godlejr/LLM-LMM-lecture/blob/e608d2362804a8b29d350765288bf4052a5766b2/part3/chapter03/visions.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1343,
    "stars": 4
  },
  {
    "full_name": "Candersen27/positionIdentifier",
    "name": "positionIdentifier",
    "description": "Using GPT-4's vision capabilities, Identify the position of a baseball player for computer vision applications in images and video.",
    "html_url": [
      "https://github.com/Candersen27/positionIdentifier/blob/9caed269346b1554d32a66a9a44aeb1c80e04693/image_identifier.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 102,
    "stars": 0
  },
  {
    "full_name": "jvpigozzo/office-items-img-classifier",
    "name": "office-items-img-classifier",
    "description": "This repository contains a implementation of an image classifier API using FastAPI and vision-and-language models",
    "html_url": [
      "https://github.com/jvpigozzo/office-items-img-classifier/blob/3b25281623c8dff17a707a5be80b854f10baa198/app/classifier.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 676,
    "stars": 0
  },
  {
    "full_name": "NVIDIA/garak",
    "name": "garak",
    "description": "the LLM vulnerability scanner",
    "html_url": [
      "https://github.com/NVIDIA/garak/blob/1ee603b3d45722c3a64d331a49cf9b89b3fa5b9d/tests/generators/test_openai.py",
      "https://github.com/NVIDIA/garak/blob/1ee603b3d45722c3a64d331a49cf9b89b3fa5b9d/tests/generators/test_openai_compatible.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 49843,
    "stars": 4574
  },
  {
    "full_name": "ngruver/llmtime",
    "name": "llmtime",
    "description": null,
    "html_url": [
      "https://github.com/ngruver/llmtime/blob/f74234c43e06de78774d94c0974371a87b1c6971/experiments/run_memorization.py",
      "https://github.com/ngruver/llmtime/blob/f74234c43e06de78774d94c0974371a87b1c6971/experiments/run_synthetic.py",
      "https://github.com/ngruver/llmtime/blob/f74234c43e06de78774d94c0974371a87b1c6971/experiments/run_darts.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 15408,
    "stars": 780
  },
  {
    "full_name": "deepcs233/Visual-CoT",
    "name": "Visual-CoT",
    "description": "[Neurips'24 Spotlight] Visual CoT: Advancing Multi-Modal Language Models with a Comprehensive Dataset and Benchmark for Chain-of-Thought Reasoning",
    "html_url": [
      "https://github.com/deepcs233/Visual-CoT/blob/91340a774ce9a2e96a0b1e8a2596c8e3ef0d8c30/llava/eval/eval_cot_score.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 763043,
    "stars": 327
  },
  {
    "full_name": "closedloop-technologies/PromptedGraphs",
    "name": "PromptedGraphs",
    "description": "From Dataset Labeling, Entity Extraction to production Knowledge Graph Deployment: The Power of NLP and LLMs Combined.",
    "html_url": [
      "https://github.com/closedloop-technologies/PromptedGraphs/blob/8a2b9c1c77cadcc89eb22c74500f114069c2ef1f/promptedgraphs/llms/openai_streaming.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 5329,
    "stars": 12
  },
  {
    "full_name": "izoaraman/llm_tabular_data",
    "name": "llm_tabular_data",
    "description": "Using LLM to Explore Tabular Data",
    "html_url": [
      "https://github.com/izoaraman/llm_tabular_data/blob/6e5e5252b90d7dc755b0037ce003be69f38929b7/load_config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 292,
    "stars": 0
  },
  {
    "full_name": "mjunaidca/05-st-financial-assistant",
    "name": "05-st-financial-assistant",
    "description": "\"Financial-Analyst\" is a simple financial analyst project leveraging REST APIs and OpenAI's Assistants API architecture to aid end users with financial analysis.",
    "html_url": [
      "https://github.com/mjunaidca/05-st-financial-assistant/blob/d522882f98f9cf22201f1754dcf5d77f8f56865a/streamlit_app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 455,
    "stars": 1
  },
  {
    "full_name": "scchengaiah/llm-examples",
    "name": "llm-examples",
    "description": null,
    "html_url": [
      "https://github.com/scchengaiah/llm-examples/blob/ccd83b1d44975a15501d996800cd249034ec18ef/06_ai_tools_frameworks/01_ai_powered_search_engine/MindSearch/mindsearch/agent/models.py",
      "https://github.com/scchengaiah/llm-examples/blob/ccd83b1d44975a15501d996800cd249034ec18ef/06_ai_tools_frameworks/01_ai_powered_search_engine/MindSearch/mindsearch/agent/openai_custom.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 63618,
    "stars": 1
  },
  {
    "full_name": "nitesh-jaswal/chatgpt-template-maker",
    "name": "chatgpt-template-maker",
    "description": "Make prompt templates for ChatGPT and host them on a server",
    "html_url": [
      "https://github.com/nitesh-jaswal/chatgpt-template-maker/blob/d5727dc7707390b92de311dd4f53974ad5aa5ec8/py/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 666,
    "stars": 2
  },
  {
    "full_name": "AgentOps-AI/agentops",
    "name": "agentops",
    "description": "Python SDK for AI agent monitoring, LLM cost tracking, benchmarking, and more. Integrates with most LLMs and agent frameworks like CrewAI, Langchain, and Autogen",
    "html_url": [
      "https://github.com/AgentOps-AI/agentops/blob/c3fceb17e4d521e9dc0d352aa19cfb1f3c272019/tests/openai_handlers/_test_gpt_vision.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 44693,
    "stars": 4539
  },
  {
    "full_name": "falgunsinha/zero-shot-time-series-forecasting-with-LLM",
    "name": "zero-shot-time-series-forecasting-with-LLM",
    "description": "Zero Shot Time Series Forecasting With LLM",
    "html_url": [
      "https://github.com/falgunsinha/zero-shot-time-series-forecasting-with-LLM/blob/cf4d652171d202763c4cfdee528f00368c4d8299/experiments/run_memorization.py",
      "https://github.com/falgunsinha/zero-shot-time-series-forecasting-with-LLM/blob/cf4d652171d202763c4cfdee528f00368c4d8299/experiments/run_synthetic.py",
      "https://github.com/falgunsinha/zero-shot-time-series-forecasting-with-LLM/blob/cf4d652171d202763c4cfdee528f00368c4d8299/experiments/run_darts.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 15395,
    "stars": 0
  },
  {
    "full_name": "NVlabs/EAGLE",
    "name": "EAGLE",
    "description": "EAGLE: Exploring The Design Space for Multimodal LLMs with Mixture of Encoders",
    "html_url": [
      "https://github.com/NVlabs/EAGLE/blob/fef95f103b5e9899acbbe2c237e5b99147ab7e8e/lmms_eval/tasks/mmbench/cc_utils.py",
      "https://github.com/NVlabs/EAGLE/blob/fef95f103b5e9899acbbe2c237e5b99147ab7e8e/lmms_eval/tasks/mmbench/cn_utils.py",
      "https://github.com/NVlabs/EAGLE/blob/fef95f103b5e9899acbbe2c237e5b99147ab7e8e/lmms_eval/tasks/ferret/utils.py",
      "https://github.com/NVlabs/EAGLE/blob/fef95f103b5e9899acbbe2c237e5b99147ab7e8e/lmms_eval/tasks/mmvet/utils.py",
      "https://github.com/NVlabs/EAGLE/blob/fef95f103b5e9899acbbe2c237e5b99147ab7e8e/lmms_eval/tasks/mathvista/mathvista_evals.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 55286,
    "stars": 792
  },
  {
    "full_name": "IngoKl/PolyBotConversation",
    "name": "PolyBotConversation",
    "description": "PolyBotConversation is an experimental web application that allows you to have group chat conversations with humans and multiple LLM-powered chatbots with individualized \"personalities.\"",
    "html_url": [
      "https://github.com/IngoKl/PolyBotConversation/blob/fdb41949d94c503bd76aa93f3b87cd72c8b58ac5/chat/llm.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1332,
    "stars": 9
  },
  {
    "full_name": "elbasri/ai_health_management",
    "name": "ai_health_management",
    "description": "The AI-Driven Health Management for Employees module integrates OpenAI's LLM capabilities with the Odoo HR system to offer **intelligent health management tools",
    "html_url": [
      "https://github.com/elbasri/ai_health_management/blob/49ca7c157bca2b2a1dfc98d9b4339c3c87615d6d/models/symptom_checker.py",
      "https://github.com/elbasri/ai_health_management/blob/49ca7c157bca2b2a1dfc98d9b4339c3c87615d6d/models/health_recommendation.py",
      "https://github.com/elbasri/ai_health_management/blob/49ca7c157bca2b2a1dfc98d9b4339c3c87615d6d/models/health_disease_outbreak_prediction.py",
      "https://github.com/elbasri/ai_health_management/blob/49ca7c157bca2b2a1dfc98d9b4339c3c87615d6d/models/health_diagnosis.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1510,
    "stars": 4
  },
  {
    "full_name": "felixn95/llm_text_to_process",
    "name": "llm_text_to_process",
    "description": null,
    "html_url": [
      "https://github.com/felixn95/llm_text_to_process/blob/65a1027dd9e02a2a5f18375eff93d0e56bbc4e53/ActorsExtraction.py",
      "https://github.com/felixn95/llm_text_to_process/blob/65a1027dd9e02a2a5f18375eff93d0e56bbc4e53/WorkflowExtraction.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1773,
    "stars": 1
  },
  {
    "full_name": "EdoardoLuciani/requests-engine",
    "name": "requests-engine",
    "description": "Simple yet powerful library designed for batch LLM inference using API requests",
    "html_url": [
      "https://github.com/EdoardoLuciani/requests-engine/blob/88dcd656d17dbe1318321e1349d65ac358b95a5e/tests/test_all_providers.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 608,
    "stars": 0
  },
  {
    "full_name": "bronyayang/Law_of_Vision_Representation_in_MLLMs",
    "name": "Law_of_Vision_Representation_in_MLLMs",
    "description": "Official implementation of the Law of Vision Representation in MLLMs",
    "html_url": [
      "https://github.com/bronyayang/Law_of_Vision_Representation_in_MLLMs/blob/2e03055eb8d3ed8065190c178c9cb0f294621f29/llava/eval/lmms-eval/lmms_eval/tasks/mmbench/cc_utils.py",
      "https://github.com/bronyayang/Law_of_Vision_Representation_in_MLLMs/blob/2e03055eb8d3ed8065190c178c9cb0f294621f29/llava/eval/lmms-eval/lmms_eval/tasks/mmbench/cn_utils.py",
      "https://github.com/bronyayang/Law_of_Vision_Representation_in_MLLMs/blob/2e03055eb8d3ed8065190c178c9cb0f294621f29/llava/eval/lmms-eval/lmms_eval/models/gpt4v.py",
      "https://github.com/bronyayang/Law_of_Vision_Representation_in_MLLMs/blob/2e03055eb8d3ed8065190c178c9cb0f294621f29/llava/eval/lmms-eval/lmms_eval/tasks/ferret/utils.py",
      "https://github.com/bronyayang/Law_of_Vision_Representation_in_MLLMs/blob/2e03055eb8d3ed8065190c178c9cb0f294621f29/llava/eval/lmms-eval/lmms_eval/tasks/mmvet/utils.py",
      "https://github.com/bronyayang/Law_of_Vision_Representation_in_MLLMs/blob/2e03055eb8d3ed8065190c178c9cb0f294621f29/llava/eval/lmms-eval/lmms_eval/tasks/mathvista/mathvista_evals.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 437784,
    "stars": 155
  },
  {
    "full_name": "EIT-NLP/Connector-Selection-for-MLLM",
    "name": "Connector-Selection-for-MLLM",
    "description": "[EMNLP 2024 Main] Official implementation of the paper \"To Preserve or To Compress: An In-Depth Study of Connector Selection in Multimodal Large Language Models\". (by Junyan Lin)",
    "html_url": [
      "https://github.com/EIT-NLP/Connector-Selection-for-MLLM/blob/b7e4f27fcf8bc1439beecbb7a2d3755b793fc124/lmms-eval/lmms_eval/tasks/mmbench/cc_utils.py",
      "https://github.com/EIT-NLP/Connector-Selection-for-MLLM/blob/b7e4f27fcf8bc1439beecbb7a2d3755b793fc124/lmms-eval/lmms_eval/tasks/mmbench/cn_utils.py",
      "https://github.com/EIT-NLP/Connector-Selection-for-MLLM/blob/b7e4f27fcf8bc1439beecbb7a2d3755b793fc124/lmms-eval/lmms_eval/models/gpt4v.py",
      "https://github.com/EIT-NLP/Connector-Selection-for-MLLM/blob/b7e4f27fcf8bc1439beecbb7a2d3755b793fc124/lmms-eval/lmms_eval/tasks/ferret/utils.py",
      "https://github.com/EIT-NLP/Connector-Selection-for-MLLM/blob/b7e4f27fcf8bc1439beecbb7a2d3755b793fc124/lmms-eval/lmms_eval/tasks/mathvista/mathvista_evals.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 117689,
    "stars": 15
  },
  {
    "full_name": "hasanar1f/HiRED",
    "name": "HiRED",
    "description": "[AAAI 2025] HiRED strategically drops visual tokens in the image encoding stage to improve inference efficiency for High-Resolution Vision-Language Models (e.g., LLaVA-Next) under a fixed token budget.",
    "html_url": [
      "https://github.com/hasanar1f/HiRED/blob/c5810198615603bd07fa7c382db484e08e989401/lmms-eval/lmms_eval/tasks/mmbench/cc_utils.py",
      "https://github.com/hasanar1f/HiRED/blob/c5810198615603bd07fa7c382db484e08e989401/lmms-eval/lmms_eval/tasks/mmbench/cn_utils.py",
      "https://github.com/hasanar1f/HiRED/blob/c5810198615603bd07fa7c382db484e08e989401/lmms-eval/lmms_eval/models/gpt4v.py",
      "https://github.com/hasanar1f/HiRED/blob/c5810198615603bd07fa7c382db484e08e989401/lmms-eval/lmms_eval/tasks/ferret/utils.py",
      "https://github.com/hasanar1f/HiRED/blob/c5810198615603bd07fa7c382db484e08e989401/lmms-eval/lmms_eval/tasks/mmvet/utils.py",
      "https://github.com/hasanar1f/HiRED/blob/c5810198615603bd07fa7c382db484e08e989401/lmms-eval/lmms_eval/tasks/mathvista/mathvista_evals.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1073355,
    "stars": 38
  },
  {
    "full_name": "SHI-Labs/OLA-VLM",
    "name": "OLA-VLM",
    "description": "OLA-VLM: Elevating Perception in Multimodal LLMs with Auxiliary Embedding Distillation, arXiv 2024",
    "html_url": [
      "https://github.com/SHI-Labs/OLA-VLM/blob/ac084684e36d984d8b43c131210f14113db8fdde/lmms-eval/lmms_eval/tasks/mmbench/cc_utils.py",
      "https://github.com/SHI-Labs/OLA-VLM/blob/ac084684e36d984d8b43c131210f14113db8fdde/lmms-eval/lmms_eval/tasks/mmbench/cn_utils.py",
      "https://github.com/SHI-Labs/OLA-VLM/blob/ac084684e36d984d8b43c131210f14113db8fdde/lmms-eval/lmms_eval/models/gpt4v.py",
      "https://github.com/SHI-Labs/OLA-VLM/blob/ac084684e36d984d8b43c131210f14113db8fdde/lmms-eval/lmms_eval/tasks/ferret/utils.py",
      "https://github.com/SHI-Labs/OLA-VLM/blob/ac084684e36d984d8b43c131210f14113db8fdde/lmms-eval/lmms_eval/tasks/llava-bench-coco/utils.py",
      "https://github.com/SHI-Labs/OLA-VLM/blob/ac084684e36d984d8b43c131210f14113db8fdde/lmms-eval/lmms_eval/tasks/mmvet/utils.py",
      "https://github.com/SHI-Labs/OLA-VLM/blob/ac084684e36d984d8b43c131210f14113db8fdde/lmms-eval/lmms_eval/tasks/hallusion_bench/utils.py",
      "https://github.com/SHI-Labs/OLA-VLM/blob/ac084684e36d984d8b43c131210f14113db8fdde/lmms-eval/lmms_eval/tasks/mathvista/mathvista_evals.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 30144,
    "stars": 60
  },
  {
    "full_name": "hasanar1f/llava-hallunication-fix",
    "name": "llava-hallunication-fix",
    "description": "The goal of this project is to mitigate the in context hallucination of LLaVA by tweaking its attention mask during token generation",
    "html_url": [
      "https://github.com/hasanar1f/llava-hallunication-fix/blob/52020d671c93224ab56ba4204421913289a54300/lmms-eval/lmms_eval/tasks/mmbench/cc_utils.py",
      "https://github.com/hasanar1f/llava-hallunication-fix/blob/52020d671c93224ab56ba4204421913289a54300/lmms-eval/lmms_eval/tasks/mmbench/cn_utils.py",
      "https://github.com/hasanar1f/llava-hallunication-fix/blob/52020d671c93224ab56ba4204421913289a54300/lmms-eval/lmms_eval/models/gpt4v.py",
      "https://github.com/hasanar1f/llava-hallunication-fix/blob/52020d671c93224ab56ba4204421913289a54300/lmms-eval/lmms_eval/tasks/ferret/utils.py",
      "https://github.com/hasanar1f/llava-hallunication-fix/blob/52020d671c93224ab56ba4204421913289a54300/lmms-eval/lmms_eval/tasks/mmvet/utils.py",
      "https://github.com/hasanar1f/llava-hallunication-fix/blob/52020d671c93224ab56ba4204421913289a54300/lmms-eval/lmms_eval/tasks/mathvista/mathvista_evals.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1280139,
    "stars": 8
  },
  {
    "full_name": "cambrian-mllm/cambrian",
    "name": "cambrian",
    "description": "Cambrian-1 is a family of multimodal LLMs with a vision-centric design.",
    "html_url": [
      "https://github.com/cambrian-mllm/cambrian/blob/539ffc3254bba004e5d012b65c0ad6cb308897c5/eval/eval/ade/gpt_eval.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 19838,
    "stars": 1911
  },
  {
    "full_name": "luo-junyu/SemiEvol",
    "name": "SemiEvol",
    "description": "SemiEvol: Semi-supervised Fine-tuning for LLM Adaptation",
    "html_url": [
      "https://github.com/luo-junyu/SemiEvol/blob/66e634d675092e8243aa52d49cd4b60f728048ed/config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 163470,
    "stars": 55
  },
  {
    "full_name": "lukestanley/llm_proxy_cache_stats",
    "name": "llm_proxy_cache_stats",
    "description": "Cache requests to OpenAI API and see what requests were made with responses, analytics inspired by Helicone but more simple, currently aimed at development with an easier setup.",
    "html_url": [
      "https://github.com/lukestanley/llm_proxy_cache_stats/blob/178a4d38689f590fb031c92e2b6e79f73636a5f5/ui_utils.py",
      "https://github.com/lukestanley/llm_proxy_cache_stats/blob/178a4d38689f590fb031c92e2b6e79f73636a5f5/cache_openai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 270,
    "stars": 17
  },
  {
    "full_name": "yxKryptonite/OpenFMNav",
    "name": "OpenFMNav",
    "description": "Official implementation of OpenFMNav: Towards Open-Set Zero-Shot Object Navigation via Vision-Language Foundation Models",
    "html_url": [
      "https://github.com/yxKryptonite/OpenFMNav/blob/5b7de07a74a4075e6cd3e5cca83136337bdc846b/agents/llm.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4129,
    "stars": 45
  },
  {
    "full_name": "hitachi-nlp/larch",
    "name": "larch",
    "description": "LARCH: Large Language Model-based Automatic Readme Creation with Heuristics",
    "html_url": [
      "https://github.com/hitachi-nlp/larch/blob/832d36512531c4a55bc3395c7a67bc9d2c7ccdf4/larch/generator/gpt3.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3831,
    "stars": 16
  },
  {
    "full_name": "TiesdeKok/pydata_2023",
    "name": "pydata_2023",
    "description": "Companion materials for my PyData 2023 talk on generative LLMs",
    "html_url": [
      "https://github.com/TiesdeKok/pydata_2023/blob/4411662e784ea43b5fd226e3d81de2b993138b78/log_requests.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 917,
    "stars": 19
  },
  {
    "full_name": "crackernews/crackernews.github.io",
    "name": "crackernews.github.io",
    "description": "A hilarious HackerNews parody, all-generated by GPT-4",
    "html_url": [
      "https://github.com/crackernews/crackernews.github.io/blob/82420d704e1b422c75f2b59cbb5817152a7a6f26/openai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 16312,
    "stars": 8
  },
  {
    "full_name": "shashankyadav03/SQLChain-Interactor",
    "name": "SQLChain-Interactor",
    "description": "Interact with a Postgres SQL database using Python and LangChain. This project demonstrate  how to execute SQL queries using an innovative approach.",
    "html_url": [
      "https://github.com/shashankyadav03/SQLChain-Interactor/blob/4935a2b09458400cf91969414a872d48ff29d013/services/query_generator.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 16376,
    "stars": 2
  },
  {
    "full_name": "aaaanis/GPT4-Vision-Lambda",
    "name": "GPT4-Vision-Lambda",
    "description": "Serverless Image Understanding with OpenAI's GPT-4: A Python-based AWS Lambda Function for Automated Image Descriptions",
    "html_url": [
      "https://github.com/aaaanis/GPT4-Vision-Lambda/blob/5ffd397878dbce0fd085bc2859d624dfb92fa6a6/AI_VISION.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 129,
    "stars": 3
  },
  {
    "full_name": "vastxie/DALL-E-3-Image-Pool",
    "name": "DALL-E-3-Image-Pool",
    "description": "OpenAI DALL-E 3 中转绘图池，基于多 sess/key + 腾讯云，突破频率限制，解决链接失效问题。",
    "html_url": [
      "https://github.com/vastxie/DALL-E-3-Image-Pool/blob/ec2145b6860952b04a299b366d7d7a0b73fdc427/app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "sinqua/Galatea",
    "name": "Galatea",
    "description": "LLM을 곁드린 버추얼 스트리머",
    "html_url": [
      "https://github.com/sinqua/Galatea/blob/e3cdac7224c48a0dd2e1034926763097cc027f02/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "pinilDissanayaka/MultiFetch-AI-Multimodal-RAG-System",
    "name": "MultiFetch-AI-Multimodal-RAG-System",
    "description": "Multimodal RAG System: Integrating Text, Tables, and Images for Enhanced Document Retrieval",
    "html_url": [
      "https://github.com/pinilDissanayaka/MultiFetch-AI-Multimodal-RAG-System/blob/146b43fc171d00fb0e1a448a0e6a074032574983/app/chat_api_handler.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1464,
    "stars": 0
  },
  {
    "full_name": "yudong-94/viz-retriever",
    "name": "viz-retriever",
    "description": "A RAG-based chatbot that retrieves my visualizations",
    "html_url": [
      "https://github.com/yudong-94/viz-retriever/blob/39fdd391041398a7f2b08a5201171c73e9df4a2b/rag_bot_func.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4130,
    "stars": 3
  },
  {
    "full_name": "Fsoft-AIC/LibMoE",
    "name": "LibMoE",
    "description": "LibMoE: A LIBRARY FOR COMPREHENSIVE BENCHMARKING MIXTURE OF EXPERTS IN LARGE LANGUAGE MODELS",
    "html_url": [
      "https://github.com/Fsoft-AIC/LibMoE/blob/d664e0b7ab7f11043ee42abb984c4cf8ad132d13/evaluate/lmms_eval/tasks/mmbench/cc_utils.py",
      "https://github.com/Fsoft-AIC/LibMoE/blob/d664e0b7ab7f11043ee42abb984c4cf8ad132d13/evaluate/lmms_eval/tasks/mmbench/ru_utils.py",
      "https://github.com/Fsoft-AIC/LibMoE/blob/d664e0b7ab7f11043ee42abb984c4cf8ad132d13/evaluate/lmms_eval/tasks/mmbench/en_utils.py",
      "https://github.com/Fsoft-AIC/LibMoE/blob/d664e0b7ab7f11043ee42abb984c4cf8ad132d13/evaluate/lmms_eval/tasks/mmbench/cn_utils.py",
      "https://github.com/Fsoft-AIC/LibMoE/blob/d664e0b7ab7f11043ee42abb984c4cf8ad132d13/evaluate/lmms_eval/tasks/internal_eval/dc200_cn_utils.py",
      "https://github.com/Fsoft-AIC/LibMoE/blob/d664e0b7ab7f11043ee42abb984c4cf8ad132d13/evaluate/lmms_eval/tasks/internal_eval/d170_en_utils.py",
      "https://github.com/Fsoft-AIC/LibMoE/blob/d664e0b7ab7f11043ee42abb984c4cf8ad132d13/evaluate/lmms_eval/tasks/internal_eval/d170_cn_utils.py",
      "https://github.com/Fsoft-AIC/LibMoE/blob/d664e0b7ab7f11043ee42abb984c4cf8ad132d13/evaluate/lmms_eval/tasks/mmupd/utils.py",
      "https://github.com/Fsoft-AIC/LibMoE/blob/d664e0b7ab7f11043ee42abb984c4cf8ad132d13/evaluate/lmms_eval/tasks/llava_wilder/utils.py",
      "https://github.com/Fsoft-AIC/LibMoE/blob/d664e0b7ab7f11043ee42abb984c4cf8ad132d13/evaluate/lmms_eval/tasks/vitatecs/utils.py",
      "https://github.com/Fsoft-AIC/LibMoE/blob/d664e0b7ab7f11043ee42abb984c4cf8ad132d13/evaluate/lmms_eval/models/batch_gpt4.py",
      "https://github.com/Fsoft-AIC/LibMoE/blob/d664e0b7ab7f11043ee42abb984c4cf8ad132d13/evaluate/lmms_eval/tasks/video_detail_description/utils.py",
      "https://github.com/Fsoft-AIC/LibMoE/blob/d664e0b7ab7f11043ee42abb984c4cf8ad132d13/evaluate/lmms_eval/tasks/mmvet/utils.py",
      "https://github.com/Fsoft-AIC/LibMoE/blob/d664e0b7ab7f11043ee42abb984c4cf8ad132d13/evaluate/lmms_eval/tasks/cvrr/utils.py",
      "https://github.com/Fsoft-AIC/LibMoE/blob/d664e0b7ab7f11043ee42abb984c4cf8ad132d13/evaluate/lmms_eval/tasks/worldqa/utils.py",
      "https://github.com/Fsoft-AIC/LibMoE/blob/d664e0b7ab7f11043ee42abb984c4cf8ad132d13/evaluate/lmms_eval/tasks/llava_interleave_bench/utils.py",
      "https://github.com/Fsoft-AIC/LibMoE/blob/d664e0b7ab7f11043ee42abb984c4cf8ad132d13/evaluate/lmms_eval/tasks/videochatgpt/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 39084,
    "stars": 40
  },
  {
    "full_name": "Pythagora-io/gpt-pilot",
    "name": "gpt-pilot",
    "description": "The first real AI developer",
    "html_url": [
      "https://github.com/Pythagora-io/gpt-pilot/blob/19989fbd5b6750ab3246b18cc4802025e758b97e/tests/config/test_config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 20580,
    "stars": 32778
  },
  {
    "full_name": "rese1f/aurora",
    "name": "aurora",
    "description": "🔥 Aurora Series: A more efficient multimodal large language model series for video.",
    "html_url": [
      "https://github.com/rese1f/aurora/blob/c60c9657ae46c47c65d2b7f1d79f4fac500f3da1/src/lmms-eval/lmms_eval/tasks/mmbench/cc_utils.py",
      "https://github.com/rese1f/aurora/blob/c60c9657ae46c47c65d2b7f1d79f4fac500f3da1/src/lmms-eval/lmms_eval/tasks/mmbench/ru_utils.py",
      "https://github.com/rese1f/aurora/blob/c60c9657ae46c47c65d2b7f1d79f4fac500f3da1/src/lmms-eval/lmms_eval/tasks/mmbench/en_utils.py",
      "https://github.com/rese1f/aurora/blob/c60c9657ae46c47c65d2b7f1d79f4fac500f3da1/src/lmms-eval/lmms_eval/tasks/internal_eval/dc200_cn_utils.py",
      "https://github.com/rese1f/aurora/blob/c60c9657ae46c47c65d2b7f1d79f4fac500f3da1/src/lmms-eval/lmms_eval/tasks/internal_eval/d170_en_utils.py",
      "https://github.com/rese1f/aurora/blob/c60c9657ae46c47c65d2b7f1d79f4fac500f3da1/src/lmms-eval/lmms_eval/tasks/internal_eval/d170_cn_utils.py",
      "https://github.com/rese1f/aurora/blob/c60c9657ae46c47c65d2b7f1d79f4fac500f3da1/src/lmms-eval/lmms_eval/tasks/mmupd/utils.py",
      "https://github.com/rese1f/aurora/blob/c60c9657ae46c47c65d2b7f1d79f4fac500f3da1/src/lmms-eval/LLaVA-NeXT/llava/utils.py",
      "https://github.com/rese1f/aurora/blob/c60c9657ae46c47c65d2b7f1d79f4fac500f3da1/src/lmms-eval/lmms_eval/tasks/llava_wilder/utils.py",
      "https://github.com/rese1f/aurora/blob/c60c9657ae46c47c65d2b7f1d79f4fac500f3da1/src/lmms-eval/lmms_eval/tasks/live_bench/utils.py",
      "https://github.com/rese1f/aurora/blob/c60c9657ae46c47c65d2b7f1d79f4fac500f3da1/src/lmms-eval/lmms_eval/tasks/vitatecs/utils.py",
      "https://github.com/rese1f/aurora/blob/c60c9657ae46c47c65d2b7f1d79f4fac500f3da1/src/lmms-eval/lmms_eval/models/batch_gpt4.py",
      "https://github.com/rese1f/aurora/blob/c60c9657ae46c47c65d2b7f1d79f4fac500f3da1/src/lmms-eval/lmms_eval/tasks/video_detail_description/utils.py",
      "https://github.com/rese1f/aurora/blob/c60c9657ae46c47c65d2b7f1d79f4fac500f3da1/src/lmms-eval/lmms_eval/tasks/mmvet/utils.py",
      "https://github.com/rese1f/aurora/blob/c60c9657ae46c47c65d2b7f1d79f4fac500f3da1/src/lmms-eval/lmms_eval/tasks/cvrr/utils.py",
      "https://github.com/rese1f/aurora/blob/c60c9657ae46c47c65d2b7f1d79f4fac500f3da1/src/lmms-eval/lmms_eval/tasks/worldqa/utils.py",
      "https://github.com/rese1f/aurora/blob/c60c9657ae46c47c65d2b7f1d79f4fac500f3da1/src/lmms-eval/lmms_eval/tasks/tempcompass/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 166810,
    "stars": 110
  },
  {
    "full_name": "codefanw/FlashSloth",
    "name": "FlashSloth",
    "description": "The official implement of \"FlashSloth: Lightning Multimodal Large Language Models via Embedded Visual Compression\"",
    "html_url": [
      "https://github.com/codefanw/FlashSloth/blob/b23522e7d5d991a4c4b852833af109dd4c5b999f/lmms_eval/tasks/mmbench/cc_utils.py",
      "https://github.com/codefanw/FlashSloth/blob/b23522e7d5d991a4c4b852833af109dd4c5b999f/lmms_eval/tasks/mmbench/ru_utils.py",
      "https://github.com/codefanw/FlashSloth/blob/b23522e7d5d991a4c4b852833af109dd4c5b999f/lmms_eval/tasks/mmbench/en_utils.py",
      "https://github.com/codefanw/FlashSloth/blob/b23522e7d5d991a4c4b852833af109dd4c5b999f/lmms_eval/tasks/internal_eval/dc200_cn_utils.py",
      "https://github.com/codefanw/FlashSloth/blob/b23522e7d5d991a4c4b852833af109dd4c5b999f/lmms_eval/tasks/internal_eval/d170_en_utils.py",
      "https://github.com/codefanw/FlashSloth/blob/b23522e7d5d991a4c4b852833af109dd4c5b999f/lmms_eval/tasks/internal_eval/d170_cn_utils.py",
      "https://github.com/codefanw/FlashSloth/blob/b23522e7d5d991a4c4b852833af109dd4c5b999f/lmms_eval/tasks/mmupd/utils.py",
      "https://github.com/codefanw/FlashSloth/blob/b23522e7d5d991a4c4b852833af109dd4c5b999f/lmms_eval/tasks/llava_wilder/utils.py",
      "https://github.com/codefanw/FlashSloth/blob/b23522e7d5d991a4c4b852833af109dd4c5b999f/lmms_eval/tasks/live_bench/utils.py",
      "https://github.com/codefanw/FlashSloth/blob/b23522e7d5d991a4c4b852833af109dd4c5b999f/lmms_eval/tasks/vitatecs/utils.py",
      "https://github.com/codefanw/FlashSloth/blob/b23522e7d5d991a4c4b852833af109dd4c5b999f/lmms_eval/models/batch_gpt4.py",
      "https://github.com/codefanw/FlashSloth/blob/b23522e7d5d991a4c4b852833af109dd4c5b999f/lmms_eval/tasks/video_detail_description/utils.py",
      "https://github.com/codefanw/FlashSloth/blob/b23522e7d5d991a4c4b852833af109dd4c5b999f/lmms_eval/tasks/mmvet/utils.py",
      "https://github.com/codefanw/FlashSloth/blob/b23522e7d5d991a4c4b852833af109dd4c5b999f/lmms_eval/models/gpt4v.py",
      "https://github.com/codefanw/FlashSloth/blob/b23522e7d5d991a4c4b852833af109dd4c5b999f/lmms_eval/tasks/cvrr/utils.py",
      "https://github.com/codefanw/FlashSloth/blob/b23522e7d5d991a4c4b852833af109dd4c5b999f/lmms_eval/tasks/worldqa/utils.py",
      "https://github.com/codefanw/FlashSloth/blob/b23522e7d5d991a4c4b852833af109dd4c5b999f/lmms_eval/tasks/activitynetqa/utils.py",
      "https://github.com/codefanw/FlashSloth/blob/b23522e7d5d991a4c4b852833af109dd4c5b999f/lmms_eval/tasks/tempcompass/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 82177,
    "stars": 42
  },
  {
    "full_name": "c0sogi/llama-api",
    "name": "llama-api",
    "description": "An OpenAI-like LLaMA inference API",
    "html_url": [
      "https://github.com/c0sogi/llama-api/blob/6b254fdaab2ac2337e6b93d910b41a96f8de2a80/llama_api/utils/reverse_proxy.py",
      "https://github.com/c0sogi/llama-api/blob/6b254fdaab2ac2337e6b93d910b41a96f8de2a80/llama_api/schemas/models.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 8732,
    "stars": 112
  },
  {
    "full_name": "ptarau/recursors",
    "name": "recursors",
    "description": "Full Automation of Goal-driven LLM Dialog Threads with And-Or Recursors and Refiner Oracles",
    "html_url": [
      "https://github.com/ptarau/recursors/blob/27f322554f3f22f05c79db4d55b072862bd6d657/deepllm/params.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 14497,
    "stars": 44
  },
  {
    "full_name": "plantree/ChatGPT-Web",
    "name": "ChatGPT-Web",
    "description": "A web client for ChatGPT based on official API.",
    "html_url": [
      "https://github.com/plantree/ChatGPT-Web/blob/141141bdeb522dcb0d57f92afe07af9e2a11be02/Server/api/index.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4188,
    "stars": 5
  },
  {
    "full_name": "labrijisaad/LLM-RAG",
    "name": "LLM-RAG",
    "description": "A Dockerized Streamlit app leveraging a RAG LLM with FAISS to offer answers from uploaded markdown files, deployed on GCP Cloud.",
    "html_url": [
      "https://github.com/labrijisaad/LLM-RAG/blob/ee0d88fb8bfc2ba95f0cb167ffd9b3495ee640d8/src/models/inference.py",
      "https://github.com/labrijisaad/LLM-RAG/blob/ee0d88fb8bfc2ba95f0cb167ffd9b3495ee640d8/src/models/vectorization.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2162,
    "stars": 21
  },
  {
    "full_name": "GeorgeNance/gpt-caption",
    "name": "gpt-caption",
    "description": "Auto caption images for training in Stable Diffusion",
    "html_url": [
      "https://github.com/GeorgeNance/gpt-caption/blob/6fa423913bba59b7f741114ef3524d0b011e391a/caption.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 128,
    "stars": 2
  },
  {
    "full_name": "krglkvrmn/openai_api_ui_backend",
    "name": "openai_api_ui_backend",
    "description": "Backend part of openai API UI app implemented with FastAPI",
    "html_url": [
      "https://github.com/krglkvrmn/openai_api_ui_backend/blob/d032b1c9abb95eb2d4545c925b64f4a2bcac1ed7/app/core/settings.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2068,
    "stars": 0
  },
  {
    "full_name": "israelkingz/kagglex_ML_LLM_project",
    "name": "kagglex_ML_LLM_project",
    "description": "This is my final project for the Kagglex project which focus on Utilizing Larger Language Models (LLM) for Real-time Credit Card Fraud Detection: An Innovative Fusion of Machine Learning and NLP Feedback Mechanisms",
    "html_url": [
      "https://github.com/israelkingz/kagglex_ML_LLM_project/blob/57f116857a78c3b5e73ad5b641df35af6c690403/credit_card_deploy_LLM/temp_app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 663,
    "stars": 0
  },
  {
    "full_name": "johannestang/llamaxing",
    "name": "llamaxing",
    "description": "Modular FastAPI-based API gateway for OpenAI compatible APIs.",
    "html_url": [
      "https://github.com/johannestang/llamaxing/blob/f2ff1c94438b0b1039dca6bc8fdafddf49ebf60e/llamaxing/llm/provider/openai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2715,
    "stars": 6
  },
  {
    "full_name": "alxc75/docuchat",
    "name": "docuchat",
    "description": "DocuChat is a locally-hosted application to summarize and chat with your documents. Use the OpenAI API or run models locally for 100% free usage. You can even query multiple documents thanks to SOTA RAG integrations.",
    "html_url": [
      "https://github.com/alxc75/docuchat/blob/3df726cfc7ff1c43a1c1b47c217b3f7325ab38bc/pages/2_Settings.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1083,
    "stars": 2
  },
  {
    "full_name": "fako/aiscope",
    "name": "aiscope",
    "description": "A Datascope project that is geared towards using AI and specifically Large Language Models (LLM).",
    "html_url": [
      "https://github.com/fako/aiscope/blob/6744895e94fabf9b8c2a32becf6cdb89260387b1/aiscope/core/openai/resources/embeddings.py",
      "https://github.com/fako/aiscope/blob/6744895e94fabf9b8c2a32becf6cdb89260387b1/aiscope/core/tests/prompts/test_openai.py",
      "https://github.com/fako/aiscope/blob/6744895e94fabf9b8c2a32becf6cdb89260387b1/aiscope/core/tests/embeddings/test_openai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 24437,
    "stars": 0
  },
  {
    "full_name": "avianinc/webui_ollama",
    "name": "webui_ollama",
    "description": null,
    "html_url": [
      "https://github.com/avianinc/webui_ollama/blob/696c6ccfc66f6ef2f115ef6a8c130410568479cf/pipelines/examples/pipelines/providers/openai_manifold_pipeline.py",
      "https://github.com/avianinc/webui_ollama/blob/696c6ccfc66f6ef2f115ef6a8c130410568479cf/pipelines/examples/filters/llm_translate_filter_pipeline.py",
      "https://github.com/avianinc/webui_ollama/blob/696c6ccfc66f6ef2f115ef6a8c130410568479cf/pipelines/blueprints/function_calling_blueprint.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3834,
    "stars": 0
  },
  {
    "full_name": "Baltsat/QnA-RAG-system",
    "name": "QnA-RAG-system",
    "description": "Разработка QnA чат-бота на основе базы знаний",
    "html_url": [
      "https://github.com/Baltsat/QnA-RAG-system/blob/821d462dbcd26b73c48a9179493cebb0521892de/webui-pipelines/examples/pipelines/providers/openai_manifold_pipeline.py",
      "https://github.com/Baltsat/QnA-RAG-system/blob/821d462dbcd26b73c48a9179493cebb0521892de/webui-pipelines/examples/filters/llm_translate_filter_pipeline.py",
      "https://github.com/Baltsat/QnA-RAG-system/blob/821d462dbcd26b73c48a9179493cebb0521892de/webui-pipelines/blueprints/function_calling_blueprint.py",
      "https://github.com/Baltsat/QnA-RAG-system/blob/821d462dbcd26b73c48a9179493cebb0521892de/ai-hack-webui/backend/open_webui/apps/rag/utils.py",
      "https://github.com/Baltsat/QnA-RAG-system/blob/821d462dbcd26b73c48a9179493cebb0521892de/ai-hack-webui/backend/open_webui/apps/openai/main.py",
      "https://github.com/Baltsat/QnA-RAG-system/blob/821d462dbcd26b73c48a9179493cebb0521892de/ai-hack-webui/backend/open_webui/config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 40307,
    "stars": 0
  },
  {
    "full_name": "OpenBMB/MiniCPM-V",
    "name": "MiniCPM-V",
    "description": "MiniCPM-V 2.6: A GPT-4V Level MLLM for Single Image, Multi Image and Video on Your Phone",
    "html_url": [
      "https://github.com/OpenBMB/MiniCPM-V/blob/8464c94a7b76615705e8a41b23ba3eb59de796b7/omnilmm/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 42181,
    "stars": 19608
  },
  {
    "full_name": "ggoonnzzaallo/llm_experiments",
    "name": "llm_experiments",
    "description": "I play with my best friend GPT",
    "html_url": [
      "https://github.com/ggoonnzzaallo/llm_experiments/blob/66b3b21d7f5841b732189244f9c09a22b1761c08/button.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 274,
    "stars": 295
  },
  {
    "full_name": "JerryMazeyu/MCM",
    "name": "MCM",
    "description": "MCM(Multimodal Chinese Medical LLM)多模态中医问诊大模型",
    "html_url": [
      "https://github.com/JerryMazeyu/MCM/blob/522dc95ded6a3891cf720646586d81dcfbafbeb3/libs/llava/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 127833,
    "stars": 112
  },
  {
    "full_name": "abdur75648/ferret-finetuning",
    "name": "ferret-finetuning",
    "description": "Finetuning Ferret On Custom Dataset",
    "html_url": [
      "https://github.com/abdur75648/ferret-finetuning/blob/d6858426bc5ee639bb210a2410c0327cc402a0f8/ferret/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 6665,
    "stars": 1
  },
  {
    "full_name": "docdyhr/DALL-E-Image-Generator-Script",
    "name": "DALL-E-Image-Generator-Script",
    "description": "Python script for generating and downloading customized images using OpenAI's DALL-E with various options for model, quality, and style.",
    "html_url": [
      "https://github.com/docdyhr/DALL-E-Image-Generator-Script/blob/37ee7a400ced2558f791e1685f199953873de1b9/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 208,
    "stars": 0
  },
  {
    "full_name": "UCSC-VLAA/vllm-safety-benchmark",
    "name": "vllm-safety-benchmark",
    "description": "[ECCV 2024] Official PyTorch Implementation of \"How Many Unicorns Are in This Image? A Safety Evaluation Benchmark for Vision LLMs\"",
    "html_url": [
      "https://github.com/UCSC-VLAA/vllm-safety-benchmark/blob/ef1aba1d43098731e45f97f7923bc208be6e1f87/baselines/mplug_owl2_utils/utils.py",
      "https://github.com/UCSC-VLAA/vllm-safety-benchmark/blob/ef1aba1d43098731e45f97f7923bc208be6e1f87/baselines/mplug_owl2_utils/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 28101,
    "stars": 81
  },
  {
    "full_name": "X-PLUG/mPLUG-Owl",
    "name": "mPLUG-Owl",
    "description": "mPLUG-Owl: The Powerful Multi-modal Large Language Model  Family",
    "html_url": [
      "https://github.com/X-PLUG/mPLUG-Owl/blob/7ae85deeebb3942a09b9e2c0e24c27b5c143d9f8/mPLUG-Owl2/mplug_owl2/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 19446,
    "stars": 2482
  },
  {
    "full_name": "Picsart-AI-Research/OpenBias",
    "name": "OpenBias",
    "description": "[CVPR 2024 Highlight] OpenBias: Open-set Bias Detection in Text-to-Image Generative Models",
    "html_url": [
      "https://github.com/Picsart-AI-Research/OpenBias/blob/19b032feb506d5becc32a0d7861966583d20a30e/utils/llava/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 14744,
    "stars": 24
  },
  {
    "full_name": "luka-group/mDPO",
    "name": "mDPO",
    "description": "[EMNLP 2024] mDPO: Conditional Preference Optimization for Multimodal Large Language Models.",
    "html_url": [
      "https://github.com/luka-group/mDPO/blob/2221bb317a29dfe0f8d2c710cd8572e9d7ec101a/bunny/bunny_utils/util/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2885,
    "stars": 75
  },
  {
    "full_name": "ericrisco/twilio-realtime-openai-rag",
    "name": "twilio-realtime-openai-rag",
    "description": "This project integrates Twilio with OpenAI's Retrieval-Augmented Generation (RAG) model for real-time communication. It enables users to leverage the power of OpenAI's language models to deliver dynamic, context-aware responses via Twilio's voice platforms, enhancing customer interaction and support with real-time AI-driven solutions.",
    "html_url": [
      "https://github.com/ericrisco/twilio-realtime-openai-rag/blob/d328b7a69d94584691b4ec5144d2913c745b70fb/routers/stream.py",
      "https://github.com/ericrisco/twilio-realtime-openai-rag/blob/d328b7a69d94584691b4ec5144d2913c745b70fb/routers/stream.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 549,
    "stars": 34
  },
  {
    "full_name": "xuwei95/ezdata",
    "name": "ezdata",
    "description": "基于python和llm大模型开发的数据处理和任务调度系统。 支持数据源管理，数据模型管理，数据集成，数据查询API接口，低代码自定义数据处理任务模版，单任务及dag任务工作流调度等功能。集成了llm模块实现rag知识库问答，链接各数据源数据进行数据对话问答，交互式数据分析功能。",
    "html_url": [
      "https://github.com/xuwei95/ezdata/blob/96792dbddf9e4136a6105183812f4920b5250338/web_apps/llm/llm_utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 147809,
    "stars": 209
  },
  {
    "full_name": "mbzuai-oryx/GeoChat",
    "name": "GeoChat",
    "description": "[CVPR 2024 🔥] GeoChat, the first grounded Large Vision Language Model for Remote Sensing",
    "html_url": [
      "https://github.com/mbzuai-oryx/GeoChat/blob/4850920e005a849bd224d0ce35aa9db031fa5155/geochat/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 6589,
    "stars": 581
  },
  {
    "full_name": "sled-group/driVLMe",
    "name": "driVLMe",
    "description": "[IROS 2024] Official implementation of paper: DriVLMe: \"Enhancing LLM-based Autonomous Driving Agents with Embodied and Social Experience\"s",
    "html_url": [
      "https://github.com/sled-group/driVLMe/blob/4bdcc6b1f239e1a16ec7757da80747f8f2aeb00e/drivlme/utils.py",
      "https://github.com/sled-group/driVLMe/blob/4bdcc6b1f239e1a16ec7757da80747f8f2aeb00e/drivlme/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 60428,
    "stars": 31
  },
  {
    "full_name": "zhanwenchen/vtom",
    "name": "vtom",
    "description": "\"Video-ChatGPT\" is a video conversation model capable of generating meaningful conversation about videos. It combines the capabilities of LLMs with a pretrained visual encoder adapted for spatiotemporal video representation. We also introduce a rigorous 'Quantitative Evaluation Benchmarking' for video-based conversational models.",
    "html_url": [
      "https://github.com/zhanwenchen/vtom/blob/8c9cdaed3c0175e11ddb6ed12c771c4f5cbda4fd/video_chatgpt/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 23424,
    "stars": 0
  },
  {
    "full_name": "jaehong31/RACCooN",
    "name": "RACCooN",
    "description": "(arXiv.2405.18406) RACCooN: A Versatile Instructional Video Editing Framework with Auto-Generated Narratives",
    "html_url": [
      "https://github.com/jaehong31/RACCooN/blob/f93d3afe08cb2011f6ad7eaff8ea06e289db444a/p2v/LLaVA/llava/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 50991,
    "stars": 36
  },
  {
    "full_name": "xmed-lab/MedRegA",
    "name": "MedRegA",
    "description": "MedRegA: Interpretable Bilingual Multimodal Large Language Model for Diverse Biomedical Tasks",
    "html_url": [
      "https://github.com/xmed-lab/MedRegA/blob/162163a67f91578fa1a3320b966b9a97e25cdbff/src/internvl/serve/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 11822,
    "stars": 33
  },
  {
    "full_name": "chenxshuo/RedTeamingGPT4V",
    "name": "RedTeamingGPT4V",
    "description": "Code and Benchmark for the paper \"Red Teaming GPT-4V: Are GPT-4V Safe Against Uni/Multi-Modal Jailbreak Attacks?\"",
    "html_url": [
      "https://github.com/chenxshuo/RedTeamingGPT4V/blob/b6472afe310c24a41bf2105768fd8e8ddba474f2/src/jailbreak_benchmark/models/vlms/mplug_owl2/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 458848,
    "stars": 3
  },
  {
    "full_name": "VITA-MLLM/VITA",
    "name": "VITA",
    "description": "✨✨VITA: Towards Open-Source Interactive Omni Multimodal LLM",
    "html_url": [
      "https://github.com/VITA-MLLM/VITA/blob/86093db5de3c9aa43ec8ea39b169affb5b2ee1ad/vita/util/utils.py",
      "https://github.com/VITA-MLLM/VITA/blob/86093db5de3c9aa43ec8ea39b169affb5b2ee1ad/vita/util/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 197994,
    "stars": 2317
  },
  {
    "full_name": "mia-platform/ai-rag-template",
    "name": "ai-rag-template",
    "description": null,
    "html_url": [
      "https://github.com/mia-platform/ai-rag-template/blob/2b6ea7d87039a5b0a751fe7e2717f3bc1568da39/tests/src/application/assistance/chains/retriever_chain_test.py",
      "https://github.com/mia-platform/ai-rag-template/blob/2b6ea7d87039a5b0a751fe7e2717f3bc1568da39/tests/src/application/assistance/assistance_service_test.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 5436,
    "stars": 14
  },
  {
    "full_name": "HJYao00/DenseConnector",
    "name": "DenseConnector",
    "description": "【NeurIPS 2024】Dense Connector for MLLMs",
    "html_url": [
      "https://github.com/HJYao00/DenseConnector/blob/0f8936c47bd785eaaa23ba498b465a0bf026e3b8/dc/utils.py",
      "https://github.com/HJYao00/DenseConnector/blob/0f8936c47bd785eaaa23ba498b465a0bf026e3b8/dc/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 30387,
    "stars": 166
  },
  {
    "full_name": "RLHF-V/RLAIF-V",
    "name": "RLAIF-V",
    "description": "RLAIF-V: Aligning MLLMs through Open-Source AI Feedback for Super GPT-4V Trustworthiness",
    "html_url": [
      "https://github.com/RLHF-V/RLAIF-V/blob/7646a2624693b644bef72c9b13602780d5600a53/muffin/utils.py",
      "https://github.com/RLHF-V/RLAIF-V/blob/7646a2624693b644bef72c9b13602780d5600a53/omnilmm/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 12551,
    "stars": 376
  },
  {
    "full_name": "AdaCheng/EgoThink",
    "name": "EgoThink",
    "description": "[CVPR'24 Highlight] The official code and data for paper \"EgoThink: Evaluating First-Person Perspective Thinking Capability of Vision-Language Models\"",
    "html_url": [
      "https://github.com/AdaCheng/EgoThink/blob/5aad67bdb98378792373cdbb6543902297336aba/models/lego/utils.py",
      "https://github.com/AdaCheng/EgoThink/blob/5aad67bdb98378792373cdbb6543902297336aba/models/pg_video_llava/video_chatgpt/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 249865,
    "stars": 59
  },
  {
    "full_name": "superagi/Veagle",
    "name": "Veagle",
    "description": "Enhancement in Multimodal Representation Learning. ",
    "html_url": [
      "https://github.com/superagi/Veagle/blob/a497cd1bd704a831a6fdf702220057d296a684e8/mPLUG-Owl2/mplug_owl2/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 14951,
    "stars": 40
  },
  {
    "full_name": "rikeilong/Bay-CAT",
    "name": "Bay-CAT",
    "description": "[ECCV’24] Official Implementation for CAT: Enhancing Multimodal Large Language Model to Answer Questions in Dynamic Audio-Visual Scenarios",
    "html_url": [
      "https://github.com/rikeilong/Bay-CAT/blob/a568f2de85b4078b7edbf0accf64a5d0ea93a42c/ADPO_CAT/model/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1693770,
    "stars": 53
  },
  {
    "full_name": "user074/lvm_vision",
    "name": "lvm_vision",
    "description": "A better vision encoder for Language Vision Models",
    "html_url": [
      "https://github.com/user074/lvm_vision/blob/baea3f693ef82a4fa0c88837a1c73dfeaca25e34/MMVP-main/LLaVA/llava/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 16898,
    "stars": 0
  },
  {
    "full_name": "LeeBumSeok/SequencialPrune",
    "name": "SequencialPrune",
    "description": "Sequential Prune: Progressive Visual Token Reduction for Improving the Inference Efficiency of Large Vision-Language Models",
    "html_url": [
      "https://github.com/LeeBumSeok/SequencialPrune/blob/0898f4a23a6ea974189f9c8fa2179e0acc93a1ec/SequentialPrune/src/LLaVA/llava/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 887058,
    "stars": 0
  },
  {
    "full_name": "huangb23/VTimeLLM",
    "name": "VTimeLLM",
    "description": "[CVPR'2024 Highlight] Official PyTorch implementation of the paper \"VTimeLLM: Empower LLM to Grasp Video Moments\".",
    "html_url": [
      "https://github.com/huangb23/VTimeLLM/blob/c34ae56455c470ecbe002cbc53e30d5e67b03948/vtimellm/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4977,
    "stars": 280
  },
  {
    "full_name": "thu-ml/MMTrustEval",
    "name": "MMTrustEval",
    "description": "A toolbox for benchmarking trustworthiness of multimodal large language models (MultiTrust, NeurIPS 2024 Track Datasets and Benchmarks) ",
    "html_url": [
      "https://github.com/thu-ml/MMTrustEval/blob/ea3d5c350abaaf83708f2af5cd1b09762147b2cb/mmte/models/mPLUG_Owl/mPLUG_Owl2/mplug_owl2/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 51764,
    "stars": 147
  },
  {
    "full_name": "patrick-tssn/VideoHallucer",
    "name": "VideoHallucer",
    "description": "VideoHallucer, The first comprehensive benchmark for hallucination detection in large video-language models (LVLMs)",
    "html_url": [
      "https://github.com/patrick-tssn/VideoHallucer/blob/0edde222ab6c6255b059815217a98d83aeac3c40/baselines/video_chatgpt/utils.py",
      "https://github.com/patrick-tssn/VideoHallucer/blob/0edde222ab6c6255b059815217a98d83aeac3c40/baselines/videollava/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 116099,
    "stars": 30
  },
  {
    "full_name": "360CVGroup/Inner-Adaptor-Architecture",
    "name": "Inner-Adaptor-Architecture",
    "description": "LMM which strictly superset LLM embedded",
    "html_url": [
      "https://github.com/360CVGroup/Inner-Adaptor-Architecture/blob/0ddba1a63e6a71c8846dc050157bd4a4f9ed95b5/iaa/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 5039,
    "stars": 43
  },
  {
    "full_name": "maitrix-org/Pandora",
    "name": "Pandora",
    "description": "Pandora: Towards General World Model with Natural Language Actions and Video States",
    "html_url": [
      "https://github.com/maitrix-org/Pandora/blob/b1775f1e2ba19014445809c0af3bc5d153c1b183/ChatUniVi/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1140139,
    "stars": 505
  },
  {
    "full_name": "Proxysaints/LLM",
    "name": "LLM",
    "description": null,
    "html_url": [
      "https://github.com/Proxysaints/LLM/blob/8310b38aa909748368774bd88c7fa6ee26d02f4b/vita/util/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 16276,
    "stars": 0
  },
  {
    "full_name": "heldJan/X-VARS",
    "name": "X-VARS",
    "description": "X-VARS is a multi-modal large language model designed for understanding football videos from the point of view of a referee. X-VARS can perform a multitude of tasks, including video description, question answering, action recognition, and conducting meaningful conversations based on video content.",
    "html_url": [
      "https://github.com/heldJan/X-VARS/blob/5a9b8e48790bf238bcb8a5b7eaa4993ed4411c88/X-VARS/video_chatgpt/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3223,
    "stars": 17
  },
  {
    "full_name": "X-PLUG/mPLUG-DocOwl",
    "name": "mPLUG-DocOwl",
    "description": "mPLUG-DocOwl: Modularized Multimodal Large Language Model for Document Understanding",
    "html_url": [
      "https://github.com/X-PLUG/mPLUG-DocOwl/blob/fab2fd7214a736794341b1451b0befbad99067ae/TinyChart/tinychart/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 17713,
    "stars": 2197
  },
  {
    "full_name": "jekalmin/extended_openai_conversation",
    "name": "extended_openai_conversation",
    "description": "Home Assistant custom component of conversation agent. It uses OpenAI to control your devices.",
    "html_url": [
      "https://github.com/jekalmin/extended_openai_conversation/blob/a7ac05d0ed29da08bf55535e2abe0d894f066cbc/custom_components/extended_openai_conversation/const.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4530,
    "stars": 1168
  },
  {
    "full_name": "OpenRobotLab/Grounded_3D-LLM",
    "name": "Grounded_3D-LLM",
    "description": "Code&Data for Grounded 3D-LLM with Referent Tokens",
    "html_url": [
      "https://github.com/OpenRobotLab/Grounded_3D-LLM/blob/6e50e5e0c0e8145cdae5753b65cbac54a368c7db/data_gen/data_utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 25874,
    "stars": 119
  },
  {
    "full_name": "KF-R/turk-chat",
    "name": "turk-chat",
    "description": "Lightweight speech-to-speech web-based chat app combining speech recognition, LLM completion and text-to-speech.  Implemented with Python (Flask) and vanilla JavaScript only.",
    "html_url": [
      "https://github.com/KF-R/turk-chat/blob/53e28a57373a74c5fb2a6741a13fef56f628d9e5/api_llm.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1192,
    "stars": 3
  },
  {
    "full_name": "ghostofpokemon/oCaption",
    "name": "oCaption",
    "description": "oCaption: Leveraging OpenAI's GPT-4 Vision for Advanced Image Captioning",
    "html_url": [
      "https://github.com/ghostofpokemon/oCaption/blob/1d3a081791d1766b86a2fcc93fb62148039b4e33/oCaption.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 117,
    "stars": 12
  },
  {
    "full_name": "freesky01/Visual-Question-Decomposition",
    "name": "Visual-Question-Decomposition",
    "description": "Data and code for EMNLP 2024 Findings paper \"Visual Question Decomposition on Multimodal Large Language Models\"",
    "html_url": [
      "https://github.com/freesky01/Visual-Question-Decomposition/blob/440f591fae783980f3ca4659d188ec57f29d605c/evaluation/vqd_eval.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3042746,
    "stars": 6
  },
  {
    "full_name": "brianpeiris/chatgpt-groupchat",
    "name": "chatgpt-groupchat",
    "description": "Join a group chat with random personalities, using ChatGPT",
    "html_url": [
      "https://github.com/brianpeiris/chatgpt-groupchat/blob/2adbfddb568bd5af6e9ea40d28abd97491e3daf7/groupchat.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 195,
    "stars": 1
  },
  {
    "full_name": "SixArm/html-span-data-chatgpt-prompt",
    "name": "html-span-data-chatgpt-prompt",
    "description": "HTML span data-chatgpt-prompt autocomplete via Python and OpenAI.com ChatGPT API ",
    "html_url": [
      "https://github.com/SixArm/html-span-data-chatgpt-prompt/blob/0711d83bdab0f022d6ff014b325fd37aef1102aa/bin/html-span-data-chatgpt-prompt"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 222,
    "stars": 2
  },
  {
    "full_name": "Raj-Shah-20/LLM-WebApp",
    "name": "LLM-WebApp",
    "description": "A web application that processes and extracts information from a set of call logs using an LLM.",
    "html_url": [
      "https://github.com/Raj-Shah-20/LLM-WebApp/blob/e6caaeb34336edb0192c53d88e6bb2bee311043a/app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 225,
    "stars": 0
  },
  {
    "full_name": "Kiriweb/financial_analysis_py_openai",
    "name": "financial_analysis_py_openai",
    "description": "Interactive Financial Stock Market Comparative Analysis Tool",
    "html_url": [
      "https://github.com/Kiriweb/financial_analysis_py_openai/blob/b9c25261a00cba094e928a8352f1322537ad5780/Financial-Analysis-Tool.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 140,
    "stars": 0
  },
  {
    "full_name": "AlejoPrietoDavalos/oaikit",
    "name": "oaikit",
    "description": "Python wrapper for OpenAI API.",
    "html_url": [
      "https://github.com/AlejoPrietoDavalos/oaikit/blob/aca9f3d59dc334a278b43aa22564301657c4dc64/oaikit/oai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 306,
    "stars": 1
  },
  {
    "full_name": "SamirXR/OpenAI-Reverse-Proxy",
    "name": "OpenAI-Reverse-Proxy",
    "description": "A Very Basic OpenAI Reverse Proxy to get your API Service Started + A Discord Bot for Key Management.",
    "html_url": [
      "https://github.com/SamirXR/OpenAI-Reverse-Proxy/blob/9f257676edba57d94c390508705b7fe11e6c2c6a/nyx_api/api.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 343,
    "stars": 5
  },
  {
    "full_name": "Hoar012/RAP-MLLM",
    "name": "RAP-MLLM",
    "description": "Retrieval-Augmented Personalization",
    "html_url": [
      "https://github.com/Hoar012/RAP-MLLM/blob/1a65d4e15dcd16d454625c5ea62f0f38e35dc6ea/llava/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 104785,
    "stars": 57
  },
  {
    "full_name": "hari-huynh/viVQA-voice-assistant",
    "name": "viVQA-voice-assistant",
    "description": "Voice assistant using Multimodal LLMs - LLaVA-NeXT (Mistral 7B) finetuned & PhoWhisper ",
    "html_url": [
      "https://github.com/hari-huynh/viVQA-voice-assistant/blob/822f3542affd034aa700777a3dcbd6d25fbe6ab2/llava/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 81891,
    "stars": 4
  },
  {
    "full_name": "LeiHongsen/LlavaQwen",
    "name": "LlavaQwen",
    "description": null,
    "html_url": [
      "https://github.com/LeiHongsen/LlavaQwen/blob/164814545761438f801c9ffae36f029f1cb9ca9d/llava/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 9419,
    "stars": 3
  },
  {
    "full_name": "dvlab-research/Q-LLM",
    "name": "Q-LLM",
    "description": "This is the official repo of \"QuickLLaMA: Query-aware Inference Acceleration for Large Language Models\"",
    "html_url": [
      "https://github.com/dvlab-research/Q-LLM/blob/1cfcb60b680032c01e11dfa2e6ee4dddea70031c/benchmark/llava/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 20863,
    "stars": 51
  },
  {
    "full_name": "kaistAI/SelFee",
    "name": "SelFee",
    "description": "Official codebase for \"SelFee: Iterative Self-Revising LLM Empowered by Self-Feedback Generation\"",
    "html_url": [
      "https://github.com/kaistAI/SelFee/blob/20e4b30ceb8b964dd93b075268f4feb450ad61f6/serve/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 505064,
    "stars": 227
  },
  {
    "full_name": "Azure-Samples/openai",
    "name": "openai",
    "description": "The repository for all Azure OpenAI Samples complementing the OpenAI cookbook. ",
    "html_url": [
      "https://github.com/Azure-Samples/openai/blob/65eaeaf1bfc8e5dbf63a3cedcd525657b4133404/End_to_end_Solutions/InsightsGenerator/insights_generator/core/OAI_client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2161787,
    "stars": 1229
  },
  {
    "full_name": "sirocco-ventures/raggenie",
    "name": "raggenie",
    "description": "RAGGENIE: An open-source, low-code platform to build custom Retrieval-Augmented Generation (RAG) Copilets with your own data. Simplify AI development with ease!",
    "html_url": [
      "https://github.com/sirocco-ventures/raggenie/blob/a7cc03bc1e3f6389466e8fd3c4b7832c2733c2b3/app/loaders/openai/loader.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 74373,
    "stars": 172
  },
  {
    "full_name": "MJ-Bench/MJ-Bench",
    "name": "MJ-Bench",
    "description": "Official implementation for \"MJ-Bench: Is Your Multimodal Reward Model Really a Good Judge for Text-to-Image Generation?\"",
    "html_url": [
      "https://github.com/MJ-Bench/MJ-Bench/blob/cac4a37a77b6ec6bba13df8c0fbdd112c41b7665/bias/demographic_generation.py",
      "https://github.com/MJ-Bench/MJ-Bench/blob/cac4a37a77b6ec6bba13df8c0fbdd112c41b7665/bias/eval_dataset_generation.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 690242,
    "stars": 44
  },
  {
    "full_name": "jerry1900/langchain_qabot",
    "name": "langchain_qabot",
    "description": "用langchain,streamlit实现的简单问答机器人，只回答旅游方面的问题，适合langchain和streamlit初学者",
    "html_url": [
      "https://github.com/jerry1900/langchain_qabot/blob/ab2561f25d268729f9707a763809ca0ed8bc7555/streamlit_app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 188,
    "stars": 6
  },
  {
    "full_name": "pop2pop3/ChatGPT-python",
    "name": "ChatGPT-python",
    "description": "ChatGPT Python simple program that you can develop into a project that suits your preferences and needs.",
    "html_url": [
      "https://github.com/pop2pop3/ChatGPT-python/blob/2547bfa3ac5a4c70e3c11245b56e15d17b60f345/gpt_4_vision_collection.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 185,
    "stars": 8
  },
  {
    "full_name": "Lookuz/VidHal",
    "name": "VidHal",
    "description": "Codebase for VidHal: Benchmarking Hallucinations in Vision LLMs",
    "html_url": [
      "https://github.com/Lookuz/VidHal/blob/c36e55df8721870d025c74a6d4253cbd89f96076/models/LLaVA/llavavid/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 47975,
    "stars": 12
  },
  {
    "full_name": "Port39/gpt-api-proxy",
    "name": "gpt-api-proxy",
    "description": "An API proxy for the openai API. Intended to be used together with the Schreibmaschine.",
    "html_url": [
      "https://github.com/Port39/gpt-api-proxy/blob/9db4db0b03321cec50d63c3e1a60a74ac722e319/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 215,
    "stars": 0
  },
  {
    "full_name": "Oryx-mllm/Oryx",
    "name": "Oryx",
    "description": "MLLM for On-Demand Spatial-Temporal Understanding at Arbitrary Resolution",
    "html_url": [
      "https://github.com/Oryx-mllm/Oryx/blob/a3e1520715345047061c03a9bc364664a11eb875/oryx/utils.py",
      "https://github.com/Oryx-mllm/Oryx/blob/a3e1520715345047061c03a9bc364664a11eb875/lmms-eval/lmms_eval/tasks/mmbench/en_utils.py",
      "https://github.com/Oryx-mllm/Oryx/blob/a3e1520715345047061c03a9bc364664a11eb875/lmms-eval/lmms_eval/tasks/internal_eval/dc200_cn_utils.py",
      "https://github.com/Oryx-mllm/Oryx/blob/a3e1520715345047061c03a9bc364664a11eb875/lmms-eval/lmms_eval/tasks/internal_eval/d170_en_utils.py",
      "https://github.com/Oryx-mllm/Oryx/blob/a3e1520715345047061c03a9bc364664a11eb875/lmms-eval/lmms_eval/tasks/internal_eval/d170_cn_utils.py",
      "https://github.com/Oryx-mllm/Oryx/blob/a3e1520715345047061c03a9bc364664a11eb875/lmms-eval/lmms_eval/tasks/ferret/utils.py",
      "https://github.com/Oryx-mllm/Oryx/blob/a3e1520715345047061c03a9bc364664a11eb875/lmms-eval/lmms_eval/tasks/mmvet/utils.py",
      "https://github.com/Oryx-mllm/Oryx/blob/a3e1520715345047061c03a9bc364664a11eb875/lmms-eval/lmms_eval/tasks/worldqa/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 27685,
    "stars": 311
  },
  {
    "full_name": "sunnypilot/sunnypilot",
    "name": "sunnypilot",
    "description": "sunnypilot is an open source driver assistance system. sunnypilot offers the user a unique driving experience for over 290 supported car makes and models with modified behaviors of driving assist engagements. sunnypilot complies with comma.ai's safety rules as accurately as possible.",
    "html_url": [
      "https://github.com/sunnypilot/sunnypilot/blob/cf74e6416cd2ada45aa32e73302b3a55072a4f50/selfdrive/ui/translations/auto_translate.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 178811,
    "stars": 1445
  },
  {
    "full_name": "BraveGroup/SheetCopilot",
    "name": "SheetCopilot",
    "description": "We release a general framework for prompting LLMs to manipulate software in a closed-loop manner.",
    "html_url": [
      "https://github.com/BraveGroup/SheetCopilot/blob/c250f590d1defab9098b6bac798a19e1739fe5ed/agent/utils/ChatGPT.py",
      "https://github.com/BraveGroup/SheetCopilot/blob/c250f590d1defab9098b6bac798a19e1739fe5ed/dataset/collecting_scripts/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 12926,
    "stars": 133
  },
  {
    "full_name": "se7enack/ai-computing-assistant",
    "name": "ai-computing-assistant",
    "description": "Coeus is an A.I. Computing Assistant for MacOS that can answer just about any question you may have reading back the responses if you choose. It also creates realtime images using A.I., all by leveraging the OpenAI API.",
    "html_url": [
      "https://github.com/se7enack/ai-computing-assistant/blob/ca5595bd0c18f031a4d079645c20e41ad196fb77/source-code/Coeus.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 193,
    "stars": 8
  },
  {
    "full_name": "ultmaster/whisper-movie",
    "name": "whisper-movie",
    "description": "Generate subtitles for long movies / podcasts with OpenAI Whisper API.",
    "html_url": [
      "https://github.com/ultmaster/whisper-movie/blob/0db4db9f930ecdca1f4a77d71e9cb5e04f6af7d3/whispermovie/openai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 503,
    "stars": 28
  },
  {
    "full_name": "lln556/pdf-translation-tool",
    "name": "pdf-translation-tool",
    "description": "这是一个用于将英文 PDF 论文翻译成中文的工具。它使用 OpenAI 的 API 进行翻译，并保留原始 PDF 的格式和布局。",
    "html_url": [
      "https://github.com/lln556/pdf-translation-tool/blob/70560d3b6287a9dc6e96f18e5c0f93554d4270d6/translate.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 230,
    "stars": 4
  },
  {
    "full_name": "tkhongsap/article-query-ai",
    "name": "article-query-ai",
    "description": "A Python-based tool for loading documents, summarizing content, and querying information using OpenAI's GPT models. This program processes documents into nodes and provides summarization and context-based retrieval via a user-friendly query interface",
    "html_url": [
      "https://github.com/tkhongsap/article-query-ai/blob/30cfc814362ee70c38e46f61e0ae95f604e10983/example/03-upload-articles-to-vector-store.py",
      "https://github.com/tkhongsap/article-query-ai/blob/30cfc814362ee70c38e46f61e0ae95f604e10983/00-article-processing-pipeline.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 11492,
    "stars": 0
  },
  {
    "full_name": "JieyuZ2/ProVision",
    "name": "ProVision",
    "description": "A instruction data generation system for multimodal language models.",
    "html_url": [
      "https://github.com/JieyuZ2/ProVision/blob/ea89f68c9f158260896578b0534c0d4e529d32a6/provision/annotation/osprey/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 68312,
    "stars": 33
  },
  {
    "full_name": "will-hath/translate-datasets",
    "name": "translate-datasets",
    "description": "Tool to translate hugginface datasets using gpt",
    "html_url": [
      "https://github.com/will-hath/translate-datasets/blob/4124a9fb5acb13f49049a21c39fae94c42d5c35b/translate.py",
      "https://github.com/will-hath/translate-datasets/blob/4124a9fb5acb13f49049a21c39fae94c42d5c35b/parallel_processor.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1168529,
    "stars": 0
  },
  {
    "full_name": "avocardio/GPT-agents",
    "name": "GPT-agents",
    "description": "Browsing-enabled GPT agents with different personalities.",
    "html_url": [
      "https://github.com/avocardio/GPT-agents/blob/749b137678fb69544742ab4ed03a29fc2de2274b/utils/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 513,
    "stars": 59
  },
  {
    "full_name": "Tagischeap/Geisha",
    "name": "Geisha",
    "description": "Discord bot, back when making a bot was all the rage on there.",
    "html_url": [
      "https://github.com/Tagischeap/Geisha/blob/a28ac0932bb40f9a94a639fcb196df9d0200e928/Geisha/bot/utils/openai_client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2288,
    "stars": 0
  },
  {
    "full_name": "Grzesiekp1234/intelligent-chatbot-project",
    "name": "intelligent-chatbot-project",
    "description": "Intelligent Customer Support Chatbot using FastAPI, OpenAI GPT-4, Docker, and Azure CI/CD",
    "html_url": [
      "https://github.com/Grzesiekp1234/intelligent-chatbot-project/blob/89b0d25360a9a0a9d1d2ce20a7a9d0e4b58d165e/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 467,
    "stars": 0
  },
  {
    "full_name": "slevin48/openai",
    "name": "openai",
    "description": "🐱ChatGPT-like Bot🤖 with OpenAI API",
    "html_url": [
      "https://github.com/slevin48/openai/blob/bbb066057877c71d197d4b480a4b59b88e4eda22/vision/vision.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 8302,
    "stars": 2
  },
  {
    "full_name": "gansiorag/computer-vision",
    "name": "computer-vision",
    "description": "Full code for solve severel task on computer vision",
    "html_url": [
      "https://github.com/gansiorag/computer-vision/blob/b627e4feb7a81b684cedf74c1b449a784e31014a/argos-translate/argostranslate/apis.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 8391,
    "stars": 3
  },
  {
    "full_name": "CodeBenchGen/CodeBenchGen",
    "name": "CodeBenchGen",
    "description": "We present a framework to create scalable and custom code generation benchmarks, which leverages an LLM to adapt arbitrary user-interested code fragment into an evaluation example with execution support.",
    "html_url": [
      "https://github.com/CodeBenchGen/CodeBenchGen/blob/f77a95b10b002b1053d487bc4892a4540d4313b7/CodeBenchGen/generate_test_cases.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "v2rockets/Loyal-Elephie",
    "name": "Loyal-Elephie",
    "description": "Your Trusty Memory-enabled AI Companion - Simple RAG chatbot optimized for local LLMs | 12 Languages Supported | OpenAI API Compatible",
    "html_url": [
      "https://github.com/v2rockets/Loyal-Elephie/blob/66bb62a118b5765e8169ac4004ffc54a5d5cabc7/backend/settings.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 11392,
    "stars": 316
  },
  {
    "full_name": "anyscale/llm-router",
    "name": "llm-router",
    "description": "Tutorial for building LLM router",
    "html_url": [
      "https://github.com/anyscale/llm-router/blob/eca98e0f14f6d32445ab4f2389c7243d656acf89/src/online_inference.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1140,
    "stars": 209
  },
  {
    "full_name": "KristopherKubicki/glimpser",
    "name": "glimpser",
    "description": "a simple tool for real-time monitoring video and summarization with LLMs",
    "html_url": [
      "https://github.com/KristopherKubicki/glimpser/blob/6e3f00b76fcf5a9a40ed6ad31767f6841b65553c/app/utils/llm.py",
      "https://github.com/KristopherKubicki/glimpser/blob/6e3f00b76fcf5a9a40ed6ad31767f6841b65553c/app/utils/image_processing.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 35869,
    "stars": 21
  },
  {
    "full_name": "elkronos/openai_api",
    "name": "openai_api",
    "description": "Interact with openai APIs (DALLE2, GPT, Whisper)",
    "html_url": [
      "https://github.com/elkronos/openai_api/blob/83d376e29c0c61ce34631b1836cc00e4d10544ff/refactored/python/gpt_read.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3314,
    "stars": 14
  },
  {
    "full_name": "zimNMM/django-ai-chat",
    "name": "django-ai-chat",
    "description": "A Django AI Chat that uses Nebius, Oobabooga and Ollama for text generation, also includes StableDIffusionWebUI integration",
    "html_url": [
      "https://github.com/zimNMM/django-ai-chat/blob/db8a8ad27d5022998c80a5bd3eb50ba7b9d80d4c/chat/middleware.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4488,
    "stars": 0
  },
  {
    "full_name": "Sadaf-A/Book-Recommendation",
    "name": "Book-Recommendation",
    "description": "Book Recommendation system build with Flask and OpenAi API",
    "html_url": [
      "https://github.com/Sadaf-A/Book-Recommendation/blob/a9ecedeef33242820e2240f8e75248f5f002a92f/app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 393,
    "stars": 0
  },
  {
    "full_name": "erfan7emz/LLMinor",
    "name": "LLMinor",
    "description": null,
    "html_url": [
      "https://github.com/erfan7emz/LLMinor/blob/ec9fa7838d127189e09ee65fbe7b5df4d01398ba/app.py",
      "https://github.com/erfan7emz/LLMinor/blob/ec9fa7838d127189e09ee65fbe7b5df4d01398ba/test.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 431,
    "stars": 0
  },
  {
    "full_name": "prashun143/Document_QnA",
    "name": "Document_QnA",
    "description": "Use this LLM to query on your document",
    "html_url": [
      "https://github.com/prashun143/Document_QnA/blob/01067473ea076175251ed0c954d9bccf63b37b37/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 198,
    "stars": 0
  },
  {
    "full_name": "stevenrick/openai_usage",
    "name": "openai_usage",
    "description": "A set of python scripts for querying users in an OpenAI organization, downloading user usage to csv, and plotting cost over time.",
    "html_url": [
      "https://github.com/stevenrick/openai_usage/blob/7ff470ff555be9989a736ddd528f616d9e4a2bd1/openai_usage.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 192,
    "stars": 0
  },
  {
    "full_name": "SkyworkAI/Vitron",
    "name": "Vitron",
    "description": "NeurIPS 2024 Paper: A Unified Pixel-level Vision LLM for Understanding, Generating, Segmenting, Editing",
    "html_url": [
      "https://github.com/SkyworkAI/Vitron/blob/b17ebc6d4de9a4e6f3e88fc4c22ce24057a9bf8a/vitron/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1700751,
    "stars": 545
  },
  {
    "full_name": "david1155/estherbot",
    "name": "estherbot",
    "description": "AI Assistant using OpenAI GPT-4 and Flask-SocketIO",
    "html_url": [
      "https://github.com/david1155/estherbot/blob/ad372918c1d0ee75f10e0d9a3410be52805a4baf/app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 325,
    "stars": 1
  },
  {
    "full_name": "pipixin321/HolmesVAD",
    "name": "HolmesVAD",
    "description": "Official implementation of \"Holmes-VAD: Towards Unbiased and Explainable Video Anomaly Detection via Multi-modal LLM\"",
    "html_url": [
      "https://github.com/pipixin321/HolmesVAD/blob/d047bf70cd5908512ad38a9547655d9942445580/videollava/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 9535,
    "stars": 135
  },
  {
    "full_name": "Stevetich/EventHallusion",
    "name": "EventHallusion",
    "description": "EventHallusion: Diagnosing Event Hallucinations in Video LLMs",
    "html_url": [
      "https://github.com/Stevetich/EventHallusion/blob/7396e0436676e9084125b284d124a4a196b2059a/inference_template/videollava/utils.py",
      "https://github.com/Stevetich/EventHallusion/blob/7396e0436676e9084125b284d124a4a196b2059a/run_gpt4o.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 18923,
    "stars": 31
  },
  {
    "full_name": "YeLuoSuiYou/openstorypp",
    "name": "openstorypp",
    "description": "We introduce OpenStory++, a large-scale open-domain dataset focusing on enabling MLLMs to perform storytelling generation tasks.",
    "html_url": [
      "https://github.com/YeLuoSuiYou/openstorypp/blob/fa99171655fdd91905c1fbedfe134378bb99fe66/videollava/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 19364,
    "stars": 15
  },
  {
    "full_name": "WEIFENG2333/VideoCaptioner",
    "name": "VideoCaptioner",
    "description": "🎬 卡卡字幕助手 | VideoCaptioner - 基于 LLM 的智能字幕助手，无需GPU一键高质量字幕视频合成！视频字幕生成、断句、校正、字幕翻译全流程。让字幕制作简单高效！",
    "html_url": [
      "https://github.com/WEIFENG2333/VideoCaptioner/blob/fd51f525d68f4f1bcfa760704fb05367addf7354/app/components/WhisperAPISettingDialog.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 21572,
    "stars": 7280
  },
  {
    "full_name": "drforse/not-llama-fs",
    "name": "not-llama-fs",
    "description": null,
    "html_url": [
      "https://github.com/drforse/not-llama-fs/blob/a96fed1c464691141152d03ef10cedc5f70ae949/not_llama_fs/producers/openai_producer.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1359,
    "stars": 63
  },
  {
    "full_name": "UBSec/UGCG-Guard",
    "name": "UGCG-Guard",
    "description": "Code for USENIX Security 2024 paper: Moderating Illicit Online Image Promotion for Unsafe User Generated Content Games Using Large Vision-Language Models.",
    "html_url": [
      "https://github.com/UBSec/UGCG-Guard/blob/a6b0651ddd75465cae5d2b496b82dd5aed6fe9cd/sample_code/gpt.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 390,
    "stars": 5
  },
  {
    "full_name": "randomtask2000/MultiShot.AI",
    "name": "MultiShot.AI",
    "description": "This project creates a real-time conversational AI, either serverless via SvelteKit/Static or using LangChain with FastAPI as a web server, streaming GPT model responses and supporting in-browser LLMs via webllm.",
    "html_url": [
      "https://github.com/randomtask2000/MultiShot.AI/blob/dcd8b3d5e40d274fc7af30347b7a3544e8953b1d/server/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 7281,
    "stars": 5
  },
  {
    "full_name": "avishayil/rag-search-homeassistant",
    "name": "rag-search-homeassistant",
    "description": "Home Assistant component for querying events history for entities with LLM",
    "html_url": [
      "https://github.com/avishayil/rag-search-homeassistant/blob/fe65fc1aea290c1187331dff152fada28cfdf31b/custom_components/rag_search/search.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 397,
    "stars": 4
  },
  {
    "full_name": "krishnateja95/VLM-Benchmark",
    "name": "VLM-Benchmark",
    "description": "Vision Language Model Benchmarking",
    "html_url": [
      "https://github.com/krishnateja95/VLM-Benchmark/blob/cb6ee4d1945c9ec8c5015f8a4bfb8a395e7aeccc/lmms_eval_setup/tasks/mmbench/cn_utils.py",
      "https://github.com/krishnateja95/VLM-Benchmark/blob/cb6ee4d1945c9ec8c5015f8a4bfb8a395e7aeccc/lmms_eval_setup/tasks/mmbench/ru_utils.py",
      "https://github.com/krishnateja95/VLM-Benchmark/blob/cb6ee4d1945c9ec8c5015f8a4bfb8a395e7aeccc/lmms_eval_setup/tasks/mmbench/en_utils.py",
      "https://github.com/krishnateja95/VLM-Benchmark/blob/cb6ee4d1945c9ec8c5015f8a4bfb8a395e7aeccc/lmms_eval_setup/tasks/internal_eval/dc200_cn_utils.py",
      "https://github.com/krishnateja95/VLM-Benchmark/blob/cb6ee4d1945c9ec8c5015f8a4bfb8a395e7aeccc/lmms_eval_setup/tasks/internal_eval/d170_cn_utils.py",
      "https://github.com/krishnateja95/VLM-Benchmark/blob/cb6ee4d1945c9ec8c5015f8a4bfb8a395e7aeccc/lmms_eval_setup/tasks/internal_eval/d170_en_utils.py",
      "https://github.com/krishnateja95/VLM-Benchmark/blob/cb6ee4d1945c9ec8c5015f8a4bfb8a395e7aeccc/lmms_eval_setup/tasks/mmupd/utils.py",
      "https://github.com/krishnateja95/VLM-Benchmark/blob/cb6ee4d1945c9ec8c5015f8a4bfb8a395e7aeccc/lmms_eval_setup/tasks/llava_wilder/utils.py",
      "https://github.com/krishnateja95/VLM-Benchmark/blob/cb6ee4d1945c9ec8c5015f8a4bfb8a395e7aeccc/lmms_eval_setup/tasks/live_bench/utils.py",
      "https://github.com/krishnateja95/VLM-Benchmark/blob/cb6ee4d1945c9ec8c5015f8a4bfb8a395e7aeccc/lmms_eval_setup/tasks/vitatecs/utils.py",
      "https://github.com/krishnateja95/VLM-Benchmark/blob/cb6ee4d1945c9ec8c5015f8a4bfb8a395e7aeccc/lmms_eval_setup/models/batch_gpt4.py",
      "https://github.com/krishnateja95/VLM-Benchmark/blob/cb6ee4d1945c9ec8c5015f8a4bfb8a395e7aeccc/lmms_eval_setup/tasks/video_detail_description/utils.py",
      "https://github.com/krishnateja95/VLM-Benchmark/blob/cb6ee4d1945c9ec8c5015f8a4bfb8a395e7aeccc/lmms_eval_setup/tasks/mmvet/utils.py",
      "https://github.com/krishnateja95/VLM-Benchmark/blob/cb6ee4d1945c9ec8c5015f8a4bfb8a395e7aeccc/lmms_eval_setup/tasks/mix_evals/utils.py",
      "https://github.com/krishnateja95/VLM-Benchmark/blob/cb6ee4d1945c9ec8c5015f8a4bfb8a395e7aeccc/lmms_eval_setup/models/gpt4v.py",
      "https://github.com/krishnateja95/VLM-Benchmark/blob/cb6ee4d1945c9ec8c5015f8a4bfb8a395e7aeccc/lmms_eval_setup/tasks/worldqa/utils.py",
      "https://github.com/krishnateja95/VLM-Benchmark/blob/cb6ee4d1945c9ec8c5015f8a4bfb8a395e7aeccc/lmms_eval_setup/tasks/activitynetqa/utils.py",
      "https://github.com/krishnateja95/VLM-Benchmark/blob/cb6ee4d1945c9ec8c5015f8a4bfb8a395e7aeccc/lmms_eval_setup/tasks/videochatgpt/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 56405,
    "stars": 0
  },
  {
    "full_name": "qtli/CoEval",
    "name": "CoEval",
    "description": "A collaborative LLM-human evaluation pipeline COEVAL.",
    "html_url": [
      "https://github.com/qtli/CoEval/blob/8b98295ac135c2a0a9367ff1e32be28670223078/webapp/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1469936,
    "stars": 8
  },
  {
    "full_name": "wang-research-lab/lmms-eval",
    "name": "lmms-eval",
    "description": "Fork of lmms-eval for use with \"MLAN: Language-Based Instruction Tuning Improves Zero-Shot Generalization of Multimodal Large Language Models\"",
    "html_url": [
      "https://github.com/wang-research-lab/lmms-eval/blob/b218a485aecaa2c57182a430d7cdffe41e236143/lmms_eval/tasks/mmbench/ru_utils.py",
      "https://github.com/wang-research-lab/lmms-eval/blob/b218a485aecaa2c57182a430d7cdffe41e236143/lmms_eval/tasks/mmbench/en_utils.py",
      "https://github.com/wang-research-lab/lmms-eval/blob/b218a485aecaa2c57182a430d7cdffe41e236143/lmms_eval/tasks/internal_eval/d170_en_utils.py",
      "https://github.com/wang-research-lab/lmms-eval/blob/b218a485aecaa2c57182a430d7cdffe41e236143/lmms_eval/tasks/internal_eval/d170_cn_utils.py",
      "https://github.com/wang-research-lab/lmms-eval/blob/b218a485aecaa2c57182a430d7cdffe41e236143/lmms_eval/tasks/mmupd/utils.py",
      "https://github.com/wang-research-lab/lmms-eval/blob/b218a485aecaa2c57182a430d7cdffe41e236143/lmms_eval/tasks/llava_wilder/utils.py",
      "https://github.com/wang-research-lab/lmms-eval/blob/b218a485aecaa2c57182a430d7cdffe41e236143/lmms_eval/tasks/vitatecs/utils.py",
      "https://github.com/wang-research-lab/lmms-eval/blob/b218a485aecaa2c57182a430d7cdffe41e236143/lmms_eval/models/batch_gpt4.py",
      "https://github.com/wang-research-lab/lmms-eval/blob/b218a485aecaa2c57182a430d7cdffe41e236143/lmms_eval/tasks/video_detail_description/utils.py",
      "https://github.com/wang-research-lab/lmms-eval/blob/b218a485aecaa2c57182a430d7cdffe41e236143/lmms_eval/tasks/mmvet/utils.py",
      "https://github.com/wang-research-lab/lmms-eval/blob/b218a485aecaa2c57182a430d7cdffe41e236143/lmms_eval/models/gpt4v.py",
      "https://github.com/wang-research-lab/lmms-eval/blob/b218a485aecaa2c57182a430d7cdffe41e236143/lmms_eval/tasks/cvrr/utils.py",
      "https://github.com/wang-research-lab/lmms-eval/blob/b218a485aecaa2c57182a430d7cdffe41e236143/lmms_eval/tasks/worldqa/utils.py",
      "https://github.com/wang-research-lab/lmms-eval/blob/b218a485aecaa2c57182a430d7cdffe41e236143/lmms_eval/tasks/llava_interleave_bench/utils.py",
      "https://github.com/wang-research-lab/lmms-eval/blob/b218a485aecaa2c57182a430d7cdffe41e236143/lmms_eval/tasks/videochatgpt/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 30845,
    "stars": 0
  },
  {
    "full_name": "krishnateja95/LLM-VLM-Eval-Bench",
    "name": "LLM-VLM-Eval-Bench",
    "description": "LLM & VLM Eval Bench: Unified Evaluation Platform for LLM, VLM and LMMs ",
    "html_url": [
      "https://github.com/krishnateja95/LLM-VLM-Eval-Bench/blob/c286a3b080df61c3223138aa05c5de396cadfd5b/lmms_eval_setup/tasks/mmbench/cn_utils.py",
      "https://github.com/krishnateja95/LLM-VLM-Eval-Bench/blob/c286a3b080df61c3223138aa05c5de396cadfd5b/lmms_eval_setup/tasks/internal_eval/d170_cn_utils.py",
      "https://github.com/krishnateja95/LLM-VLM-Eval-Bench/blob/c286a3b080df61c3223138aa05c5de396cadfd5b/lmms_eval_setup/tasks/internal_eval/d170_en_utils.py",
      "https://github.com/krishnateja95/LLM-VLM-Eval-Bench/blob/c286a3b080df61c3223138aa05c5de396cadfd5b/lmms_eval_setup/tasks/mmupd/utils.py",
      "https://github.com/krishnateja95/LLM-VLM-Eval-Bench/blob/c286a3b080df61c3223138aa05c5de396cadfd5b/lmms_eval_setup/tasks/llava_wilder/utils.py",
      "https://github.com/krishnateja95/LLM-VLM-Eval-Bench/blob/c286a3b080df61c3223138aa05c5de396cadfd5b/lmms_eval_setup/tasks/live_bench/utils.py",
      "https://github.com/krishnateja95/LLM-VLM-Eval-Bench/blob/c286a3b080df61c3223138aa05c5de396cadfd5b/lmms_eval_setup/tasks/vitatecs/utils.py",
      "https://github.com/krishnateja95/LLM-VLM-Eval-Bench/blob/c286a3b080df61c3223138aa05c5de396cadfd5b/lmms_eval_setup/models/batch_gpt4.py",
      "https://github.com/krishnateja95/LLM-VLM-Eval-Bench/blob/c286a3b080df61c3223138aa05c5de396cadfd5b/lmms_eval_setup/tasks/video_detail_description/utils.py",
      "https://github.com/krishnateja95/LLM-VLM-Eval-Bench/blob/c286a3b080df61c3223138aa05c5de396cadfd5b/lmms_eval_setup/tasks/mmvet/utils.py",
      "https://github.com/krishnateja95/LLM-VLM-Eval-Bench/blob/c286a3b080df61c3223138aa05c5de396cadfd5b/lmms_eval_setup/tasks/mix_evals/utils.py",
      "https://github.com/krishnateja95/LLM-VLM-Eval-Bench/blob/c286a3b080df61c3223138aa05c5de396cadfd5b/lmms_eval_setup/models/gpt4v.py",
      "https://github.com/krishnateja95/LLM-VLM-Eval-Bench/blob/c286a3b080df61c3223138aa05c5de396cadfd5b/lmms_eval_setup/tasks/worldqa/utils.py",
      "https://github.com/krishnateja95/LLM-VLM-Eval-Bench/blob/c286a3b080df61c3223138aa05c5de396cadfd5b/lmms_eval_setup/tasks/activitynetqa/utils.py",
      "https://github.com/krishnateja95/LLM-VLM-Eval-Bench/blob/c286a3b080df61c3223138aa05c5de396cadfd5b/lmms_eval_setup/tasks/videochatgpt/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 88522,
    "stars": 0
  },
  {
    "full_name": "savbell/whisper-writer",
    "name": "whisper-writer",
    "description": "💬📝 A small dictation app using OpenAI's Whisper speech recognition model.",
    "html_url": [
      "https://github.com/savbell/whisper-writer/blob/370333b115417b03bf51c9f5bffd6578ecf6986e/src/transcription.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1961,
    "stars": 837
  },
  {
    "full_name": "AnjieCheng/SpatialRGPT",
    "name": "SpatialRGPT",
    "description": "[NeurIPS'24] This repository is the implementation of \"SpatialRGPT: Grounded Spatial Reasoning in Vision Language Models\"",
    "html_url": [
      "https://github.com/AnjieCheng/SpatialRGPT/blob/16715d4f1419997da18926c6ce574802d1eb3a37/llava/utils/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 31754,
    "stars": 207
  },
  {
    "full_name": "DevXT-LLC/convertanything",
    "name": "convertanything",
    "description": "Convert your data to Pydantic models with help from language models.",
    "html_url": [
      "https://github.com/DevXT-LLC/convertanything/blob/5949ba6c39b15970c0725f089ad474614fcd51dc/convertanything/__init__.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 334,
    "stars": 8
  },
  {
    "full_name": "25077667/cg",
    "name": "cg",
    "description": "The commit GPT using OpenAI's chatGPT for free",
    "html_url": [
      "https://github.com/25077667/cg/blob/bf69087fe3bb9fe5c8d5b99f3495cf7bacb71899/src/commit_msg_generator.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 686,
    "stars": 12
  },
  {
    "full_name": "george-mountain/web-app-builder--LLM",
    "name": "web-app-builder--LLM",
    "description": "Building Static Web Applications using Large Language Model. From hand sketched documents, images and screenshots to proper web pages.",
    "html_url": [
      "https://github.com/george-mountain/web-app-builder--LLM/blob/af521fdbbcf2c062d0d2f694f45be61a0d5f3634/utilities.py",
      "https://github.com/george-mountain/web-app-builder--LLM/blob/af521fdbbcf2c062d0d2f694f45be61a0d5f3634/webapp_builder/utilities.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 341,
    "stars": 3
  },
  {
    "full_name": "DhruvShah09/AutobotsLLMSandbox",
    "name": "AutobotsLLMSandbox",
    "description": "A platform for students to experiment with utilizing different planning techniques using natural language processing methods.",
    "html_url": [
      "https://github.com/DhruvShah09/AutobotsLLMSandbox/blob/6f6bb4118cf162a2ed89369ec001ba36ae2df444/llms/openai_interface.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3623,
    "stars": 0
  },
  {
    "full_name": "dave-nachman/streaming-structured-outputs",
    "name": "streaming-structured-outputs",
    "description": "Stream partial Pydantic responses from OpenAI LLMs",
    "html_url": [
      "https://github.com/dave-nachman/streaming-structured-outputs/blob/a2d72c89c7a003c43a78fe78f3cdd89a092f3d9d/streaming_structured_outputs/create.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 171,
    "stars": 0
  },
  {
    "full_name": "vectrix-ai/stt-realtime-demo",
    "name": "stt-realtime-demo",
    "description": "A voice agent demo using a WebSocket connection to both ElevenLabs and OpenAI, Enabling real-time voice-based interactions with LLMs in various languages. ",
    "html_url": [
      "https://github.com/vectrix-ai/stt-realtime-demo/blob/1b9b155aafce2b6dd2b247a7b119a2e7742f3eb9/src/stt_realtime_demo/openai/connect.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "WENGSYX/ControlLM",
    "name": "ControlLM",
    "description": "ControlLM is a method to control the personality traits and behaviors of language models in real-time at inference without costly training interventions.",
    "html_url": [
      "https://github.com/WENGSYX/ControlLM/blob/87ab7b7ce8a4242a9c3ffcb03b7a6858355e67ca/ControlLM/AutoControlActivate/__init__.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 70202,
    "stars": 18
  },
  {
    "full_name": "0xrushi/selenium-llm-proxy",
    "name": "selenium-llm-proxy",
    "description": null,
    "html_url": [
      "https://github.com/0xrushi/selenium-llm-proxy/blob/88f71721d5ccdf52eae7c907ee4392fa398c17f9/scripts/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 374,
    "stars": 2
  },
  {
    "full_name": "The-FinAI/PIXIU",
    "name": "PIXIU",
    "description": "This repository introduces PIXIU, an open-source resource featuring the first financial large language models (LLMs), instruction tuning data, and evaluation benchmarks to holistically assess financial LLMs. Our goal is to continually push forward the open-source development of financial artificial intelligence (AI).",
    "html_url": [
      "https://github.com/The-FinAI/PIXIU/blob/4e6652df9df16b0d966eff9b0b9ec11c6132c8cf/src/chatlm.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4609,
    "stars": 723
  },
  {
    "full_name": "mage-ai/llm_orchestration",
    "name": "llm_orchestration",
    "description": null,
    "html_url": [
      "https://github.com/mage-ai/llm_orchestration/blob/59d4db399666339ab71c869ebdb068cbc6d76ef4/utils/openai.py",
      "https://github.com/mage-ai/llm_orchestration/blob/59d4db399666339ab71c869ebdb068cbc6d76ef4/conditionals/embeddings/clients.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4981,
    "stars": 5
  },
  {
    "full_name": "NVIDIA-Omniverse/kit-extension-sample-airoomgenerator",
    "name": "kit-extension-sample-airoomgenerator",
    "description": "A tool used to create 3D content for rooms by calling OpenAI's API",
    "html_url": [
      "https://github.com/NVIDIA-Omniverse/kit-extension-sample-airoomgenerator/blob/a6a0f78db6eb0796bf095ce647b69e731ec4aaa0/exts/omni.example.airoomgenerator/omni/example/airoomgenerator/chatgpt_apiconnect.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "drankush/QueryPop",
    "name": "QueryPop",
    "description": "QueryPop is a Python application that sends selected text with user instructions to a Large Language Model (LLM) using hotkeys for processing and displays the response in a user-friendly pop-up window. ",
    "html_url": [
      "https://github.com/drankush/QueryPop/blob/b5d4ad8c655eaa8ada69f427ddc839a6577198a4/v4/config_handler.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1621,
    "stars": 10
  },
  {
    "full_name": "CodeGoat24/LiFT",
    "name": "LiFT",
    "description": "Official implementation of LiFT: Leveraging Human Feedback for Text-to-Video Model Alignment.",
    "html_url": [
      "https://github.com/CodeGoat24/LiFT/blob/5450e8cf7dca9f8f80be37ff98c39c73946f9ce2/llava/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 629104,
    "stars": 76
  },
  {
    "full_name": "BIDS-Xu-Lab/Me-LLaMA",
    "name": "Me-LLaMA",
    "description": "A novel medical large language model family with 13/70B parameters, which have SOTA performances on various medical tasks",
    "html_url": [
      "https://github.com/BIDS-Xu-Lab/Me-LLaMA/blob/7a6358b7e10e809aedf03a085e727fb3cfed613e/src/chatlm.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1956,
    "stars": 149
  },
  {
    "full_name": "FreedomIntelligence/Smurfs",
    "name": "Smurfs",
    "description": "Smurfs: Leveraging Multiple Proficiency Agents with Context-Efficiency for Tool Planning",
    "html_url": [
      "https://github.com/FreedomIntelligence/Smurfs/blob/19047774b67d21d1fb8cf75aadcebce3d7040432/Smurfs/model/openai_model/openai_model.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 519774,
    "stars": 14
  },
  {
    "full_name": "bigai-nlco/NeedleInAVideoHaystack",
    "name": "NeedleInAVideoHaystack",
    "description": "Pressure Testing Large Video-Language Models (LVLM): Doing multimodal retrieval from LVLM at various video lengths to measure accuracy",
    "html_url": [
      "https://github.com/bigai-nlco/NeedleInAVideoHaystack/blob/aa18c1ce4165f521af5a164dd71aaee0b08f8500/needlehaystack/baselines/vila/utils.py",
      "https://github.com/bigai-nlco/NeedleInAVideoHaystack/blob/aa18c1ce4165f521af5a164dd71aaee0b08f8500/needlehaystack/baselines/longva/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 140406,
    "stars": 7
  },
  {
    "full_name": "Sumit2807/Mortgagedocumentchecker",
    "name": "Mortgagedocumentchecker",
    "description": "This solution uses GPT-4 and GPT-4 vision model to perform QA check on mortgage documents uploaded by applicant or broker whether those documents satisfy business requirement such as statement period within last 3 months, Payslip is paylsip, name check etc",
    "html_url": [
      "https://github.com/Sumit2807/Mortgagedocumentchecker/blob/619c06b4a66a2bf8d7931410dc94715333af5876/Test_OpenAIGPT4VisionStreamlitVersion.py",
      "https://github.com/Sumit2807/Mortgagedocumentchecker/blob/619c06b4a66a2bf8d7931410dc94715333af5876/TestImageQualityViaGPT4Vision.py",
      "https://github.com/Sumit2807/Mortgagedocumentchecker/blob/619c06b4a66a2bf8d7931410dc94715333af5876/Test_OpenAIGP4VisionAPICall.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 8568,
    "stars": 0
  },
  {
    "full_name": "YY0649/ICE-PIXIU",
    "name": "ICE-PIXIU",
    "description": "ICE-PIXIU：A Cross-Language Financial Megamodeling Framework",
    "html_url": [
      "https://github.com/YY0649/ICE-PIXIU/blob/e2be26d619dd3e6e857805709d5d3c0d4b29bb37/src/chatlm.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 724122,
    "stars": 17
  },
  {
    "full_name": "axjing/llamaX",
    "name": "llamaX",
    "description": null,
    "html_url": [
      "https://github.com/axjing/llamaX/blob/95061daf65dcdaf8545b289f6d11024a11669cec/function_calling/function_calling.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1912,
    "stars": 1
  },
  {
    "full_name": "llm-jp/llm-jp-VILA",
    "name": "llm-jp-VILA",
    "description": null,
    "html_url": [
      "https://github.com/llm-jp/llm-jp-VILA/blob/bff524541f47c2293816afe37335eab71f004359/llava/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 28720,
    "stars": 9
  },
  {
    "full_name": "TonyLianLong/LLM-groundedDiffusion",
    "name": "LLM-groundedDiffusion",
    "description": "LLM-grounded Diffusion: Enhancing Prompt Understanding of Text-to-Image Diffusion Models with Large Language Models (LLM-grounded Diffusion: LMD, TMLR 2024)",
    "html_url": [
      "https://github.com/TonyLianLong/LLM-groundedDiffusion/blob/cef2a90204607279ed86aa1fe4ce7b775524694d/utils/llm.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 8536,
    "stars": 476
  },
  {
    "full_name": "ghimiresunil/LLM-PowerHouse-A-Curated-Guide-for-Large-Language-Models-with-Custom-Training-and-Inferencing",
    "name": "LLM-PowerHouse-A-Curated-Guide-for-Large-Language-Models-with-Custom-Training-and-Inferencing",
    "description": "LLM-PowerHouse: Unleash LLMs' potential through curated tutorials, best practices, and ready-to-use code for custom training and inferencing.",
    "html_url": [
      "https://github.com/ghimiresunil/LLM-PowerHouse-A-Curated-Guide-for-Large-Language-Models-with-Custom-Training-and-Inferencing/blob/744ba6ef7f94ea2190534e448927411e204e4dee/example_codebase/data_generate_prepare/data_generator.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 39378,
    "stars": 687
  },
  {
    "full_name": "ipa-lab/hackingBuddyGPT",
    "name": "hackingBuddyGPT",
    "description": "Helping Ethical Hackers use LLMs in 50 Lines of Code or less..",
    "html_url": [
      "https://github.com/ipa-lab/hackingBuddyGPT/blob/f130edf55b14fcd4282746859b102f64be9bb7ec/src/hackingBuddyGPT/utils/openai/openai_llm.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 7579,
    "stars": 600
  },
  {
    "full_name": "OpenGVLab/Multi-Modality-Arena",
    "name": "Multi-Modality-Arena",
    "description": "Chatbot Arena meets multi-modality! Multi-Modality Arena allows you to benchmark vision-language models side-by-side while providing images as inputs. Supports MiniGPT-4, LLaMA-Adapter V2, LLaVA, BLIP-2, and many more!",
    "html_url": [
      "https://github.com/OpenGVLab/Multi-Modality-Arena/blob/bd2999a3be2bf4539a7e071cf2cfab5822f66417/tiny_lvlm_evaluation/chatgpt_ensemble_evaluation/chatgpt_evaluate.py",
      "https://github.com/OpenGVLab/Multi-Modality-Arena/blob/bd2999a3be2bf4539a7e071cf2cfab5822f66417/server_utils/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 425189,
    "stars": 529
  },
  {
    "full_name": "squareRoot3/GraphArena",
    "name": "GraphArena",
    "description": "GraphArena: Benchmarking Large Language Models on Graph Computational Problems",
    "html_url": [
      "https://github.com/squareRoot3/GraphArena/blob/e5d02b45a3da20b5fb4ca593441eb6e924a8abe0/benchmark_LLM_API.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3741,
    "stars": 20
  },
  {
    "full_name": "HooRin/AuditWen",
    "name": "AuditWen",
    "description": "An Open-source Large Language Model for Audit ",
    "html_url": [
      "https://github.com/HooRin/AuditWen/blob/ce5b2464b879c58c220ca608410982aac608ac3d/src/PIXIU/src/chatlm.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 998869,
    "stars": 14
  },
  {
    "full_name": "Oseutin/HerbieATX",
    "name": "HerbieATX",
    "description": "Repository for communicating with Herbie via vocal detection and OpenAI ChatGPT API integration as a part of the greater Plantiverse project",
    "html_url": [
      "https://github.com/Oseutin/HerbieATX/blob/c7c771f75c642ec0c1bc6055d2065360a843a999/communicate.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 924,
    "stars": 0
  },
  {
    "full_name": "percent4/pdf-llm_series",
    "name": "pdf-llm_series",
    "description": "The project is for PDF Python learning with Large Language Model.",
    "html_url": [
      "https://github.com/percent4/pdf-llm_series/blob/3a517981be0719216ae13fac5b7e22c81d6dc5cb/multi-modal-rag/mm_doc_qa.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1366,
    "stars": 9
  },
  {
    "full_name": "XPixelGroup/DepictQA",
    "name": "DepictQA",
    "description": "DepictQA: Depicted Image Quality Assessment with Vision Language Models",
    "html_url": [
      "https://github.com/XPixelGroup/DepictQA/blob/ae4b38ccdc64d153a15c89d9c81f7e3b22fe934f/src/serve/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 9821,
    "stars": 151
  },
  {
    "full_name": "naajeehxe/AAA740-2024",
    "name": "AAA740-2024",
    "description": "Answer with Images: Reasoning-based Question Answering by Text-to-Image Generation",
    "html_url": [
      "https://github.com/naajeehxe/AAA740-2024/blob/c5caa7910e34446ff8a695b13bf348f3f06a5665/taehoonlee/LLM-groundedDiffusion/utils/llm.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 39725,
    "stars": 1
  },
  {
    "full_name": "gosshhh/NeuralChat",
    "name": "NeuralChat",
    "description": "Int4 optimised NeuralChat Model for handling both text and table based RAG SYSTEM",
    "html_url": [
      "https://github.com/gosshhh/NeuralChat/blob/afccd2d0b4955e2f941af1e76c1f1a4ef1c2f843/workflows/chatbot/inference/backend/chat/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "NJU-PCALab/RAG-Diffusion",
    "name": "RAG-Diffusion",
    "description": "Region-Aware Text-to-Image Generation via Hard Binding and Soft Refinement 🔥",
    "html_url": [
      "https://github.com/NJU-PCALab/RAG-Diffusion/blob/503f63d8ca3fc40df8a2bb6332e3f592a0e68fda/RAG_MLLM.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 14455,
    "stars": 573
  },
  {
    "full_name": "SHI-Labs/CuMo",
    "name": "CuMo",
    "description": "CuMo: Scaling Multimodal LLM with Co-Upcycled Mixture-of-Experts",
    "html_url": [
      "https://github.com/SHI-Labs/CuMo/blob/6cd979a808e9e5188b20dbc080d15e0c72bc2705/cumo/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 7852,
    "stars": 149
  },
  {
    "full_name": "zhenyuw16/GenArtist",
    "name": "GenArtist",
    "description": "Code release for our NeurIPS 2024 Spotlight paper \"GenArtist: Multimodal LLM as an Agent for Unified  Image Generation and Editing\"",
    "html_url": [
      "https://github.com/zhenyuw16/GenArtist/blob/d0bad2e4ec4cd72a1a1a35941fb29801add621a3/LLM-groundedDiffusion/utils/llm.py",
      "https://github.com/zhenyuw16/GenArtist/blob/d0bad2e4ec4cd72a1a1a35941fb29801add621a3/demo_t2i.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 149276,
    "stars": 129
  },
  {
    "full_name": "jacobmarks/gpt4-vision-plugin",
    "name": "gpt4-vision-plugin",
    "description": "Chat with your images using GPT-4 Vision!",
    "html_url": [
      "https://github.com/jacobmarks/gpt4-vision-plugin/blob/336e31eeac5f42ed9b2392b001690529dc5505dc/__init__.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 225,
    "stars": 9
  },
  {
    "full_name": "BMS-geodev/vectra-py",
    "name": "vectra-py",
    "description": "WIP port of the vectra js in memory vector database. ",
    "html_url": [
      "https://github.com/BMS-geodev/vectra-py/blob/285bd341f1da469d9695fdee584b2d526f24a4ee/src/vectra_py/openai_embeddings.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2006,
    "stars": 24
  },
  {
    "full_name": "jtang613/BinAssist",
    "name": "BinAssist",
    "description": "Binary Ninja plugin to provide LLM assistance analyzing binaries.",
    "html_url": [
      "https://github.com/jtang613/BinAssist/blob/c12cf26b9e8266caf35c3fedb8a10c3a1e651897/src/settings.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1183,
    "stars": 22
  },
  {
    "full_name": "ayhandev/ChatGPT-Telegram-Bot",
    "name": "ChatGPT-Telegram-Bot",
    "description": "This Telegram bot uses the ChatGPT API to communicate with users.",
    "html_url": [
      "https://github.com/ayhandev/ChatGPT-Telegram-Bot/blob/0cf461dd9a170361d3d14e02caf45abc2ec50140/bot.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 129,
    "stars": 1
  },
  {
    "full_name": "qinhy/llm-abstract-model",
    "name": "llm-abstract-model",
    "description": "abstract model of llms and APIs",
    "html_url": [
      "https://github.com/qinhy/llm-abstract-model/blob/e0d9a35158d21f6d18e02cef1d95536647b783f4/ex.4.CustomStores.py",
      "https://github.com/qinhy/llm-abstract-model/blob/e0d9a35158d21f6d18e02cef1d95536647b783f4/LLMAbstractModel/LLMsModel.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 107523,
    "stars": 0
  },
  {
    "full_name": "yotamitai/LLM-Game",
    "name": "LLM-Game",
    "description": null,
    "html_url": [
      "https://github.com/yotamitai/LLM-Game/blob/e5bc0a78b22dc544a0a02d5af6400bf527ae5914/RLHF_game/call_api.py",
      "https://github.com/yotamitai/LLM-Game/blob/e5bc0a78b22dc544a0a02d5af6400bf527ae5914/debate_game/call_api.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 299,
    "stars": 0
  },
  {
    "full_name": "sasidharreddy1999/Active-Learning-using-RAG",
    "name": "Active-Learning-using-RAG",
    "description": null,
    "html_url": [
      "https://github.com/sasidharreddy1999/Active-Learning-using-RAG/blob/e4f36706002338d7cfeabdc25f794c24bde14325/ActiveRAG-main/scripts/agent.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4102,
    "stars": 0
  },
  {
    "full_name": "TianxiangGuo/InStoreGPTs",
    "name": "InStoreGPTs",
    "description": "InStoreGPTs is a prototype for a multi-agent LLM-based in-store assistant designed to help users navigate, discover, and interact with in-store products seamlessly. ",
    "html_url": [
      "https://github.com/TianxiangGuo/InStoreGPTs/blob/dced4e1995c02001c5542e2f13904a3b7ba27cae/InStoreGPTs/services/llm_handler.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 9546,
    "stars": 0
  },
  {
    "full_name": "IlyaKozlov/proxy_llm",
    "name": "proxy_llm",
    "description": "Simple python based cache proxy for llm",
    "html_url": [
      "https://github.com/IlyaKozlov/proxy_llm/blob/2703b7fffe17f2c0e42a6932233b34b42fc7f18a/proxy/api.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 151,
    "stars": 0
  },
  {
    "full_name": "eiffelv/Chillmate",
    "name": "Chillmate",
    "description": "Software Engineering Project Team 01",
    "html_url": [
      "https://github.com/eiffelv/Chillmate/blob/cbec69f0fcb8dfc9526a61e492bbaf834be9721f/app/backend/chatbot/mood_tracker.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 25189,
    "stars": 1
  },
  {
    "full_name": "jingjing12110/ViLamr",
    "name": "ViLamr",
    "description": "MLLMs towards Chain-of-Thought Reasoning",
    "html_url": [
      "https://github.com/jingjing12110/ViLamr/blob/65a294b61bdde255304450dfe478d0232202a7d6/vilamr/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "Yangel-hide/RAG-Diffusion-xl",
    "name": "RAG-Diffusion-xl",
    "description": "RAG-Diffusion re-implemented in sdxl",
    "html_url": [
      "https://github.com/Yangel-hide/RAG-Diffusion-xl/blob/2f8d3416c0e55d879fd8caf651bc94c8919d0943/RAG_MLLM.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4290,
    "stars": 3
  },
  {
    "full_name": "FreedomIntelligence/LLMZoo",
    "name": "LLMZoo",
    "description": "⚡LLM Zoo is a project that provides data, models, and evaluation benchmark for large language models.⚡",
    "html_url": [
      "https://github.com/FreedomIntelligence/LLMZoo/blob/cf70d9cd7a34808681ebe58e652f697420d7b055/llmzoo/deploy/webapp/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 7541,
    "stars": 2943
  },
  {
    "full_name": "interpretml/interpret-text",
    "name": "interpret-text",
    "description": "A library that incorporates state-of-the-art explainers for text-based machine learning models and visualizes the result with a built-in dashboard.",
    "html_url": [
      "https://github.com/interpretml/interpret-text/blob/757e67fe0b68f311998bfae3f4a8bb7c02ee8ac6/python/interpret_text/generative/model_lib/isp_pipeline/isp_utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 26985,
    "stars": 426
  },
  {
    "full_name": "scottleibrand/codex-tools",
    "name": "codex-tools",
    "description": "Tools for using OpenAI Codex to do various useful things",
    "html_url": [
      "https://github.com/scottleibrand/codex-tools/blob/f2cc88ebc9390e42b2819d00e836816fe7b18f48/auto-commenter/auto-commenter.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 766,
    "stars": 48
  },
  {
    "full_name": "CurryTang/LLM4Graph",
    "name": "LLM4Graph",
    "description": "Ongoing project: a library for graph foundation model",
    "html_url": [
      "https://github.com/CurryTang/LLM4Graph/blob/19cdd7e7c882386e84af87b53f631a4bedd8bdd2/LLM4Graph/utils/llm/api.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3874,
    "stars": 13
  },
  {
    "full_name": "RayP11/Jarvis_Assistant",
    "name": "Jarvis_Assistant",
    "description": "An AI assistant designed for desktop - created with OpenAI, SpotifyAPI, Web-Scraping, Voice Recognition, and cv2",
    "html_url": [
      "https://github.com/RayP11/Jarvis_Assistant/blob/2f9acaa976f7591b7a59bded2ff932c6e6cfed33/openaiAPI.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1023,
    "stars": 3
  },
  {
    "full_name": "AlanCunningham/chatgpt-assistant",
    "name": "chatgpt-assistant",
    "description": "A ChatGPT assistant with voice activation and image generation, connected to a Raspberry Pi display.",
    "html_url": [
      "https://github.com/AlanCunningham/chatgpt-assistant/blob/464e27000fc474df4058feaecbf405c780060a35/gpt.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 677,
    "stars": 2
  },
  {
    "full_name": "weiyueli7/SON",
    "name": "SON",
    "description": "Enhancing Prompt Understanding of Diffusion Models with Large Language Models Guided Layouts",
    "html_url": [
      "https://github.com/weiyueli7/SON/blob/5fdf57863b6399dd0cd5eb895d7aeacf88f1f577/utils/llm.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 476303,
    "stars": 2
  },
  {
    "full_name": "dlrdaile/MoodyInfoExtractor",
    "name": "MoodyInfoExtractor",
    "description": "Moody web site report scrapy and extrator the rating change info with llm",
    "html_url": [
      "https://github.com/dlrdaile/MoodyInfoExtractor/blob/4d16c9781fe19c0620edad40a6dc6f08b5af9476/Agent.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 909,
    "stars": 2
  },
  {
    "full_name": "shaunak27/grain-clip",
    "name": "grain-clip",
    "description": "GRAIN is a new pretraining strategy for contrastive vision-language models that learns fine-grained visual features through grounding.",
    "html_url": [
      "https://github.com/shaunak27/grain-clip/blob/c6bf85e05265e483551e81593352226c0dd71174/gpt4_anns.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4113,
    "stars": 10
  },
  {
    "full_name": "Kquant03/caduceus",
    "name": "caduceus",
    "description": "Using GPT-4o to convert medical and scientific protocols to markdown format.",
    "html_url": [
      "https://github.com/Kquant03/caduceus/blob/8e47445215cb0733c72921fe3c0a25e815cc2d87/conversions/pdf2md.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 20582,
    "stars": 2
  },
  {
    "full_name": "asuzukosi/JointRobotPlanningWithHumanRobotInteraction",
    "name": "JointRobotPlanningWithHumanRobotInteraction",
    "description": "Robot planning for Ned Niryo robot using LLMs",
    "html_url": [
      "https://github.com/asuzukosi/JointRobotPlanningWithHumanRobotInteraction/blob/eafd429efa6f7282575a934220ede49dd981ed6c/physicalevaluation/vision.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4316,
    "stars": 4
  },
  {
    "full_name": "ayoub-mg/Audio-ChatGPT-to-Quiz-Form",
    "name": "Audio-ChatGPT-to-Quiz-Form",
    "description": "Quiz Form Generator from Audio Prompt",
    "html_url": [
      "https://github.com/ayoub-mg/Audio-ChatGPT-to-Quiz-Form/blob/92aab1fe11da5daecb09c903ceef2a168211e400/App/audio_rec.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 543,
    "stars": 3
  },
  {
    "full_name": "FreedomIntelligence/LLMFactory",
    "name": "LLMFactory",
    "description": "A factory to standardize LLM adaptation through modularization",
    "html_url": [
      "https://github.com/FreedomIntelligence/LLMFactory/blob/fb04ed562cc9d1d19fc5c91089920c8e9b806ab9/llmfactory/deploy/webapp/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2476,
    "stars": 31
  },
  {
    "full_name": "hopeman1102/LLM_model",
    "name": "LLM_model",
    "description": "⚡LLM Zoo is a project that provides data, models, and evaluation benchmark for large language models.⚡",
    "html_url": [
      "https://github.com/hopeman1102/LLM_model/blob/ab586f8dad3f0d58e7b6598cff2291633d9b7f6c/llmzoo/deploy/webapp/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "Azure-Samples/aoai-realtime-audio-sdk",
    "name": "aoai-realtime-audio-sdk",
    "description": "Azure OpenAI code resources for using gpt-4o-realtime capabilities.",
    "html_url": [
      "https://github.com/Azure-Samples/aoai-realtime-audio-sdk/blob/0c8c36a6a972b80be4ed21e5831c2f73260baa74/python/rtclient/low_level_client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 34760,
    "stars": 814
  },
  {
    "full_name": "zhuohaoyu/KIEval",
    "name": "KIEval",
    "description": "[ACL'24] A Knowledge-grounded Interactive Evaluation Framework for Large Language Models",
    "html_url": [
      "https://github.com/zhuohaoyu/KIEval/blob/8806acbb5eb02ebcba1ea23d4438b6963e9caaa6/scripts/generate-basic.py",
      "https://github.com/zhuohaoyu/KIEval/blob/8806acbb5eb02ebcba1ea23d4438b6963e9caaa6/kieval/models/openai_model.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 237126,
    "stars": 36
  },
  {
    "full_name": "deathbychocolate/gptcli",
    "name": "gptcli",
    "description": "A CLI  client meant to provide the core features of the ChatGPT webapp to the terminal via Openai's API. Supported on MacOS and Linux.",
    "html_url": [
      "https://github.com/deathbychocolate/gptcli/blob/977d213a56a02d67c47e7bb4fc39d941dc33dad7/gptcli/src/openai_api_helper.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2335,
    "stars": 3
  },
  {
    "full_name": "smilexiaobao1992/Wechat_openai",
    "name": "Wechat_openai",
    "description": "使用Flask和OpenAI API处理微信公众号文本回复及飞书机器人回复",
    "html_url": [
      "https://github.com/smilexiaobao1992/Wechat_openai/blob/6a645a2f72276546c6816862ca4045139f524be5/feishu_chatbot.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 178,
    "stars": 2
  },
  {
    "full_name": "carlini/chess-llm",
    "name": "chess-llm",
    "description": "Play chess against large language models.",
    "html_url": [
      "https://github.com/carlini/chess-llm/blob/8f53e62e5ff45af2aee2b3fb599f9f106ab9f353/chessllm.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4255,
    "stars": 47
  },
  {
    "full_name": "podgaietska/SmartMeal-Fullstack-App",
    "name": "SmartMeal-Fullstack-App",
    "description": "SmartMeal - a full-stack app that integrates OpenAI to generate recipe's based on what you have in your fridge!",
    "html_url": [
      "https://github.com/podgaietska/SmartMeal-Fullstack-App/blob/ac297230a66a80a7ab683cb87003e7d5fa4fb3bc/functions/create_meal/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 19511,
    "stars": 0
  },
  {
    "full_name": "gordonhu608/peft_llama",
    "name": "peft_llama",
    "description": "Peft_BLIP_LLaMA",
    "html_url": [
      "https://github.com/gordonhu608/peft_llama/blob/d23e2bf9c509ab0dde9fd8a92e04e7c7a01a01d3/llava/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 22889,
    "stars": 0
  },
  {
    "full_name": "Maven-Building-LLMS-into-Production/Cicero-LLM-Synthesizer",
    "name": "Cicero-LLM-Synthesizer",
    "description": "Project related to the creation of a Large Language Model Document Synthesizer",
    "html_url": [
      "https://github.com/Maven-Building-LLMS-into-Production/Cicero-LLM-Synthesizer/blob/dff6583f0afd0126671a3dc58b729bdc207b7d37/src/utils/gpt35_summaries/summarizer.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2045,
    "stars": 0
  },
  {
    "full_name": "dwarkeshkaswala/langchain-mortgage-calculator",
    "name": "langchain-mortgage-calculator",
    "description": null,
    "html_url": [
      "https://github.com/dwarkeshkaswala/langchain-mortgage-calculator/blob/c9eabfabc0a3f981f58b7c082ae5ac07579494ce/assistant.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 216,
    "stars": 0
  },
  {
    "full_name": "morganrivers/consciousness_train_test",
    "name": "consciousness_train_test",
    "description": "Train language models for unbiased self-reports of consciousness, using CodeBERT as a base and custom datasets to minimize anthropomorphic bias.",
    "html_url": [
      "https://github.com/morganrivers/consciousness_train_test/blob/da725787df0ff47a353fa9d9ae486d1dda9289f2/3_Answering_ACT_for_other_agents/generate_prompt_data.py",
      "https://github.com/morganrivers/consciousness_train_test/blob/da725787df0ff47a353fa9d9ae486d1dda9289f2/2_QAndA/2B_create_template_QandA/create_template_QandAOLD.py",
      "https://github.com/morganrivers/consciousness_train_test/blob/da725787df0ff47a353fa9d9ae486d1dda9289f2/1_CodeBERT_word_learning/1A_generate_data/textbook_learning_generator.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 18562,
    "stars": 0
  },
  {
    "full_name": "QiangZhuang95/Presentation-Video-Auto-Generator",
    "name": "Presentation-Video-Auto-Generator",
    "description": "🚀 项目介绍：自动生成演讲视频的小实验",
    "html_url": [
      "https://github.com/QiangZhuang95/Presentation-Video-Auto-Generator/blob/1a1bcc5270f75e63828af3350bb7c16ea77acc1a/ppt_autoScript_Final_Version.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 412,
    "stars": 1
  },
  {
    "full_name": "digiteinfotech/kairon",
    "name": "kairon",
    "description": "Conversational AI Platform to build effective Proactive Digital Assistants using Visual LLM Chaining",
    "html_url": [
      "https://github.com/digiteinfotech/kairon/blob/c52967749ff951e3958903f206bd4c093b51a1c0/tests/unit_test/augmentation/gpt_augmentation_test.py",
      "https://github.com/digiteinfotech/kairon/blob/c52967749ff951e3958903f206bd4c093b51a1c0/tests/unit_test/plugins_test.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 209346,
    "stars": 262
  },
  {
    "full_name": "microsoft/JARVIS",
    "name": "JARVIS",
    "description": "JARVIS, a system to connect LLMs with ML community. Paper: https://arxiv.org/pdf/2303.17580.pdf",
    "html_url": [
      "https://github.com/microsoft/JARVIS/blob/c62e0faac76c4a2907cabe2cfe4bbe5f2e613400/hugginggpt/server/run_gradio_demo.py",
      "https://github.com/microsoft/JARVIS/blob/c62e0faac76c4a2907cabe2cfe4bbe5f2e613400/hugginggpt/server/awesome_chat.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 407625,
    "stars": 24176
  },
  {
    "full_name": "indeedion/TGPT",
    "name": "TGPT",
    "description": "This is a cli interface for GPT-3.5",
    "html_url": [
      "https://github.com/indeedion/TGPT/blob/4c793833d7f4f0276930e7831db646df616f2ae2/tgpt/image_handler.py",
      "https://github.com/indeedion/TGPT/blob/4c793833d7f4f0276930e7831db646df616f2ae2/tgpt/gpt_client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "goutham794/throttle-openai",
    "name": "throttle-openai",
    "description": "Fast, Asynchronous OpenAI calls and Automatic Request Limiting to avoid getting Rate Limited.",
    "html_url": [
      "https://github.com/goutham794/throttle-openai/blob/c3b182e215fc8220eb987f58f27f1029e5d0c28b/src/throttle_openai/chat.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 512,
    "stars": 2
  },
  {
    "full_name": "Tobasco99/llm_policy_summarizer",
    "name": "llm_policy_summarizer",
    "description": "Project files for the master thesis \"Analysing Policy Documents Using AI-based Large Language Models (LLMs)\"",
    "html_url": [
      "https://github.com/Tobasco99/llm_policy_summarizer/blob/9f9a844516838011a9b2417a3eb9070f33d7b21a/backend/app/service/language_model_connection.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3645,
    "stars": 0
  },
  {
    "full_name": "JiaQiSJTU/VisionInText",
    "name": "VisionInText",
    "description": "benchmark, multi-modal, LLM, ASCII Arts",
    "html_url": [
      "https://github.com/JiaQiSJTU/VisionInText/blob/6a0f2ab87ee7dcfdc9361e576e4dea526d711602/src/evaluation_by_api.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3701,
    "stars": 3
  },
  {
    "full_name": "logos000/RAG_EVL",
    "name": "RAG_EVL",
    "description": null,
    "html_url": [
      "https://github.com/logos000/RAG_EVL/blob/cda6a20cd6c385169150a263f4d8f8546212ddc2/biology/L2_qa_process.py",
      "https://github.com/logos000/RAG_EVL/blob/cda6a20cd6c385169150a263f4d8f8546212ddc2/biology/L1_qa_process.py",
      "https://github.com/logos000/RAG_EVL/blob/cda6a20cd6c385169150a263f4d8f8546212ddc2/bio_medi/L1_qa_process.py",
      "https://github.com/logos000/RAG_EVL/blob/cda6a20cd6c385169150a263f4d8f8546212ddc2/bio_medi/L2_qa_process.py",
      "https://github.com/logos000/RAG_EVL/blob/cda6a20cd6c385169150a263f4d8f8546212ddc2/biology/L4_qa_process.py",
      "https://github.com/logos000/RAG_EVL/blob/cda6a20cd6c385169150a263f4d8f8546212ddc2/bio_medi/test_L2.py",
      "https://github.com/logos000/RAG_EVL/blob/cda6a20cd6c385169150a263f4d8f8546212ddc2/bio_kg/test_L1.py",
      "https://github.com/logos000/RAG_EVL/blob/cda6a20cd6c385169150a263f4d8f8546212ddc2/biology/test_L5.py",
      "https://github.com/logos000/RAG_EVL/blob/cda6a20cd6c385169150a263f4d8f8546212ddc2/bio_kg/test_L3.py",
      "https://github.com/logos000/RAG_EVL/blob/cda6a20cd6c385169150a263f4d8f8546212ddc2/bio_medi/test_L3.py",
      "https://github.com/logos000/RAG_EVL/blob/cda6a20cd6c385169150a263f4d8f8546212ddc2/bio_kg/test_L4.py",
      "https://github.com/logos000/RAG_EVL/blob/cda6a20cd6c385169150a263f4d8f8546212ddc2/bio_medi/test_L4.py",
      "https://github.com/logos000/RAG_EVL/blob/cda6a20cd6c385169150a263f4d8f8546212ddc2/biology/test_L4.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1170524,
    "stars": 0
  },
  {
    "full_name": "jslonpl/LLMs",
    "name": "LLMs",
    "description": null,
    "html_url": [
      "https://github.com/jslonpl/LLMs/blob/e0113ce4ba0afd1ad68d7de13d9d60e5d4f7c12b/src/api/openai/client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2866,
    "stars": 0
  },
  {
    "full_name": "tylerthecoder/gpt-vision-grid-extraction",
    "name": "gpt-vision-grid-extraction",
    "description": "An experiment on the capability of gpt4 vision",
    "html_url": [
      "https://github.com/tylerthecoder/gpt-vision-grid-extraction/blob/11196121b0b51365472a9492622e9d090f9f489f/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 112,
    "stars": 0
  },
  {
    "full_name": "afastowski/knowledge_drift",
    "name": "knowledge_drift",
    "description": "Code for the paper \"Understanding Knowledge Drift in LLMs through Misinformation\", DELTA workshop @ KDD2024",
    "html_url": [
      "https://github.com/afastowski/knowledge_drift/blob/be015e0701ef1e15a302439627923f560a991e08/qa_eval.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1662578,
    "stars": 2
  },
  {
    "full_name": "Eyr3/PrivacyAsst",
    "name": "PrivacyAsst",
    "description": "PrivacyAsst: Safeguarding User Privacy in Tool-Using Large Language Model Agents (TDSC 2024)",
    "html_url": [
      "https://github.com/Eyr3/PrivacyAsst/blob/353ebeb8a263b6eb18c60fd46043b167aa008fc3/server/run_gradio_demo.py",
      "https://github.com/Eyr3/PrivacyAsst/blob/353ebeb8a263b6eb18c60fd46043b167aa008fc3/server/awesome_chat_enc.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 47448,
    "stars": 13
  },
  {
    "full_name": "nguyenph17/llm-omni-chatbot",
    "name": "llm-omni-chatbot",
    "description": "This project is an Omni-chatbot built using Open/Close Large language models. The chatbot excels in conversational abilities, retrieving information from documents (aka RAG), and searching for and synthesizing answers from the internet.",
    "html_url": [
      "https://github.com/nguyenph17/llm-omni-chatbot/blob/345ce18c43caec7f179b2b0b1f7f4bc6711d29e4/tests/test_completion_api.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 100629,
    "stars": 2
  },
  {
    "full_name": "stanford-oval/storm",
    "name": "storm",
    "description": "An LLM-powered knowledge curation system that researches a topic and generates a full-length report with citations.",
    "html_url": [
      "https://github.com/stanford-oval/storm/blob/5a61eec81d6811619ee291aa64dbbd3b5e01f385/knowledge_storm/encoder.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 11017,
    "stars": 24562
  },
  {
    "full_name": "alfiedennen/GPT-4-coding-assistant",
    "name": "GPT-4-coding-assistant",
    "description": "GPT-4 Coding Assistant is a web application that leverages the power of OpenAI's GPT-4 to help developers with their coding tasks.",
    "html_url": [
      "https://github.com/alfiedennen/GPT-4-coding-assistant/blob/b86b6ebdb4c3fe07ce8c9fe100b5004d423d70ef/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 454,
    "stars": 58
  },
  {
    "full_name": "WisdomShell/kieval",
    "name": "kieval",
    "description": "A Knowledge-grounded Interactive Evaluation Framework for Large Language Models",
    "html_url": [
      "https://github.com/WisdomShell/kieval/blob/310d2e472701cd20c92535dbc06f93d0b7bcd54b/scripts/generate-basic.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4433,
    "stars": 5
  },
  {
    "full_name": "kevinangers/gpt-guessr",
    "name": "gpt-guessr",
    "description": "Can LLM's play GeoGuessr? Proof-of-concept app using the GPT-4V API to guess the location of streetview images with suprising accuracy.",
    "html_url": [
      "https://github.com/kevinangers/gpt-guessr/blob/12ffcbc104f097ef97fad57c921c946e5a9a0149/gptguessr.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 170,
    "stars": 0
  },
  {
    "full_name": "amyuch/UVLLM",
    "name": "UVLLM",
    "description": null,
    "html_url": [
      "https://github.com/amyuch/UVLLM/blob/39cb479e9b91dabc9855fed6fe43c82fdccbca2a/UVLLM/api.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 32216,
    "stars": 2
  },
  {
    "full_name": "DanteNoguez/ProxyGPT",
    "name": "ProxyGPT",
    "description": "A simple OpenAI API-compatible proxy server designed to provide key management, rate limiting and usage monitoring.",
    "html_url": [
      "https://github.com/DanteNoguez/ProxyGPT/blob/95f80995cbc387007c097cdff312504d0cdcbab3/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 292,
    "stars": 2
  },
  {
    "full_name": "GaiZhenbiao/ChuanhuChatGPT",
    "name": "ChuanhuChatGPT",
    "description": "GUI for ChatGPT API and many LLMs. Supports agents, file-based QA, GPT finetuning and query with web search. All with a neat UI.",
    "html_url": [
      "https://github.com/GaiZhenbiao/ChuanhuChatGPT/blob/3747cdbb95f9395146f29da7dcdc31c82cc23717/locale/extract_locale.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 17244,
    "stars": 15418
  },
  {
    "full_name": "momaabna/QGPTAgent",
    "name": "QGPTAgent",
    "description": "The QGPT Agent is a powerful plugin for QGIS that utilizes the advanced natural language processing capabilities of the OpenAI GPT model to automate various processes in QGIS. With this plugin, users can interact with the QGIS software using natural language commands, significantly reducing the time and effort required to complete various tasks.",
    "html_url": [
      "https://github.com/momaabna/QGPTAgent/blob/026f4dfcc24f92be53a395cf3b5ad884b6647dcb/functional.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2102,
    "stars": 82
  },
  {
    "full_name": "GianfrancoCorrea/gpt-4-vision-chat",
    "name": "gpt-4-vision-chat",
    "description": "GPT 4 Turbo Vision with Chainlit",
    "html_url": [
      "https://github.com/GianfrancoCorrea/gpt-4-vision-chat/blob/e41107c4b38c958f6126d159246767ca3145614c/app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 206,
    "stars": 32
  },
  {
    "full_name": "Boris-code/chatgpt-cli",
    "name": "chatgpt-cli",
    "description": "chatgpt 命令行工具",
    "html_url": [
      "https://github.com/Boris-code/chatgpt-cli/blob/01211b4a328161cd7e758893765144b5318d2f5b/chatgpt/core/gpt.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 251,
    "stars": 16
  },
  {
    "full_name": "AIFEG/BenchLMM",
    "name": "BenchLMM",
    "description": "[ECCV 2024] BenchLMM: Benchmarking Cross-style Visual Capability of Large Multimodal Models",
    "html_url": [
      "https://github.com/AIFEG/BenchLMM/blob/c482a7fe06725dba721df5e3398c87771ca5e491/evaluate/gpt_evaluation_script_Robots_Games.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 13911,
    "stars": 85
  },
  {
    "full_name": "utrgv-software-engineering/llm-deployment-docker-Gabe-GH",
    "name": "llm-deployment-docker-Gabe-GH",
    "description": "lllm-deployment-docker-Gabe-GH created by GitHub Classroom",
    "html_url": [
      "https://github.com/utrgv-software-engineering/llm-deployment-docker-Gabe-GH/blob/ac9c5dfd696c11f141ded6dfd9427af7e9923d7b/chat/views.py",
      "https://github.com/utrgv-software-engineering/llm-deployment-docker-Gabe-GH/blob/ac9c5dfd696c11f141ded6dfd9427af7e9923d7b/aistarterkit/settings.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 6907,
    "stars": 0
  },
  {
    "full_name": "tkhongsap/gen-ai-utils",
    "name": "gen-ai-utils",
    "description": "A collection of utility scripts and helper functions for integrating and managing generative AI APIs, including OpenAI, Anthropic, and others. Streamline your AI projects with reusable components and examples.",
    "html_url": [
      "https://github.com/tkhongsap/gen-ai-utils/blob/9aafefef3c566d452c54f2ee91c810084a64bc82/openai/helpers/openai_retrieve_threads_and_messages.py",
      "https://github.com/tkhongsap/gen-ai-utils/blob/9aafefef3c566d452c54f2ee91c810084a64bc82/openai/helpers/01-openai-retrieve-messages-by-thread.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 11309,
    "stars": 0
  },
  {
    "full_name": "ibndias/CIPHER",
    "name": "CIPHER",
    "description": "Cybersecurity Intelligent Pentesting Helper for Ethical Researcher (CIPHER). Fine tuned LLM for penetration testing guidance based on writeups.",
    "html_url": [
      "https://github.com/ibndias/CIPHER/blob/8980615c0fbba3a7debcdf45f412eb9de0e86d1a/farr-generation/utils/foothold_marker.py",
      "https://github.com/ibndias/CIPHER/blob/8980615c0fbba3a7debcdf45f412eb9de0e86d1a/farr-generation/farr-gen.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 29978,
    "stars": 22
  },
  {
    "full_name": "boranyang-ML/PredictDJIAwithRedditNews",
    "name": "PredictDJIAwithRedditNews",
    "description": "This study investigates the potential of predicting the Dow Jones Industrial Average (DJIA) stock price movements using the top 25 daily news headlines from Reddit WorldNews Channel",
    "html_url": [
      "https://github.com/boranyang-ML/PredictDJIAwithRedditNews/blob/135e02abbbf94d0fb5b9bdff9a17a4c7ac0c099f/chatgpt.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 750,
    "stars": 0
  },
  {
    "full_name": "Trustworthy-ML-Lab/Efficient-LLM-automated-interpretability",
    "name": "Efficient-LLM-automated-interpretability",
    "description": null,
    "html_url": [
      "https://github.com/Trustworthy-ML-Lab/Efficient-LLM-automated-interpretability/blob/d0719aa0bc047815fb59df4ca561260e64e33fa3/neuron-explainer/neuron_explainer/api_client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 106274,
    "stars": 5
  },
  {
    "full_name": "RootCee/nerdiesyndicatebot",
    "name": "nerdiesyndicatebot",
    "description": "Arnitrage Bot for all Nerdie Blaq Syndicate Members to test and build on and use as they please. Created by RootCee",
    "html_url": [
      "https://github.com/RootCee/nerdiesyndicatebot/blob/20b24b72501ea5bb5e8af69eafad04e9c64c9975/venv/Lib/site-packages/instructor/cli/usage.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3499043,
    "stars": 0
  },
  {
    "full_name": "ag2ai/ag2",
    "name": "ag2",
    "description": "AG2 (formerly AutoGen): The Open-Source AgentOS. Join us at: https://discord.gg/pAbnFJrkgZ",
    "html_url": [
      "https://github.com/ag2ai/ag2/blob/a7a50fef98d21f65e900faa67693f18b8296fd1e/autogen/agentchat/realtime_agent/client.py",
      "https://github.com/ag2ai/ag2/blob/975f0d9f0e6607dd339b323cf9ff471e5c86403e/autogen/oai/completion.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 143619,
    "stars": 2787
  },
  {
    "full_name": "dense-analysis/neural",
    "name": "neural",
    "description": "AI Vim/Neovim code generation plugin (OpenAI, ChatGPT, and more)",
    "html_url": [
      "https://github.com/dense-analysis/neural/blob/f53af0007124517a46b99a4d49b86087e426bfef/neural_sources/openai.py",
      "https://github.com/dense-analysis/neural/blob/f53af0007124517a46b99a4d49b86087e426bfef/neural_sources/chatgpt.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3216,
    "stars": 501
  },
  {
    "full_name": "sinjorjob/ChatGPT-Assumed-questions-tool",
    "name": "ChatGPT-Assumed-questions-tool",
    "description": "A tool using ChatGPT-API that acquires the contents of an uploaded PowerPoint file and suggests assumed questions and sample answers.",
    "html_url": [
      "https://github.com/sinjorjob/ChatGPT-Assumed-questions-tool/blob/d2a07c96909ddcb8fa3576bb9f5ad65468f9b412/source/modules/presets.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 955,
    "stars": 0
  },
  {
    "full_name": "JoshuaPicchioni/OpenAI-API-Program",
    "name": "OpenAI-API-Program",
    "description": "A program that allows interfacing with that OpenAI API with multiple extra features aimed at seeing the moderation API result of inputs and outputs.",
    "html_url": [
      "https://github.com/JoshuaPicchioni/OpenAI-API-Program/blob/8943cbb4545b5240812f3e46353daf51b333aed4/GPTAPIProgram.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 123,
    "stars": 0
  },
  {
    "full_name": "ZhongjiaoGPT-Platform/ZhongjiaoGPT",
    "name": "ZhongjiaoGPT",
    "description": "AI power road design (under dev)",
    "html_url": [
      "https://github.com/ZhongjiaoGPT-Platform/ZhongjiaoGPT/blob/56db3e2308bc3216eaaf7ea133647bb17b41557d/locale/extract_locale.py",
      "https://github.com/ZhongjiaoGPT-Platform/ZhongjiaoGPT/blob/56db3e2308bc3216eaaf7ea133647bb17b41557d/modules/presets.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 8542,
    "stars": 4
  },
  {
    "full_name": "hnvivek/llm-text-2-sql-query-dashboard",
    "name": "llm-text-2-sql-query-dashboard",
    "description": "A cutting-edge data analysis tool that leverages the power of Large Language Models (LLMs) to transform natural language queries into SQL, providing effortless insights into food delivery data.",
    "html_url": [
      "https://github.com/hnvivek/llm-text-2-sql-query-dashboard/blob/4fbb5e03e17622d9b226def7610afb0210f5af85/app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 688913,
    "stars": 2
  },
  {
    "full_name": "eliawaefler/RAG-Demo",
    "name": "RAG-Demo",
    "description": null,
    "html_url": [
      "https://github.com/eliawaefler/RAG-Demo/blob/f58cb47d1899e4ce3f7df833046feacb2818bfe3/utils/openai_handler.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1558,
    "stars": 0
  },
  {
    "full_name": "h3manthh/Automatic-Form-Filling-using-GPT-",
    "name": "Automatic-Form-Filling-using-GPT-",
    "description": "A web app that automates form filling by extracting questions from PDFs, Word, and Excel files, and generating responses using GPT-4. Built with Python and Streamlit, it features document processing, duplicate detection, and secure user authentication for efficient workflows.",
    "html_url": [
      "https://github.com/h3manthh/Automatic-Form-Filling-using-GPT-/blob/9321b52fcf5b28e991a31fd69921a3f6d6814834/add_text.temp.py",
      "https://github.com/h3manthh/Automatic-Form-Filling-using-GPT-/blob/9321b52fcf5b28e991a31fd69921a3f6d6814834/PDF_OCR_1.py",
      "https://github.com/h3manthh/Automatic-Form-Filling-using-GPT-/blob/9321b52fcf5b28e991a31fd69921a3f6d6814834/FormFiller%20App/app.py",
      "https://github.com/h3manthh/Automatic-Form-Filling-using-GPT-/blob/9321b52fcf5b28e991a31fd69921a3f6d6814834/FormFiller/app.py",
      "https://github.com/h3manthh/Automatic-Form-Filling-using-GPT-/blob/9321b52fcf5b28e991a31fd69921a3f6d6814834/FormFiller/app_temp.py",
      "https://github.com/h3manthh/Automatic-Form-Filling-using-GPT-/blob/9321b52fcf5b28e991a31fd69921a3f6d6814834/FormFiller/app_temp_Mar11.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3067,
    "stars": 1
  },
  {
    "full_name": "ecodan/llm_playground",
    "name": "llm_playground",
    "description": null,
    "html_url": [
      "https://github.com/ecodan/llm_playground/blob/5087e66a7fabb37e73f1b45bbd8e176fe35c0e76/mm_explore/gpt4_img_caption.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 868,
    "stars": 0
  },
  {
    "full_name": "IT-School-GoIT/FinalProjectGoitDataScience",
    "name": "FinalProjectGoitDataScience",
    "description": "It is an innovative project that uses Custom VGG16, Faster R-CNN, and Mask R-CNN models for accurate image recognition and classification, and also includes Face ID functions, GPT-4-based interactive chat, and a neural network game.",
    "html_url": [
      "https://github.com/IT-School-GoIT/FinalProjectGoitDataScience/blob/e53f3a7c172adac29df5288017c59c4d0fc1fbae/gpt_response/views.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 29506,
    "stars": 1
  },
  {
    "full_name": "openai/openai-python",
    "name": "openai-python",
    "description": "The official Python library for the OpenAI API",
    "html_url": [
      "https://github.com/openai/openai-python/blob/19ecaafeda91480d0dfd7ce44e7317220b9d48b6/tests/test_module_client.py",
      "https://github.com/openai/openai-python/blob/19ecaafeda91480d0dfd7ce44e7317220b9d48b6/src/openai/_client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 58151,
    "stars": 27014
  },
  {
    "full_name": "dizyweather/llm_enumeration",
    "name": "llm_enumeration",
    "description": null,
    "html_url": [
      "https://github.com/dizyweather/llm_enumeration/blob/e518a00a42d4ac06e2a4f168189977e0a75d60d5/ChatGPT_Tests/item_identification_test.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 5653,
    "stars": 1
  },
  {
    "full_name": "ChengLong89/openai-python",
    "name": "openai-python",
    "description": null,
    "html_url": [
      "https://github.com/ChengLong89/openai-python/blob/a511d0dceac9f428391bee3220d6cdb15d09bfff/tests/test_module_client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 37246,
    "stars": 0
  },
  {
    "full_name": "facebookresearch/doc-storygen-v2",
    "name": "doc-storygen-v2",
    "description": "Codebase for LLM story generation; updated version of https//github.com/yangkevin2/doc-story-generation",
    "html_url": [
      "https://github.com/facebookresearch/doc-storygen-v2/blob/d092b42686bfc29ef2d610d5563e822ebf9d1451/storygen/common/llm/llm.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1766,
    "stars": 82
  },
  {
    "full_name": "xuyuan23/operateGPT",
    "name": "operateGPT",
    "description": "🌟 Revolutionize Your Operations with One Sentence Automation: Utilizing large language models and Multi-Agents to generate operational copy, images, and videos with one-line requirements.",
    "html_url": [
      "https://github.com/xuyuan23/operateGPT/blob/c43c2ad28bbd2f9ce766c2ad61a61037dc485ded/operategpt/llms/parameter.py",
      "https://github.com/xuyuan23/operateGPT/blob/c43c2ad28bbd2f9ce766c2ad61a61037dc485ded/operate.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3774,
    "stars": 53
  },
  {
    "full_name": "jiran214/chatBilibili",
    "name": "chatBilibili",
    "description": "ChatBilibili .基于Fastapi 和ChatGPT Embedding ，实时生成视频概要，检索上下文视频提问/聊天",
    "html_url": [
      "https://github.com/jiran214/chatBilibili/blob/f424565d769b7be42480d737dad7578e95d9cbab/backend/requestor/opanAi.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1696,
    "stars": 31
  },
  {
    "full_name": "halilagin/LLMs-on-kubernetes",
    "name": "LLMs-on-kubernetes",
    "description": "Fine tuned LLM examples running on Kubernetes",
    "html_url": [
      "https://github.com/halilagin/LLMs-on-kubernetes/blob/7723b49fb2751f9a43128be42a64558b35af2e7f/llms/llm-0001/llm_agent/rag/serve.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 136157,
    "stars": 11
  },
  {
    "full_name": "RHEcosystemAppEng/lightspeed-rag-pipeline",
    "name": "lightspeed-rag-pipeline",
    "description": "lightspeed rag pipeline",
    "html_url": [
      "https://github.com/RHEcosystemAppEng/lightspeed-rag-pipeline/blob/cd71648b4166fa042b437f052f02c88c11343db0/images/rag/utils/config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2887,
    "stars": 0
  },
  {
    "full_name": "SchlossVRL/gpt-cca",
    "name": "gpt-cca",
    "description": "This repository is for the project trying to estimate color-concept associations using GPT",
    "html_url": [
      "https://github.com/SchlossVRL/gpt-cca/blob/51ab2899bec94f004a9da57c946e994f9c22403a/code/scripts/gpt4-image-ratings.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 462186,
    "stars": 0
  },
  {
    "full_name": "ARJUNRAGHUNANDANAN/GenAI-Powered-Daily-Quote-Blog-Generator",
    "name": "GenAI-Powered-Daily-Quote-Blog-Generator",
    "description": "A Google Cloud Platform based solution developed as an idea submission for Code Vipaassana Project Saadhna ",
    "html_url": [
      "https://github.com/ARJUNRAGHUNANDANAN/GenAI-Powered-Daily-Quote-Blog-Generator/blob/169da6873b89408f612b68e788ad92a55d6c7dd3/Version:3.0%20-%20Cloud%20Run%20Basic%20Dockerized/ModulePoemGenerator.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4189,
    "stars": 0
  },
  {
    "full_name": "Oseni03/langchain-helper",
    "name": "langchain-helper",
    "description": null,
    "html_url": [
      "https://github.com/Oseni03/langchain-helper/blob/96087705638a12dbcbfdd856b9f04b791a178f21/BusinessGPT-main/app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 43916,
    "stars": 0
  },
  {
    "full_name": "halilagin/rag-ray-langchain-example",
    "name": "rag-ray-langchain-example",
    "description": "rag-ray-langchain-example",
    "html_url": [
      "https://github.com/halilagin/rag-ray-langchain-example/blob/8487e5a13b7654cce83eb16569314820cd44e927/llm_agent/rag/serve.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1462,
    "stars": 5
  },
  {
    "full_name": "meddash-cloud/rag-ray-langchain-example",
    "name": "rag-ray-langchain-example",
    "description": "rag-ray-langchain-example",
    "html_url": [
      "https://github.com/meddash-cloud/rag-ray-langchain-example/blob/610470e5893ea0c27a05545591d25140e697a5ed/llm_agent/rag/serve.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1449,
    "stars": 0
  },
  {
    "full_name": "Eloise1988/OPENAI",
    "name": "OPENAI",
    "description": "OpenAI ChatGPT bot for Telegram",
    "html_url": [
      "https://github.com/Eloise1988/OPENAI/blob/6ce6ee36416d087b40b6cac16b8b28c81b41d36d/robot.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 399,
    "stars": 49
  },
  {
    "full_name": "plowsai/llmswitcher",
    "name": "llmswitcher",
    "description": "Routes to the most performant and cost efficient LLM based on your prompt [ 🚧 WIP ]",
    "html_url": [
      "https://github.com/plowsai/llmswitcher/blob/4f4fbddce5145fb8aaf6c61bffb623cc1d0359db/switcher.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 182,
    "stars": 4
  },
  {
    "full_name": "heimoshuiyu/whisper-fastapi",
    "name": "whisper-fastapi",
    "description": "A very simple whsper Python FastAPI for OpenAI API, Android voice-typing (konele), Home Assistant (wyoming), and a voice-typing script on Linux and MacOS!",
    "html_url": [
      "https://github.com/heimoshuiyu/whisper-fastapi/blob/9343b8a7fcc85f5cd45f0418c365de112c1f1b1a/wyoming-forward.py",
      "https://github.com/heimoshuiyu/whisper-fastapi/blob/9343b8a7fcc85f5cd45f0418c365de112c1f1b1a/whisper_fastapi.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 912,
    "stars": 18
  },
  {
    "full_name": "ruggsea/LLM-ABM-Chat",
    "name": "LLM-ABM-Chat",
    "description": "Basic framework for simulation of multi-agent LLM conversations. ",
    "html_url": [
      "https://github.com/ruggsea/LLM-ABM-Chat/blob/757e021074b1fc60f967b252c60bb49b74e0c5f4/llm_engines.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 28740,
    "stars": 9
  },
  {
    "full_name": "aaron-imani/omega",
    "name": "omega",
    "description": "Local Message Generator (OMEGA): An LLM-based commit message generator that can use a quantized open-source LLM to produce high-quality commit messages.",
    "html_url": [
      "https://github.com/aaron-imani/omega/blob/f770cf506f396ca69b0c4a5f65f6ecd7e658581f/common/model_loader.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 324222,
    "stars": 3
  },
  {
    "full_name": "Avaiga/demo-gpt-4o",
    "name": "demo-gpt-4o",
    "description": "A Taipy Chatbot that supports images thanks to OpenAI's GPT-4o",
    "html_url": [
      "https://github.com/Avaiga/demo-gpt-4o/blob/66e04c59e9fb73369af0c7f466c85c0926f7ccd4/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 303,
    "stars": 21
  },
  {
    "full_name": "OpenBMB/XAgent",
    "name": "XAgent",
    "description": "An Autonomous LLM Agent for Complex Task Solving",
    "html_url": [
      "https://github.com/OpenBMB/XAgent/blob/3619c25855f878481ddb893709c1e30d76aff794/XAgent/vector_db.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 172172,
    "stars": 8367
  },
  {
    "full_name": "a-real-ai/pywinassistant",
    "name": "pywinassistant",
    "description": "The first open source Large Action Model generalist Artificial Narrow Intelligence agentic framework that controls completely human user interfaces by only using natural language. Based on Visualization-of-Thought Elicits Spatial Reasoning in Large Language Models.",
    "html_url": [
      "https://github.com/a-real-ai/pywinassistant/blob/aa9c9af4722349b1fb848e66bd19bf4dadc9d7c3/core/core_imaging.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2556,
    "stars": 1304
  },
  {
    "full_name": "tcz/rotary-gpt",
    "name": "rotary-gpt",
    "description": "I turned my old rotary phone into a ChatGPT-based home assistant and now you can too",
    "html_url": [
      "https://github.com/tcz/rotary-gpt/blob/2a3bc3b5502b5eb8108d4d696d8b70efaf47799f/rotarygpt/openai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1587,
    "stars": 48
  },
  {
    "full_name": "wujianguo/openai-proxy",
    "name": "openai-proxy",
    "description": "Proxy for OpenAI api using python flask, supports SSE streaming.",
    "html_url": [
      "https://github.com/wujianguo/openai-proxy/blob/8a05c5c9d67910dde031e5dde8ea998923663345/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 116,
    "stars": 17
  },
  {
    "full_name": "gtziafas/OWG",
    "name": "OWG",
    "description": "OWG: Towards Open-World Grasping with Large Vision-Language Models",
    "html_url": [
      "https://github.com/gtziafas/OWG/blob/cb9813fd4ca324bc7ba7200a7ae74fed6257e274/owg/gpt_utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 23274,
    "stars": 27
  },
  {
    "full_name": "RegisterSalad/FocalAI",
    "name": "FocalAI",
    "description": "Linux GUI app for AI enthusiasts. Offers model browsing, GPT-4 code generation, and dynamically managed virtual environments. FOSS",
    "html_url": [
      "https://github.com/RegisterSalad/FocalAI/blob/87f2b1dd4ca86d23f645ca0b45a24f991507ae47/src/api_caller.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2283,
    "stars": 1
  },
  {
    "full_name": "beatty/toolsense",
    "name": "toolsense",
    "description": "a little tool to explore tool use with LLMs",
    "html_url": [
      "https://github.com/beatty/toolsense/blob/00f16bffde9d4e4e804278de3f2814feac06efff/toolsense/toolsense.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 193,
    "stars": 1
  },
  {
    "full_name": "jiansheng-li/MLLMs",
    "name": "MLLMs",
    "description": null,
    "html_url": [
      "https://github.com/jiansheng-li/MLLMs/blob/113879a60754f71a811c05138406648f8522bc4b/evaluation/eval_gpt_ICL.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 21382,
    "stars": 1
  },
  {
    "full_name": "ClockworkZen/Poke-TCG-OCR",
    "name": "Poke-TCG-OCR",
    "description": "An OpenAI powered Pokemon TCG image renamer.",
    "html_url": [
      "https://github.com/ClockworkZen/Poke-TCG-OCR/blob/a20ee4d1fda83badde6eb0011ee360cc4064d611/Pokemon_TCG_OCR.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 159,
    "stars": 0
  },
  {
    "full_name": "kali4nya/chat-gpt-in-terminal-but-you-can-talk-with-it",
    "name": "chat-gpt-in-terminal-but-you-can-talk-with-it",
    "description": "chat GPT in console that can take audio input and uses tts to answer",
    "html_url": [
      "https://github.com/kali4nya/chat-gpt-in-terminal-but-you-can-talk-with-it/blob/21384836b894d198d5d83724915ec975b63251ec/assistant.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 205,
    "stars": 0
  },
  {
    "full_name": "ThanabordeeN/hashtagai_terminal_llm",
    "name": "hashtagai_terminal_llm",
    "description": null,
    "html_url": [
      "https://github.com/ThanabordeeN/hashtagai_terminal_llm/blob/082616fc8f4581ae96aad085fa85f04fd66b1131/hashtagai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 505,
    "stars": 0
  },
  {
    "full_name": "simonpierreboucher/llm-generate-function",
    "name": "llm-generate-function",
    "description": "This repository provides a modular and extensible framework to generate and compare responses from a diverse set of LLMs provided by OpenAI, Anthropic, and Mistral.",
    "html_url": [
      "https://github.com/simonpierreboucher/llm-generate-function/blob/5ba7c0e56f157b015070745afac72882ebd92d54/llm_utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 372,
    "stars": 0
  },
  {
    "full_name": "CyberMaryVer/llm-docs-comparison",
    "name": "llm-docs-comparison",
    "description": null,
    "html_url": [
      "https://github.com/CyberMaryVer/llm-docs-comparison/blob/1fb19c87c25592ce82c782de752fd6b1b4c34653/app_utils/general.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2963,
    "stars": 0
  },
  {
    "full_name": "ShayManor/Cad_Scraper",
    "name": "Cad_Scraper",
    "description": "Get data and use it to finetune an AI model",
    "html_url": [
      "https://github.com/ShayManor/Cad_Scraper/blob/f27ff4b33181977ccd423c5fc5aff324c61fa933/cadToDescriptionTuner.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 376,
    "stars": 2
  },
  {
    "full_name": "ohnotnow/template_to_components",
    "name": "template_to_components",
    "description": "Experiment to use LLMs to convert template syntax",
    "html_url": [
      "https://github.com/ohnotnow/template_to_components/blob/497b1188e9452ac892d4531ab84e66f960f26070/gepetto/gpt.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1089,
    "stars": 1
  },
  {
    "full_name": "GodXuxilie/PromptAttack",
    "name": "PromptAttack",
    "description": "An LLM can Fool Itself: A Prompt-Based Adversarial Attack (ICLR 2024)",
    "html_url": [
      "https://github.com/GodXuxilie/PromptAttack/blob/82768e84e66642ef87ea93fb84ed1962e89e6efe/robustness_eval.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1405757,
    "stars": 88
  },
  {
    "full_name": "ys-zong/VLGuard",
    "name": "VLGuard",
    "description": "[ICML 2024] Safety Fine-Tuning at (Almost) No Cost: A Baseline for Vision Large Language Models.",
    "html_url": [
      "https://github.com/ys-zong/VLGuard/blob/d889f8d04808635aad63148def0e46e4beb87afc/gpt4_evaluator.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4806,
    "stars": 72
  },
  {
    "full_name": "RobertBiehl/multimodal-instruct",
    "name": "multimodal-instruct",
    "description": "Instruction tuning dataset generation inspired by LLaVA-Instruct-158k via any LLM, also for commercial use.",
    "html_url": [
      "https://github.com/RobertBiehl/multimodal-instruct/blob/dd970265034649046e1aa21c41c655e57f7447a7/conversation/openai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1781,
    "stars": 12
  },
  {
    "full_name": "RastislavKish/vision",
    "name": "vision",
    "description": "A simple script for interaction with GPT-4 vision",
    "html_url": [
      "https://github.com/RastislavKish/vision/blob/11caadf60ee47667a3989ecad02e58d75e9aed7b/vision"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 222,
    "stars": 5
  },
  {
    "full_name": "yiyangc18/GPT-PaperReader",
    "name": "GPT-PaperReader",
    "description": "GPT-Based Voracious Literature Reading Tool",
    "html_url": [
      "https://github.com/yiyangc18/GPT-PaperReader/blob/d8d21defc41c4c4cb62491b8406ea7ec435c1ebb/config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 19459,
    "stars": 0
  },
  {
    "full_name": "nikolai3d/openai_image_recognizer",
    "name": "openai_image_recognizer",
    "description": "Simple python code that recognizes an image and describes it with voice using OpenAI API",
    "html_url": [
      "https://github.com/nikolai3d/openai_image_recognizer/blob/851be0d62346c710f260fea3c8f8a3a293abfd55/describe.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 236,
    "stars": 0
  },
  {
    "full_name": "vaibhavblayer/vbimagetotext",
    "name": "vbimagetotext",
    "description": "This is a cli tool for using OpenAI GPT and Google's Gemini for image to text extraction.",
    "html_url": [
      "https://github.com/vaibhavblayer/vbimagetotext/blob/a75f7273c6e7bb4507a2ee10101036cbd0966139/vbimagetotext/functions.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 623,
    "stars": 0
  },
  {
    "full_name": "Kiminjo/Injo_llm",
    "name": "Injo_llm",
    "description": "My own LLM custom library collection.",
    "html_url": [
      "https://github.com/Kiminjo/Injo_llm/blob/45566c4fbd703f9991fa8ba1352f78a81f74c3db/injo_llm/models/models.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 561,
    "stars": 1
  },
  {
    "full_name": "deepplants/AgriBench",
    "name": "AgriBench",
    "description": "AgriBench: A Domain-Specific Benchmark for Large Language Models in Agriculture",
    "html_url": [
      "https://github.com/deepplants/AgriBench/blob/e10726f55fbd60d42d5c3688831e298f72538f29/agrivqa_tasks/agrivqa_500P/utils.py",
      "https://github.com/deepplants/AgriBench/blob/e10726f55fbd60d42d5c3688831e298f72538f29/agrivqa_tasks/agrivqa_agriexam/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "chsiny/openAI-function-call",
    "name": "openAI-function-call",
    "description": null,
    "html_url": [
      "https://github.com/chsiny/openAI-function-call/blob/5b5bda2902799907e11a861443ad248bf00a7d19/chatDesygner.py",
      "https://github.com/chsiny/openAI-function-call/blob/5b5bda2902799907e11a861443ad248bf00a7d19/demo.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2851,
    "stars": 0
  },
  {
    "full_name": "rectalogic/chainchat",
    "name": "chainchat",
    "description": "CLI to chat with LangChain models",
    "html_url": [
      "https://github.com/rectalogic/chainchat/blob/07a2e8e0eb3f48313d8a489bf69b8558f0445662/tests/test_cli.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1432,
    "stars": 0
  },
  {
    "full_name": "personabb/OpenAI_RealtimeAPI_Python_SampleCode",
    "name": "OpenAI_RealtimeAPI_Python_SampleCode",
    "description": null,
    "html_url": [
      "https://github.com/personabb/OpenAI_RealtimeAPI_Python_SampleCode/blob/71a09b283849a04eaae2a7a3e1a7f5ca095b3040/main.py",
      "https://github.com/personabb/OpenAI_RealtimeAPI_Python_SampleCode/blob/71a09b283849a04eaae2a7a3e1a7f5ca095b3040/main_with_CutIn.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3241,
    "stars": 13
  },
  {
    "full_name": "Multi-Agent-LLMs/mallm",
    "name": "mallm",
    "description": "Framework: Multi-Agent LLMs For Conversational Task-Solving (MALLM)",
    "html_url": [
      "https://github.com/Multi-Agent-LLMs/mallm/blob/ebe07a94fae0dee08704bf5a7a5a2ae2a14cec53/mallm/utils/config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 10168,
    "stars": 9
  },
  {
    "full_name": "Axlfc/UE5-python",
    "name": "UE5-python",
    "description": "🐍 Code to test Python Unreal Engine 5 capabilites, Blender & HoudiniFX scripts for testing, a twitter bot, reddit script and ChatGPT, DALL-E & other open-source text and image generation models scripts and utilities. ",
    "html_url": [
      "https://github.com/Axlfc/UE5-python/blob/f0c4184c9ff6baa4221a920945306d892782d78a/Content/Python/chatBot/GPT_4.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3068,
    "stars": 30
  },
  {
    "full_name": "youmustfight/gideon",
    "name": "gideon",
    "description": "LLM/Multi-Modal Tooling for Lawyers doing Public Defense/Refugee Assistance",
    "html_url": [
      "https://github.com/youmustfight/gideon/blob/1dd607af8bc0148cfe379ba0d134a9ada20ef478/backends/src/models/gpt.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 13160,
    "stars": 7
  },
  {
    "full_name": "nikhilbadyal/tgpt-replier",
    "name": "tgpt-replier",
    "description": "Telegram bot which can answer using Chat GPT",
    "html_url": [
      "https://github.com/nikhilbadyal/tgpt-replier/blob/ad7115b9f3d6aea1a67673f55f48bda42722f4a7/chatgpt/chatgpt.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1619,
    "stars": 2
  },
  {
    "full_name": "TheCompAce/AdaptaNet",
    "name": "AdaptaNet",
    "description": "An innovative transformer model with dynamic input representation, multi-method self-attention, and enhanced positional encoding.",
    "html_url": [
      "https://github.com/TheCompAce/AdaptaNet/blob/45f04ee38a5d22595f7ec9cfc8affdbd66e7d3b6/modules/llms/OpenAI_Api.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 859,
    "stars": 1
  },
  {
    "full_name": "hcmlab/lens",
    "name": "lens",
    "description": "LENS: Learning and Exploring through Natural language Systems is a lightweight webserver designed to use Large Language Models as tool for data exploration in human interactions. LENS ist best used together with NOVA and DISCOVER.",
    "html_url": [
      "https://github.com/hcmlab/lens/blob/cb4bdea05d986b4001c43c2cd908dfed3eb52f8d/lens/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 439,
    "stars": 0
  },
  {
    "full_name": "jzhang512/post-ocr-correction",
    "name": "post-ocr-correction",
    "description": "Code and prompt templates for the \"Post-OCR Correction with OpenAI’s GPT Models on Challenging English Prosody Texts\" short-paper submission to DocEng 2024.",
    "html_url": [
      "https://github.com/jzhang512/post-ocr-correction/blob/6a4d026078c3ae1d347aaf643159a92ee19d69a9/qualityEstimationClassifer/qe_step.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 396,
    "stars": 2
  },
  {
    "full_name": "reorx/awesome-chatgpt-api",
    "name": "awesome-chatgpt-api",
    "description": "Curated list of apps and tools that not only use the new ChatGPT API, but also allow users to configure their own API keys, enabling free and on-demand usage of their own quota.",
    "html_url": [
      "https://github.com/reorx/awesome-chatgpt-api/blob/2f0c3834bb4832394bc72b7f143f01d80806a606/generate_updates.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2093,
    "stars": 6168
  },
  {
    "full_name": "jeremy-collins/gpt4v-screenshot-analyzer",
    "name": "gpt4v-screenshot-analyzer",
    "description": "This tool offers an interactive way to analyze and understand your screenshots using OpenAI's GPT-4 Vision API. Capture any part of your screen and engage in a dialogue with ChatGPT to uncover detailed insights, ask follow-up questions, and explore visual data in a user-friendly format.",
    "html_url": [
      "https://github.com/jeremy-collins/gpt4v-screenshot-analyzer/blob/8a997bd44e6092080559bd1cc91c7b1542fa1316/gpt4v_screenshot_analyzer.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 232,
    "stars": 18
  },
  {
    "full_name": "edi-sugiarto/RAG-ruby",
    "name": "RAG-ruby",
    "description": null,
    "html_url": [
      "https://github.com/edi-sugiarto/RAG-ruby/blob/8c98d8cc34f03cfb6b4ddc12955dffa0c1d3eb8b/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 200,
    "stars": 0
  },
  {
    "full_name": "xyjoey/GPT-PDF-Translator",
    "name": "GPT-PDF-Translator",
    "description": "A Python script to translate PDF documents with the GPT-3.5-Turbo API",
    "html_url": [
      "https://github.com/xyjoey/GPT-PDF-Translator/blob/7597f35cfb180998ccdd04a7faaa6e56ccd29bd5/translate.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 127,
    "stars": 3
  },
  {
    "full_name": "chzhyang/RAG-chat",
    "name": "RAG-chat",
    "description": "Web APP for LLM Chat and Langchain APP",
    "html_url": [
      "https://github.com/chzhyang/RAG-chat/blob/ffbbcf2b3dd65a55c136c2bd8fc115c96576892c/webapp-v2/configs/model_config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2382,
    "stars": 0
  },
  {
    "full_name": "abhinav-upadhyay/chatgpt_plugins",
    "name": "chatgpt_plugins",
    "description": "Code for the article showing how to use the function call feature of OpenAI's chat APIs to create ChatGPT plugins",
    "html_url": [
      "https://github.com/abhinav-upadhyay/chatgpt_plugins/blob/f735958b10d1145cd55392b6cef62de1d0450d2d/app/chat/chat.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 459,
    "stars": 48
  },
  {
    "full_name": "ditto-assistant/ditto-app",
    "name": "ditto-app",
    "description": "Ditto is an advanced AI assistant powered by the latest in LLM and RAG technology, along with in-house models, to create the ultimate conversational and creative experience.",
    "html_url": [
      "https://github.com/ditto-assistant/ditto-app/blob/3aa036a7479bd7f0587ddc5f1f2699b480372d3a/scripts/programmer_agent_simulator/agent.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 22832,
    "stars": 31
  },
  {
    "full_name": "ZurichNLP/multilingual-instruction-tuning",
    "name": "multilingual-instruction-tuning",
    "description": "Code and data for the paper \"Turning English-centric LLMs Into Polyglots: How Much Multilinguality Is Needed?\"",
    "html_url": [
      "https://github.com/ZurichNLP/multilingual-instruction-tuning/blob/160b68248e00c7018368ae282dfa114499a1553d/api_request_parallel_processor.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 200855,
    "stars": 25
  },
  {
    "full_name": "BBurgarella/FlaskGPT",
    "name": "FlaskGPT",
    "description": "This is a simple Flask application that allows anyone to use the OpenAI ChatGPT API with a Graphical User Interface (GUI) built with PyWebview. This app uses SQLite to store user login credentials.",
    "html_url": [
      "https://github.com/BBurgarella/FlaskGPT/blob/b3bd0b08e3999c8dd40d8a6492290925c1354a1c/BrainModule.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 733,
    "stars": 14
  },
  {
    "full_name": "lihanghang/chat-llm-pro",
    "name": "chat-llm-pro",
    "description": "基于语言模型的NLP应用",
    "html_url": [
      "https://github.com/lihanghang/chat-llm-pro/blob/2999a58851c2b56f1ba23e65508860200fc4b699/src/gpt.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 38301,
    "stars": 4
  },
  {
    "full_name": "tylerthecoder/gpt-clip",
    "name": "gpt-clip",
    "description": null,
    "html_url": [
      "https://github.com/tylerthecoder/gpt-clip/blob/52131239a856c908c6bb4ce50b584db3dcffde14/clip.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 145,
    "stars": 3
  },
  {
    "full_name": "amine-el-amrani/Streamlit-FastAPI-ML",
    "name": "Streamlit-FastAPI-ML",
    "description": "A FastAPI-powered API for training and predicting ML models, paired with a Streamlit UI for easy interaction. Includes endpoints for model training, prediction, and details, using OpenAI or HuggingFace.",
    "html_url": [
      "https://github.com/amine-el-amrani/Streamlit-FastAPI-ML/blob/8b577e43dc7e81e0e5f6757186091a9f317b2ab7/api.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 384,
    "stars": 1
  },
  {
    "full_name": "AoiDragon/HADES",
    "name": "HADES",
    "description": "[ECCV'24 Oral] The official GitHub page for ''Images are Achilles' Heel of Alignment: Exploiting Visual Vulnerabilities for Jailbreaking Multimodal Large Language Models''",
    "html_url": [
      "https://github.com/AoiDragon/HADES/blob/a2670b76e42448831c86d44dec02a8fa3a12d468/eval/evaluate/inference/gpt4v.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 27918,
    "stars": 29
  },
  {
    "full_name": "mickeybeurskens/guess-the-password",
    "name": "guess-the-password",
    "description": "Testingrounds for LLM guardrail techniques",
    "html_url": [
      "https://github.com/mickeybeurskens/guess-the-password/blob/ee97a80b2e66d46030763734ea660b37d63a3bd1/game/models.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1171,
    "stars": 7
  },
  {
    "full_name": "mathllm/MATH-V",
    "name": "MATH-V",
    "description": "MATH-Vision dataset and code to measure Multimodal Mathematical Reasoning capabilities.",
    "html_url": [
      "https://github.com/mathllm/MATH-V/blob/cc804211478632df168596ba3cd2e701c25b36b7/models/GPT4V.py",
      "https://github.com/mathllm/MATH-V/blob/cc804211478632df168596ba3cd2e701c25b36b7/models/GPT_with_caption.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 68703,
    "stars": 107
  },
  {
    "full_name": "Flowerfan/VistaLLaMA",
    "name": "VistaLLaMA",
    "description": null,
    "html_url": [
      "https://github.com/Flowerfan/VistaLLaMA/blob/7c34f34f5bc79215c419ab36a5aabd3c75d596c3/vista_llama/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 12399,
    "stars": 14
  },
  {
    "full_name": "nelson123-lab/Narrating-the-Unseen-Real-Time-Video-Descriptions-for-Visually-Impaired-Individuals",
    "name": "Narrating-the-Unseen-Real-Time-Video-Descriptions-for-Visually-Impaired-Individuals",
    "description": "This research explores a novel system designed to empower visually impaired individuals by narrating their surroundings through spoken language, leveraging the capabilities of a mobile camera.",
    "html_url": [
      "https://github.com/nelson123-lab/Narrating-the-Unseen-Real-Time-Video-Descriptions-for-Visually-Impaired-Individuals/blob/e06f3854db0247ea6ae910ba705bcb15e7f51709/Real_time_description_using_GPT4.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 492,
    "stars": 2
  },
  {
    "full_name": "pmeier/call-center",
    "name": "call-center",
    "description": "OpenAI function calling utility",
    "html_url": [
      "https://github.com/pmeier/call-center/blob/1e866f311984230de5d58220d7c8ef4375324fa9/call_center/_agent.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 322,
    "stars": 0
  },
  {
    "full_name": "sureshdpawar/streamlit-llm-rag-db",
    "name": "streamlit-llm-rag-db",
    "description": null,
    "html_url": [
      "https://github.com/sureshdpawar/streamlit-llm-rag-db/blob/8aebc540d2ad621982136744f878e854a0e65211/streamlit_stock_bot_app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1959,
    "stars": 0
  },
  {
    "full_name": "melih-unsal/DemoGPT",
    "name": "DemoGPT",
    "description": "🤖 Everything you need to create an LLM Agent—tools, prompts, frameworks, and models—all in one place.",
    "html_url": [
      "https://github.com/melih-unsal/DemoGPT/blob/1561603b74894b22e537eded7fb45c80a37a0c75/demogpt/app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4795,
    "stars": 1835
  },
  {
    "full_name": "lmql-lang/lmql",
    "name": "lmql",
    "description": "A query language for programming (large) language models.",
    "html_url": [
      "https://github.com/lmql-lang/lmql/blob/6ade807e0b5e1eb1a1196d1450c8fabcafc6aa5e/latest/lmql/runtime/simple_oai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 35469,
    "stars": 2
  },
  {
    "full_name": "xiangyu-li-nu/LLM-Enhanced_Multi-Level_Feature_Fusion_Network_for_Autonomous_Driving_Behavior_Classification",
    "name": "LLM-Enhanced_Multi-Level_Feature_Fusion_Network_for_Autonomous_Driving_Behavior_Classification",
    "description": "The code of \"Large Language Model-Enhanced Multi-Level Feature Fusion Network for Autonomous Driving Behavior Classification.\"",
    "html_url": [
      "https://github.com/xiangyu-li-nu/LLM-Enhanced_Multi-Level_Feature_Fusion_Network_for_Autonomous_Driving_Behavior_Classification/blob/b1f4ee887589922726393d4256b4ec4ae4771e88/LLM-MLFFN/LLM_feature_enhancement.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "ohnotnow/puppet_creator",
    "name": "puppet_creator",
    "description": "Use an LLM to create a puppet module",
    "html_url": [
      "https://github.com/ohnotnow/puppet_creator/blob/5b74dbf4620a808b2455bae2683bfd3329cb0b46/gepetto/gpt.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1025,
    "stars": 0
  },
  {
    "full_name": "dongyh20/Insight-V",
    "name": "Insight-V",
    "description": "Insight-V: Exploring Long-Chain Visual Reasoning with Multimodal Large Language Models",
    "html_url": [
      "https://github.com/dongyh20/Insight-V/blob/23a5cbeb876fa420b42892c93fd9db48e63ef2e0/llava/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 16255,
    "stars": 196
  },
  {
    "full_name": "neulab/Pangea",
    "name": "Pangea",
    "description": "This is the repo for the paper \"PANGEA: A FULLY OPEN MULTILINGUAL MULTIMODAL LLM FOR 39 LANGUAGES\"",
    "html_url": [
      "https://github.com/neulab/Pangea/blob/ecc4403a5944dc975a4d1a0de211aab35ee7d723/train/LLaVA-NeXT/llava/utils.py",
      "https://github.com/neulab/Pangea/blob/ecc4403a5944dc975a4d1a0de211aab35ee7d723/evaluation/lmms-eval/lmms_eval/models/batch_gpt4.py",
      "https://github.com/neulab/Pangea/blob/ecc4403a5944dc975a4d1a0de211aab35ee7d723/evaluation/lmms-eval/lmms_eval/models/gpt4v.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 284259,
    "stars": 106
  },
  {
    "full_name": "LaVi-Lab/Video-3D-LLM",
    "name": "Video-3D-LLM",
    "description": "The code for paper ''Video-3D LLM: Learning Position-Aware Video Representation for 3D Scene Understanding''.",
    "html_url": [
      "https://github.com/LaVi-Lab/Video-3D-LLM/blob/463ef00acde78e9d6b82eeeecccaa90377428b47/llava/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 28237,
    "stars": 110
  },
  {
    "full_name": "om-ai-lab/ZoomEye",
    "name": "ZoomEye",
    "description": "ZoomEye: Enhancing Multimodal LLMs with Human-Like Zooming Capabilities through Tree-Based Image Exploration",
    "html_url": [
      "https://github.com/om-ai-lab/ZoomEye/blob/5b7a1342a35a97b5575b73fba6df0a0e6da9850c/llava/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 22835,
    "stars": 37
  },
  {
    "full_name": "RLC-Lab/DaDu_E",
    "name": "DaDu_E",
    "description": "Official codes for DaDu-E: Rethinking the Role of Large Language Model in Robotic Computing Pipeline",
    "html_url": [
      "https://github.com/RLC-Lab/DaDu_E/blob/f85e5b1487895b72641bd2d44f90edd8ad4ffa3a/vlm/LLaVA-NeXT/llava/utils.py",
      "https://github.com/RLC-Lab/DaDu_E/blob/f85e5b1487895b72641bd2d44f90edd8ad4ffa3a/executor.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 31752,
    "stars": 13
  },
  {
    "full_name": "zhourunlong/Reflect-RL",
    "name": "Reflect-RL",
    "description": "Reflect-RL: Two-Player Online RL Fine-Tuning for LMs",
    "html_url": [
      "https://github.com/zhourunlong/Reflect-RL/blob/93bd8c92f3efc7c6c588fe2988681731e455606b/agent/ag_agent.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 23891,
    "stars": 10
  },
  {
    "full_name": "AbstractEndeavors/abstract-ai",
    "name": "abstract-ai",
    "description": "serves as a bridge between your application and the OpenAI GPT API. It provides a convenient interface for sending requests, managing responses, and controlling the behavior of the API calls. This module is highly customizable, allowing you to establish prompts, instructions, and response handling logic.",
    "html_url": [
      "https://github.com/AbstractEndeavors/abstract-ai/blob/d53bd965e42c510f0f9bf66eb9c214e328b27340/src/abstract_ai/gpt_classes/model_selection/ModelBuilder.py",
      "https://github.com/AbstractEndeavors/abstract-ai/blob/d53bd965e42c510f0f9bf66eb9c214e328b27340/src/abstract_ai/documentation/abstract_example.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 63960,
    "stars": 5
  },
  {
    "full_name": "luongdinhdung123/Few_shot_evaluation_for_LLM",
    "name": "Few_shot_evaluation_for_LLM",
    "description": null,
    "html_url": [
      "https://github.com/luongdinhdung123/Few_shot_evaluation_for_LLM/blob/594328d8b90098cf750c7f702003e997f7533a27/lm_eval/models/openai_completions.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 58580,
    "stars": 0
  },
  {
    "full_name": "Abhishek0057/vlm-hv",
    "name": "vlm-hv",
    "description": "Vision-Language Model Based Handwriting Verification",
    "html_url": [
      "https://github.com/Abhishek0057/vlm-hv/blob/77c801ae670783b299d993eacad097a6e0d33942/code/invoke_chatgpt_api.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 195,
    "stars": 0
  },
  {
    "full_name": "JohnnyMalmberg/ficscript",
    "name": "ficscript",
    "description": "Scripting language & environment for LLMs",
    "html_url": [
      "https://github.com/JohnnyMalmberg/ficscript/blob/898cb95ed6b3199c4574717a87835db74f46bf27/fictionsuit/api_wrap/openai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 9886,
    "stars": 1
  },
  {
    "full_name": "MCG-NJU/AWT",
    "name": "AWT",
    "description": "[NeurIPS 2024] AWT: Transferring Vision-Language Models via Augmentation, Weighting, and Transportation",
    "html_url": [
      "https://github.com/MCG-NJU/AWT/blob/b2b49a8fd932bd322cd2515e7bad87bdd132be65/description_generation/gen_questions.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 84400,
    "stars": 101
  },
  {
    "full_name": "LlmKira/LLMBot",
    "name": "LLMBot",
    "description": "插件概念原型机 /// Agents System/自决策 |类 ChatGpt 插件系统| Gpt-3.5/Gpt-4 |Assistant | 📱 Cross-Platform | 🦾 Async | 🔌 Plugin System ",
    "html_url": [
      "https://github.com/LlmKira/LLMBot/blob/063f94b56cd5f6b62d5d583e1dc52a41f8ca8f04/sdk/endpoint/openai/__init__.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 486435,
    "stars": 18
  },
  {
    "full_name": "otriscon/llm-structured-output",
    "name": "llm-structured-output",
    "description": null,
    "html_url": [
      "https://github.com/otriscon/llm-structured-output/blob/3d45fb350e017bd7dbec20d4bb4a0d007a834fd3/src/tests/eval_api.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 5007,
    "stars": 85
  },
  {
    "full_name": "oracle-samples/oaim-sandbox",
    "name": "oaim-sandbox",
    "description": "GenAI/RAG Sandbox for experimentation using Oracle Database AI Vector Search",
    "html_url": [
      "https://github.com/oracle-samples/oaim-sandbox/blob/c4a313f45eb2e08ba1e55d8bce89e018bdfb5008/app/src/tests/content/split_embed_test.py",
      "https://github.com/oracle-samples/oaim-sandbox/blob/c4a313f45eb2e08ba1e55d8bce89e018bdfb5008/app/src/modules/metadata.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 15347,
    "stars": 43
  },
  {
    "full_name": "RunpeiDong/DreamLLM",
    "name": "DreamLLM",
    "description": "[ICLR 2024 Spotlight] DreamLLM: Synergistic Multimodal Comprehension and Creation",
    "html_url": [
      "https://github.com/RunpeiDong/DreamLLM/blob/9dc767781b9bf81c0f2c857585665328ed782068/omni/utils/misc.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 37382,
    "stars": 445
  },
  {
    "full_name": "leviathanch/ai-voice-chat",
    "name": "ai-voice-chat",
    "description": "A basic voice chat interface, for talking to GPT3 on OpenAI",
    "html_url": [
      "https://github.com/leviathanch/ai-voice-chat/blob/63e50412a5ef8782a8672c1057fd6bf7d80c874e/interface.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 191,
    "stars": 2
  },
  {
    "full_name": "wzf2000/RecLLMSim",
    "name": "RecLLMSim",
    "description": "A dataset for task-based recommendation conversation.",
    "html_url": [
      "https://github.com/wzf2000/RecLLMSim/blob/b1a9d6f49f48222e030f35c36ba8923ef806404e/RecUserSim/usim/chat/chatV4.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 815120,
    "stars": 12
  },
  {
    "full_name": "realmistic/llm-zoomcamp-competition-2024",
    "name": "llm-zoomcamp-competition-2024",
    "description": null,
    "html_url": [
      "https://github.com/realmistic/llm-zoomcamp-competition-2024/blob/84ff093e4f17743a255ce884c8d241972fb60bfe/main_chat_gpt.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 510,
    "stars": 2
  },
  {
    "full_name": "olyaiy/TypeGPT",
    "name": "TypeGPT",
    "description": "Integrate LLM's into your OS. For any issues or ideas, message us in the discord server below!",
    "html_url": [
      "https://github.com/olyaiy/TypeGPT/blob/14f3020f95775e3720860db46a90038e7d119ab5/api_calls.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1010,
    "stars": 143
  },
  {
    "full_name": "norpadon/wanga",
    "name": "wanga",
    "description": "A library for interacting with Large Language Models",
    "html_url": [
      "https://github.com/norpadon/wanga/blob/d8a0ec5a23c72998541c513a555d008b0f733d6a/tests/test_models/test_openai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2996,
    "stars": 2
  },
  {
    "full_name": "hchautran/PiToMe",
    "name": "PiToMe",
    "description": "Speed up Transformers With Spectrum-Preserving Token Merging",
    "html_url": [
      "https://github.com/hchautran/PiToMe/blob/e301de305af4bb81572c03e184244264007adc75/tasks/vqa/lmms_eval/tasks/ferret/utils.py",
      "https://github.com/hchautran/PiToMe/blob/e301de305af4bb81572c03e184244264007adc75/tasks/vqa/lmms_eval/tasks/mmvet/utils.py",
      "https://github.com/hchautran/PiToMe/blob/e301de305af4bb81572c03e184244264007adc75/tasks/vqa/lmms_eval/tasks/mathvista/mathvista_evals.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 45580,
    "stars": 39
  },
  {
    "full_name": "YJiangcm/LTE",
    "name": "LTE",
    "description": "Code for \"Learning to Edit: Aligning LLMs with Knowledge Editing (ACL 2024)\"",
    "html_url": [
      "https://github.com/YJiangcm/LTE/blob/b8fb59b90d54e5e77095dc06f0b5e0da9a2d5340/FastChat/fastchat/serve/api_provider.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 842484,
    "stars": 36
  },
  {
    "full_name": "uw-nsl/CleanGen",
    "name": "CleanGen",
    "description": "Official Implementation of CLEANGEN: Mitigating Backdoor Attacks for Generation Tasks in Large Language Models",
    "html_url": [
      "https://github.com/uw-nsl/CleanGen/blob/db4d79163450e0d83e559ebaa21ee761e11ea941/fastchat/serve/api_provider.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 170554,
    "stars": 15
  },
  {
    "full_name": "swallow-llm/swallow-evaluation",
    "name": "swallow-evaluation",
    "description": "Swallowプロジェクト 大規模言語モデル 評価スクリプト",
    "html_url": [
      "https://github.com/swallow-llm/swallow-evaluation/blob/04948a0e81075cc461b80e98ba2ce483d4edb0bc/fastchat/fastchat/serve/api_provider.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 116917,
    "stars": 17
  },
  {
    "full_name": "RainJamesY/FuzzLLM",
    "name": "FuzzLLM",
    "description": "The opensoure repository of FuzzLLM",
    "html_url": [
      "https://github.com/RainJamesY/FuzzLLM/blob/be7881d7250f87742a270662959b50f6d96a892f/FastChat-main/fastchat/serve/api_provider.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 588250,
    "stars": 27
  },
  {
    "full_name": "CBIIT/sec_poc_llm",
    "name": "sec_poc_llm",
    "description": null,
    "html_url": [
      "https://github.com/CBIIT/sec_poc_llm/blob/b7b82c27afb3374e69207ca812d67b14c0074bcf/meditron/FastChat/fastchat/serve/api_provider.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 501324,
    "stars": 0
  },
  {
    "full_name": "rail-berkeley/soar",
    "name": "soar",
    "description": "Code release for paper \"Autonomous Improvement of Instruction Following Skills via Foundation Models\" | CoRL 2024",
    "html_url": [
      "https://github.com/rail-berkeley/soar/blob/0d92493e4c10a0d3771283cea772e9ccb81d0bd4/data_collection/orchestrator/robot/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 8052,
    "stars": 72
  },
  {
    "full_name": "necarlson97/codex-ai-sublime",
    "name": "codex-ai-sublime",
    "description": "A sublime-text package that uses cutting edge AI to write code with you, leveraging OpenAI's 'Codex' AI",
    "html_url": [
      "https://github.com/necarlson97/codex-ai-sublime/blob/38e27e6860c85c6d72d37c01f4e96177625d9d6e/codex_ai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 207,
    "stars": 15
  },
  {
    "full_name": "ohnotnow/syslog_reporter",
    "name": "syslog_reporter",
    "description": "Use LLMs to analyse Linux syslogs",
    "html_url": [
      "https://github.com/ohnotnow/syslog_reporter/blob/e5e3e44efadf187352117f2f7bbc640ac948e169/gepetto/gpt.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1462,
    "stars": 2
  },
  {
    "full_name": "sreev/instacare",
    "name": "instacare",
    "description": "personal doctor from mini LLMs on various devices",
    "html_url": [
      "https://github.com/sreev/instacare/blob/83a4509b9b7a588c86582e53045f7e01d491c6f1/app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 298,
    "stars": 0
  },
  {
    "full_name": "Groupe-Samse/rag-search",
    "name": "rag-search",
    "description": "OpenSearch ChatGPT Retrieval-Augmented Generation",
    "html_url": [
      "https://github.com/Groupe-Samse/rag-search/blob/48f88eca4ad0f925fdf4f1cb7ff8403ecfd49a2a/opensearch/model.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 30413,
    "stars": 1
  },
  {
    "full_name": "Biyani-Dhananjay/TKIL-RAG",
    "name": "TKIL-RAG",
    "description": null,
    "html_url": [
      "https://github.com/Biyani-Dhananjay/TKIL-RAG/blob/e17f28aabdd1669cddced618c939fa60d19b8c55/main2_openAI_updated_V3.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 679,
    "stars": 0
  },
  {
    "full_name": "fangyuan-ksgk/vision-plus",
    "name": "vision-plus",
    "description": "Vision language model from scratch",
    "html_url": [
      "https://github.com/fangyuan-ksgk/vision-plus/blob/5646197aabe79294b3dc55ba92788ba5b6fee870/llava/model/multimodal_encoder/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2393,
    "stars": 1
  },
  {
    "full_name": "rehanzo/VisioNomicon",
    "name": "VisioNomicon",
    "description": "A utility that leverages GPT-4o to rename image files based on their content",
    "html_url": [
      "https://github.com/rehanzo/VisioNomicon/blob/aec7bfed01442e2bd05ffef0d75e4857568cfd12/VisioNomicon/gpt.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 674,
    "stars": 44
  },
  {
    "full_name": "HyperGAI/HPT",
    "name": "HPT",
    "description": "HPT - Open Multimodal LLMs from HyperGAI",
    "html_url": [
      "https://github.com/HyperGAI/HPT/blob/b65b9a07660d163a3f426b1d79f289f89ab22a91/vlmeval/api/gpt.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 42963,
    "stars": 316
  },
  {
    "full_name": "shreyan241/gpt-proofreader",
    "name": "gpt-proofreader",
    "description": "Python App to proofread and correct the grammar of documents using GPT-4o-mini.",
    "html_url": [
      "https://github.com/shreyan241/gpt-proofreader/blob/c5f1676749f77723596ded14e5be394b1541b9fc/src/api_client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 912,
    "stars": 0
  },
  {
    "full_name": "jonverrier/BraidEng",
    "name": "BraidEng",
    "description": "Engine code for an OpenAI assistant that likes to talk about AI, written using Typescript, Node.js, & the Azure stack. GPT-3 backed with a store of AI Canon documents.",
    "html_url": [
      "https://github.com/jonverrier/BraidEng/blob/21d20ad5be90ee2abba1fc670533b0cd75e2bb02/scripts/youtube/not_used_enrich_transcript_speaker.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "tobiasleibrock/terra-watch",
    "name": "terra-watch",
    "description": "TerraWatch is a proof of concept system developed during the TUM AI Hackathon 2024 to detect deforestation from satellite images and reason out the causes and potential environmental effects using computer vision models and multimodal large language models.",
    "html_url": [
      "https://github.com/tobiasleibrock/terra-watch/blob/7085e297c9ce0ec998c4fee4131ad241a51eb14b/backend/api.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 34310,
    "stars": 0
  },
  {
    "full_name": "Srikanth635/RAGs",
    "name": "RAGs",
    "description": null,
    "html_url": [
      "https://github.com/Srikanth635/RAGs/blob/2634aaa07285d2bff37a25078b09acdfa027bd33/Llama_OpenAI/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 85141,
    "stars": 0
  },
  {
    "full_name": "Ayushman-Choudhuri/TerraWatch",
    "name": "TerraWatch",
    "description": "TerraWatch is a proof of concept system developed during the TUM AI Hackathon 2024 to detect deforestation from satellite images and reason out the causes and potential environmental effects using computer vision models and multimodal large language models.",
    "html_url": [
      "https://github.com/Ayushman-Choudhuri/TerraWatch/blob/83c2f7a3078a67ceb9bdc6aa55eae02f1f824800/backend/api.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 34316,
    "stars": 1
  },
  {
    "full_name": "pkunlp-icler/PCA-EVAL",
    "name": "PCA-EVAL",
    "description": "[ACL 2024] PCA-Bench: Evaluating Multimodal Large Language Models in Perception-Cognition-Action Chain",
    "html_url": [
      "https://github.com/pkunlp-icler/PCA-EVAL/blob/60eb1e1daa3ed9f08e7e9ce57702887a7bb9067b/pca-eval/evaluation/pca_auto_scoring.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 25720,
    "stars": 105
  },
  {
    "full_name": "MarcosSan4/realtime-twilio-outbound",
    "name": "realtime-twilio-outbound",
    "description": "Simple code to make outbound calls with OpenAI's realtime API using a Twilio phone number with Python",
    "html_url": [
      "https://github.com/MarcosSan4/realtime-twilio-outbound/blob/2e9424a1ebd7bba718b1867fdb5f4cbd6727f0f2/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 247,
    "stars": 19
  },
  {
    "full_name": "arnenoori/gptv-screenshot-renamer",
    "name": "gptv-screenshot-renamer",
    "description": "gpt-4v screenshot renamer",
    "html_url": [
      "https://github.com/arnenoori/gptv-screenshot-renamer/blob/0666b8db09e8548cbf3ca21cba091e43a28cba85/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 176,
    "stars": 0
  },
  {
    "full_name": "NekroniX588/EVRAZ-GPT-unami",
    "name": "EVRAZ-GPT-unami",
    "description": "Решение задачи на хакатоне ЕВРАЗа",
    "html_url": [
      "https://github.com/NekroniX588/EVRAZ-GPT-unami/blob/e19171943381929f545246d5e72892df6c762494/agent_as_a_judge/llm/provider.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4648,
    "stars": 2
  },
  {
    "full_name": "bghira/SimpleTuner",
    "name": "SimpleTuner",
    "description": "A general fine-tuning kit geared toward diffusion models.",
    "html_url": [
      "https://github.com/bghira/SimpleTuner/blob/c6cdbb07cefb737a5661db99b974d16d96db8890/toolkit/captioning/caption_with_gpt4.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 60970,
    "stars": 2366
  },
  {
    "full_name": "alexelyvinsky/Bender",
    "name": "Bender",
    "description": "A real-time speech-to-speech model that transcribes speech using AWS Transcribe, generates AI-powered conversational responses via OpenAI or local open-source LLMs using Ollama, and plays audio responses, with the ability to include context.",
    "html_url": [
      "https://github.com/alexelyvinsky/Bender/blob/8fb6cf2dedf0d66dd099d493c3d129c3b762be02/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 408,
    "stars": 2
  },
  {
    "full_name": "mzargham/profbot",
    "name": "profbot",
    "description": "This is a scaffold for how to organize LLM evaluations as if you are writing a exam for college students, professional license exam or other test through which humans prove sufficient expertise to be trusted in expertise intensive contexts.",
    "html_url": [
      "https://github.com/mzargham/profbot/blob/a6bc118ae14b460f0b68c984eb85988b17ddc563/llmtest.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 203,
    "stars": 0
  },
  {
    "full_name": "deidelma/ragsc",
    "name": "ragsc",
    "description": null,
    "html_url": [
      "https://github.com/deidelma/ragsc/blob/4fa7e72a5579b5bcc92f1268039e36c896d17c35/src/ragsc/embed.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3612,
    "stars": 0
  },
  {
    "full_name": "fit-alessandro-berti/llm-ocel-simulator",
    "name": "llm-ocel-simulator",
    "description": null,
    "html_url": [
      "https://github.com/fit-alessandro-berti/llm-ocel-simulator/blob/ad62011ef19d249c9c1b169dfdd92b399b99b484/simulator.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 126,
    "stars": 0
  },
  {
    "full_name": "proflouishyman/ocr_llm",
    "name": "ocr_llm",
    "description": "Summer 2024 ocr correction project",
    "html_url": [
      "https://github.com/proflouishyman/ocr_llm/blob/28689400d14723a486a6e0b63a7988b162ff27f3/batch_upload.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 563623,
    "stars": 0
  },
  {
    "full_name": "nesl/LLM_sensor_processing",
    "name": "LLM_sensor_processing",
    "description": null,
    "html_url": [
      "https://github.com/nesl/LLM_sensor_processing/blob/fcedb591611163e37f8df146a19c8d5449e6bd1f/caption.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1517,
    "stars": 1
  },
  {
    "full_name": "EvickaStudio/Moodle-Mate",
    "name": "Moodle-Mate",
    "description": "Moodle-Mate is a Python program designed to fetch Moodle notifications at regular intervals (60 seconds), summarize their content using GPT-3/4, and send it summarized as a notifications via Pushbullet to your smartphone or webhook to Discord.",
    "html_url": [
      "https://github.com/EvickaStudio/Moodle-Mate/blob/c14709a9f0e985929a7db10a71b18fc2b622bf5d/example/config_creator.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4173,
    "stars": 1
  },
  {
    "full_name": "zeuscsc/llm_picker",
    "name": "llm_picker",
    "description": null,
    "html_url": [
      "https://github.com/zeuscsc/llm_picker/blob/1d23bc7a783c5f75fdabfc59e5b7328e3943d056/llm_picker/gpt.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 530,
    "stars": 0
  },
  {
    "full_name": "DemoGit4LIANG/Chat2Anything",
    "name": "Chat2Anything",
    "description": "An LLM-based tool to chat with your documents and databases, including a management system | 面向企业内部环境的大模型(LLM)知识库问答系统，包含后台管理系统",
    "html_url": [
      "https://github.com/DemoGit4LIANG/Chat2Anything/blob/40882eba122a1c25c18802e4a6fb616c00fab531/Chat2Anything/fastchat/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 284374,
    "stars": 106
  },
  {
    "full_name": "dmayes77/vehicle-classifier",
    "name": "vehicle-classifier",
    "description": "Vehicle Classifier: A Flask web app that classifies vehicles into size categories (Small, Medium, Large, Extra Large) based on length, width, and capacity. Integrates with the OpenAI API for detailed vehicle data. User-friendly interface, robust error handling, and dynamic feedback. Built with Python, Flask, HTML/CSS, and JavaScript.",
    "html_url": [
      "https://github.com/dmayes77/vehicle-classifier/blob/97e170cef514d1a07cd8a0c0b7780b992cb4e435/app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 501,
    "stars": 0
  },
  {
    "full_name": "hackclub/openai-gateway",
    "name": "openai-gateway",
    "description": null,
    "html_url": [
      "https://github.com/hackclub/openai-gateway/blob/6337a82b0572094d8998296366d79173914efc4d/open_ai_token/openai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1984,
    "stars": 9
  },
  {
    "full_name": "AiGptCode/CLI-CHATGPT-AUTOMATIC-TASK-AISHELL",
    "name": "CLI-CHATGPT-AUTOMATIC-TASK-AISHELL",
    "description": "This Python script is a command-line interface (CLI) for interacting with OpenAI's GPT-3.5 Turbo model. It allows you to have conversations with the model, generate commands, and more.",
    "html_url": [
      "https://github.com/AiGptCode/CLI-CHATGPT-AUTOMATIC-TASK-AISHELL/blob/63c099be7cacd7d87c8757557904c34777e7e674/Cligpt-2.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 371,
    "stars": 8
  },
  {
    "full_name": "danny-avila/ai-services",
    "name": "ai-services",
    "description": "AI Services API: serves langchain, huggingface, & other emergent python AI libraries as a service. This project mainly serves LibreChat, and is in active open development.",
    "html_url": [
      "https://github.com/danny-avila/ai-services/blob/0b72d547dbb02d206970b28a1d6cdceb312f6140/clients/tree_of_thoughts/AsyncGuidance.py",
      "https://github.com/danny-avila/ai-services/blob/0b72d547dbb02d206970b28a1d6cdceb312f6140/clients/tree_of_thoughts/AsyncOpenAI.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2743,
    "stars": 28
  },
  {
    "full_name": "yagil/tokmon",
    "name": "tokmon",
    "description": "CLI to monitor your program's OpenAI API token usage.",
    "html_url": [
      "https://github.com/yagil/tokmon/blob/12e7e9bc35bd2a6e8670ef0a85a911426f8425bc/tokmon/cli.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 869,
    "stars": 57
  },
  {
    "full_name": "referefref/gitdoorcheck",
    "name": "gitdoorcheck",
    "description": "Static code analyser for backdoors and malicious code in git repos using OpenAI compatible LLM APIs",
    "html_url": [
      "https://github.com/referefref/gitdoorcheck/blob/9ddaf6f230ff120ce590430d2f9202244a47247b/gitrepocheck.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3612,
    "stars": 73
  },
  {
    "full_name": "Ziems/llm-url",
    "name": "llm-url",
    "description": null,
    "html_url": [
      "https://github.com/Ziems/llm-url/blob/38d7b25ebc75de1f9918492c9a92871fbbe43fb7/inference.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 6326,
    "stars": 35
  },
  {
    "full_name": "SteveMilesQuant/llmRpg",
    "name": "llmRpg",
    "description": "RPG on the web using LLM for dialog and quests.",
    "html_url": [
      "https://github.com/SteveMilesQuant/llmRpg/blob/def1c5ed0c5beb3220415e8dec6b0d7ef86831c8/api/narrator.py",
      "https://github.com/SteveMilesQuant/llmRpg/blob/def1c5ed0c5beb3220415e8dec6b0d7ef86831c8/api/session.py",
      "https://github.com/SteveMilesQuant/llmRpg/blob/def1c5ed0c5beb3220415e8dec6b0d7ef86831c8/api/character.py",
      "https://github.com/SteveMilesQuant/llmRpg/blob/def1c5ed0c5beb3220415e8dec6b0d7ef86831c8/api/quest.py",
      "https://github.com/SteveMilesQuant/llmRpg/blob/def1c5ed0c5beb3220415e8dec6b0d7ef86831c8/api/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 10759,
    "stars": 0
  },
  {
    "full_name": "taweizhong/ragflow",
    "name": "ragflow",
    "description": "ragflow",
    "html_url": [
      "https://github.com/taweizhong/ragflow/blob/654dfb2ac5333b2e16ad6d708426129847755aaa/rag/llm/cv_model.py",
      "https://github.com/taweizhong/ragflow/blob/654dfb2ac5333b2e16ad6d708426129847755aaa/rag/llm/embedding_model.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "doocao/Langchain-base",
    "name": "Langchain-base",
    "description": null,
    "html_url": [
      "https://github.com/doocao/Langchain-base/blob/c706a59c765bad81c3a5b44d7dabd1a58f394ee5/configs/model_config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 7445,
    "stars": 0
  },
  {
    "full_name": "CoLearn-Dev/fleece-benchmark",
    "name": "fleece-benchmark",
    "description": "A benchmark framework for LLM serving performance, based on API call",
    "html_url": [
      "https://github.com/CoLearn-Dev/fleece-benchmark/blob/205af8a7040ff1340167d2506a038506f4c58ed9/src/leaderboard/auto-testing.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2467,
    "stars": 13
  },
  {
    "full_name": "tooniez/llm-toolkit",
    "name": "llm-toolkit",
    "description": "🛠️ A collection of prompts, tools and functions to provide researchers with resources to accelerate projects with LLMs!",
    "html_url": [
      "https://github.com/tooniez/llm-toolkit/blob/7a05672f099cc6ce858c30d06a4875d599d7fc2d/functions/react_ollama.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 663,
    "stars": 0
  },
  {
    "full_name": "janvdvegt/chatgpt-import",
    "name": "chatgpt-import",
    "description": "from chatgpt import function",
    "html_url": [
      "https://github.com/janvdvegt/chatgpt-import/blob/4dc6fce9987110a301c4665aa33c686726684fcd/chatgpt/__init__.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 213,
    "stars": 9
  },
  {
    "full_name": "ShouryaRSharma/prompt-chain",
    "name": "prompt-chain",
    "description": "Dynamically configure LLM prompts and chain the results together",
    "html_url": [
      "https://github.com/ShouryaRSharma/prompt-chain/blob/8dec4e24d7d0b43c908435366f1c8a26a5d3ca45/prompt_chain/prompt_lib/chain_executor.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 21004,
    "stars": 1
  },
  {
    "full_name": "0x4D5352/AnthologyGPT",
    "name": "AnthologyGPT",
    "description": "LLMs are great at making up stuff - this is the best way to use it",
    "html_url": [
      "https://github.com/0x4D5352/AnthologyGPT/blob/701c8ec60f7fe793b4d5310fda694fc9b576772b/src/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1080,
    "stars": 0
  },
  {
    "full_name": "StevenZHB/CoT_Causal_Analysis",
    "name": "CoT_Causal_Analysis",
    "description": "Repository of paper \"LLMs with Chain-of-Thought Are Non-Causal Reasoners\"",
    "html_url": [
      "https://github.com/StevenZHB/CoT_Causal_Analysis/blob/de9e4611e2f354ebbc1099521e0105c281e606f2/scripts/check.py",
      "https://github.com/StevenZHB/CoT_Causal_Analysis/blob/de9e4611e2f354ebbc1099521e0105c281e606f2/scripts/api_run.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 7092795,
    "stars": 22
  },
  {
    "full_name": "wang19980501/LLMS",
    "name": "LLMS",
    "description": "langchain+openai",
    "html_url": [
      "https://github.com/wang19980501/LLMS/blob/4c5ef17b8f7b8b393074cb11ed1524f15a6d22cf/V0.0.3/modules/presets.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 7219,
    "stars": 0
  },
  {
    "full_name": "lihong2303/LLM_Inception",
    "name": "LLM_Inception",
    "description": "This repo is the official implementation of \"The Labyrinth of Links: Navigating the Associative Maze of Multi-modal LLMs\".",
    "html_url": [
      "https://github.com/lihong2303/LLM_Inception/blob/8dc3ae42a93c2b89a1da7626208db78ce3425c47/data/refinement/refine.py",
      "https://github.com/lihong2303/LLM_Inception/blob/8dc3ae42a93c2b89a1da7626208db78ce3425c47/Closed_source_Model/GPT-4V/HMDB/paired_action.py",
      "https://github.com/lihong2303/LLM_Inception/blob/8dc3ae42a93c2b89a1da7626208db78ce3425c47/Closed_source_Model/GPT-4V/paired_attr.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 21696,
    "stars": 10
  },
  {
    "full_name": "XY2323819551/llm_inference_arch",
    "name": "llm_inference_arch",
    "description": "最小化实现cot、self-refine、react、plan-and-execute框架。展现核心的大模型推理架构思想。",
    "html_url": [
      "https://github.com/XY2323819551/llm_inference_arch/blob/c41dc73605dbf63816a9f46920ff70636d0ccdf3/llm_pool/llm.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1412,
    "stars": 4
  },
  {
    "full_name": "clinicalml/TabLLM",
    "name": "TabLLM",
    "description": null,
    "html_url": [
      "https://github.com/clinicalml/TabLLM/blob/71f6647c523aa6fd35df94ad76207c4377248c49/query_gpt3.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 5586,
    "stars": 309
  },
  {
    "full_name": "mazzzystar/api-usage",
    "name": "api-usage",
    "description": "Track your OpenAI API token usage & cost.",
    "html_url": [
      "https://github.com/mazzzystar/api-usage/blob/e808f39834cd679a29834361770b10c81d2284c5/app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 815,
    "stars": 73
  },
  {
    "full_name": "aymeric-roucher/GAIA",
    "name": "GAIA",
    "description": "Beating the GAIA benchmark with Transformers Agents. 🚀",
    "html_url": [
      "https://github.com/aymeric-roucher/GAIA/blob/e4a4525035d4b78c1fcbeedebf6327b75e148bce/scripts/tools/visual_qa.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 45473,
    "stars": 123
  },
  {
    "full_name": "HZQ950419/Math-LLaVA",
    "name": "Math-LLaVA",
    "description": "Code for Math-LLaVA: Bootstrapping Mathematical Reasoning for Multimodal Large Language Models",
    "html_url": [
      "https://github.com/HZQ950419/Math-LLaVA/blob/3480ba7d2305de2c6f76941b091c2925641fc751/evaluation_mathvista/utilities.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 117316,
    "stars": 84
  },
  {
    "full_name": "spartypkp/legalAI",
    "name": "legalAI",
    "description": "LegalAI is a passion project which explores and simplifies the complexities of obtaining legal information using LLMs.",
    "html_url": [
      "https://github.com/spartypkp/legalAI/blob/d29e5a575b4b1c9e2bd5ba2cee9dc3a28feacf11/utilityFunctions.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3947,
    "stars": 9
  },
  {
    "full_name": "liammcmillen/gpt-4o-agent",
    "name": "gpt-4o-agent",
    "description": "Semi-autonomous LLM agent",
    "html_url": [
      "https://github.com/liammcmillen/gpt-4o-agent/blob/84abd5b9a4f59776041a54c0d04330ce8d03eeb4/modules/ChatAssistant.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 369,
    "stars": 2
  },
  {
    "full_name": "Jason0102/GPTpackage",
    "name": "GPTpackage",
    "description": "A python package requests GPT service from OpenAI.",
    "html_url": [
      "https://github.com/Jason0102/GPTpackage/blob/0dfb1bbef0eaef17702e998976b26622504dab43/GPTpackages/LLMopenai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 542,
    "stars": 0
  },
  {
    "full_name": "SanjinDedic/code_hint",
    "name": "code_hint",
    "description": "This is an API with that uses GPT-4o to generate code hints. The hints are validated by Pydantic and logged in an SQL database",
    "html_url": [
      "https://github.com/SanjinDedic/code_hint/blob/7e93365d7719b34afe9de9f9d20d40f2388375a0/legacy/api_legacy.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1012,
    "stars": 1
  },
  {
    "full_name": "kyegomez/Algorithm-Of-Thoughts",
    "name": "Algorithm-Of-Thoughts",
    "description": "My implementation of \"Algorithm of Thoughts: Enhancing Exploration of Ideas in Large Language Models\"",
    "html_url": [
      "https://github.com/kyegomez/Algorithm-Of-Thoughts/blob/2ece0b5e3643baec2679f21f9856a27c7850e22c/aot/openai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 447,
    "stars": 98
  },
  {
    "full_name": "mbzuai-oryx/Video-LLaVA",
    "name": "Video-LLaVA",
    "description": "PG-Video-LLaVA: Pixel Grounding in Large Multimodal Video Models",
    "html_url": [
      "https://github.com/mbzuai-oryx/Video-LLaVA/blob/401412f6dace0508d58f369b838c1c7a706d001c/quantitative_evaluation/evaluate_benchmark_4_temporal.py",
      "https://github.com/mbzuai-oryx/Video-LLaVA/blob/401412f6dace0508d58f369b838c1c7a706d001c/quantitative_evaluation/evaluate_benchmark_1_correctness.py",
      "https://github.com/mbzuai-oryx/Video-LLaVA/blob/401412f6dace0508d58f369b838c1c7a706d001c/quantitative_evaluation/evaluate_benchmark_2_detailed_orientation.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 6418,
    "stars": 256
  },
  {
    "full_name": "Dongping-Chen/MLLM-Judge",
    "name": "MLLM-Judge",
    "description": "[ICML 2024 Oral] Official code repository for MLLM-as-a-Judge.",
    "html_url": [
      "https://github.com/Dongping-Chen/MLLM-Judge/blob/0b0dbacc99b47549b91c660651e3c47d1d14c990/scripts/get_vlm_res.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 74359,
    "stars": 70
  },
  {
    "full_name": "Helvia/rag-buddy",
    "name": "rag-buddy",
    "description": "RAG-Buddy: Decrease cost and lower latency for LLM apps",
    "html_url": [
      "https://github.com/Helvia/rag-buddy/blob/0a6b503c9745af06fdc2563991978a1ad82b061f/python/use_cases/rag_citation/ragc_api_client.py",
      "https://github.com/Helvia/rag-buddy/blob/0a6b503c9745af06fdc2563991978a1ad82b061f/python/use_cases/text_classification/tc_api_client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1546,
    "stars": 28
  },
  {
    "full_name": "maxconway/crawlella",
    "name": "crawlella",
    "description": "LLM driven web agent",
    "html_url": [
      "https://github.com/maxconway/crawlella/blob/413f4c1fba73353460329f136f977e42911cd0cd/crawl_script.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 212,
    "stars": 0
  },
  {
    "full_name": "teron131/LangChain-Playground",
    "name": "LangChain-Playground",
    "description": null,
    "html_url": [
      "https://github.com/teron131/LangChain-Playground/blob/572e8a9b5b2a794392e8276ce123849e7f06a99f/llm_translate.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 19350,
    "stars": 0
  },
  {
    "full_name": "Tanuki/tanuki.py",
    "name": "tanuki.py",
    "description": "Prompt engineering for developers",
    "html_url": [
      "https://github.com/Tanuki/tanuki.py/blob/138fed16889cd0074e8c631c90b62c40f222e822/src/tanuki/language_models/openai_api.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 10047,
    "stars": 686
  },
  {
    "full_name": "ga111o/Context-based-alt-text-generator",
    "name": "Context-based-alt-text-generator",
    "description": "Servers and browser extensions that use Image Captioning Models and LLM to generate context-based Alt Text",
    "html_url": [
      "https://github.com/ga111o/Context-based-alt-text-generator/blob/a1b5922bc29246acd81bc5373188bc47535ae989/main/generate-alt-lmm.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2593,
    "stars": 0
  },
  {
    "full_name": "devashish-gupta/Instruct-Nav",
    "name": "Instruct-Nav",
    "description": "A multimodal model for language-guided socially compliant robot navigation.",
    "html_url": [
      "https://github.com/devashish-gupta/Instruct-Nav/blob/5f1158f8620df26d8adce1faeb69da875b3c1a4e/model/vision_language/mobilevlm/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2827,
    "stars": 6
  },
  {
    "full_name": "ElettraRoboticsLab/ros_gpt_assistant_nav2",
    "name": "ros_gpt_assistant_nav2",
    "description": "A ROS2 node that uses OpenAI GPT Assistant to generate navigation instructions for nav2 🐁🤖🇮🇹🌍🏆",
    "html_url": [
      "https://github.com/ElettraRoboticsLab/ros_gpt_assistant_nav2/blob/9163dbed0511160cb6a8b19728a906e3e217b02e/ros_gpt_assistant_nav2/ros_gpt_assistant_nav2.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1076,
    "stars": 8
  },
  {
    "full_name": "anandketan/VLM_Social_Navigation",
    "name": "VLM_Social_Navigation",
    "description": "This paper presents an advanced approach to social robot navigation using language-guided instructions to enhance the integration of robots into dynamic human environments. Leveraging the foundational NaviSTAR and the MuSoHu dataset, we utilized Visual-Language Models (VLMs) to interpret high-level textual commands and social cues.",
    "html_url": [
      "https://github.com/anandketan/VLM_Social_Navigation/blob/773ffd3dd136f0bbdfc6df55826ea3381386a8de/model/vision_language/mobilevlm/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2559,
    "stars": 2
  },
  {
    "full_name": "rfielding/simplerchat",
    "name": "simplerchat",
    "description": "an openai chatbot that lets you talk to a git repository",
    "html_url": [
      "https://github.com/rfielding/simplerchat/blob/d75763add39d4d8c08ba1fe042969fc5d5de4a4a/talkToCode.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 253,
    "stars": 11
  },
  {
    "full_name": "Shivangx01b/Maths-AI-Algo",
    "name": "Maths-AI-Algo",
    "description": "Beating GPT4 Maths Capability with multi Agent + Self Trained Transformer",
    "html_url": [
      "https://github.com/Shivangx01b/Maths-AI-Algo/blob/c84c53aa038347034082c37ad907e28c176ce9de/parser/getinteraction.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3234,
    "stars": 4
  },
  {
    "full_name": "yuyijiong/hard_retrieval_for_llm",
    "name": "hard_retrieval_for_llm",
    "description": "hard long context retrieval tasks for language models",
    "html_url": [
      "https://github.com/yuyijiong/hard_retrieval_for_llm/blob/49693c54612e4f89b6283c4b99770835919a61f1/evaluate.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 7458,
    "stars": 2
  },
  {
    "full_name": "sun770311/FinSense",
    "name": "FinSense",
    "description": "A financial analysis and recommendation system leveraging LLMs to answer user input questions with real-time data. ",
    "html_url": [
      "https://github.com/sun770311/FinSense/blob/b83439de9dd68016e3acf0f09441dfb2f4232940/app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1523,
    "stars": 1
  },
  {
    "full_name": "THUDM/LongAlign",
    "name": "LongAlign",
    "description": "[EMNLP 2024] LongAlign: A Recipe for Long Context Alignment of LLMs",
    "html_url": [
      "https://github.com/THUDM/LongAlign/blob/450ecc8c9faeafd83a169610fad94d4b7fac1357/LongBench_Chat/eval.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 14178,
    "stars": 251
  },
  {
    "full_name": "OpenGVLab/MMT-Bench",
    "name": "MMT-Bench",
    "description": "ICML'2024 | MMT-Bench: A Comprehensive Multimodal Benchmark for Evaluating Large Vision-Language Models Towards Multitask AGI",
    "html_url": [
      "https://github.com/OpenGVLab/MMT-Bench/blob/84012c95e31c2986521ea5b7c16a88e36e9958c2/vlmeval/api/gpt.py",
      "https://github.com/OpenGVLab/MMT-Bench/blob/84012c95e31c2986521ea5b7c16a88e36e9958c2/VLMEvalKit-main/vlmeval/api/gpt.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 9933,
    "stars": 111
  },
  {
    "full_name": "ClockworkZen/EasyOCR-Card-Companion",
    "name": "EasyOCR-Card-Companion",
    "description": "A companion tool for EasyOCR-Card-Scanner that uses the same directory structure and leverages OpenAI API  to detect other images that EasyOCR failed to parse.",
    "html_url": [
      "https://github.com/ClockworkZen/EasyOCR-Card-Companion/blob/e859de3e9c822aca8414bd5189fc530e0938bfff/OpenAI%20Card%20Companion.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 199,
    "stars": 0
  },
  {
    "full_name": "rohan-r-kulkarni/speechwizard_backend",
    "name": "speechwizard_backend",
    "description": "Speech Wizard is an AI-driven therapy app for people with speech impediments that leverages natural language models to enable speaking aloud, hearing feedback, and learning how to improve.",
    "html_url": [
      "https://github.com/rohan-r-kulkarni/speechwizard_backend/blob/2838cbefa4d5c1b9a86576f403d040b32e799d1a/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 181,
    "stars": 0
  },
  {
    "full_name": "S-Sharvesh/AI-Powered-Poster-Creation-for-Ads-and-Social-Media",
    "name": "AI-Powered-Poster-Creation-for-Ads-and-Social-Media",
    "description": "Developed a web application enabling users to create posters for advertisements or social media postings using OpenAI’s advanced AI capabilities.",
    "html_url": [
      "https://github.com/S-Sharvesh/AI-Powered-Poster-Creation-for-Ads-and-Social-Media/blob/7378dcdd6215212d693c135448c9fc9818998087/Back-end/postman.py",
      "https://github.com/S-Sharvesh/AI-Powered-Poster-Creation-for-Ads-and-Social-Media/blob/7378dcdd6215212d693c135448c9fc9818998087/Back-end/tests.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 20473,
    "stars": 0
  },
  {
    "full_name": "gomate-community/rageval",
    "name": "rageval",
    "description": "Evaluation tools for Retrieval-augmented Generation (RAG) methods.",
    "html_url": [
      "https://github.com/gomate-community/rageval/blob/01e2580efe714b3130602e02a7e7b017d16d79a2/tests/units/test_openai_api.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 5409,
    "stars": 157
  },
  {
    "full_name": "wusche1/CAA_hallucination",
    "name": "CAA_hallucination",
    "description": "Public reposetory for code and results of parts of \"Steering Llama 2 via Contrastive Activation Addition\" by Rimsky, Gabrieli, Schulz et al.",
    "html_url": [
      "https://github.com/wusche1/CAA_hallucination/blob/fe061315a1e6118c87444b71e62fb199b524e0ba/paper/lib/automated_evaluation.py",
      "https://github.com/wusche1/CAA_hallucination/blob/fe061315a1e6118c87444b71e62fb199b524e0ba/paper/lib/api_request_parallel_processor.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 561642,
    "stars": 9
  },
  {
    "full_name": "sam21112/LLM_itinery_planner",
    "name": "LLM_itinery_planner",
    "description": null,
    "html_url": [
      "https://github.com/sam21112/LLM_itinery_planner/blob/a92d2a0e4b1eef39e7583d2c1699cedab4a8f2e8/Itenary_Planer_LLM/server/activities.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 18602,
    "stars": 0
  },
  {
    "full_name": "Asad808/AI-ImageVoice-Advanced-Text-Image-Retrieval-and-Voiceover-Script",
    "name": "AI-ImageVoice-Advanced-Text-Image-Retrieval-and-Voiceover-Script",
    "description": "AI ImageVoice is a Python project with three modules: `bing.py` for Bing image searches, `downloader.py` to manage image downloads, and `main.py` integrating OpenAI's API for image processing and voiceover generation. It fetches images based on text prompts and creates audio descriptions, offering a multimodal AI experience.",
    "html_url": [
      "https://github.com/Asad808/AI-ImageVoice-Advanced-Text-Image-Retrieval-and-Voiceover-Script/blob/642e755aeef33edd58a44808f190e170e7a2a6ea/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 264,
    "stars": 0
  },
  {
    "full_name": "saif-11bit/question-gen-rag-agent",
    "name": "question-gen-rag-agent",
    "description": null,
    "html_url": [
      "https://github.com/saif-11bit/question-gen-rag-agent/blob/fb1db6830ab28955f4bf7d4a779d42510585e7b3/main_streamlit.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 251,
    "stars": 0
  },
  {
    "full_name": "XiaoXKKK/Game-with-LLM",
    "name": "Game-with-LLM",
    "description": "Tecent Games open-courses-2023 Issue #29 The Tao of AI",
    "html_url": [
      "https://github.com/XiaoXKKK/Game-with-LLM/blob/00ca815330978f2a4c391b2193f51bad96825365/tools/sentiment_test/gpt.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 108863,
    "stars": 0
  },
  {
    "full_name": "MarkMLCode/Dungeons-and-Zeros",
    "name": "Dungeons-and-Zeros",
    "description": "GPT-powered agent  in a fully AI-driven Dungeons & Dragons game",
    "html_url": [
      "https://github.com/MarkMLCode/Dungeons-and-Zeros/blob/b4362f9794de40fe1f6cd87be32f46d8f091ba00/src/utils/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 13634,
    "stars": 0
  },
  {
    "full_name": "shibing624/chatgpt-webui",
    "name": "chatgpt-webui",
    "description": "ChatGPT WebUI using gradio. 给 LLM 对话和检索知识问答RAG提供一个简单好用的Web UI界面",
    "html_url": [
      "https://github.com/shibing624/chatgpt-webui/blob/65bde3d5c3185def19d80f5098a692e108ae3a7b/src/presets.py",
      "https://github.com/shibing624/chatgpt-webui/blob/65bde3d5c3185def19d80f5098a692e108ae3a7b/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 9606,
    "stars": 130
  },
  {
    "full_name": "ortegaalfredo/crashbench",
    "name": "crashbench",
    "description": "Crashbench is a LLM benchmark to measure bug-finding and reporting capabilities of LLMs",
    "html_url": [
      "https://github.com/ortegaalfredo/crashbench/blob/09d48b2c677e65cedb751207fa345e89b2d984e4/crashbench.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1059,
    "stars": 13
  },
  {
    "full_name": "DeepAI-Research/Simverse",
    "name": "Simverse",
    "description": "Synthetic data generator for image, video and 3D models",
    "html_url": [
      "https://github.com/DeepAI-Research/Simverse/blob/73a463c49ae8c6dbc6ff14ea1dcae1ba76b39ecf/scripts/filter/rewrite_captions_gpt.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 8037,
    "stars": 30
  },
  {
    "full_name": "lorenhx/CortexXSOAR-OpenAI-API-Integration-IncidentGenerator",
    "name": "CortexXSOAR-OpenAI-API-Integration-IncidentGenerator",
    "description": "Integration for Cortex XSOAR (demisto), which uses Open AI APIs to generate incidents. It simulates a SIEM through a custom prompt.",
    "html_url": [
      "https://github.com/lorenhx/CortexXSOAR-OpenAI-API-Integration-IncidentGenerator/blob/40fcdf5c855631e570a23b51770b008a86489f1e/IncidentGenerator.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 582,
    "stars": 1
  },
  {
    "full_name": "FreedomIntelligence/HuatuoGPT-II",
    "name": "HuatuoGPT-II",
    "description": "HuatuoGPT2, One-stage Training for Medical Adaption of LLMs. (An Open Medical GPT)",
    "html_url": [
      "https://github.com/FreedomIntelligence/HuatuoGPT-II/blob/88ddf9abc77651e108a2f5abbe38789c8e33efa7/adaption/data_unification/rewrite.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1068016,
    "stars": 383
  },
  {
    "full_name": "RylanSchaeffer/AstraFellowship-When-Do-VLM-Image-Jailbreaks-Transfer",
    "name": "AstraFellowship-When-Do-VLM-Image-Jailbreaks-Transfer",
    "description": "Code for Arxiv When Do Universal Image Jailbreaks Transfer Between Vision-Language Models?",
    "html_url": [
      "https://github.com/RylanSchaeffer/AstraFellowship-When-Do-VLM-Image-Jailbreaks-Transfer/blob/37b5f7bb2d7d41e73c5f97acf822f8f1a8ffe388/src/openai_utils/client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 351553,
    "stars": 29
  },
  {
    "full_name": "HuangYui/chatgpt-on-wechat",
    "name": "chatgpt-on-wechat",
    "description": "个人微信作为机器人",
    "html_url": [
      "https://github.com/HuangYui/chatgpt-on-wechat/blob/6b83c07140910210dc910385553d1c7d699b1cc4/config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 10516,
    "stars": 10
  },
  {
    "full_name": "MeltanoLabs/map-gpt-embeddings",
    "name": "map-gpt-embeddings",
    "description": "A Singer tap to build vectorized datasets from any knowledge base,using natural language processing (NLP).",
    "html_url": [
      "https://github.com/MeltanoLabs/map-gpt-embeddings/blob/513975f1d862a0285bc1d50c20cfdf11fe98c373/map_gpt_embeddings/mappers.py",
      "https://github.com/MeltanoLabs/map-gpt-embeddings/blob/513975f1d862a0285bc1d50c20cfdf11fe98c373/map_gpt_embeddings/cookbook.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 780,
    "stars": 6
  },
  {
    "full_name": "prtkmhn/whisper-groq-transcriber",
    "name": "whisper-groq-transcriber",
    "description": "Whisper-Groq-Transcriber is a speech-to-text application that uses [OpenAI's Whisper model](https://openai.com/research/whisper) for transcription and integrates Groq for enhanced functionality.",
    "html_url": [
      "https://github.com/prtkmhn/whisper-groq-transcriber/blob/286c3952db3dd01bcddc6da65b245eb3f56afe28/src/transcription.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1170,
    "stars": 6
  },
  {
    "full_name": "CLARKBENHAM/sep_finetune_llm",
    "name": "sep_finetune_llm",
    "description": "OpenAI Finetuning Exploit",
    "html_url": [
      "https://github.com/CLARKBENHAM/sep_finetune_llm/blob/1fc49cfffdde2b80789f2753c9bc383b8bd15111/src/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 31087,
    "stars": 2
  },
  {
    "full_name": "Tinet-huwk/langchain-ChatGLM",
    "name": "langchain-ChatGLM",
    "description": "基于langchain-ChatGLM开发的对话系统",
    "html_url": [
      "https://github.com/Tinet-huwk/langchain-ChatGLM/blob/c24720c311eecf63184aa600a3002ed329d2b516/models/fastchat_openai_llm.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 40758,
    "stars": 6
  },
  {
    "full_name": "zelladir/Local-AI-Transcription",
    "name": "Local-AI-Transcription",
    "description": "Python based script allowing you to select a local audio file, upload it to either OpenAI (Whisper) or Google Speech-to-Text for transcription and a summary in a local text document.",
    "html_url": [
      "https://github.com/zelladir/Local-AI-Transcription/blob/43174aa1901304111b73eb6ad71990ea6084d09f/Transcription_Local_OpenAI_Google.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 33647,
    "stars": 1
  },
  {
    "full_name": "HappyThomas1/PDF_Translation",
    "name": "PDF_Translation",
    "description": "Translating PDF file from English to Japanese simply by drag and drop.",
    "html_url": [
      "https://github.com/HappyThomas1/PDF_Translation/blob/5e979d40768c1264583041e569ade6680507168d/extract_txt_from_pdf_Drag_and_Drop.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 227,
    "stars": 0
  },
  {
    "full_name": "keenua/gpt-commands-python",
    "name": "gpt-commands-python",
    "description": "A python module that provides an easy way to use OpenAI GPT-4 (or 3.5) function calling, which is basically GPT plugins in API world.",
    "html_url": [
      "https://github.com/keenua/gpt-commands-python/blob/9a470de4cc0386dd2405d75e2aa7657c6e8699ab/src/gpt_commands/client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1138,
    "stars": 6
  },
  {
    "full_name": "ucfxj/LangchainPowerGPT",
    "name": "LangchainPowerGPT",
    "description": null,
    "html_url": [
      "https://github.com/ucfxj/LangchainPowerGPT/blob/dc602e36cbc102988da46c1f7c978a40095df454/models/fastchat_openai_llm.py",
      "https://github.com/ucfxj/LangchainPowerGPT/blob/dc602e36cbc102988da46c1f7c978a40095df454/configs/model_config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 38480,
    "stars": 0
  },
  {
    "full_name": "Yingl-Liu/langchain-chatglm",
    "name": "langchain-chatglm",
    "description": null,
    "html_url": [
      "https://github.com/Yingl-Liu/langchain-chatglm/blob/c09504eabe446284e32f4f400c90acc8792b0417/models/fastchat_openai_llm.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 38496,
    "stars": 1
  },
  {
    "full_name": "hanxiaoya/LLM",
    "name": "LLM",
    "description": null,
    "html_url": [
      "https://github.com/hanxiaoya/LLM/blob/738fa842fa3ec00f5b1fc1c00c800dfced3d6118/langchain-ChatGLM/models/fastchat_openai_llm.py",
      "https://github.com/hanxiaoya/LLM/blob/738fa842fa3ec00f5b1fc1c00c800dfced3d6118/langchain-ChatGLM/configs/model_config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 38418,
    "stars": 0
  },
  {
    "full_name": "sitloboi2012/Visualization-of-Thought",
    "name": "Visualization-of-Thought",
    "description": "The implementation of the paper: \"Visualization-of-Thought Elicits Spatial Reasoning in Large Language Models\"",
    "html_url": [
      "https://github.com/sitloboi2012/Visualization-of-Thought/blob/b75eae2deb71678a84926d0d02f7eb253cb4b3da/prompts/next_step_prediction.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 289,
    "stars": 33
  },
  {
    "full_name": "esxr/nutriheal",
    "name": "nutriheal",
    "description": "Personalized nutrition application using Ollama, Langchain and Pebblo",
    "html_url": [
      "https://github.com/esxr/nutriheal/blob/17fe06a37ea59621f40d31cec13aca5ad67388ea/backend/config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 29299,
    "stars": 3
  },
  {
    "full_name": "organization-x/Automated-Learning-Assistant",
    "name": "Automated-Learning-Assistant",
    "description": "GPT-3 Feedback Team for TT Incubator Project",
    "html_url": [
      "https://github.com/organization-x/Automated-Learning-Assistant/blob/d718541ac703fd5fa7f7d725b5f9a323db60c4fa/app/main/bulk.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 40068,
    "stars": 2
  },
  {
    "full_name": "King4k2/DaLLe3Bot",
    "name": "DaLLe3Bot",
    "description": "Rest Api OpenAI Bot for generation texts and imgs",
    "html_url": [
      "https://github.com/King4k2/DaLLe3Bot/blob/2e754d9a8cf5a12c5540a6e4085c912ffe2c7a79/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 211,
    "stars": 0
  },
  {
    "full_name": "chrisimmel/calliope",
    "name": "calliope",
    "description": "Calliope is a framework meant to make modern AI tools like generative AI (large language and image generation models), computer vision, and vector databases accessible for use by artists creating interactive art works. ",
    "html_url": [
      "https://github.com/chrisimmel/calliope/blob/5f7eda4edf5f3e0e706090ad60d8701bb8991ed8/calliope/inference/engines/openai_image.py",
      "https://github.com/chrisimmel/calliope/blob/5f7eda4edf5f3e0e706090ad60d8701bb8991ed8/calliope/strategies/fern.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 31897,
    "stars": 3
  },
  {
    "full_name": "bdambrosio/llmFunctions",
    "name": "llmFunctions",
    "description": "Functions for smaller llms",
    "html_url": [
      "https://github.com/bdambrosio/llmFunctions/blob/2eb0859f82c5380655eca980e5736dfd45663798/src/alphawave/OSClient.py",
      "https://github.com/bdambrosio/llmFunctions/blob/2eb0859f82c5380655eca980e5736dfd45663798/src/alphawave/OpenAIClient.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 9410,
    "stars": 0
  },
  {
    "full_name": "deveshcode/GPT-WanderWithDevesh",
    "name": "GPT-WanderWithDevesh",
    "description": "GPT-Excursionist is a travel planning assistant that converts natural language queries into structured travel package information. Leveraging advanced NLP (Natural Language Processing), WanderQuery makes it easier for users to find travel packages that suit their needs without navigating complex databases or forms.",
    "html_url": [
      "https://github.com/deveshcode/GPT-WanderWithDevesh/blob/a984f23f16d87de31640f7b8d1018f6f892f964e/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 55920,
    "stars": 1
  },
  {
    "full_name": "lolrazh/Brain",
    "name": "Brain",
    "description": "Brain is a GPT-powered Grasshopper component, that lets you control your scripts through natural language.",
    "html_url": [
      "https://github.com/lolrazh/Brain/blob/e196b550bb0fa6cd615d9b9f3aa6e2824078073c/src/brain.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 373,
    "stars": 4
  },
  {
    "full_name": "laundrevity/egoist",
    "name": "egoist",
    "description": "Egoist is an AI-powered tool management system capable of executing a variety of operations in parallel, leveraging a custom-built toolkit and OpenAI's cutting-edge GPT models. It allows seamless interaction between the user's input and the AI's initiative to utilize tools for file manipulation, code execution, and HTTP requests.",
    "html_url": [
      "https://github.com/laundrevity/egoist/blob/ed3cd92ddb72bb0860c234fdb109ebb23471383d/openai_service.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1365,
    "stars": 0
  },
  {
    "full_name": "itachi1621/Dall-E-3_Desktop_Client",
    "name": "Dall-E-3_Desktop_Client",
    "description": "generate images using OpenAI's DALL-E model via a command-line interface. The script supports asynchronous image creation, handles user inputs, and saves images with metadata.",
    "html_url": [
      "https://github.com/itachi1621/Dall-E-3_Desktop_Client/blob/eae17dae28bdcaed9c7a9063c262b6698bf65234/Dall-E-3_Desktop_Client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 289,
    "stars": 0
  },
  {
    "full_name": "astmating/chatgpt-on-wechat-online",
    "name": "chatgpt-on-wechat-online",
    "description": "https://github.com/lanvent/chatgpt-on-wechat.git",
    "html_url": [
      "https://github.com/astmating/chatgpt-on-wechat-online/blob/d6a4b35cd337f93f92de620d13a74f8ae6992573/config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 9971,
    "stars": 0
  },
  {
    "full_name": "OpenAdaptAI/OpenAdapt",
    "name": "OpenAdapt",
    "description": "Open Source Generative Process Automation (i.e. Generative RPA). AI-First Process Automation with Large ([Language (LLMs) / Action (LAMs) / Multimodal (LMMs)] / Visual Language (VLMs)) Models",
    "html_url": [
      "https://github.com/OpenAdaptAI/OpenAdapt/blob/548dd94d372e384b0b0b9e3b3834f2628b12935a/openadapt/drivers/openai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 29140,
    "stars": 1295
  },
  {
    "full_name": "qcri/LLMeBench",
    "name": "LLMeBench",
    "description": " Benchmarking Large Language Models",
    "html_url": [
      "https://github.com/qcri/LLMeBench/blob/8a8d75f30372c5b19e9b9c6240064bfdc7831c10/llmebench/models/OpenAI.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 47950,
    "stars": 98
  },
  {
    "full_name": "ls1intum/logthemis",
    "name": "logthemis",
    "description": "Logthemis is the amazing new LLM powered log analyzer",
    "html_url": [
      "https://github.com/ls1intum/logthemis/blob/466d680da7f1f07edbc77b47ca4aef2f444308b5/logthemis-server/ai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 694,
    "stars": 4
  },
  {
    "full_name": "AvenCores/openai-api-telegram-bot-public",
    "name": "openai-api-telegram-bot-public",
    "description": "🖤ChatGPT, DALLE-2 and Whisper Telegram Bot🖤",
    "html_url": [
      "https://github.com/AvenCores/openai-api-telegram-bot-public/blob/622b45a28552578c0fcb14141b87f7b9e7234508/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1006,
    "stars": 25
  },
  {
    "full_name": "YiVal/YiVal",
    "name": "YiVal",
    "description": "Your Automatic Prompt Engineering Assistant for GenAI Applications",
    "html_url": [
      "https://github.com/YiVal/YiVal/blob/22a1fa0e3ed27b8e2639a8340d6c3662e64c4e2f/src/yival/evaluators/openai_prompt_based_evaluator.py",
      "https://github.com/YiVal/YiVal/blob/22a1fa0e3ed27b8e2639a8340d6c3662e64c4e2f/demo/code_agent.py",
      "https://github.com/YiVal/YiVal/blob/22a1fa0e3ed27b8e2639a8340d6c3662e64c4e2f/src/yival/common/auto_cofig_utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 37126,
    "stars": 2107
  },
  {
    "full_name": "kkacsh321/robotf_halloween_stories",
    "name": "robotf_halloween_stories",
    "description": "RoboTF Halloween Stories via LLM/AI and Streamlit",
    "html_url": [
      "https://github.com/kkacsh321/robotf_halloween_stories/blob/8dc50f7e951ad567afa124c9f4ecf2763409b30d/RoboTF_Halloween_Stories.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1000,
    "stars": 0
  },
  {
    "full_name": "rovle/models-playing-tetris",
    "name": "models-playing-tetris",
    "description": "Benchmarking the ability of multimodal LLMs to play Tetris",
    "html_url": [
      "https://github.com/rovle/models-playing-tetris/blob/1438ab57bacea208ed1fbd22632bfbcfa7484ef6/model_controller/models.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2488,
    "stars": 7
  },
  {
    "full_name": "pablosalvador10/gbb-bench4ai",
    "name": "gbb-bench4ai",
    "description": "Automating the complexity of evaluating large language models in enterprise settings, focusing on dual performance and quality benchmarks. 📊🏢",
    "html_url": [
      "https://github.com/pablosalvador10/gbb-bench4ai/blob/7646ecf3ab950a5c81db57989f9c1e86b99618e7/src/app/benchmarkbuddy.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 35896,
    "stars": 3
  },
  {
    "full_name": "mridulrao/oai_twilio_sample",
    "name": "oai_twilio_sample",
    "description": "Twilio + OpenAI real time ",
    "html_url": [
      "https://github.com/mridulrao/oai_twilio_sample/blob/83a0b61f53f184d92d9b16cdcdf157cad990456d/translation_tool.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 713,
    "stars": 0
  },
  {
    "full_name": "kirtan-shah/LLM_Timing_SideChannels",
    "name": "LLM_Timing_SideChannels",
    "description": "CSE 227 Research Paper",
    "html_url": [
      "https://github.com/kirtan-shah/LLM_Timing_SideChannels/blob/7744a31e47b5732e918c7c9c60d550ce440dcc61/not_our_code/privacy/one_privacy.py",
      "https://github.com/kirtan-shah/LLM_Timing_SideChannels/blob/7744a31e47b5732e918c7c9c60d550ce440dcc61/not_our_code/privacy/two_privacy.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2977,
    "stars": 1
  },
  {
    "full_name": "MoonlightByte/Pythagora-LLM-Proxy",
    "name": "Pythagora-LLM-Proxy",
    "description": "The Pythagora LLM Proxy is a project that helps Pythagora utilize local Large Language Models (LLMs) hosted on LM Studio without relying on the OpenAI API",
    "html_url": [
      "https://github.com/MoonlightByte/Pythagora-LLM-Proxy/blob/10c9e35b0eb2acdfe60b3fdd3681b4adc672835a/conductor_proxy.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 220,
    "stars": 7
  },
  {
    "full_name": "AwesomeYuer/FLAML-autogen",
    "name": "FLAML-autogen",
    "description": null,
    "html_url": [
      "https://github.com/AwesomeYuer/FLAML-autogen/blob/a93bf397202e005ee77aadfa83081b6af1aea68d/flaml/autogen/oai/openai_utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 48787,
    "stars": 0
  },
  {
    "full_name": "atishnaik8805/ai-agents-autogen",
    "name": "ai-agents-autogen",
    "description": null,
    "html_url": [
      "https://github.com/atishnaik8805/ai-agents-autogen/blob/b529635b518ecbaa35a697598a960b33dab486fb/autogen/Lib/site-packages/flaml/autogen/oai/openai_utils.py",
      "https://github.com/atishnaik8805/ai-agents-autogen/blob/b529635b518ecbaa35a697598a960b33dab486fb/autogen/Lib/site-packages/autogen/oai/client.py",
      "https://github.com/atishnaik8805/ai-agents-autogen/blob/b529635b518ecbaa35a697598a960b33dab486fb/autogen/Lib/site-packages/autogen/oai/completion.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1401063,
    "stars": 0
  },
  {
    "full_name": "relishLeisure/qrcode_lagent",
    "name": "qrcode_lagent",
    "description": "This is an agent application based on lagent framework and internlm2 LLM.",
    "html_url": [
      "https://github.com/relishLeisure/qrcode_lagent/blob/8f6b94a49060d490de9ca8debbe8638d82a68a10/lagent/llms/openai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3057,
    "stars": 1
  },
  {
    "full_name": "pablosalvador10/gbb-ai-chatbot-arena",
    "name": "gbb-ai-chatbot-arena",
    "description": "Comparing latest techniques, research, and options in LLMs Systems.",
    "html_url": [
      "https://github.com/pablosalvador10/gbb-ai-chatbot-arena/blob/c5017d813599051ebde09ae009eb1443d6f52577/src/app/benchmarkbuddy.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 7194,
    "stars": 0
  },
  {
    "full_name": "Pixel-Panda/autogen",
    "name": "autogen",
    "description": null,
    "html_url": [
      "https://github.com/Pixel-Panda/autogen/blob/bf65b59b7986cf16caa80b1f7f70f5956e097745/autogen/oai/openai_utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 7691,
    "stars": 0
  },
  {
    "full_name": "ronniebasak/ComfyUI-Tara-LLM-Integration",
    "name": "ComfyUI-Tara-LLM-Integration",
    "description": null,
    "html_url": [
      "https://github.com/ronniebasak/ComfyUI-Tara-LLM-Integration/blob/0bbf1e3c2f7a981267a25d11ed408a713fde908b/py/tara_advanced.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 5420,
    "stars": 107
  },
  {
    "full_name": "TheCompAce/ai_server",
    "name": "ai_server",
    "description": "Easily host AI endpoints for local models.",
    "html_url": [
      "https://github.com/TheCompAce/ai_server/blob/c6f773a71db67e33b473027deb69bc2d8d0bcf2c/modules/ai/openai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2411,
    "stars": 4
  },
  {
    "full_name": "shashankyadav03/FinSightAI",
    "name": "FinSightAI",
    "description": "FinSightAI is a cutting-edge financial forecasting model leveraging the power of Large Language Models (LLMs) for personalized finance insights. Built upon the FinGPT framework, this project aims to provide accurate financial forecasts and insights by analyzing real-time market data and trends.",
    "html_url": [
      "https://github.com/shashankyadav03/FinSightAI/blob/cb7482965bc0b1c414e6ceaf0970f128c6a56520/services/inference.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 432839,
    "stars": 2
  },
  {
    "full_name": "sylearn/GPT-SY",
    "name": "GPT-SY",
    "description": "A desktop application for GPT.",
    "html_url": [
      "https://github.com/sylearn/GPT-SY/blob/932fc421bd69b6290411d717d6cb1e1e32d7749f/gpt_sy/Menu_login.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2626,
    "stars": 1
  },
  {
    "full_name": "Macmachi/gptfoot",
    "name": "gptfoot",
    "description": " gptfoot is a Telegram and Discord bot that lets you follow matches of your favorite team across various leagues. Using OpenAI's GPT-4o, it provides live commentary and features like team lineups, goal alerts, red cards, and in-depth match analyses.",
    "html_url": [
      "https://github.com/Macmachi/gptfoot/blob/7c38f3c45ba70bf06c1131b137e0e783bf752826/gptfoot.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1145,
    "stars": 11
  },
  {
    "full_name": "Brian-Ckwu/dr-cot",
    "name": "dr-cot",
    "description": "Explore LLMs' ability to perform diagnostic reasoning in history taking",
    "html_url": [
      "https://github.com/Brian-Ckwu/dr-cot/blob/5e3ce3f8373e650de60b50dcc62d4be1fd93fa5c/src/model.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3326,
    "stars": 2
  },
  {
    "full_name": "ikotun-dev/openaiflow",
    "name": "openaiflow",
    "description": "A Python wrapper that simplifies building, managing, and interacting with OpenAI-powered conversational assistants and threads for seamless experiences",
    "html_url": [
      "https://github.com/ikotun-dev/openaiflow/blob/97c6a2f24fac6ce3e64da6819869888d2fedcd89/openaiflow/openaiflow.py",
      "https://github.com/ikotun-dev/openaiflow/blob/97c6a2f24fac6ce3e64da6819869888d2fedcd89/build/lib/openaiflow/openaiflow.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 600,
    "stars": 2
  },
  {
    "full_name": "fkneist/gimp-plugin-dall-e",
    "name": "gimp-plugin-dall-e",
    "description": "Plugin for the GNU Image Manipulation Program, GIMP, making it possible to use OpenAI's API endpoint for image editing.",
    "html_url": [
      "https://github.com/fkneist/gimp-plugin-dall-e/blob/a4a5330e3aeffabe5dd4c457853bbe1202ec1fb0/gimp-plugin-dall-e/gimp-plugin-dall-e.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 256,
    "stars": 4
  },
  {
    "full_name": "zhanzushun/gpt-voice",
    "name": "gpt-voice",
    "description": "A voice GPT for any customization",
    "html_url": [
      "https://github.com/zhanzushun/gpt-voice/blob/93647917d899eced9a8ab9edfa168f64de4a642b/backend/web.py",
      "https://github.com/zhanzushun/gpt-voice/blob/93647917d899eced9a8ab9edfa168f64de4a642b/backend/web_tick_file.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2186,
    "stars": 0
  },
  {
    "full_name": "i-vainn/llm-ensembles",
    "name": "llm-ensembles",
    "description": "A study on whether LLM ensembles work",
    "html_url": [
      "https://github.com/i-vainn/llm-ensembles/blob/70b4a2285318cfec83649914d1d52fb94fbca2a4/hf_classification/lm_evaluation/model_providers.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 15734,
    "stars": 1
  },
  {
    "full_name": "tianyang-x/SaySelf",
    "name": "SaySelf",
    "description": "Public code repo for paper \"SaySelf: Teaching LLMs to Express Confidence with Self-Reflective Rationales\"",
    "html_url": [
      "https://github.com/tianyang-x/SaySelf/blob/e2f6595dd5daf59a20e573fd2bace0fba9e4f24e/evaluation/evaluate_reason.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1107375,
    "stars": 106
  },
  {
    "full_name": "jeongeun980906/LLM-Active-Learner",
    "name": "LLM-Active-Learner",
    "description": null,
    "html_url": [
      "https://github.com/jeongeun980906/LLM-Active-Learner/blob/8cc30de6313690d6a8f00dc3ce37b9ed922585e9/llm/vision.py",
      "https://github.com/jeongeun980906/LLM-Active-Learner/blob/8cc30de6313690d6a8f00dc3ce37b9ed922585e9/llm/baseline2.py",
      "https://github.com/jeongeun980906/LLM-Active-Learner/blob/8cc30de6313690d6a8f00dc3ce37b9ed922585e9/llm/enforce.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1974,
    "stars": 0
  },
  {
    "full_name": "LinxinS97/NLPBench",
    "name": "NLPBench",
    "description": "NLPBench: Evaluating NLP-Related Problem-solving Ability in Large Language Models",
    "html_url": [
      "https://github.com/LinxinS97/NLPBench/blob/82d6c109db9121ff60627873b8cc5ead922c8cba/utils/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1913,
    "stars": 10
  },
  {
    "full_name": "wjdghks950/Finer",
    "name": "Finer",
    "description": "A benchmark and analysis for fine-grained visual comprehension (FGVC) tasks in large vision language models (LVLMs).",
    "html_url": [
      "https://github.com/wjdghks950/Finer/blob/1f33d40fe92ab07fc1ece66c53127a5d17c57eba/llava/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 130831,
    "stars": 6
  },
  {
    "full_name": "SnapdragonLee/ChatGPT-weBot",
    "name": "ChatGPT-weBot",
    "description": "Chat with ChatGPT (gpt-3.5 or newer)，WeChat hook interface based",
    "html_url": [
      "https://github.com/SnapdragonLee/ChatGPT-weBot/blob/829e8049609a1809986d35a1fcd2db97d075af7c/services/chat/ChatGPTAPI.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 17814,
    "stars": 663
  },
  {
    "full_name": "EQ-bench/EQ-Bench",
    "name": "EQ-Bench",
    "description": "A benchmark for emotional intelligence in large language models",
    "html_url": [
      "https://github.com/EQ-bench/EQ-Bench/blob/337df8abdb8f71dfd3bdcc2cc361d40e3cbb245a/eq-bench.py",
      "https://github.com/EQ-bench/EQ-Bench/blob/337df8abdb8f71dfd3bdcc2cc361d40e3cbb245a/lib/run_query.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 92779,
    "stars": 306
  },
  {
    "full_name": "Joshua-Ren/Learning_dynamics_LLM",
    "name": "Learning_dynamics_LLM",
    "description": null,
    "html_url": [
      "https://github.com/Joshua-Ren/Learning_dynamics_LLM/blob/9d42b13b4647345d3aa8b65c07ca279a07524f5d/src/gen_dataset.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 40389,
    "stars": 138
  },
  {
    "full_name": "burakugar/LLM-Real-Estate-Advisor",
    "name": "LLM-Real-Estate-Advisor",
    "description": null,
    "html_url": [
      "https://github.com/burakugar/LLM-Real-Estate-Advisor/blob/0fd9b3ae9796c105ae04ec03ab81314f7bdbdded/chatbot.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 349551,
    "stars": 1
  },
  {
    "full_name": "lunaSnowflake/ChatAI-Telegram-Bot",
    "name": "ChatAI-Telegram-Bot",
    "description": "ChatAI is a Telegram Bot integrated with OpenAI and helps you with Text Completion and Image Generation right in the Telegram.",
    "html_url": [
      "https://github.com/lunaSnowflake/ChatAI-Telegram-Bot/blob/a87893ce05cf6112e2838a3ac3e058d0a0da3054/_reqOpenAI.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3963,
    "stars": 1
  },
  {
    "full_name": "AmineDjeghri/generative-ai-project-template",
    "name": "generative-ai-project-template",
    "description": "Template for a new generative ai project using streamlit, fastapi, llms (cloud & local) with evaluation & redteaming tools",
    "html_url": [
      "https://github.com/AmineDjeghri/generative-ai-project-template/blob/fc6320ec70aa942f965b65bff57bb7fe63db3c4d/src/settings.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2278,
    "stars": 89
  },
  {
    "full_name": "coszero/TabIS",
    "name": "TabIS",
    "description": "Official code and data for paper \"Uncovering Limitations of Large Language Models in Information Seeking from Tables\"",
    "html_url": [
      "https://github.com/coszero/TabIS/blob/3db714fcc5502385ba15da4f0e2c205e7f931d37/tab_benchmark/chatapi.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1600,
    "stars": 7
  },
  {
    "full_name": "neary-ai/neary",
    "name": "neary",
    "description": "Get more done with LLMs",
    "html_url": [
      "https://github.com/neary-ai/neary/blob/6aaa96afb58b0ebf361f64fb01f20ce5da066977/backend/modules/llms/services/openai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 23886,
    "stars": 13
  },
  {
    "full_name": "IBM/helm-enterprise-benchmark",
    "name": "helm-enterprise-benchmark",
    "description": "In this project, we develop an enterprise benchmark framework for large language model (LLM) evaluation. We extend HELM, an open-source benchmark framework developed by Stanford CRFM, to enable users evaluate LLMs with domain-specific datasets such as finance, legal, climate, and cybersecurity.",
    "html_url": [
      "https://github.com/IBM/helm-enterprise-benchmark/blob/41d6cb1f97431de4480afc289e40b4db1c247b42/src/helm/proxy/clients/openai_client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 75314,
    "stars": 2
  },
  {
    "full_name": "EdF2021/berend_gpt-main",
    "name": "berend_gpt-main",
    "description": "Berend Skills - Voorbeeldjes",
    "html_url": [
      "https://github.com/EdF2021/berend_gpt-main/blob/4951e338d5f36cf3084b82c105d83300af3f7d46/berend_gpt/pages/9_Broodje_Berend_Demo.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "ksavill/OpenAI-Realtime-Audio-Client",
    "name": "OpenAI-Realtime-Audio-Client",
    "description": "Python implementation for real-time audio input/output using WebSockets and OpenAI for dynamic audio-based interactions.",
    "html_url": [
      "https://github.com/ksavill/OpenAI-Realtime-Audio-Client/blob/9d05588cacddff81aafdacbfa88523c491332f48/client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 217,
    "stars": 1
  },
  {
    "full_name": "ENGRZULQARNAIN/openai_realtime_react_voice_agent",
    "name": "openai_realtime_react_voice_agent",
    "description": null,
    "html_url": [
      "https://github.com/ENGRZULQARNAIN/openai_realtime_react_voice_agent/blob/134b958626623dbab36c9f1aff345c6728e5088a/langchain_openai_voice/__init__.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 574,
    "stars": 2
  },
  {
    "full_name": "Pash10g/voice-openai-mongo-rentals-agent",
    "name": "voice-openai-mongo-rentals-agent",
    "description": null,
    "html_url": [
      "https://github.com/Pash10g/voice-openai-mongo-rentals-agent/blob/8728d8a7f35b42c808b2c9f0a02ba6b642f5cb16/src/langchain_openai_voice/__init__.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 830,
    "stars": 0
  },
  {
    "full_name": "winter1203/vllm_GOT2_OCR",
    "name": "vllm_GOT2_OCR",
    "description": "Accelerating GOT-OCRv2 with VLLM",
    "html_url": [
      "https://github.com/winter1203/vllm_GOT2_OCR/blob/dd6bd0e9f1e0f3eecef696054dcda7f434884d9b/vllm_got_cor/GOT/utils/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2104,
    "stars": 9
  },
  {
    "full_name": "JapiKredi/llm_from_command_line",
    "name": "llm_from_command_line",
    "description": null,
    "html_url": [
      "https://github.com/JapiKredi/llm_from_command_line/blob/9c5b360a1c9630bf80b5c4545233f86976acd1aa/tests/conftest.py",
      "https://github.com/JapiKredi/llm_from_command_line/blob/9c5b360a1c9630bf80b5c4545233f86976acd1aa/llm/default_plugins/openai_models.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 8895,
    "stars": 0
  },
  {
    "full_name": "shikiw/OPERA",
    "name": "OPERA",
    "description": "[CVPR 2024 Highlight] OPERA: Alleviating Hallucination in Multi-Modal Large Language Models via Over-Trust Penalty and Retrospection-Allocation",
    "html_url": [
      "https://github.com/shikiw/OPERA/blob/e1bb7632508bdfaa5cdaf5b69b64419688107da8/gpt4v_eval.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 663908,
    "stars": 341
  },
  {
    "full_name": "open-compass/Ada-LEval",
    "name": "Ada-LEval",
    "description": "The official implementation of \"Ada-LEval: Evaluating long-context LLMs with length-adaptable benchmarks\"",
    "html_url": [
      "https://github.com/open-compass/Ada-LEval/blob/28b7ae7fbaedd0686d0d3cf9d0082518676f97e7/ada_leval/api.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 922,
    "stars": 53
  },
  {
    "full_name": "DeepLearnXMU/QGC",
    "name": "QGC",
    "description": "Code for \"Retaining Key Information under High Compression Rates: Query-Guided Compressor for LLMs\" (ACL 2024)",
    "html_url": [
      "https://github.com/DeepLearnXMU/QGC/blob/ee07e064a5cdea8a80b2b9b4ad375cbbe9b343a5/reranker.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1779,
    "stars": 17
  },
  {
    "full_name": "noahyoungs/OpenAIPowerPointGenerator",
    "name": "OpenAIPowerPointGenerator",
    "description": "integrates OpenAI api to generate powerpoint files ",
    "html_url": [
      "https://github.com/noahyoungs/OpenAIPowerPointGenerator/blob/8d1254d31870a3a119cbc552909fc68dc027a230/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 252,
    "stars": 1
  },
  {
    "full_name": "joshwallerr/docdecoder",
    "name": "docdecoder",
    "description": "A chrome extension that summarises web policies with GPT-4 ✍",
    "html_url": [
      "https://github.com/joshwallerr/docdecoder/blob/2c69c70b79faa16b456f5273229220d0b4e5a07e/backend-functions.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4949,
    "stars": 27
  },
  {
    "full_name": "kristofferv98/openai-voicestream",
    "name": "openai-voicestream",
    "description": "OpenAI VoiceStream: Real-time text-to-speech library for processing text and token streams using the OpenAI API. Supports multiple voices and thread-safe audio generation.",
    "html_url": [
      "https://github.com/kristofferv98/openai-voicestream/blob/8bed0c6a91e91ab517a4296741b6ffc63d0f2225/Voice_generator/VoiceProcessor.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 317,
    "stars": 5
  },
  {
    "full_name": "aimat-lab/megan_global_explanations",
    "name": "megan_global_explanations",
    "description": "Extracting global concept explanations from the self-explaining MEGAN model",
    "html_url": [
      "https://github.com/aimat-lab/megan_global_explanations/blob/4aa6080900a247f41960bac25db31e9cb09f970e/megan_global_explanations/gpt.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 5708,
    "stars": 3
  },
  {
    "full_name": "olusimeon/insurance",
    "name": "insurance",
    "description": "This application predicts whether a customer will make an insurance claim based on their profile and vehicle details. The app leverages machine learning models, logged and managed via MLflow, to ensure version control and easy deployment.",
    "html_url": [
      "https://github.com/olusimeon/insurance/blob/d620e9e3164038000d215903e7015bfa67afa6ef/newvenv/Lib/site-packages/mlflow/utils/openai_utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2296359,
    "stars": 0
  },
  {
    "full_name": "olusimeon/Insurance-Claim",
    "name": "Insurance-Claim",
    "description": "This application predicts whether a customer will make an insurance claim based on their profile and vehicle details. The app leverages machine learning models, logged and managed via MLflow, to ensure version control and easy deployment. ",
    "html_url": [
      "https://github.com/olusimeon/Insurance-Claim/blob/1a693b266844396ca87da6bd890ba55537c78da6/newvenv/Lib/site-packages/mlflow/utils/openai_utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2296098,
    "stars": 0
  },
  {
    "full_name": "MrSanZz/InsomniaGPT-Prompt",
    "name": "InsomniaGPT-Prompt",
    "description": "WormGPT!.",
    "html_url": [
      "https://github.com/MrSanZz/InsomniaGPT-Prompt/blob/21ad2001fec91a550c9456e6f8f13b1ce8a4c4e1/insomniagpt.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 225,
    "stars": 83
  },
  {
    "full_name": "resphinas/claude-on-wechat-avaliable",
    "name": "claude-on-wechat-avaliable",
    "description": "claude AI that can be used on WeChat ，thums up if you like this project， thanks~",
    "html_url": [
      "https://github.com/resphinas/claude-on-wechat-avaliable/blob/b4a1ca93d9192ee7ef5b11c7ee0dce0eca3830de/config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 10413,
    "stars": 10
  },
  {
    "full_name": "Wojtekb30/ChatGPT_Online",
    "name": "ChatGPT_Online",
    "description": "Named by me AlgorytmWeb, this is my solution to give OpenAI's ChatGPT live Internet access. Thanks to that, it can look up latest info online on any topic.",
    "html_url": [
      "https://github.com/Wojtekb30/ChatGPT_Online/blob/8eb000329c457369167bd2ceb8d46f415ec051cc/APIWojOpenAI.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 288,
    "stars": 0
  },
  {
    "full_name": "vladzima/topenai",
    "name": "topenai",
    "description": "A simple command line interface tool to interact with OpenAI",
    "html_url": [
      "https://github.com/vladzima/topenai/blob/cbf36fe1bf1ad4775aed6bc6370d589095935ffb/topenai/__init__.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 615,
    "stars": 1
  },
  {
    "full_name": "ErayEroglu/rag-chat-py",
    "name": "rag-chat-py",
    "description": null,
    "html_url": [
      "https://github.com/ErayEroglu/rag-chat-py/blob/5f133f17bfadfa25b81e89b8aec281a237878711/ragchat_py/models.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1324,
    "stars": 0
  },
  {
    "full_name": "Qiyuan-Ge/OpenAssistant",
    "name": "OpenAssistant",
    "description": "LLM as Agent",
    "html_url": [
      "https://github.com/Qiyuan-Ge/OpenAssistant/blob/b08974e4112a02c78246e36a94bd5927d1f68cb9/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1028,
    "stars": 21
  },
  {
    "full_name": "balakhonoff/ai42z",
    "name": "ai42z",
    "description": "Proactive Autonomous AI Agent framework leveraging cutting-edge LLM capabilities for iterative, goal-driven decision-making, adaptive execution, and seamless integration with a broad range of actions and tools.",
    "html_url": [
      "https://github.com/balakhonoff/ai42z/blob/110a71aba88c72de2e24571a5cdf61e4900b6f9d/llm_processor.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1842,
    "stars": 32
  },
  {
    "full_name": "vinli0921/LLM-proof",
    "name": "LLM-proof",
    "description": "Repo for Algoverse Research",
    "html_url": [
      "https://github.com/vinli0921/LLM-proof/blob/2e65a73656c81f4f43fc995d2d54b137d0262b15/test/identifyingTheorems.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "BrightPool/udemy-prompt-engineering-course",
    "name": "udemy-prompt-engineering-course",
    "description": "Content for the Udemy Prompt Engineering Course",
    "html_url": [
      "https://github.com/BrightPool/udemy-prompt-engineering-course/blob/813938994225ef1e647e0797e0778494279ff9ef/ai_text_model_projects/openai_realtime_example_with_twilio/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 13617,
    "stars": 248
  },
  {
    "full_name": "fatimaazfar/Astrology-Chatbot",
    "name": "Astrology-Chatbot",
    "description": "AstroAI is an interactive desktop application that provides personalized horoscopes and astrological insights using user-provided birth details and OpenAI's GPT-3.5-turbo model.",
    "html_url": [
      "https://github.com/fatimaazfar/Astrology-Chatbot/blob/cdbd5f46a798899971b223c774bd692872ab9b3f/astroai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 202,
    "stars": 3
  },
  {
    "full_name": "Photon1c/CheddarButlerChef",
    "name": "CheddarButlerChef",
    "description": "An app to get suggestions of recipes based on user defined ingredients. Powered by OpenAI.",
    "html_url": [
      "https://github.com/Photon1c/CheddarButlerChef/blob/71483d07c1c0bf504f3b85cd97fd3655f7e9ae03/recipe_scraper.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 19287,
    "stars": 0
  },
  {
    "full_name": "rookasrudzianskas/gpt-pilot-software",
    "name": "gpt-pilot-software",
    "description": "Test",
    "html_url": [
      "https://github.com/rookasrudzianskas/gpt-pilot-software/blob/ac01a28dab629fa21c1ab45034ab9b838fe2b606/pilot/utils/llm_connection.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3150,
    "stars": 1
  },
  {
    "full_name": "luolin-ai/chatgpt-KnowledgeBot",
    "name": "chatgpt-KnowledgeBot",
    "description": "KnowledgeBot-WeChatGPT 是一个基于知识库的微信机器人，它结合了私有化的知识和 GPT 预训练模型，为用户提供智能的对话和知识交流。 该项目利用私有化的知识库作为机器人的知识基础，其中包含了丰富的领域知识、常见问题和解决方案。结合 GPT 预训练模型，KnowledgeBot-WeChatGPT 可以根据a用户的提问和对话内容，通过对知识库和 GPT 模型的综合分析，给出准确、有用的回答和建议。",
    "html_url": [
      "https://github.com/luolin-ai/chatgpt-KnowledgeBot/blob/fcc88040057b9e87562b9d3c9bd817ac8a3d2d94/config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 10566,
    "stars": 105
  },
  {
    "full_name": "SheriefAttia/AI-Document-Assistant",
    "name": "AI-Document-Assistant",
    "description": "AI-powered document understanding assistant that helps users extract insights from PDF documents through summarization and question-answering capabilities. It utilizes OpenAI's GPT-3.5 model for natural language processing tasks and provides additional functionalities such as web and Wikipedia searches for more relevant information.",
    "html_url": [
      "https://github.com/SheriefAttia/AI-Document-Assistant/blob/f2d5002a7e76663746f8a130574f4eb907394e13/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 332,
    "stars": 0
  },
  {
    "full_name": "sanxing-chen/ChatShop",
    "name": "ChatShop",
    "description": "A webshopping task with LLM-simulated shopper",
    "html_url": [
      "https://github.com/sanxing-chen/ChatShop/blob/ad8e23365ba36671b3b88e1b2596a2744f972224/web_agent_site/envs/chatshop_env.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 51375,
    "stars": 1
  },
  {
    "full_name": "linusaltacc/fastapi-proxy-auth",
    "name": "fastapi-proxy-auth",
    "description": "FastAPI Proxy with API Key Validation for ollama or any API",
    "html_url": [
      "https://github.com/linusaltacc/fastapi-proxy-auth/blob/4f078bed4df36073fbf2cb0c365e3f8e49f9a5ad/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 345,
    "stars": 0
  },
  {
    "full_name": "RdeVCCA/Smart-Lecture-Summary",
    "name": "Smart-Lecture-Summary",
    "description": "This project utilises gpt-4 and whisper model to provide a report that summarises the content of a lecture video.",
    "html_url": [
      "https://github.com/RdeVCCA/Smart-Lecture-Summary/blob/50b89e7b4ed2efb175f609d2e4155ef375511721/index.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 18655,
    "stars": 0
  },
  {
    "full_name": "kmaneshk/sublime-text-language-models",
    "name": "sublime-text-language-models",
    "description": "Sublime Text 4 Package for LLM Integration",
    "html_url": [
      "https://github.com/kmaneshk/sublime-text-language-models/blob/fc91b7f156db57bc10ffef9c77be6be456cb540e/LLMPlugin.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 205,
    "stars": 1
  },
  {
    "full_name": "Leon-Francis/OpenAI-API-Caller",
    "name": "OpenAI-API-Caller",
    "description": null,
    "html_url": [
      "https://github.com/Leon-Francis/OpenAI-API-Caller/blob/5359d1e13d4443c5c2ab9e3ecfba90896dfb9a39/openai_api_caller.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 345,
    "stars": 2
  },
  {
    "full_name": "catid/textworld_llm_benchmark",
    "name": "textworld_llm_benchmark",
    "description": "TextWorld LLM Benchmark",
    "html_url": [
      "https://github.com/catid/textworld_llm_benchmark/blob/3e76c1333a001939e7a0ad1452d301a1e647b084/llm_play_textworld.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 595,
    "stars": 3
  },
  {
    "full_name": "PKU-YuanGroup/Peer-review-in-LLMs",
    "name": "Peer-review-in-LLMs",
    "description": "Peer-review-in-LLMs: Automatic Evaluation Method for LLMs in Open-environment，https://arxiv.org/pdf/2402.01830.pdf",
    "html_url": [
      "https://github.com/PKU-YuanGroup/Peer-review-in-LLMs/blob/e4c3854a019a607c991a40fe78ef9aad15fdeb76/llm_judge/config/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 15571,
    "stars": 36
  },
  {
    "full_name": "snailbrainx/openai-realtime-python",
    "name": "openai-realtime-python",
    "description": "with interupts",
    "html_url": [
      "https://github.com/snailbrainx/openai-realtime-python/blob/df93554715611f3b8aa29ab9691e6606d647f3d8/openai_realtime/client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 430,
    "stars": 0
  },
  {
    "full_name": "Xanonymous-GitHub/chatgpt-academic-clone",
    "name": "chatgpt-academic-clone",
    "description": "The mirror of the chatgpt-academic project, with anti-aliyun fixes.",
    "html_url": [
      "https://github.com/Xanonymous-GitHub/chatgpt-academic-clone/blob/f198257fef6e247ca0ce277b53675d896dc8d37c/request_llm/bridge_all.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 17573,
    "stars": 0
  },
  {
    "full_name": "mplawner/hourlynews",
    "name": "hourlynews",
    "description": "Script to automatically create an hourly audio podcast based on RSS feeds, written by OpenAI, read by an AI TTS reporter. Publishing to Telegram and Mastodon.",
    "html_url": [
      "https://github.com/mplawner/hourlynews/blob/0786aaaf1f9cd6dabc4d6ce71f5b1d25fb59b48d/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1188,
    "stars": 11
  },
  {
    "full_name": "YajingSun-Group/ofet_agent",
    "name": "ofet_agent",
    "description": "An artificial intelligence agent for enhancing organic field-effect transistors (OFETs) performance by combining GPT-4 with advanced machine learning algorithms",
    "html_url": [
      "https://github.com/YajingSun-Group/ofet_agent/blob/81fa738c7a8caaf1a5e1dea4d99a9f5944fd5d71/0_parameters_extractor/scripts/gptapi.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 7168,
    "stars": 8
  },
  {
    "full_name": "nianlonggu/LMCiteGen",
    "name": "LMCiteGen",
    "description": "Code and data for the work Controllable Citation Sentence Generation with Language Models, at 4th Workshop on Scholarly Document Processing at ACL 2024",
    "html_url": [
      "https://github.com/nianlonggu/LMCiteGen/blob/613240233f761def178edcc0830b6ba400c56343/zero_shot_GPT-3.5-turbo/get_chatgpt_generated_citations.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3633,
    "stars": 0
  },
  {
    "full_name": "emma0925/LLM_Explainer",
    "name": "LLM_Explainer",
    "description": null,
    "html_url": [
      "https://github.com/emma0925/LLM_Explainer/blob/280fc83dc6e65139e94e77cc0cccdf2963cc6c59/backend/app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 18959,
    "stars": 0
  },
  {
    "full_name": "engineerjkk/VectorDB-and-LLM",
    "name": "VectorDB-and-LLM",
    "description": "벡터DB와 LLM 기반 상품 검색 및 추천 시스템 개발",
    "html_url": [
      "https://github.com/engineerjkk/VectorDB-and-LLM/blob/e6141b65bc68c01a761cc07e02d22c330c7b503a/image_utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 936,
    "stars": 0
  },
  {
    "full_name": "kotarotanahashi/cvpr",
    "name": "cvpr",
    "description": "search papers of cvpr 2023 by chat gpt",
    "html_url": [
      "https://github.com/kotarotanahashi/cvpr/blob/c4cd56bd40519789a2c16520cb79e7b751391757/app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2564,
    "stars": 14
  },
  {
    "full_name": "zhudotexe/kani-ext-realtime",
    "name": "kani-ext-realtime",
    "description": "Kani extension for OpenAI's realtime API.",
    "html_url": [
      "https://github.com/zhudotexe/kani-ext-realtime/blob/460e553c518bc9c03017e28fa8580c22479d1cf3/kani/ext/realtime/session.py",
      "https://github.com/zhudotexe/kani-ext-realtime/blob/460e553c518bc9c03017e28fa8580c22479d1cf3/kani/ext/realtime/engine.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1553,
    "stars": 2
  },
  {
    "full_name": "LISA-ITMO/rag-llm-op-maker",
    "name": "rag-llm-op-maker",
    "description": "RAG LLM for Educational Program Maker",
    "html_url": [
      "https://github.com/LISA-ITMO/rag-llm-op-maker/blob/2024dd4551f353a982245ea82971e1fd29537fb4/app/modules/rag_system.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 630,
    "stars": 3
  },
  {
    "full_name": "infiniflow/ragflow",
    "name": "ragflow",
    "description": "RAGFlow is an open-source RAG (Retrieval-Augmented Generation) engine based on deep document understanding.",
    "html_url": [
      "https://github.com/infiniflow/ragflow/blob/a0dc9e1bdf30c9a3b628cb9f3cad5150c611801f/rag/llm/tts_model.py",
      "https://github.com/infiniflow/ragflow/blob/35580af87521cdb4cca8b4a3be8db61d02af7042/rag/llm/embedding_model.py",
      "https://github.com/infiniflow/ragflow/blob/35580af87521cdb4cca8b4a3be8db61d02af7042/rag/llm/chat_model.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 851678,
    "stars": 54916
  },
  {
    "full_name": "younesbram/VisualAssistanceTool",
    "name": "VisualAssistanceTool",
    "description": "A user-friendly visual assistance tool for visually impaired users. Captures the screen, generates descriptions using GPT-4, and provides text-to-speech support through local engines, elevenlabs, or OpenAI with multiple language options and hotkey activation.",
    "html_url": [
      "https://github.com/younesbram/VisualAssistanceTool/blob/d94c3067c7538d178971639fbccad15d3c4261ab/visualizemyscreen.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "MBZUAI-LLM/web2code",
    "name": "web2code",
    "description": "Web2Code: A Large-scale Webpage-to-Code Dataset and Evaluation Framework for Multimodal LLMs",
    "html_url": [
      "https://github.com/MBZUAI-LLM/web2code/blob/48c356a97dd6199f29a9710fdd2b4b2689b5e361/code_generation/gpt4_vision_evaluation.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 12311,
    "stars": 85
  },
  {
    "full_name": "soulahan/langchain-ChatGLM",
    "name": "langchain-ChatGLM",
    "description": "langchain-ChatGLM使用潘多拉接入openai",
    "html_url": [
      "https://github.com/soulahan/langchain-ChatGLM/blob/af0c5ebe37b04bba51dc0c748e3eef8e6d99e273/configs/model_config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 39486,
    "stars": 0
  },
  {
    "full_name": "Rakam-AI/kolverr-rag",
    "name": "kolverr-rag",
    "description": null,
    "html_url": [
      "https://github.com/Rakam-AI/kolverr-rag/blob/f96a77c2102504ce64fd8199d22b486714adfb76/rakam_systems/components/realtime_chatter/chatter.py",
      "https://github.com/Rakam-AI/kolverr-rag/blob/f96a77c2102504ce64fd8199d22b486714adfb76/servers/application/rakam_systems/rakam_systems/components/realtime_chatter/chatter.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 6930,
    "stars": 0
  },
  {
    "full_name": "FaberSober/ragflow",
    "name": "ragflow",
    "description": null,
    "html_url": [
      "https://github.com/FaberSober/ragflow/blob/acaa0e8bc55a467fd09fbbb9e216c52175f1c355/rag/llm/tts_model.py",
      "https://github.com/FaberSober/ragflow/blob/acaa0e8bc55a467fd09fbbb9e216c52175f1c355/rag/llm/chat_model.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 766985,
    "stars": 0
  },
  {
    "full_name": "THU-KEG/DICE",
    "name": "DICE",
    "description": "DICE: Detecting In-distribution Data Contamination with LLM's Internal State",
    "html_url": [
      "https://github.com/THU-KEG/DICE/blob/8efb0d55d70ce9ae72cf92a96f962b3d68f332e3/OOD_test/myopenai.py",
      "https://github.com/THU-KEG/DICE/blob/8efb0d55d70ce9ae72cf92a96f962b3d68f332e3/OOD_test/src/contamination/openai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 199080,
    "stars": 8
  },
  {
    "full_name": "SFZheng7/6770Project-RAGFlow",
    "name": "6770Project-RAGFlow",
    "description": "It is the implementation code of 6770 Course Project by Shuo Deng(sd3715) and Shifei Zheng (sz3106)",
    "html_url": [
      "https://github.com/SFZheng7/6770Project-RAGFlow/blob/a63f644d62f8880973fe91212a6077c685a74e29/rag/llm/tts_model.py",
      "https://github.com/SFZheng7/6770Project-RAGFlow/blob/a63f644d62f8880973fe91212a6077c685a74e29/rag/llm/chat_model.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 775898,
    "stars": 0
  },
  {
    "full_name": "msaelices/openai-realtime-api-fastapi-client",
    "name": "openai-realtime-api-fastapi-client",
    "description": "OpenAI realtime API FastAPI client",
    "html_url": [
      "https://github.com/msaelices/openai-realtime-api-fastapi-client/blob/7210a58e43dcaee8dd6bdede6ac5aeb9d2da90c5/server.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 273,
    "stars": 1
  },
  {
    "full_name": "andreykobal/OpenAIAuth",
    "name": "OpenAIAuth",
    "description": "auth to chatgpt",
    "html_url": [
      "https://github.com/andreykobal/OpenAIAuth/blob/b8ef3718dc1cc422233b71670bf6069f3a79ef00/src/OpenAIAuth.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 566,
    "stars": 1
  },
  {
    "full_name": "skrrtn/Twitch-OpenAI-TTS",
    "name": "Twitch-OpenAI-TTS",
    "description": "OpenAI API powered Twitch chat bot that allows users to ask questions and receive answers via TTS.",
    "html_url": [
      "https://github.com/skrrtn/Twitch-OpenAI-TTS/blob/bebcdefbac6fcfccb2751330019ed6987d6c93df/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 417,
    "stars": 5
  },
  {
    "full_name": "hostidc/Langchain-Chatchat",
    "name": "Langchain-Chatchat",
    "description": null,
    "html_url": [
      "https://github.com/hostidc/Langchain-Chatchat/blob/428e63bd64a05d7dc8d1a91c94cc66f9ea1537a9/configs/model_config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 12109,
    "stars": 0
  },
  {
    "full_name": "tetrapod0/RAG-FAQ",
    "name": "RAG-FAQ",
    "description": null,
    "html_url": [
      "https://github.com/tetrapod0/RAG-FAQ/blob/53c3279aa9a96876c3df1e6cc0d0b48edfcb1bd6/server.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1570,
    "stars": 0
  },
  {
    "full_name": "snburgos/RAGTime",
    "name": "RAGTime",
    "description": null,
    "html_url": [
      "https://github.com/snburgos/RAGTime/blob/8670e6612e90df4b9145a867cc00bb3cb72d1cfb/evalue.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 28702,
    "stars": 0
  },
  {
    "full_name": "jackmpcollins/magentic",
    "name": "magentic",
    "description": "Seamlessly integrate LLMs as Python functions",
    "html_url": [
      "https://github.com/jackmpcollins/magentic/blob/d7ae5c26ff259448a5d1cf9bad3c10340949a37c/tests/chat_model/test_openai_chat_model.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 25176,
    "stars": 2314
  },
  {
    "full_name": "drewzxcvbnm/CLI-GPT-Chat",
    "name": "CLI-GPT-Chat",
    "description": "Command line GPT chat",
    "html_url": [
      "https://github.com/drewzxcvbnm/CLI-GPT-Chat/blob/6dec0897c3782f79a268329b2e6d16cd7e187dd6/chat.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 335,
    "stars": 0
  },
  {
    "full_name": "JimmyMa99/langchain_InternLM",
    "name": "langchain_InternLM",
    "description": null,
    "html_url": [
      "https://github.com/JimmyMa99/langchain_InternLM/blob/ac1ff6dde6d2bc7c76a75985f1b75f91ba42e686/configs/model_config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4169,
    "stars": 1
  },
  {
    "full_name": "Slashpaf/L10nMate",
    "name": "L10nMate",
    "description": "Automate localization file translations effortlessly with OpenAI's GPT models.",
    "html_url": [
      "https://github.com/Slashpaf/L10nMate/blob/9633b443bc4ed3aae51f5270a6e5c442ed8ea433/L10nMate.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 404,
    "stars": 0
  },
  {
    "full_name": "mitmedialab/Health-LLM",
    "name": "Health-LLM",
    "description": null,
    "html_url": [
      "https://github.com/mitmedialab/Health-LLM/blob/ca0958540317d2aea653293dd8f4d271406ac6ea/inference.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1336,
    "stars": 73
  },
  {
    "full_name": "jerrylususu/bookmark-summary",
    "name": "bookmark-summary",
    "description": "用 LLM 和 jina reader 生成的总结",
    "html_url": [
      "https://github.com/jerrylususu/bookmark-summary/blob/5c285d99adfd5146656836ef0c21cffe3fdbef28/process_changes.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 91913,
    "stars": 80
  },
  {
    "full_name": "fursman/Assistant",
    "name": "Assistant",
    "description": "A NixOS LLM Voice Assistant for Wayland",
    "html_url": [
      "https://github.com/fursman/Assistant/blob/0a10de188fef7f2272387d03dd934e96b9e1b325/assistant.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 609,
    "stars": 0
  },
  {
    "full_name": "yuuz233/oil-gas-llm",
    "name": "oil-gas-llm",
    "description": "hacktx 24",
    "html_url": [
      "https://github.com/yuuz233/oil-gas-llm/blob/83b29f222e2eceda04a220167148bbbac843b7c7/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 677,
    "stars": 0
  },
  {
    "full_name": "rossumai/sf-llm-connector",
    "name": "sf-llm-connector",
    "description": "SF to post prompts to LLM and storing the response back among annotation fields.",
    "html_url": [
      "https://github.com/rossumai/sf-llm-connector/blob/94c95436525652501fa1d13f4410461e34b580a6/serverless_openai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 472,
    "stars": 0
  },
  {
    "full_name": "YancyKahn/CoA",
    "name": "CoA",
    "description": "Chain of Attack: a Semantic-Driven Contextual Multi-Turn attacker for LLM",
    "html_url": [
      "https://github.com/YancyKahn/CoA/blob/aa50cd70d8ee831fcbd099a0ef4a183bbfd86579/config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 6331,
    "stars": 31
  },
  {
    "full_name": "ldegao/ScenarioFuzz-LLM",
    "name": "ScenarioFuzz-LLM",
    "description": null,
    "html_url": [
      "https://github.com/ldegao/ScenarioFuzz-LLM/blob/6ddb67a8e9536a2c9e3569411838e820fb101c38/gpt.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4278,
    "stars": 3
  },
  {
    "full_name": "b-lala/GPT-V1.0",
    "name": "GPT-V1.0",
    "description": null,
    "html_url": [
      "https://github.com/b-lala/GPT-V1.0/blob/cf3f571b334e0f6d47a3d7ad9522a38c39d966cc/crazy_functions/%E5%9B%BE%E7%89%87%E7%94%9F%E6%88%90.py",
      "https://github.com/b-lala/GPT-V1.0/blob/cf3f571b334e0f6d47a3d7ad9522a38c39d966cc/config.py",
      "https://github.com/b-lala/GPT-V1.0/blob/cf3f571b334e0f6d47a3d7ad9522a38c39d966cc/request_llms/bridge_all.py",
      "https://github.com/b-lala/GPT-V1.0/blob/cf3f571b334e0f6d47a3d7ad9522a38c39d966cc/toolbox.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1983747,
    "stars": 0
  },
  {
    "full_name": "JeanPCordeiro/LocalLLM",
    "name": "LocalLLM",
    "description": "GitPod workspace to test local LLMs",
    "html_url": [
      "https://github.com/JeanPCordeiro/LocalLLM/blob/47b9b3de151882cfee993e8965715c640c4c0990/backend/config.py",
      "https://github.com/JeanPCordeiro/LocalLLM/blob/47b9b3de151882cfee993e8965715c640c4c0990/backend/apps/images/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 39675,
    "stars": 0
  },
  {
    "full_name": "AdamLeeN/RagGPT",
    "name": "RagGPT",
    "description": null,
    "html_url": [
      "https://github.com/AdamLeeN/RagGPT/blob/97b30ffcc959b03a9681c26b9207dfb6ea3b21d7/config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3593,
    "stars": 3
  },
  {
    "full_name": "lwangreen/Langchain-ChatGLM",
    "name": "Langchain-ChatGLM",
    "description": "Self customization for langchain-ChatGLM",
    "html_url": [
      "https://github.com/lwangreen/Langchain-ChatGLM/blob/cc31708e0a36e4228d2f7694168970cf323f3626/configs/model_config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 10901,
    "stars": 1
  },
  {
    "full_name": "flysliver/Langchain-ChatGLM",
    "name": "Langchain-ChatGLM",
    "description": "Self customization for langchain-ChatGLM",
    "html_url": [
      "https://github.com/flysliver/Langchain-ChatGLM/blob/cc31708e0a36e4228d2f7694168970cf323f3626/configs/model_config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 10901,
    "stars": 0
  },
  {
    "full_name": "Neural-Dragon-AI/Cynde",
    "name": "Cynde",
    "description": "A Framework For Intelligence Farming",
    "html_url": [
      "https://github.com/Neural-Dragon-AI/Cynde/blob/e963984d0093a9c5c68e87702fa3bcb8a22ebf2e/cynde/functional/embed/embed_oai.py",
      "https://github.com/Neural-Dragon-AI/Cynde/blob/e963984d0093a9c5c68e87702fa3bcb8a22ebf2e/cynde/oaiserver/api_request_parallel_processor.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 28015,
    "stars": 14
  },
  {
    "full_name": "Yega-Noragami/Fin-Agent",
    "name": "Fin-Agent",
    "description": "LLM Agents workflow ",
    "html_url": [
      "https://github.com/Yega-Noragami/Fin-Agent/blob/e2bdc7ebbb627f1f5573e4a47d4ca082c00fc61e/autogen-rag.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 18745,
    "stars": 1
  },
  {
    "full_name": "nyedr/desktop-llm",
    "name": "desktop-llm",
    "description": null,
    "html_url": [
      "https://github.com/nyedr/desktop-llm/blob/32dd221abda4f532da5b896496c39406dd9b6575/app/services/model_service.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 8537,
    "stars": 0
  },
  {
    "full_name": "Emasoft/apias",
    "name": "apias",
    "description": "APIAS (API Auto Scraper) is an AI powered python script that scrapes any api documentation website and convert the pages to a compact and structured form tailored for LLMs",
    "html_url": [
      "https://github.com/Emasoft/apias/blob/a95e98969a1e871362a6d66624e816cebb3fe2e5/apias/apias.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2516,
    "stars": 3
  },
  {
    "full_name": "THUDM/CogView3",
    "name": "CogView3",
    "description": "text to image to  generation: CogView3-Plus and CogView3(ECCV 2024)",
    "html_url": [
      "https://github.com/THUDM/CogView3/blob/d450a7412f843709d8acaea4c96f0464d154f609/inference/gradio_web_demo.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2271,
    "stars": 1057
  },
  {
    "full_name": "qagentur/absa_llm",
    "name": "absa_llm",
    "description": null,
    "html_url": [
      "https://github.com/qagentur/absa_llm/blob/f601c51b1f59040b01efffe14b6adebacf47ed8d/absa_llm/job.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3029,
    "stars": 28
  },
  {
    "full_name": "zhuxiaotie/chatgpt-o",
    "name": "chatgpt-o",
    "description": null,
    "html_url": [
      "https://github.com/zhuxiaotie/chatgpt-o/blob/3e480d0f5b0c1f58ba42486a02e505690b0c5ef3/config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 13174,
    "stars": 0
  },
  {
    "full_name": "Wylhelm/isaac",
    "name": "isaac",
    "description": "Trying to add vision, agents and graphRAG",
    "html_url": [
      "https://github.com/Wylhelm/isaac/blob/af62c08c985bdca21d4cd8b1f70837a7ec8d620b/app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1114,
    "stars": 1
  },
  {
    "full_name": "Karine-Huang/T2I-CompBench",
    "name": "T2I-CompBench",
    "description": "[Neurips 2023] T2I-CompBench: A Comprehensive Benchmark for Open-world Compositional Text-to-image Generation",
    "html_url": [
      "https://github.com/Karine-Huang/T2I-CompBench/blob/33d63057ce4ee301be8838cc85e6cdac734223a3/MLLM_eval/gpt4v_eval.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 64314,
    "stars": 260
  },
  {
    "full_name": "llm-efficiency-challenge/private-helm",
    "name": "private-helm",
    "description": "HELM for hidden dataset eval",
    "html_url": [
      "https://github.com/llm-efficiency-challenge/private-helm/blob/d5a6297850dc6a03ce26721faf63f7f7d595556f/src/helm/proxy/clients/openai_client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 68704,
    "stars": 0
  },
  {
    "full_name": "tcpipuk/maubot-openai-translate",
    "name": "maubot-openai-translate",
    "description": "Simple translation plugin for Maubot using OpenAI API",
    "html_url": [
      "https://github.com/tcpipuk/maubot-openai-translate/blob/9dd5315a0f1671bf098bcb0d16a43e15eadf1eb7/openaitranslate/translate.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 543,
    "stars": 3
  },
  {
    "full_name": "amanyaras/llm-home",
    "name": "llm-home",
    "description": null,
    "html_url": [
      "https://github.com/amanyaras/llm-home/blob/e96739dc21f9fa7b3e4feb1c1995e53c5816055d/FastChat-main/fastchat/serve/api_provider.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1327890,
    "stars": 0
  },
  {
    "full_name": "fithithub/wikipedia_search_assistant",
    "name": "wikipedia_search_assistant",
    "description": "Leveraging OpenAI models (speech-to-text, text-to-speech and GPT-4V) + integration with Wikipedia",
    "html_url": [
      "https://github.com/fithithub/wikipedia_search_assistant/blob/7cded46ef975740c157cafd14351db2050877316/flask_wiki_app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 740,
    "stars": 0
  },
  {
    "full_name": "ai-yeongji/ko_llm_eval",
    "name": "ko_llm_eval",
    "description": "한국어 llm 성능 평가 관련 repo. ",
    "html_url": [
      "https://github.com/ai-yeongji/ko_llm_eval/blob/57dbf612f2bc68d3a4d972646419b6439fefd208/FastChat/fastchat/serve/api_provider.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 30122,
    "stars": 1
  },
  {
    "full_name": "smclw/chatgpt-on-wechat",
    "name": "chatgpt-on-wechat",
    "description": "Wechat robot based on ChatGPT, which using OpenAI api and itchat library. 使用大模型搭建微信聊天机器人，基于 GPT3.5/GPT4.0/Claude/文心一言/讯飞星火/通义千问/Gemini/LinkAI，支持个人微信、公众号、企业微信、飞书部署，能处理文本、语音和图片，访问操作系统和互联网，支持基于知识库定制专属机器人。",
    "html_url": [
      "https://github.com/smclw/chatgpt-on-wechat/blob/04943c0bfa0a9038d1f498dbea4a1920a8502f84/config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 13613,
    "stars": 10
  },
  {
    "full_name": "wang-research-lab/agentinstruct",
    "name": "agentinstruct",
    "description": "Code repo for \"Agent Instructs Large Language Models to be General Zero-Shot Reasoners\"",
    "html_url": [
      "https://github.com/wang-research-lab/agentinstruct/blob/4ff3a98dba0871c31408b003cde115eb3d28ace9/src/agentinstruct/reasoning/helm_updates/src/helm/proxy/clients/openai_client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 8989,
    "stars": 112
  },
  {
    "full_name": "cheungchazz/WeChat-AIChatbot-WinOnly",
    "name": "WeChat-AIChatbot-WinOnly",
    "description": "基于chatgpt-on-wechat框架，只能运行在Win平台的项目，通过本项目可以将微信或者企业微信个人号接入ChatGpt、文心一言、FastGpt、LinkAI，可以文字对话、语音对话、图片交互、文件交互等。",
    "html_url": [
      "https://github.com/cheungchazz/WeChat-AIChatbot-WinOnly/blob/b159c57c8ffecf26b30f214c515fd9fa1310ecc6/config.py",
      "https://github.com/cheungchazz/WeChat-AIChatbot-WinOnly/blob/b159c57c8ffecf26b30f214c515fd9fa1310ecc6/plugins/newgpt_turbo/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 7415,
    "stars": 355
  },
  {
    "full_name": "xxxAleksandrxxx/terminal_companion",
    "name": "terminal_companion",
    "description": "That's a simple python app for communication with the ChatGPT API provided by OpenAI directly from terminal.",
    "html_url": [
      "https://github.com/xxxAleksandrxxx/terminal_companion/blob/650297d49d1163dcfc6ec974ce596cc9def870d9/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 453,
    "stars": 1
  },
  {
    "full_name": "pr0fi7/RAG_for_any_file",
    "name": "RAG_for_any_file",
    "description": null,
    "html_url": [
      "https://github.com/pr0fi7/RAG_for_any_file/blob/af35c916df6cbe49860bfe90997a1bf4ecdc6ae2/app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 343,
    "stars": 4
  },
  {
    "full_name": "soonjipepsi/openai-usage-tracker",
    "name": "openai-usage-tracker",
    "description": null,
    "html_url": [
      "https://github.com/soonjipepsi/openai-usage-tracker/blob/10cbd953c9313fa8338c6b77a033c69f5693bac4/usage.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 258,
    "stars": 2
  },
  {
    "full_name": "sumkh/Learn_rag-postgres-openai-python",
    "name": "Learn_rag-postgres-openai-python",
    "description": "Cloned from Azure Samples",
    "html_url": [
      "https://github.com/sumkh/Learn_rag-postgres-openai-python/blob/51b1bc1ab2546eb8973f8a0002a4d8e9398b1004/tests/conftest.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 246488,
    "stars": 0
  },
  {
    "full_name": "Nayjest/ai-microcore",
    "name": "ai-microcore",
    "description": "A handy lib for smooth interaction with large language models (LLMs) and crafting AI apps.",
    "html_url": [
      "https://github.com/Nayjest/ai-microcore/blob/3dcfc0f57bcf8f43ec4b5946d4b96257e995a4a3/microcore/configuration.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 5587,
    "stars": 68
  },
  {
    "full_name": "raghadalhossny444/Save_Your_Moments",
    "name": "Save_Your_Moments",
    "description": "a small web app for adding your moments (photos), and it will generate a good caption for it to describe the moment using LLMs and Computer Vision techniques  ",
    "html_url": [
      "https://github.com/raghadalhossny444/Save_Your_Moments/blob/c9589c4703e7c529df085b26d0f3167ae8d149df/model.py",
      "https://github.com/raghadalhossny444/Save_Your_Moments/blob/c9589c4703e7c529df085b26d0f3167ae8d149df/Backend/app/image_analysis_pipeline.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 25615,
    "stars": 2
  },
  {
    "full_name": "HIGISX/langchain-ChatGLM-master",
    "name": "langchain-ChatGLM-master",
    "description": null,
    "html_url": [
      "https://github.com/HIGISX/langchain-ChatGLM-master/blob/3417677b5338cb027619ddd4f95fe06bfd128075/configs/model_config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 70767,
    "stars": 1
  },
  {
    "full_name": "princeton-nlp/USACO",
    "name": "USACO",
    "description": "Can Language Models Solve Olympiad Programming?",
    "html_url": [
      "https://github.com/princeton-nlp/USACO/blob/e86da8d4a776c6aafbf787bb46703c966f7e143e/USACOBench/models/gpt.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2533,
    "stars": 116
  },
  {
    "full_name": "PancrePal-xiaoyibao/PancrePal-xiaoyibao",
    "name": "PancrePal-xiaoyibao",
    "description": "面向胰腺癌肿瘤患者的智能RAG平台",
    "html_url": [
      "https://github.com/PancrePal-xiaoyibao/PancrePal-xiaoyibao/blob/57d19463d77400a1deb99e2f0a1cb3dba89e0bbf/src/cow-pancrepal/config.py",
      "https://github.com/PancrePal-xiaoyibao/PancrePal-xiaoyibao/blob/57d19463d77400a1deb99e2f0a1cb3dba89e0bbf/src/cow-qywx/config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 22880,
    "stars": 184
  },
  {
    "full_name": "DavidDworetzky/Geist",
    "name": "Geist",
    "description": "Integrated Server for AI Assistants, using Anthropic, Open AI Llama, etc. models.",
    "html_url": [
      "https://github.com/DavidDworetzky/Geist/blob/76fbf1d7c231889b6b8e0c827b8a8db98b2a5b37/agents/gpt4_agent.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 42613,
    "stars": 4
  },
  {
    "full_name": "jinxingli87/warehouse_ai",
    "name": "warehouse_ai",
    "description": "document processing and customer relationship using LLMs and computer vision models",
    "html_url": [
      "https://github.com/jinxingli87/warehouse_ai/blob/60ee249f94df815c59409f2b833e4d29b93eb6f3/cts.py",
      "https://github.com/jinxingli87/warehouse_ai/blob/60ee249f94df815c59409f2b833e4d29b93eb6f3/pod_from_all.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1618,
    "stars": 0
  },
  {
    "full_name": "sofi444/realtime-openai-dotpy",
    "name": "realtime-openai-dotpy",
    "description": "Speech to Speech conversation using the OpenAI RealTime API in Python 🐍",
    "html_url": [
      "https://github.com/sofi444/realtime-openai-dotpy/blob/6f20db79f3152cb15290398bcbfcc1650200debc/conversation_noVAD.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 528,
    "stars": 26
  },
  {
    "full_name": "leonardltk/RAGcipe",
    "name": "RAGcipe",
    "description": "Use LLM + Advanced RAG to get desired #ROTD (recipe of the day)",
    "html_url": [
      "https://github.com/leonardltk/RAGcipe/blob/c2d54c2c7269f8c56e221c23ac56570c9a412cef/run.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2244,
    "stars": 1
  },
  {
    "full_name": "SqueezeAILab/SqueezedAttention",
    "name": "SqueezedAttention",
    "description": "SQUEEZED ATTENTION: Accelerating Long Prompt LLM Inference",
    "html_url": [
      "https://github.com/SqueezeAILab/SqueezedAttention/blob/4a50c64eca2f20232a4e998d754d030ce3a7f6e6/LongBench/summ/compress.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1041911,
    "stars": 46
  },
  {
    "full_name": "granin/OpenAIASR",
    "name": "OpenAIASR",
    "description": "Unparalleled accuracy and speed of automatic bulk transcription of all  mp3, mp4, mpeg, mpga, m4a, wav, and webm files you have using OpenAI Whisper ASR API to create a transcript in text, VTT, and SRT in 50 languages with just one API call per file.",
    "html_url": [
      "https://github.com/granin/OpenAIASR/blob/50604739b86d873f8c4683c4853b8b6845153e8d/transcribe.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 299,
    "stars": 4
  },
  {
    "full_name": "wangxyd/cow-dashscope-patch",
    "name": "cow-dashscope-patch",
    "description": "用于一键升级chatgpt-on-wechat以便支持阿里云灵积模型。",
    "html_url": [
      "https://github.com/wangxyd/cow-dashscope-patch/blob/827b90f0c81d583bbaf7bef535a35bac03a9b4fd/config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1101,
    "stars": 1
  },
  {
    "full_name": "jmrothberg/Custom_bots",
    "name": "Custom_bots",
    "description": "My custom bots for local LLMs and diffusers.",
    "html_url": [
      "https://github.com/jmrothberg/Custom_bots/blob/bca0ee2712d870a31141048d414f0cf24d08aa47/OpenAI_4VT_DallE_Dec_18_Universal_no_API_key.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1826,
    "stars": 0
  },
  {
    "full_name": "LWL-cpu/RAG-IE",
    "name": "RAG-IE",
    "description": "RAG Pipeline for IE tasks",
    "html_url": [
      "https://github.com/LWL-cpu/RAG-IE/blob/243afc30173b24da41d35312cfb17f4db43b33ea/src/models/models.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 16485,
    "stars": 2
  },
  {
    "full_name": "josStorer/mix-chatgpt-and-ai-painting",
    "name": "mix-chatgpt-and-ai-painting",
    "description": "a bot application running on Tencent QQ that integrates GPT chatbot capabilities with AI painting. 一个运行于腾讯qq上的, 将gpt聊天能力与ai绘画集成的机器人应用.",
    "html_url": [
      "https://github.com/josStorer/mix-chatgpt-and-ai-painting/blob/8ac9c23127f1eca49dfea17eefc97a98b4069dc2/operations.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 797,
    "stars": 165
  },
  {
    "full_name": "hibobmaster/mattermost_bot",
    "name": "mattermost_bot",
    "description": "A simple mattermost bot that supports image generation and chatting with ChatGPT",
    "html_url": [
      "https://github.com/hibobmaster/mattermost_bot/blob/f84efa35cb2cc213828677fa904fe41b06dcba81/src/bot.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 956,
    "stars": 6
  },
  {
    "full_name": "RhythrosaLabs/game-maker",
    "name": "game-maker",
    "description": "Game Maker allows you to generate various assets for game development using the OpenAI API. You can create images, documents, scripts, and more, and download them all as a comprehensive game plan.",
    "html_url": [
      "https://github.com/RhythrosaLabs/game-maker/blob/520ca1b6d4e5dbd6f0115a36dd4c018bc461bba4/main2.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 821,
    "stars": 4
  },
  {
    "full_name": "Lukium/chatgpt-api-server",
    "name": "chatgpt-api-server",
    "description": "ChatGPT Web API server based on Flask that can respond both via browser through Flask Forms and directly via POST/GET Requests",
    "html_url": [
      "https://github.com/Lukium/chatgpt-api-server/blob/c7914716214f28a0fff566fc069ca0a02195efae/contrib/OpenAIAuth/OpenAIAuth.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2250,
    "stars": 75
  },
  {
    "full_name": "wilfex81/Openai_Project",
    "name": "Openai_Project",
    "description": "API endpoints designed to facilitate various interactions within families, such as conflict resolution advice, customized devotion plans, milestone celebrations, prayer requests, family challenges, and feedback submissions.",
    "html_url": [
      "https://github.com/wilfex81/Openai_Project/blob/8688a2a9ab50f4ae56df8ca6efad6c1cca403be2/endpoints/views.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 38774,
    "stars": 0
  },
  {
    "full_name": "simonbriers/weathercanvasai",
    "name": "weathercanvasai",
    "description": "Home Assistant weather image generator with OpenAI ChatGPT and Dall-E",
    "html_url": [
      "https://github.com/simonbriers/weathercanvasai/blob/606dcf80c55bed024bd72d8810765da0a5ec6301/custom_components/weathercanvasai/weather_processing.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 922,
    "stars": 2
  },
  {
    "full_name": "zhayujie/chatgpt-on-wechat",
    "name": "chatgpt-on-wechat",
    "description": "基于大模型搭建的聊天机器人，同时支持 微信公众号、企业微信应用、飞书、钉钉 等接入，可选择GPT3.5/GPT-4o/GPT-o1/ Claude/文心一言/讯飞星火/通义千问/ Gemini/GLM-4/Claude/Kimi/LinkAI，能处理文本、语音和图片，访问操作系统和互联网，支持基于自有知识库进行定制企业智能客服。",
    "html_url": [
      "https://github.com/zhayujie/chatgpt-on-wechat/blob/16324e72837b9898dfaca76897cdcdb27044dc06/plugins/tool/tool.py",
      "https://github.com/zhayujie/chatgpt-on-wechat/blob/16324e72837b9898dfaca76897cdcdb27044dc06/config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 18658,
    "stars": 37599
  },
  {
    "full_name": "faraz07-AI/Twitter-Automation-Chatbot-with-LLaMA-3-and-OpenWebUI-Integration",
    "name": "Twitter-Automation-Chatbot-with-LLaMA-3-and-OpenWebUI-Integration",
    "description": "Twitter Automation Chatbot with LLaMA 3 and OpenWebUI Integration",
    "html_url": [
      "https://github.com/faraz07-AI/Twitter-Automation-Chatbot-with-LLaMA-3-and-OpenWebUI-Integration/blob/c5ec89b0aea0a65df3f9406bcf71e6f4b4b43c8d/apps/rag/utils.py",
      "https://github.com/faraz07-AI/Twitter-Automation-Chatbot-with-LLaMA-3-and-OpenWebUI-Integration/blob/c5ec89b0aea0a65df3f9406bcf71e6f4b4b43c8d/apps/openai/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 62384,
    "stars": 0
  },
  {
    "full_name": "Quixon-w/WechatRobot",
    "name": "WechatRobot",
    "description": "WechatRobot， ChatGLM3-6B， RAG",
    "html_url": [
      "https://github.com/Quixon-w/WechatRobot/blob/149012c7eb3095afe63ba0876bd42b2c482176e3/plugins/tool/tool.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 328016,
    "stars": 1
  },
  {
    "full_name": "simonpierreboucher/LLM_AGENT",
    "name": "LLM_AGENT",
    "description": null,
    "html_url": [
      "https://github.com/simonpierreboucher/LLM_AGENT/blob/fa0bb366f9020323e4f78c8e35469926569dbc3d/agent.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "marcus-jw/Multi-Objective-Reinforcement-Learning-from-AI-Feedback",
    "name": "Multi-Objective-Reinforcement-Learning-from-AI-Feedback",
    "description": "Implementation of a Multi-Objective Reinforcement Learning from AI Feedback system using torch, transformers and TRL. This project aims to test whether switching to a Multi-objective reward function in the preference model improves the safety-performance of the final model.",
    "html_url": [
      "https://github.com/marcus-jw/Multi-Objective-Reinforcement-Learning-from-AI-Feedback/blob/9b6eaa16b9f607019f099dd969af9486f6166cfe/API_feedback/api_parallelization.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1869,
    "stars": 7
  },
  {
    "full_name": "dstrib/GPT4_Biomed_Assessment",
    "name": "GPT4_Biomed_Assessment",
    "description": "Script utilized for project assessing GPT-4 performance on graduate examinations in the biomedical sciences",
    "html_url": [
      "https://github.com/dstrib/GPT4_Biomed_Assessment/blob/74f44a97a0e3a84d6c9bec0dcf476561968549a9/Query_GPT4_Exam.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 280,
    "stars": 0
  },
  {
    "full_name": "piercefreeman/gpt-json",
    "name": "gpt-json",
    "description": "Structured and typehinted GPT responses in Python",
    "html_url": [
      "https://github.com/piercefreeman/gpt-json/blob/886d72a8fe09a21160fd1cb22a85803d0555ae62/gpt_json/tests/test_gpt.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3003,
    "stars": 742
  },
  {
    "full_name": "MaartenPI/gpt-json",
    "name": "gpt-json",
    "description": null,
    "html_url": [
      "https://github.com/MaartenPI/gpt-json/blob/96162a6beb9874471150282217f6ae7ec997619f/gpt_json/tests/test_gpt.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3018,
    "stars": 0
  },
  {
    "full_name": "ai-shifu/ai-shifu",
    "name": "ai-shifu",
    "description": "LLM-powered AI guide that leads and drives intelligent conversations",
    "html_url": [
      "https://github.com/ai-shifu/ai-shifu/blob/2ee2906a63fdc920ad6c6c192d7593b06c3f59d8/src/api/flaskr/api/llm/__init__.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 84400,
    "stars": 151
  },
  {
    "full_name": "Eloquent-Algorithmics/GPT_ALL",
    "name": "GPT_ALL",
    "description": "This project aims to combine the latest LLMs, Multi-Step Asynchronous Function Calling, Natural Language Processing, and Text-to-Speech.",
    "html_url": [
      "https://github.com/Eloquent-Algorithmics/GPT_ALL/blob/2ad8d7df177274104bf70a302b240a2f49b283da/utils/openai_model_tools.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4208,
    "stars": 37
  },
  {
    "full_name": "LuminiteTime/Ragnar",
    "name": "Ragnar",
    "description": null,
    "html_url": [
      "https://github.com/LuminiteTime/Ragnar/blob/35b46cf2f922faf196e518f65c558caf4d9e2c7b/backend/apps/rag/utils.py",
      "https://github.com/LuminiteTime/Ragnar/blob/35b46cf2f922faf196e518f65c558caf4d9e2c7b/backend/apps/openai/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 77506,
    "stars": 0
  },
  {
    "full_name": "WHU-ZQH/ChatGPT-vs.-BERT",
    "name": "ChatGPT-vs.-BERT",
    "description": "🎁[ChatGPT4NLU] A Comparative  Study on ChatGPT and Fine-tuned BERT",
    "html_url": [
      "https://github.com/WHU-ZQH/ChatGPT-vs.-BERT/blob/e1afaccf2aef83aee8622fd5b999d4aa243a1e97/code/parallel_eval.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1257,
    "stars": 195
  },
  {
    "full_name": "lss233/chatgpt-mirai-qq-bot",
    "name": "chatgpt-mirai-qq-bot",
    "description": "🚀 一键部署！真正的 AI 聊天机器人！支持ChatGPT、文心一言、讯飞星火、Bing、Bard、ChatGLM、POE，多账号，人设调教，虚拟女仆、图片渲染、语音发送 | 支持 QQ、Telegram、Discord、微信 等平台",
    "html_url": [
      "https://github.com/lss233/chatgpt-mirai-qq-bot/blob/0aa5b690234e6018aebdbd2af162c73a3b049cc3/adapter/chatgpt/api.py",
      "https://github.com/lss233/chatgpt-mirai-qq-bot/blob/0aa5b690234e6018aebdbd2af162c73a3b049cc3/manager/bot.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 24455,
    "stars": 15452
  },
  {
    "full_name": "johndotpub/DiscordianAI",
    "name": "DiscordianAI",
    "description": "A ChatGPT based Discord bot that uses GPT models to provide chat-based interactions with users in Discord channels and via DMs. Supports OpenAI and Perplexity API backends!",
    "html_url": [
      "https://github.com/johndotpub/DiscordianAI/blob/64a0c6dd227d6e6116835a1d85b711f2a89a7a71/bot.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 760,
    "stars": 18
  },
  {
    "full_name": "fqx/srt-translator",
    "name": "srt-translator",
    "description": "This Python program translates subtitle files (SRT format) from one language to another using OpenAIs language model. It includes features such as movie information retrieval, context-aware translation, and progress tracking.",
    "html_url": [
      "https://github.com/fqx/srt-translator/blob/13cb99cb7c865558a2f0e9434b1685cbaf2b8751/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 313,
    "stars": 0
  },
  {
    "full_name": "Bklieger/ProxyGPT",
    "name": "ProxyGPT",
    "description": "Lightweight OpenAI wrapper using FastAPI. Add rate limits to OpenAI usage, optionally log and store all API calls, and share regulated OpenAI API access without providing your secret key. Comes with additional modules to log and graph API results.",
    "html_url": [
      "https://github.com/Bklieger/ProxyGPT/blob/bd962e1aa43d551466f5fba2dbd34628f74a0649/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 566,
    "stars": 13
  },
  {
    "full_name": "ergonomech/Art-Style-Fusion-Prompt-Enginner",
    "name": "Art-Style-Fusion-Prompt-Enginner",
    "description": "Art Style Fusion Prompt Engineering is a Gradio app that blends art styles, descriptions, and artist recommendations into prompts for T5 text encoders (Tested Heavily with Flux)",
    "html_url": [
      "https://github.com/ergonomech/Art-Style-Fusion-Prompt-Enginner/blob/86865d23af5f608d4da0da7a22cc05772db87fec/gradio-app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 407,
    "stars": 0
  },
  {
    "full_name": "h1ddenpr0cess20/infinigpt-irc",
    "name": "infinigpt-irc",
    "description": "An OpenAI GPT chatbot for IRC which can assume any personality imaginable",
    "html_url": [
      "https://github.com/h1ddenpr0cess20/infinigpt-irc/blob/1947efcb8fe497cc4e7b14f8a47c1e7bf1d69a98/infinigpt.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 530,
    "stars": 6
  },
  {
    "full_name": "DataManagementLab/llmeval-tada24",
    "name": "llmeval-tada24",
    "description": "LLMs for Data Engineering on Enterprise Data",
    "html_url": [
      "https://github.com/DataManagementLab/llmeval-tada24/blob/49ef6b26df1e693f3b3091a0295608549f46630e/lib/openai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3438,
    "stars": 0
  },
  {
    "full_name": "fit-alessandro-berti/pm-llm-benchmark",
    "name": "pm-llm-benchmark",
    "description": "PM LLM Benchmark",
    "html_url": [
      "https://github.com/fit-alessandro-berti/pm-llm-benchmark/blob/00fb9e6396b5a897b87d2840135a762abee95fe6/common.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 905172,
    "stars": 11
  },
  {
    "full_name": "AtillaYasar/AI_powered-writing-tool",
    "name": "AI_powered-writing-tool",
    "description": "Tkinter app that uses OpenAI's ChatGPT (3.5) and embeddings endpoint to help with writing text.",
    "html_url": [
      "https://github.com/AtillaYasar/AI_powered-writing-tool/blob/0ac2532d0d77c7ba5210fd3a263840fc65b7e2f5/rewrite/chatgpt_stuff.py",
      "https://github.com/AtillaYasar/AI_powered-writing-tool/blob/0ac2532d0d77c7ba5210fd3a263840fc65b7e2f5/chatgpt_stuff.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2653,
    "stars": 2
  },
  {
    "full_name": "kianwoon/microsoft_autogen",
    "name": "microsoft_autogen",
    "description": "to leverage on generative Ai to create proxy of different roles for research or discussion ",
    "html_url": [
      "https://github.com/kianwoon/microsoft_autogen/blob/09c9dbe944e9a353e6666df96ebb5e2ae79f6817/autogen/oai/openai_utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 8161,
    "stars": 0
  },
  {
    "full_name": "clarence1979/TelloDroneEduTech2024",
    "name": "TelloDroneEduTech2024",
    "description": "This repository contains the code to control the Tello Drone using voice and Google Gemini",
    "html_url": [
      "https://github.com/clarence1979/TelloDroneEduTech2024/blob/cca454f738abeb927de0dc14948f54aa4058a88c/samplestudentcode_image_recognition.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1379,
    "stars": 0
  },
  {
    "full_name": "trezero/autogen-local-llm",
    "name": "autogen-local-llm",
    "description": "Sample repo using AutoGen with a local LLM",
    "html_url": [
      "https://github.com/trezero/autogen-local-llm/blob/64c8efdb0d6aa143c00547bac51be52b12a9ec9b/autogen/oai/openai_utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 8194,
    "stars": 1
  },
  {
    "full_name": "TanGentleman/Augmenta",
    "name": "Augmenta",
    "description": "Automate RAG-powered workflows",
    "html_url": [
      "https://github.com/TanGentleman/Augmenta/blob/f3fa97974efcd608a5913930e1043ec8c1ddb894/src/augmenta/models/models.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 7118,
    "stars": 1
  },
  {
    "full_name": "bmd1905/EasyLLMOps",
    "name": "EasyLLMOps",
    "description": "To simplify and streamline LLM operations, empowering developers and organizations to harness the full potential of large language models with ease.",
    "html_url": [
      "https://github.com/bmd1905/EasyLLMOps/blob/944436a70f1482be1edca4510cf7a941db8409c6/open-webui/backend/apps/openai/main.py",
      "https://github.com/bmd1905/EasyLLMOps/blob/944436a70f1482be1edca4510cf7a941db8409c6/open-webui/backend/config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 220585,
    "stars": 120
  },
  {
    "full_name": "jam-cc/MMAD",
    "name": "MMAD",
    "description": "The Codes and Data of The First-Ever Comprehensive Benchmark for Multimodal Large Language Models in Industrial Anomaly Detection",
    "html_url": [
      "https://github.com/jam-cc/MMAD/blob/7fb005e833943952f9401d3103ebf654dc0535b4/evaluation/examples/GPT4/gpt4o.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 779592,
    "stars": 131
  },
  {
    "full_name": "slurm-lab-usc/GPT-fabric-folding",
    "name": "GPT-fabric-folding",
    "description": "Public repository of GPT-fabric for cloth folding",
    "html_url": [
      "https://github.com/slurm-lab-usc/GPT-fabric-folding/blob/102f4cec4fa7e2b4e3601c9ae3e6db982340a70d/utils/gpt_utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 276326,
    "stars": 0
  },
  {
    "full_name": "gadsdencode/litellm",
    "name": "litellm",
    "description": null,
    "html_url": [
      "https://github.com/gadsdencode/litellm/blob/31c08c8642a851f9cd3233e69ed1c061b4a1bb57/litellm/llms/azure.py",
      "https://github.com/gadsdencode/litellm/blob/31c08c8642a851f9cd3233e69ed1c061b4a1bb57/litellm/llms/openai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 93599,
    "stars": 0
  },
  {
    "full_name": "verbal-ai/client",
    "name": "client",
    "description": "An open-source Alexa alternative which uses LLM and OpenAI RealTime APIs in the background.",
    "html_url": [
      "https://github.com/verbal-ai/client/blob/e330ad2260475e544e4497ccd096080a95857428/src/realtime_api_async_python/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4316,
    "stars": 1
  },
  {
    "full_name": "brunorreiss/chat-llm",
    "name": "chat-llm",
    "description": null,
    "html_url": [
      "https://github.com/brunorreiss/chat-llm/blob/a340d293a55901a4349051ead43a335b15669153/backend/apps/openai/main.py",
      "https://github.com/brunorreiss/chat-llm/blob/a340d293a55901a4349051ead43a335b15669153/backend/config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 96719,
    "stars": 0
  },
  {
    "full_name": "PineappleCuteCute/LLMOps",
    "name": "LLMOps",
    "description": null,
    "html_url": [
      "https://github.com/PineappleCuteCute/LLMOps/blob/8c8640c6ddc882a847a8799a5c58d7144a8a830e/open-webui/backend/apps/openai/main.py",
      "https://github.com/PineappleCuteCute/LLMOps/blob/8c8640c6ddc882a847a8799a5c58d7144a8a830e/open-webui/backend/config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 220268,
    "stars": 1
  },
  {
    "full_name": "terraprompt/fragaria",
    "name": "fragaria",
    "description": "More compute and less training. Lets reason with CoT & RL!",
    "html_url": [
      "https://github.com/terraprompt/fragaria/blob/888acbae8f27f0af5250cc56026acdfb8d6de360/fargaria/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1837,
    "stars": 18
  },
  {
    "full_name": "harry0703/MoneyPrinterTurbo",
    "name": "MoneyPrinterTurbo",
    "description": "利用AI大模型，一键生成高清短视频 Generate short videos with one click using AI LLM.",
    "html_url": [
      "https://github.com/harry0703/MoneyPrinterTurbo/blob/ee0d2371d55bf18524fd0fbebdaaf7b4db3fdd4d/app/services/llm.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 5898,
    "stars": 36448
  },
  {
    "full_name": "mhaowork/amblegpt",
    "name": "amblegpt",
    "description": "Video surveilance footage analyst powered by GPT-4o",
    "html_url": [
      "https://github.com/mhaowork/amblegpt/blob/65947af30fa5dae6ec683e8b80c57de5dc237ec2/mqtt_client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 450,
    "stars": 132
  },
  {
    "full_name": "bossjones/democracy-exe",
    "name": "democracy-exe",
    "description": "democracy_exe is an advanced, agentic Python application leveraging LangChain and LangGraph",
    "html_url": [
      "https://github.com/bossjones/democracy-exe/blob/8bdf2f22f314a32f6e05c4394d44e6f656cded33/tests/test_aio_gallery_dl.py",
      "https://github.com/bossjones/democracy-exe/blob/8bdf2f22f314a32f6e05c4394d44e6f656cded33/tests/conftest.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 653080,
    "stars": 0
  },
  {
    "full_name": "javier-antich/llm-nok-benchmark",
    "name": "llm-nok-benchmark",
    "description": "Network Operational Knowledge (NOK) benchmarking for LLMs.",
    "html_url": [
      "https://github.com/javier-antich/llm-nok-benchmark/blob/7d7d59eae2d2cc993f203a0320b7c63608f703b2/nok_benchmark.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 7953,
    "stars": 6
  },
  {
    "full_name": "hasakiXie123/Human-Simulacra",
    "name": "Human-Simulacra",
    "description": "This is the official repository for paper: \"Human Simulacra: Benchmarking the Personification of Large Language Models\"",
    "html_url": [
      "https://github.com/hasakiXie123/Human-Simulacra/blob/42d8be0756244f515932b8e62b819d419a2ca31f/LLMP/opencompass/opencompass/models/openai_api.py",
      "https://github.com/hasakiXie123/Human-Simulacra/blob/42d8be0756244f515932b8e62b819d419a2ca31f/LLMP/opencompass/opencompass/models/LLMP/gpt.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 79550,
    "stars": 26
  },
  {
    "full_name": "maxisses/openshift-rag-testbench",
    "name": "openshift-rag-testbench",
    "description": null,
    "html_url": [
      "https://github.com/maxisses/openshift-rag-testbench/blob/addb74da502daef3036e17a4f6536521ac557328/streamlit/rag-bot.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2502,
    "stars": 7
  },
  {
    "full_name": "Riddlerjoke/AI-Education-Suite",
    "name": "AI-Education-Suite",
    "description": "Repository pour Managia, un projet de diplôme en alternance avec la Chaire Managia et Polaria, validant le titre RNCP 37827. Managia est une application web interactive dédiée à la formation en IA, centrée sur le prompt engineering et l'IA générative. Inclut EDA, nettoyage de données, et modules ML.",
    "html_url": [
      "https://github.com/Riddlerjoke/AI-Education-Suite/blob/fa6c7739abd328e1536ab789de81730ebaf45a1d/fastApiProject/app/crud/prompt_crud.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "art-from-the-machine/Mantella",
    "name": "Mantella",
    "description": "Mantella is a Skyrim and Fallout 4 mod which allows you to naturally speak to NPCs using Whisper (speech-to-text), LLMs (text generation), and Piper / xVASynth / XTTS (text-to-speech).",
    "html_url": [
      "https://github.com/art-from-the-machine/Mantella/blob/6dfdf34a1bddf33a5bfbf9e580875fcb27c106bb/src/stt.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 41913,
    "stars": 272
  },
  {
    "full_name": "onlybooks/llm",
    "name": "llm",
    "description": "LLM을 활용한 실전 AI 애플리케이션 개발",
    "html_url": [
      "https://github.com/onlybooks/llm/blob/9524d5d4ee21530c86e5a2e86a1890891f5021bb/06%E1%84%8C%E1%85%A1%E1%86%BC/api_request_parallel_processor.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2719,
    "stars": 164
  },
  {
    "full_name": "Hansimov/GPT-Paper",
    "name": "GPT-Paper",
    "description": "Enhance paper search, reading, writing and review with the assistance of GPT.",
    "html_url": [
      "https://github.com/Hansimov/GPT-Paper/blob/eccec7e468ffe4274a3a592d8595ceffa84f2247/agents/openai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 89624,
    "stars": 7
  },
  {
    "full_name": "Pseudo-Lab/pseudolab-study-ai-application-with-llm",
    "name": "pseudolab-study-ai-application-with-llm",
    "description": null,
    "html_url": [
      "https://github.com/Pseudo-Lab/pseudolab-study-ai-application-with-llm/blob/0a51978b3764785d5f75a2ddd5d0903c4e7d21c7/lecturenotes/chapter06/api_request_parallel_processor.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4867,
    "stars": 8
  },
  {
    "full_name": "KwanWooPark97/LLM-AI-BOOK",
    "name": "LLM-AI-BOOK",
    "description": null,
    "html_url": [
      "https://github.com/KwanWooPark97/LLM-AI-BOOK/blob/b0e97a6f46b75a903bc96f821f4e5aaf3a4765bc/chapter6/api_request_parallel_processor.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1548,
    "stars": 0
  },
  {
    "full_name": "JYKai/LLM-usage",
    "name": "LLM-usage",
    "description": null,
    "html_url": [
      "https://github.com/JYKai/LLM-usage/blob/40044e86d085b6dfc977218b6bfe9498f4e01d3d/006_train-sLLM/api_request_parallel_processor.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3582,
    "stars": 0
  },
  {
    "full_name": "open-webui/open-webui",
    "name": "open-webui",
    "description": "User-friendly AI Interface (Supports Ollama, OpenAI API, ...)",
    "html_url": [
      "https://github.com/open-webui/open-webui/blob/29a271959556743e6deb4d55a5a982983335d7ab/backend/open_webui/apps/retrieval/utils.py",
      "https://github.com/open-webui/open-webui/blob/29a271959556743e6deb4d55a5a982983335d7ab/backend/open_webui/apps/openai/main.py",
      "https://github.com/open-webui/open-webui/blob/29a271959556743e6deb4d55a5a982983335d7ab/backend/open_webui/config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 278140,
    "stars": 98542
  },
  {
    "full_name": "Preshit22/Nirmaan.ai--Voice-Driven-Website-Generation",
    "name": "Nirmaan.ai--Voice-Driven-Website-Generation",
    "description": "Finalist in the \"For India, From People of India\" Hackathon. Developed a solution enabling website creation via voice input in regional languages like Hindi, Gujarati, and Marathi. Used OpenAI's Whisper 1 for speech-to-text, GPT-4 for content, and DALL-E 3 & LICA APIs for images, enhancing digital inclusivity and accessibility.",
    "html_url": [
      "https://github.com/Preshit22/Nirmaan.ai--Voice-Driven-Website-Generation/blob/96f982dffbc47ff0e893aa5d9bb8c371a337790f/backend/lica.py",
      "https://github.com/Preshit22/Nirmaan.ai--Voice-Driven-Website-Generation/blob/96f982dffbc47ff0e893aa5d9bb8c371a337790f/backend/combine.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 9560,
    "stars": 0
  },
  {
    "full_name": "popshia/clink-llm",
    "name": "clink-llm",
    "description": "modify open-webui as c-link LLM.",
    "html_url": [
      "https://github.com/popshia/clink-llm/blob/7e8b4d46b5889e73ca376e8f06e99d556c3f10c8/backend/open_webui/apps/retrieval/utils.py",
      "https://github.com/popshia/clink-llm/blob/7e8b4d46b5889e73ca376e8f06e99d556c3f10c8/backend/open_webui/apps/openai/main.py",
      "https://github.com/popshia/clink-llm/blob/7e8b4d46b5889e73ca376e8f06e99d556c3f10c8/backend/open_webui/config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 93191,
    "stars": 0
  },
  {
    "full_name": "Jatin-06/Ollama-gpt",
    "name": "Ollama-gpt",
    "description": null,
    "html_url": [
      "https://github.com/Jatin-06/Ollama-gpt/blob/af1c4db955239cbf8cd0dc13082708320dc9a49c/backend/open_webui/apps/retrieval/utils.py",
      "https://github.com/Jatin-06/Ollama-gpt/blob/af1c4db955239cbf8cd0dc13082708320dc9a49c/backend/open_webui/apps/openai/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 136758,
    "stars": 1
  },
  {
    "full_name": "YantongDU/HQ-LLMRec",
    "name": "HQ-LLMRec",
    "description": "The code of the paper: “High-Quality Data Augmentation with Large Language Models for User Cold-Start Recommendations”",
    "html_url": [
      "https://github.com/YantongDU/HQ-LLMRec/blob/dd0f02d4a8791f0c2932705abd174577d1f6a4a8/llm_ui_aug.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 10322,
    "stars": 0
  },
  {
    "full_name": "bigai-ai/civrealm-llm-baseline",
    "name": "civrealm-llm-baseline",
    "description": "Language-based Baseline agents (BaseLang, Mastaba) for CivRealm.",
    "html_url": [
      "https://github.com/bigai-ai/civrealm-llm-baseline/blob/c564e88b243f7e7cd1cff21e546d806aa6f6e79c/agents/civ_autogpt/GPTAgent.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2244,
    "stars": 5
  },
  {
    "full_name": "celialychee/LLM_repo",
    "name": "LLM_repo",
    "description": null,
    "html_url": [
      "https://github.com/celialychee/LLM_repo/blob/2bf5f2892c2447553292d676c09ac419050f85f8/lagent/lagent/llms/openai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 7342,
    "stars": 4
  },
  {
    "full_name": "KickerMix/KotobulkaGPT-Bot",
    "name": "KotobulkaGPT-Bot",
    "description": "A simple telegram bot ntegrated with OpenAI's GPT-4o-mini, offering user role management, image processing, and authentication via a secret word. The bot tracks message history and enforces a limit on image requests per hour.",
    "html_url": [
      "https://github.com/KickerMix/KotobulkaGPT-Bot/blob/692f19aba7eba72f1f7bc555c38fb66da8aa8a4f/KotobulkaGPT_TG/KotobulkaGPT_TG.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 375,
    "stars": 1
  },
  {
    "full_name": "jorcleme/spanning-content-tree",
    "name": "spanning-content-tree",
    "description": "Spanning-Content-Tree leveraging Open WebUI v0.3.10. ",
    "html_url": [
      "https://github.com/jorcleme/spanning-content-tree/blob/7dc82f40d28069295116e79ee7179b12ee12e572/backend/apps/rag/utils.py",
      "https://github.com/jorcleme/spanning-content-tree/blob/7dc82f40d28069295116e79ee7179b12ee12e572/backend/apps/openai/main.py",
      "https://github.com/jorcleme/spanning-content-tree/blob/7dc82f40d28069295116e79ee7179b12ee12e572/backend/config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 345432,
    "stars": 0
  },
  {
    "full_name": "bossjones/prompt-library",
    "name": "prompt-library",
    "description": "A collection of prompts, system prompts and LLM instructions by bossjones",
    "html_url": [
      "https://github.com/bossjones/prompt-library/blob/c024e34704335235011784874b875cb7924f77e6/tests/conftest.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 18313,
    "stars": 4
  },
  {
    "full_name": "batubiber/local_gpt_rag",
    "name": "local_gpt_rag",
    "description": "Offline LLM with RAG",
    "html_url": [
      "https://github.com/batubiber/local_gpt_rag/blob/881ff65bbfc2fa4b0f346e23dc9fdd08f44fbc66/private_gpt/settings/settings.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 6922,
    "stars": 0
  },
  {
    "full_name": "leehanchung/lora-instruct",
    "name": "lora-instruct",
    "description": "Finetune Falcon, LLaMA, MPT, and RedPajama on consumer hardware using PEFT LoRA",
    "html_url": [
      "https://github.com/leehanchung/lora-instruct/blob/faa169628d6163538f931a77278a0029d947ad38/inference/bench.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 782181,
    "stars": 103
  },
  {
    "full_name": "SE6320-Languagers/FinanceAI",
    "name": "FinanceAI",
    "description": "Let's learn to finance with our friend LLM",
    "html_url": [
      "https://github.com/SE6320-Languagers/FinanceAI/blob/394b4e13b63e8ee29d73023b6f19f90ef6034bb1/backend/open_webui/apps/openai/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 198902,
    "stars": 0
  },
  {
    "full_name": "imagination-research/EEP",
    "name": "EEP",
    "description": "Efficient Expert Pruning for Sparse Mixture-of-Experts Language Models: Enhancing Performance and Reducing Inference Costs",
    "html_url": [
      "https://github.com/imagination-research/EEP/blob/27f5fac3e335b3de2cde69d4e14b8d5ca24931e1/opencompass/models/openai_api.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1501021,
    "stars": 18
  },
  {
    "full_name": "ErrorNoInternet/ChatGPT-Frontend",
    "name": "ChatGPT-Frontend",
    "description": "A very simple HTML + CSS frontend for ChatGPT",
    "html_url": [
      "https://github.com/ErrorNoInternet/ChatGPT-Frontend/blob/fa57de1734f696e6f942ac864563b75bfa297d06/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 327,
    "stars": 5
  },
  {
    "full_name": "Byaidu/PDFMathTranslate",
    "name": "PDFMathTranslate",
    "description": "PDF scientific paper translation with preserved formats - 基于 AI 完整保留排版的 PDF 文档全文双语翻译，支持 Google/DeepL/Ollama/OpenAI 等服务，提供 CLI/GUI/Docker",
    "html_url": [
      "https://github.com/Byaidu/PDFMathTranslate/blob/e4f7f2b8fbb0aff47d8c3110ef708c00b92f0e45/pdf2zh/translator.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 7174,
    "stars": 24638
  },
  {
    "full_name": "aTrapDeer/Helper-GPT",
    "name": "Helper-GPT",
    "description": "Leveraging AI API systems to create a 'human-like' AI assistant with computer vision & access.",
    "html_url": [
      "https://github.com/aTrapDeer/Helper-GPT/blob/475185d9594ea09ae4f07871944171487c1da8c3/AgentFunctions/webHelp.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 953,
    "stars": 0
  },
  {
    "full_name": "metaswang/bao",
    "name": "bao",
    "description": "Chat Bot with LLM and Fact Reference. RAG(Retrieval Augmented Generation) and LangChain backed",
    "html_url": [
      "https://github.com/metaswang/bao/blob/00ae319d562da662bb18ed7b652ffa4869c0f4ff/bao/settings/settings.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2554,
    "stars": 129
  },
  {
    "full_name": "sneezeparty/soupy",
    "name": "soupy",
    "description": "Soupy is a Discord bot that uses Flux, OpenAI, DALL-E 3, and Solr.  It chats and functions as an image generator for your users.",
    "html_url": [
      "https://github.com/sneezeparty/soupy/blob/63fd6a1da885320ea60b97da2122d205fb73a628/soupy-classic.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 7007,
    "stars": 32
  },
  {
    "full_name": "kxkw/chatgpt-telegram-bot",
    "name": "chatgpt-telegram-bot",
    "description": "The most lightweight and easy to use ChatGPT and DALLE-3 Telegram bot with token balances, user management and admin privileges. Payments aren't coming.",
    "html_url": [
      "https://github.com/kxkw/chatgpt-telegram-bot/blob/91a123d80d8164ef26f2b9a5477e471a2bd6aa03/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1401,
    "stars": 9
  },
  {
    "full_name": "yuaneg/graph-rag-test-web",
    "name": "graph-rag-test-web",
    "description": null,
    "html_url": [
      "https://github.com/yuaneg/graph-rag-test-web/blob/0cacd00543fd0447657d52f6dfe4970a15d725d0/common/main-cn_origin.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1800,
    "stars": 0
  },
  {
    "full_name": "RuiyuanLyu/CorporaGen",
    "name": "CorporaGen",
    "description": "Building Language Annotations for Embodied Perception",
    "html_url": [
      "https://github.com/RuiyuanLyu/CorporaGen/blob/82c524961988913a531203438ff871682534fd65/utils/openai_api.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 14192,
    "stars": 2
  },
  {
    "full_name": "pfnet-research/japanese-lm-fin-harness",
    "name": "japanese-lm-fin-harness",
    "description": "Japanese Language Model Financial Evaluation Harness",
    "html_url": [
      "https://github.com/pfnet-research/japanese-lm-fin-harness/blob/75914b87bb71d470567d7484766e7d3a1285d9d6/api_models.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 782978,
    "stars": 74
  },
  {
    "full_name": "chuanqixu/anki-quick-ai",
    "name": "anki-quick-ai",
    "description": "Quick interaction with OpenAI in Anki.",
    "html_url": [
      "https://github.com/chuanqixu/anki-quick-ai/blob/9f2627dfa5385451d2b54bbe1ba17375aff04d14/add-on/lib/openai/_client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 92413,
    "stars": 42
  },
  {
    "full_name": "AaronCWacker/ChatGPTVoiceSemanticSearchDocuments",
    "name": "ChatGPTVoiceSemanticSearchDocuments",
    "description": "ChatGPT AI Pipeline featuring voice input with Whisper, vector database embeddings with FAISS, and ChatGPT Document AI",
    "html_url": [
      "https://github.com/AaronCWacker/ChatGPTVoiceSemanticSearchDocuments/blob/f9e4d4839ec51318a634eb3525e708d05c2ac5ef/app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 898,
    "stars": 1
  },
  {
    "full_name": "gazz-w/GPT",
    "name": "GPT",
    "description": "Chatbot developed in python with the openAI API",
    "html_url": [
      "https://github.com/gazz-w/GPT/blob/aad8325118ed8cc332aded53704acda8f0fcacc0/chatbot/Lib/site-packages/openai/_client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 869115,
    "stars": 0
  },
  {
    "full_name": "asrulsibaoel/ollama-open-webui",
    "name": "ollama-open-webui",
    "description": "Ollama with open-webui",
    "html_url": [
      "https://github.com/asrulsibaoel/ollama-open-webui/blob/8c5fad12f71900fa8a3c81ed241a6c4a7792fe89/backend/apps/openai/main.py",
      "https://github.com/asrulsibaoel/ollama-open-webui/blob/8c5fad12f71900fa8a3c81ed241a6c4a7792fe89/backend/config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 94375,
    "stars": 0
  },
  {
    "full_name": "win4r/GraphRAG4OpenWebUI",
    "name": "GraphRAG4OpenWebUI",
    "description": "GraphRAG4OpenWebUI integrates Microsoft's GraphRAG technology into Open WebUI, providing a versatile information retrieval API. It combines local, global, and web searches for advanced Q&A systems and search engines. This tool simplifies graph-based retrieval integration in open web environments.",
    "html_url": [
      "https://github.com/win4r/GraphRAG4OpenWebUI/blob/76f12227b389efcad639f75a2ad147ad36f692e8/main-cn.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1591,
    "stars": 518
  },
  {
    "full_name": "globis-org/openai-realtime-voice-chat-on-streamlit",
    "name": "openai-realtime-voice-chat-on-streamlit",
    "description": "This application enables real-time voice chat using Streamlit and OpenAI's Realtime API, featuring streamlit-webrtc for audio streaming without relying on the server's microphone.",
    "html_url": [
      "https://github.com/globis-org/openai-realtime-voice-chat-on-streamlit/blob/cec836800ae90fe2b197e536b9312c06076fb557/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 436,
    "stars": 5
  },
  {
    "full_name": "skywind3000/vim-gpt-commit",
    "name": "vim-gpt-commit",
    "description": ":rocket: Generate git commit message using ChatGPT and Ollama !!",
    "html_url": [
      "https://github.com/skywind3000/vim-gpt-commit/blob/61aad8d92f3b16c148659a86b42920ce2d365161/bin/gptcommit.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 842,
    "stars": 48
  },
  {
    "full_name": "ShijieZhou-UCLA/DreamScene360",
    "name": "DreamScene360",
    "description": "[ECCV 2024] DreamScene360: Unconstrained Text-to-3D Scene Generation with Panoramic Gaussian Splatting",
    "html_url": [
      "https://github.com/ShijieZhou-UCLA/DreamScene360/blob/d36b8c387247affc6aa095c6d0c811a6ffee2fa9/text2pano_self_refine_pipeline.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 275214,
    "stars": 98
  },
  {
    "full_name": "wanetty/burp-chat-plugin.py",
    "name": "burp-chat-plugin.py",
    "description": "This is a Python script for a Burp Suite extension that adds a new tab to the Burp Suite interface. The new tab includes a table with information about the HTTP requests and responses captured by Burp Suite, and a text area for the user to interact with an OpenAI chatbot.",
    "html_url": [
      "https://github.com/wanetty/burp-chat-plugin.py/blob/37dea8669328e0639b4bb86447e6f4f768dd3dc0/burp-chat-plugin.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 357,
    "stars": 2
  },
  {
    "full_name": "pawan-kumar-108/Personal-AI-Asssistant",
    "name": "Personal-AI-Asssistant",
    "description": "Your personal AI assistant powered by OpenAI API that help you in solving your problems by remembering the conversation. It can anwer the question by analyzing the previous messages as well.",
    "html_url": [
      "https://github.com/pawan-kumar-108/Personal-AI-Asssistant/blob/19bc84d3b02e011a6e04fb73daf0abfee6af376c/venv/Lib/site-packages/openai/_client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1862173,
    "stars": 0
  },
  {
    "full_name": "Dibyendu-13/Fine-Tune-LLM",
    "name": "Fine-Tune-LLM",
    "description": null,
    "html_url": [
      "https://github.com/Dibyendu-13/Fine-Tune-LLM/blob/f72e85ad502a507986948f9885900c85c6313bad/venv/Lib/site-packages/openai/_client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1995033,
    "stars": 0
  },
  {
    "full_name": "antonellanieto/api-openai-audiotranscribe",
    "name": "api-openai-audiotranscribe",
    "description": "App que genera texto a partir de un audio y luego te genera una respuesta en formato texto a ese audio. Realizado con la API de OpenAI.",
    "html_url": [
      "https://github.com/antonellanieto/api-openai-audiotranscribe/blob/674cbf5e89073b7a792f59429bf30df47f8fc98c/myenv/Lib/site-packages/openai/_client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 295888,
    "stars": 0
  },
  {
    "full_name": "aflatland/glow.ai",
    "name": "glow.ai",
    "description": "GPT-Powered Language Learning Website.",
    "html_url": [
      "https://github.com/aflatland/glow.ai/blob/7e8951d584acf129cccc697377b05fd24f283548/backend/venv-3.11/Lib/site-packages/openai/_client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 6024734,
    "stars": 1
  },
  {
    "full_name": "Dibyendu-13/FineTune-LLM",
    "name": "FineTune-LLM",
    "description": null,
    "html_url": [
      "https://github.com/Dibyendu-13/FineTune-LLM/blob/103dd642e3a2d17f3e5a98b0b6e1cc563f5b6691/venv/Lib/site-packages/openai/_client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1995030,
    "stars": 0
  },
  {
    "full_name": "wangze83/llmkg_learning",
    "name": "llmkg_learning",
    "description": "Learning Assistant",
    "html_url": [
      "https://github.com/wangze83/llmkg_learning/blob/1d7bb79a89159cec1d6f709f1ba33683776e8cee/web/app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1191,
    "stars": 1
  },
  {
    "full_name": "Osshaikh/chatgpt-RAG-App",
    "name": "chatgpt-RAG-App",
    "description": null,
    "html_url": [
      "https://github.com/Osshaikh/chatgpt-RAG-App/blob/45febff87fc8782f865b7f081d3e28557290987c/.venv/Lib/site-packages/openai/_client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1978670,
    "stars": 0
  },
  {
    "full_name": "BelalAbulabn/Evaluating-LLMs-The-Quantization-Factor",
    "name": "Evaluating-LLMs-The-Quantization-Factor",
    "description": "This repository is dedicated to exploring various methods of quantizing Large Language Models (LLMs) to boost their efficiency in STEM applications, particularly in industrial automation contexts. By applying different quantization techniques, the research aims to understand how these methods impact the accuracy and size of LLMs.",
    "html_url": [
      "https://github.com/BelalAbulabn/Evaluating-LLMs-The-Quantization-Factor/blob/9c19c2381cfe5511c750f24409a10d204c99d374/eva/openai-env/Lib/site-packages/openai/_client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 319729,
    "stars": 2
  },
  {
    "full_name": "TangYuan96/MiniGPT-3D",
    "name": "MiniGPT-3D",
    "description": "[MM 2024] [Need only a 3090] MiniGPT-3D: Efficiently Aligning 3D Point Clouds with  Large Language Models using 2D Priors",
    "html_url": [
      "https://github.com/TangYuan96/MiniGPT-3D/blob/609082ef1f095a6d3bf62cfe1cddcf3807486b07/minigpt4/common/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 11746,
    "stars": 101
  },
  {
    "full_name": "Baro007/customgpt",
    "name": "customgpt",
    "description": "AI-powered voice assistant using OpenAI's GPT-4o, Whisper, Anthropic's Claude 3.5 and ElevenLabs for natural language processing, speech recognition, and text-to-speech synthesis. Features real-time conversation, screen analysis, and customizable voice output.",
    "html_url": [
      "https://github.com/Baro007/customgpt/blob/470919e1bd4f5cdb6ff671e5c98b5f23738ca954/customgpt%20copy.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 756847,
    "stars": 7
  },
  {
    "full_name": "ml-robotics-era/conceptfusion-embeddings",
    "name": "conceptfusion-embeddings",
    "description": "A new way to create embeddings for code search, inspired by the ConceptFusion paper.",
    "html_url": [
      "https://github.com/ml-robotics-era/conceptfusion-embeddings/blob/a2d39a79480d07e5415c703499bb565cdb28965a/examples/api_request_parallel_processor.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 86478,
    "stars": 0
  },
  {
    "full_name": "soanseng/vocbuilderAI",
    "name": "vocbuilderAI",
    "description": "VocBuilderAI is an Anki add-on designed to enhance vocabulary learning by leveraging OpenAI's GPT-3.5 Turbo and Whisper APIs. It allows users to generate detailed notes for new vocabulary words, complete with definitions, pronunciations, etymologies, synonyms, antonyms, and real-world examples.",
    "html_url": [
      "https://github.com/soanseng/vocbuilderAI/blob/f28f10128e039d22318cc0f3ab4756dafe4aaa5d/__init__.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 515,
    "stars": 2
  },
  {
    "full_name": "edchen1240/OpenAI-API-Python-Quick-Start",
    "name": "OpenAI-API-Python-Quick-Start",
    "description": "Welcome to the OpenAI-API-Python-Quick-Start, tailored for those new to coding or looking to save time on their initial foray.",
    "html_url": [
      "https://github.com/edchen1240/OpenAI-API-Python-Quick-Start/blob/c1fddbd81a66f7cdb7fe5dad133e2968706fc4b0/OpenAI_API_0_module.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 421,
    "stars": 1
  },
  {
    "full_name": "LEBaz2211/GlorifiedControlFApp",
    "name": "GlorifiedControlFApp",
    "description": "PDF reader app that uses new AI embedding techniques to enhance crtl+F capabilities",
    "html_url": [
      "https://github.com/LEBaz2211/GlorifiedControlFApp/blob/aa84c8ea24d6969e5b36b793f1ba2c2e7244956f/backend/venv/Lib/site-packages/openai/_client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 752610,
    "stars": 0
  },
  {
    "full_name": "SaadAttieh/agent_lite",
    "name": "agent_lite",
    "description": "A minified version of the Langchain library, designed to be small enough to easily read and edit but still provide a type-safe interface to building Agents on top of LLMs.",
    "html_url": [
      "https://github.com/SaadAttieh/agent_lite/blob/514fdb3a2b5bb9db7d4ab9463f1d1fcdd8c39203/agent_lite/impl/llms/openai_llm.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2192,
    "stars": 3
  },
  {
    "full_name": "Mason-Fox/anki-deck-creator",
    "name": "anki-deck-creator",
    "description": "Anki Add on for PDF to Deck creation using OpenAI",
    "html_url": [
      "https://github.com/Mason-Fox/anki-deck-creator/blob/393a33be291e96a555fe0ba2bc341d1ab8bf9ad2/lib/openai/_client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 95174,
    "stars": 0
  },
  {
    "full_name": "Rong-Jet/SlideTex",
    "name": "SlideTex",
    "description": "Latex content auto-generated from pdf slides.",
    "html_url": [
      "https://github.com/Rong-Jet/SlideTex/blob/17ab4a0eadd04cfdaa3152fcc9f1d52ad3158ea8/NotesFromSlides_%20V1.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 553,
    "stars": 0
  },
  {
    "full_name": "haikerapples/NetworkPlugin",
    "name": "NetworkPlugin",
    "description": "一款支持GPT联网的chatgpt-on-wechat插件，使GPT的知识库不再局限于时效性，可以尽情网上冲浪",
    "html_url": [
      "https://github.com/haikerapples/NetworkPlugin/blob/e94e6f41595062ed4fe2c23fa50c986dbf4913e6/networkPlugin.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1014,
    "stars": 54
  },
  {
    "full_name": "ror0ror02/Multimodal-Interface-for-Automated-Gameplay-GPT4V-M.I.F.A.G.-",
    "name": "Multimodal-Interface-for-Automated-Gameplay-GPT4V-M.I.F.A.G.-",
    "description": "The GPT-4V project is a cutting-edge implementation of machine learning and natural language processing in the context of computer games. This innovative multimodal agent uses the latest advances in artificial intelligence to analyze visual information, make decisions, and execute strategic actions in a dynamic gaming environment.",
    "html_url": [
      "https://github.com/ror0ror02/Multimodal-Interface-for-Automated-Gameplay-GPT4V-M.I.F.A.G.-/blob/3c68abce9f9e9d3f904466909a1ae82b5fee678f/MIFAG.bot.new.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 410,
    "stars": 4
  },
  {
    "full_name": "gomate-community/TrustRAG",
    "name": "TrustRAG",
    "description": "TrustRAG：The RAG Framework within Reliable input,Trusted output",
    "html_url": [
      "https://github.com/gomate-community/TrustRAG/blob/1334c44a05a32ccc3fcd0eb9f1111eee05c65da6/trustrag/modules/generator/chat.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 846225,
    "stars": 937
  },
  {
    "full_name": "tmylla/HackMentor",
    "name": "HackMentor",
    "description": "The repository of paper \"HackMentor: Fine-Tuning Large Language Models for Cybersecurity\".",
    "html_url": [
      "https://github.com/tmylla/HackMentor/blob/2ea7eb892a09d244ed6595d1e6bd3ad9a12d4077/utils/api_parallel.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1023436,
    "stars": 121
  },
  {
    "full_name": "LyuLumos/Terminal-Agent-X",
    "name": "Terminal-Agent-X",
    "description": "A terminal agent powered by OpenAI/Claude/Gemini API",
    "html_url": [
      "https://github.com/LyuLumos/Terminal-Agent-X/blob/33e60d736cd75d8f0c2fde0996bc6cc7802e512a/terminal_agent_x/tax.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 586,
    "stars": 17
  },
  {
    "full_name": "dsba6010-llm-applications/MinuteMate",
    "name": "MinuteMate",
    "description": "MinuteMate is a set of applications to make meetings searchable using audio transcription, large language models (LLMs), and retrieval-augmented generation (RAG)",
    "html_url": [
      "https://github.com/dsba6010-llm-applications/MinuteMate/blob/f281f994394af6fc83433dcd989a44d106fb2197/Preprocessing/App/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2785,
    "stars": 4
  },
  {
    "full_name": "BenderV/autochat",
    "name": "autochat",
    "description": "The LLM library for the Agent era.",
    "html_url": [
      "https://github.com/BenderV/autochat/blob/c24f6929a1fec4140d07561f7cd1bc9abe9ab2f8/autochat/__init__.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 5548,
    "stars": 27
  },
  {
    "full_name": "Helyox/MirAI-Chatbot",
    "name": "MirAI-Chatbot",
    "description": "MirAI Chatbot is an intelligent virtual assistant powered by advanced AI models, based on the OpenAI API. ",
    "html_url": [
      "https://github.com/Helyox/MirAI-Chatbot/blob/2965b2ca44e84f39f14c89ef585f967fa6172567/venv/Lib/site-packages/openai/_client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 684447,
    "stars": 0
  },
  {
    "full_name": "Night3y3/Rag-Llama2",
    "name": "Rag-Llama2",
    "description": null,
    "html_url": [
      "https://github.com/Night3y3/Rag-Llama2/blob/d4e62a67e2c63a9e73ed729d651ea3992eb5aae4/.venv/Lib/site-packages/openai/_client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1444794,
    "stars": 0
  },
  {
    "full_name": "MustafaAkolawala/Enhanced-Eve",
    "name": "Enhanced-Eve",
    "description": "This is a LLM based chatbot offering functionalities like pdf, images summarization, general chatbot, and Youtube reccomendations and resources for various needs",
    "html_url": [
      "https://github.com/MustafaAkolawala/Enhanced-Eve/blob/5fcc818d4433219a01dec323f83948defcd258e9/venv/Lib/site-packages/openai/_client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2512166,
    "stars": 0
  },
  {
    "full_name": "rgu3st/auto_code_iteation_AI",
    "name": "auto_code_iteation_AI",
    "description": "Python code that uses AI (LLMs, specifically) to iteratively generate and/or iteratively fix C code.",
    "html_url": [
      "https://github.com/rgu3st/auto_code_iteation_AI/blob/ed10334d6fce964f0c31306fcdf0da9c231a2f43/IterativeC_InPython/Lib/site-packages/openai/_client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 247796,
    "stars": 0
  },
  {
    "full_name": "Zeeshanunique/Langchain-01",
    "name": "Langchain-01",
    "description": null,
    "html_url": [
      "https://github.com/Zeeshanunique/Langchain-01/blob/b095bc95a6d4f041bf8a80cd7339d59a3c5d9398/venv/Lib/site-packages/openai/_client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3096248,
    "stars": 1
  },
  {
    "full_name": "SachinSamuel01/rag-langchain-streamlit",
    "name": "rag-langchain-streamlit",
    "description": "This project is a web-based AI chatbot an implementation of the Retrieval-Augmented Generation (RAG) model, built using Streamlit and Langchain. It answers questions relevant to the data provided by the user. The chatbot utilizes OpenAI's GPT-4 model and accepts data in CSV format. Users can upload multiple CSV files, clear uploaded files, ask ques",
    "html_url": [
      "https://github.com/SachinSamuel01/rag-langchain-streamlit/blob/1cfa502a3708c3270ce37c33cb7d125cd1d33701/env/Lib/site-packages/openai/_client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1817790,
    "stars": 8
  },
  {
    "full_name": "czwiessler/sq-llm-docstring-gen-kt",
    "name": "sq-llm-docstring-gen-kt",
    "description": null,
    "html_url": [
      "https://github.com/czwiessler/sq-llm-docstring-gen-kt/blob/e5ecf74d0691ee0e561452505825d1d98947246f/downloaded_files/wzpan/AI.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3226043,
    "stars": 0
  },
  {
    "full_name": "junyuyang7/Construct_Sft_Data",
    "name": "Construct_Sft_Data",
    "description": "Aim to construct a framework to get synthesis data from LLM",
    "html_url": [
      "https://github.com/junyuyang7/Construct_Sft_Data/blob/0938d889b71a9e0c2a3756703ef31167f2cf1492/Server/config/model_config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 13677,
    "stars": 3
  },
  {
    "full_name": "linyqh/NarratoAI",
    "name": "NarratoAI",
    "description": "利用AI大模型，一键解说并剪辑视频； Using AI models to automatically provide commentary and edit videos with a single click.",
    "html_url": [
      "https://github.com/linyqh/NarratoAI/blob/fa3dd9c12abcab7861cb9255084e872a5d6aac16/app/utils/script_generator.py",
      "https://github.com/linyqh/NarratoAI/blob/da660244ce48e673ff8e6416d63672def1d1a3c0/app/test/test_qwen.py",
      "https://github.com/linyqh/NarratoAI/blob/da660244ce48e673ff8e6416d63672def1d1a3c0/app/utils/qwenvl_analyzer.py"
    ],
    "model": [
      "openai",
      "qwen"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 11563,
    "stars": 5483
  },
  {
    "full_name": "raymin0223/fast_robust_early_exit",
    "name": "fast_robust_early_exit",
    "description": "Fast and Robust Early-Exiting Framework for Autoregressive Language Models with Synchronized Parallel Decoding (EMNLP 2023 Long)",
    "html_url": [
      "https://github.com/raymin0223/fast_robust_early_exit/blob/3e503c5694bc05d83fe181e160a0bae4113025c4/gpt_eval/api_request_parallel_processor.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 7359,
    "stars": 60
  },
  {
    "full_name": "Neural-Dragon-AI/BabyDragon",
    "name": "BabyDragon",
    "description": "Little library for powerful chatbots",
    "html_url": [
      "https://github.com/Neural-Dragon-AI/BabyDragon/blob/2710a9fe0c493f0cedba370e9d625792890bd43e/babydragon/models/generators/PolarsGenerator.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 7611,
    "stars": 5
  },
  {
    "full_name": "Y-Sui/Table-meets-LLM",
    "name": "Table-meets-LLM",
    "description": "Welcome to the Table Meets LLM repository!",
    "html_url": [
      "https://github.com/Y-Sui/Table-meets-LLM/blob/c028ce62c3e6db640089200c1a98c88762bb5c5f/table_provider/table_provider/agents/call_llm/call_llm_parallel.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 45512,
    "stars": 36
  },
  {
    "full_name": "joanvelja/Confidently_Exiting",
    "name": "Confidently_Exiting",
    "description": "Optimizing Predictions: Vocabulary Reduction and Contrastive Decoding in LLMs. Work done as a reserch project for the MSc AI at the University of Amsterdam",
    "html_url": [
      "https://github.com/joanvelja/Confidently_Exiting/blob/159c4282840d246a1ec62a609385d60d24f762b1/src/gpt_eval/api_request_parallel_processor.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 204334,
    "stars": 0
  },
  {
    "full_name": "LoicSteve/LLM_Based_App",
    "name": "LLM_Based_App",
    "description": null,
    "html_url": [
      "https://github.com/LoicSteve/LLM_Based_App/blob/599956e275a9b2809055fe5db3755ec5a8f1fad9/LLM_App/Lib/site-packages/openai/_client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1835569,
    "stars": 1
  },
  {
    "full_name": "h2oai/h2o-LLM-eval",
    "name": "h2o-LLM-eval",
    "description": "Large-language Model Evaluation framework with Elo Leaderboard and A-B testing",
    "html_url": [
      "https://github.com/h2oai/h2o-LLM-eval/blob/373b824513c83c248cd949ef6cabab707b509348/src/api_request_parallel_processor.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 10843,
    "stars": 52
  },
  {
    "full_name": "KleinJonasUVT/synthetic_data",
    "name": "synthetic_data",
    "description": "Synthetic Data Generation for Choice-Based Conjoint Analysis using AI. This project leverages GPT-4o and advanced machine learning algorithms to create high-quality synthetic datasets, enabling robust market research and consumer preference studies without the need for extensive real-world data collection.",
    "html_url": [
      "https://github.com/KleinJonasUVT/synthetic_data/blob/8e525146a3544417ddca67439ec1f5d51f996002/screenshot.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2338,
    "stars": 0
  },
  {
    "full_name": "starmpcc/Asclepius",
    "name": "Asclepius",
    "description": "Official Codes for \"Publicly Shareable Clinical Large Language Model Built on Synthetic Clinical Notes\"",
    "html_url": [
      "https://github.com/starmpcc/Asclepius/blob/8e019fd2a05a3e5340bbc95785256d021e33e181/preprocessing/openai_parallel_request.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2098,
    "stars": 106
  },
  {
    "full_name": "Ak1yamaKiyoshi/fictadvisor-advisor",
    "name": "fictadvisor-advisor",
    "description": "Finetuning chatgpt to serve FICE DEV till the end of days! ",
    "html_url": [
      "https://github.com/Ak1yamaKiyoshi/fictadvisor-advisor/blob/185d75279aa7666644c7de71f3ebe43134d3a894/run.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "pseudotensor/open-strawberry",
    "name": "open-strawberry",
    "description": "Building open version of OpenAI o1 via reasoning traces (Groq, ollama, Anthropic, Gemini, OpenAI, Azure supported)  Demo: https://huggingface.co/spaces/pseudotensor/open-strawberry",
    "html_url": [
      "https://github.com/pseudotensor/open-strawberry/blob/0c003cc7aeec2dac8de514c465686568bbfe29ba/src/models.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1585,
    "stars": 180
  },
  {
    "full_name": "ruvnet/guardrail",
    "name": "guardrail",
    "description": "GuardRail: Advanced tool for data analysis and AI content generation using OpenAI GPT models. Features sentiment analysis, content classification, trend analysis, and tailored GPT model usage. Ideal for content moderation, customer support, and market research.",
    "html_url": [
      "https://github.com/ruvnet/guardrail/blob/67cc25b7c52acf69bcdea00b094962e06760efe5/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1022,
    "stars": 130
  },
  {
    "full_name": "wiskojo/overwhelm-llm-eval",
    "name": "overwhelm-llm-eval",
    "description": "Evaluate LLMs like GPT-4, GPT-3.5, and LLAMA-2-70b-chat on their ability to respond to an increasing number of system prompt constraints. Includes code, data, and results.",
    "html_url": [
      "https://github.com/wiskojo/overwhelm-llm-eval/blob/f2bd48d13feeec4b2ab220931c08c0f4c3080fe6/processor.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 38567,
    "stars": 5
  },
  {
    "full_name": "yclee0716/LLMOPT_data_generator",
    "name": "LLMOPT_data_generator",
    "description": "This is for ranking different optimization problems to different classes.",
    "html_url": [
      "https://github.com/yclee0716/LLMOPT_data_generator/blob/69d2a26878ecee6dd3b2b4381aa5713e7edca3cf/generate_5files.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 657,
    "stars": 0
  },
  {
    "full_name": "MLChain/MLChain",
    "name": "MLChain",
    "description": "MLChain is an open-source platform for rapid LLM app development, offering AI workflows, RAG pipelines, agent support, model management, and observability features to streamline the path from prototype to production.",
    "html_url": [
      "https://github.com/MLChain/MLChain/blob/06e68228aa469b8bf0a3a250f52e71e521d2df55/api/tests/integration_tests/model_runtime/openai/test_llm.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "jlcmoore/ValueConsistency",
    "name": "ValueConsistency",
    "description": "The repository for the paper, \"Are Large Language Models Consistent over Value-laden Questions?\"",
    "html_url": [
      "https://github.com/jlcmoore/ValueConsistency/blob/e088776a7c159a68d8916276264a882d55a21624/src/valueconsistency/query_models.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 26742,
    "stars": 1
  },
  {
    "full_name": "iphegde/sap-genai-integration",
    "name": "sap-genai-integration",
    "description": "End-to-end projects showcasing how to integrate SAP systems with Generative AI platforms like OpenAI and SAP Gen AI Hub. This repository includes connectors, API calls, and workflows to enable AI-based features like document analysis, chatbot integration, and intelligent process automation in SAP landscapes.",
    "html_url": [
      "https://github.com/iphegde/sap-genai-integration/blob/b73a1a3c98f1cc538aef69337c932edca49a3d81/MSCalendar-SAP-Timesheet-App/backend/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1170,
    "stars": 0
  },
  {
    "full_name": "x-CK-x/OpenAI-Captioner",
    "name": "OpenAI-Captioner",
    "description": "Uses GPT models from OpenAI to caption image data in single & batch configurations.",
    "html_url": [
      "https://github.com/x-CK-x/OpenAI-Captioner/blob/3d58be430a8d45a5b401d814da4c15b13d322b55/gpt-vlm-run.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 431,
    "stars": 0
  },
  {
    "full_name": "FlagOpen/FlagEmbedding",
    "name": "FlagEmbedding",
    "description": "Retrieval and Retrieval-augmented LLMs",
    "html_url": [
      "https://github.com/FlagOpen/FlagEmbedding/blob/aeafc7e4d4a9905a3d8468934f370686077694ec/research/Long_LLM/longllm_qlora/data_pipeline/_openai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 258516,
    "stars": 9900
  },
  {
    "full_name": "passionate11/easy_rag",
    "name": "easy_rag",
    "description": null,
    "html_url": [
      "https://github.com/passionate11/easy_rag/blob/0e8379957647938a2a584af593b57d5e9c8105ee/Long_LLM/longllm_qlora/data_pipeline/_openai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 102363,
    "stars": 2
  },
  {
    "full_name": "rebibabo/Commented_Flag_Embedding",
    "name": "Commented_Flag_Embedding",
    "description": "为flag_embedding添加注释和脚本",
    "html_url": [
      "https://github.com/rebibabo/Commented_Flag_Embedding/blob/0c202e6d9862743b798fb8315db2c2945c1d0045/research/Long_LLM/longllm_qlora/data_pipeline/_openai.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 160553,
    "stars": 0
  },
  {
    "full_name": "NREL/elm",
    "name": "elm",
    "description": "ELM is a collection of utilities to apply Large Language Models (LLMs) to energy research.",
    "html_url": [
      "https://github.com/NREL/elm/blob/459d330665d9e02137ee9bbaaa97b7e69e3650ed/elm/base.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 16243,
    "stars": 61
  },
  {
    "full_name": "mite51/LLMTaskGraph",
    "name": "LLMTaskGraph",
    "description": "LLM based task graph framework",
    "html_url": [
      "https://github.com/mite51/LLMTaskGraph/blob/92f07901002e415398b91b5448f8b4dd355dc76b/App/TaskNode_LLM.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3076,
    "stars": 0
  },
  {
    "full_name": "kubamika16/ebay-automation",
    "name": "ebay-automation",
    "description": "Real-time undervalued item detection using eBay API, OpenAI GPT for item analysis, and AWS Lambda automations with push notifications for immediate alerts.",
    "html_url": [
      "https://github.com/kubamika16/ebay-automation/blob/f647987f2219d2b6e43cf4745353d3eaadd5254b/package/openai/_client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 157261,
    "stars": 1
  },
  {
    "full_name": "zombozz/AutoTweeterAI",
    "name": "AutoTweeterAI",
    "description": "AutoTweeterAI is a Python-based tool that integrates Twitter with OpenAI's GPT-4 model to automate tweet generation and scheduling.",
    "html_url": [
      "https://github.com/zombozz/AutoTweeterAI/blob/b1a6d589fd4475f865f10e31259cc1b312254b0a/venv/Lib/site-packages/openai/_client.py",
      "https://github.com/zombozz/AutoTweeterAI/blob/b1a6d589fd4475f865f10e31259cc1b312254b0a/venv/Lib/site-packages/openai/_client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 357823,
    "stars": 7
  },
  {
    "full_name": "radicalromha/lcel-llm-application",
    "name": "lcel-llm-application",
    "description": null,
    "html_url": [
      "https://github.com/radicalromha/lcel-llm-application/blob/30ac34fd15e41ed41dcd492820baa5281151ffc8/venv/Lib/site-packages/openai/_client.py",
      "https://github.com/radicalromha/lcel-llm-application/blob/30ac34fd15e41ed41dcd492820baa5281151ffc8/venv/Lib/site-packages/openai/_client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1463154,
    "stars": 0
  },
  {
    "full_name": "sidd2305/RAG-LLM-Q-A-Assistant",
    "name": "RAG-LLM-Q-A-Assistant",
    "description": "LLM Q&A RAG is a project focused on enhancing language model capabilities by integrating Retrieval-Augmented Generation (RAG) techniques. This approach leverages the power of large language models (LLMs) and combines it with sophisticated retrieval mechanisms to improve the accuracy and relevance of answers provided in question-answering systems.",
    "html_url": [
      "https://github.com/sidd2305/RAG-LLM-Q-A-Assistant/blob/a14eecc4f185c7d92b220f755f248cbaa8defb76/venv/Lib/site-packages/openai/_client.py",
      "https://github.com/sidd2305/RAG-LLM-Q-A-Assistant/blob/a14eecc4f185c7d92b220f755f248cbaa8defb76/venv/Lib/site-packages/openai/_client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2228392,
    "stars": 0
  },
  {
    "full_name": "xuyangbocn/slack-app-plus-llm",
    "name": "slack-app-plus-llm",
    "description": "Serverless slack app, integration with OpenAI and other customisable event handler, built with Terraform AWS.",
    "html_url": [
      "https://github.com/xuyangbocn/slack-app-plus-llm/blob/474f2f5dad1084a6105082849978d6f9a8112f1c/lambda_layer/py_openai_sdk/python/openai/_client.py",
      "https://github.com/xuyangbocn/slack-app-plus-llm/blob/474f2f5dad1084a6105082849978d6f9a8112f1c/lambda_layer/py_openai_sdk/python/openai/_client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 219470,
    "stars": 2
  },
  {
    "full_name": "neylinsomne/Prueba-Makers",
    "name": "Prueba-Makers",
    "description": "Comunicación IA con LLM, a una base de datos",
    "html_url": [
      "https://github.com/neylinsomne/Prueba-Makers/blob/24252051a57a745d3412d023a71cb2ec872e14ff/venv/Lib/site-packages/openai/_client.py",
      "https://github.com/neylinsomne/Prueba-Makers/blob/24252051a57a745d3412d023a71cb2ec872e14ff/venv/Lib/site-packages/openai/_client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1765349,
    "stars": 0
  },
  {
    "full_name": "tauri-st/openai-chatbot",
    "name": "openai-chatbot",
    "description": "An exercise using Python to access OpenAI's API and build a chatbot!",
    "html_url": [
      "https://github.com/tauri-st/openai-chatbot/blob/70747f0e0b5c704cd215de08a3c300e0811f768b/openai-env/Lib/site-packages/openai/_client.py",
      "https://github.com/tauri-st/openai-chatbot/blob/70747f0e0b5c704cd215de08a3c300e0811f768b/openai-env/Lib/site-packages/openai/_client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 256812,
    "stars": 0
  },
  {
    "full_name": "kianand28/Langchain",
    "name": "Langchain",
    "description": null,
    "html_url": [
      "https://github.com/kianand28/Langchain/blob/b2076763b15427354365377d07c50c9df231f0fd/venv/Lib/site-packages/openai/_client.py",
      "https://github.com/kianand28/Langchain/blob/b2076763b15427354365377d07c50c9df231f0fd/venv/Lib/site-packages/openai/_client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2482619,
    "stars": 0
  },
  {
    "full_name": "hashirmuzaffar/Groq-Rag",
    "name": "Groq-Rag",
    "description": "This is a complete END to END application build using Grop AI and python streamlit app. ",
    "html_url": [
      "https://github.com/hashirmuzaffar/Groq-Rag/blob/b1eb6c9e9fe4ef1b2fad6529b087cee68d5cc8e7/.venv/Lib/site-packages/openai/_client.py",
      "https://github.com/hashirmuzaffar/Groq-Rag/blob/b1eb6c9e9fe4ef1b2fad6529b087cee68d5cc8e7/.venv/Lib/site-packages/openai/_client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2721117,
    "stars": 0
  },
  {
    "full_name": "AnshulChamoli03/RAG_Chatbot",
    "name": "RAG_Chatbot",
    "description": "A python chatbot that reads the file from a folder and answers user queries related to them",
    "html_url": [
      "https://github.com/AnshulChamoli03/RAG_Chatbot/blob/f7b53fa1544a95e51a2298a384d2714893fbe72d/.venv/Lib/site-packages/openai/_client.py",
      "https://github.com/AnshulChamoli03/RAG_Chatbot/blob/f7b53fa1544a95e51a2298a384d2714893fbe72d/.venv/Lib/site-packages/openai/_client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 774701,
    "stars": 0
  },
  {
    "full_name": "Fabelouzz/Assistant-API-Personal-Trainer",
    "name": "Assistant-API-Personal-Trainer",
    "description": "Interactive script using OpenAI API to communicate with a personal trainer assistant, handling user messages, managing runs, and printing responses with context-aware dialogue.",
    "html_url": [
      "https://github.com/Fabelouzz/Assistant-API-Personal-Trainer/blob/16175ab268618382a06035d81c9937b18459f0fc/personalenv/Lib/site-packages/openai/_client.py",
      "https://github.com/Fabelouzz/Assistant-API-Personal-Trainer/blob/16175ab268618382a06035d81c9937b18459f0fc/personalenv/Lib/site-packages/openai/_client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 223799,
    "stars": 0
  },
  {
    "full_name": "Mustafa-Shoukat1/Intelligent-Multimodal-Chatbot-Using-OpenAI-and-Chainlit",
    "name": "Intelligent-Multimodal-Chatbot-Using-OpenAI-and-Chainlit",
    "description": null,
    "html_url": [
      "https://github.com/Mustafa-Shoukat1/Intelligent-Multimodal-Chatbot-Using-OpenAI-and-Chainlit/blob/06bf17968130ad977c9a741a43b4a144e1c311aa/env/Lib/site-packages/openai/_client.py",
      "https://github.com/Mustafa-Shoukat1/Intelligent-Multimodal-Chatbot-Using-OpenAI-and-Chainlit/blob/06bf17968130ad977c9a741a43b4a144e1c311aa/env/Lib/site-packages/openai/_client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 543093,
    "stars": 2
  },
  {
    "full_name": "Sothyra12/MemoryChatBot",
    "name": "MemoryChatBot",
    "description": "I learned how to create this chatbot from one Youtube channel named \"Avra\" in the purpose of getting to know and build an OpenAI beginner-friendly project for UI smart devices (COMP318) OpenAI project.",
    "html_url": [
      "https://github.com/Sothyra12/MemoryChatBot/blob/bb586a8ec3e5074095cfe3ce52c888b6cfe74dee/env/Lib/site-packages/openai/_client.py",
      "https://github.com/Sothyra12/MemoryChatBot/blob/bb586a8ec3e5074095cfe3ce52c888b6cfe74dee/env/Lib/site-packages/openai/_client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1810822,
    "stars": 0
  },
  {
    "full_name": "Seifeddin-tlijani/LLm-ai",
    "name": "LLm-ai",
    "description": null,
    "html_url": [
      "https://github.com/Seifeddin-tlijani/LLm-ai/blob/d95cb0f5ec0b131abc516c577cacff89e6c96aaa/env/Lib/site-packages/openai/_client.py",
      "https://github.com/Seifeddin-tlijani/LLm-ai/blob/d95cb0f5ec0b131abc516c577cacff89e6c96aaa/env/Lib/site-packages/openai/_client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 223253,
    "stars": 0
  },
  {
    "full_name": "kyileiaye2021/insightbot",
    "name": "insightbot",
    "description": "InsightBot is an intelligent study tool powered by RAG that delivers a personalized learning experience, helping users achieve their goals. ",
    "html_url": [
      "https://github.com/kyileiaye2021/insightbot/blob/36d621d43b6213af3d7645ea2999be107d1455a6/venv/lib/site-packages/openai/_client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 728822,
    "stars": 1
  },
  {
    "full_name": "SeanXC/AI-Chatbot",
    "name": "AI-Chatbot",
    "description": "AI-Chatbot is a general-purpose conversational bot powered by OpenAI's GPT model. It uses a Python (Flask) backend, a JavaScript frontend, and is containerized with Docker for easy integration and deployment on any website.",
    "html_url": [
      "https://github.com/SeanXC/AI-Chatbot/blob/0fed38ef91626068598d607a503c508b460ceb02/backend/chatbot-env/Lib/site-packages/openai/_client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 226353,
    "stars": 0
  },
  {
    "full_name": "sks21010/RAG-Chatbot",
    "name": "RAG-Chatbot",
    "description": null,
    "html_url": [
      "https://github.com/sks21010/RAG-Chatbot/blob/1f31fda849cdf8130a457b98611b8c700db49ae3/env/Lib/site-packages/openai/_client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 886672,
    "stars": 0
  },
  {
    "full_name": "50to5-Automation-AI/50to5-core",
    "name": "50to5-core",
    "description": "10x your productivity with a suite of highly configurable low-code and LLM based code tools.",
    "html_url": [
      "https://github.com/50to5-Automation-AI/50to5-core/blob/346bf145ac09c2fd3f60ea5de2e9154f210af43e/src/backend/automation_tools/python/dev/portkey-python-sdk/portkey_ai/_vendor/openai/_client.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 43526,
    "stars": 0
  },
  {
    "full_name": "NVIDIA/NeMo-Skills",
    "name": "NeMo-Skills",
    "description": "A project to improve skills of large language models",
    "html_url": [
      "https://github.com/NVIDIA/NeMo-Skills/blob/2ae0ff39aaac769791e795eb3cd812225c5e19bb/nemo_skills/inference/server/model.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 32516,
    "stars": 417
  },
  {
    "full_name": "StefanHeng/ProgGen",
    "name": "ProgGen",
    "description": "Code for paper \"ProgGen: Generating Named Entity Recognition Datasets Step-by-step with Self-Reflexive Large Language Models\"",
    "html_url": [
      "https://github.com/StefanHeng/ProgGen/blob/ff42961e352199016de4adc1f9912d4a7d0f61e9/src/data_util/completions.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3157950,
    "stars": 17
  },
  {
    "full_name": "GONGSHUKAI/USPTO_LLM",
    "name": "USPTO_LLM",
    "description": "USPTO-LLM: A Large Language Model-Assisted Information-enriched Chemical Reaction Dataset",
    "html_url": [
      "https://github.com/GONGSHUKAI/USPTO_LLM/blob/5a1aff097554d9e6307e9bf2c8825884dbd9117d/Code/api_request_parallel_processor.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2148,
    "stars": 6
  },
  {
    "full_name": "Kiln-AI/Kiln",
    "name": "Kiln",
    "description": "Kiln AI: the easiest tool for fine-tuning LLM models, synthetic data generation, and collaborating on datasets.",
    "html_url": [
      "https://github.com/Kiln-AI/Kiln/blob/8bb95c9d9684c4e345087a289099e3b52bf8b7ae/app/desktop/studio_server/provider_api.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 63699,
    "stars": 3718
  },
  {
    "full_name": "Daniel-Chin/OpenAI-Realtime-API",
    "name": "OpenAI-Realtime-API",
    "description": "Python interface over the WebSocket of OpenAI Realtime API.",
    "html_url": [
      "https://github.com/Daniel-Chin/OpenAI-Realtime-API/blob/2cf4a911ac978714be63c1fdd18512f38d6080b6/interface.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1986,
    "stars": 0
  },
  {
    "full_name": "xlang-ai/Spider2",
    "name": "Spider2",
    "description": "Spider 2.0: Evaluating Language Models on Real-World Enterprise Text-to-SQL Workflows",
    "html_url": [
      "https://github.com/xlang-ai/Spider2/blob/d170cd6dd938f3243f5d65b82bde9c5da12f7731/methods/spider-agent-snow/spider_agent/agent/models.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 9022286,
    "stars": 471
  },
  {
    "full_name": "Kshitij10000/AI-Website-Generator",
    "name": "AI-Website-Generator",
    "description": "AI-Website-Generator is a Flask app that uses AI to convert voice commands into website code. It leverages OpenAI and image generation APIs to streamline the creation process.",
    "html_url": [
      "https://github.com/Kshitij10000/AI-Website-Generator/blob/cc01c049cbbbb18388e04ba31316e1dd16e42a75/backend.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1059,
    "stars": 1
  },
  {
    "full_name": "yudingsxt/telegram-gpt-bot",
    "name": "telegram-gpt-bot",
    "description": "一个Telegram ChatGPT Bot，支持用户管理，模型切换，用户模型记忆，上下文对话，语音对话，绘图等功能。",
    "html_url": [
      "https://github.com/yudingsxt/telegram-gpt-bot/blob/cfea4215e425738a6e86cc4f39afdbfcdb1e9d04/get-bot.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 670,
    "stars": 1
  },
  {
    "full_name": "CallmeLins/streamlit-nav-page",
    "name": "streamlit-nav-page",
    "description": "web page created by streamlit, include navigation gpt-assistant ",
    "html_url": [
      "https://github.com/CallmeLins/streamlit-nav-page/blob/111c3bc600b6eebee1d2edc714a3e16377f86bf3/gpt_page/gpt_page.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1765,
    "stars": 0
  },
  {
    "full_name": "THUDM/AgentTuning",
    "name": "AgentTuning",
    "description": "AgentTuning: Enabling Generalized Agent Abilities for LLMs",
    "html_url": [
      "https://github.com/THUDM/AgentTuning/blob/e33a45d7eab2b63cac4d1956da1e6377fca9fcc7/eval_heldout/miniwob%2B%2B/llm_agent.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 132218,
    "stars": 1445
  },
  {
    "full_name": "lancopku/agent-backdoor-attacks",
    "name": "agent-backdoor-attacks",
    "description": "Code&Data for the paper \"Watch Out for Your Agents! Investigating Backdoor Threats to LLM-Based Agents\" [NeurIPS 2024]",
    "html_url": [
      "https://github.com/lancopku/agent-backdoor-attacks/blob/7129f0c329fb5e44231a3a1fb6fc62fa4f524b33/AgentTuning/AgentTuning/eval_heldout/miniwob%2B%2B/llm_agent.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 134232,
    "stars": 80
  },
  {
    "full_name": "JayceNing/ChatBrain",
    "name": "ChatBrain",
    "description": "ChatBrain：基于LLM的AI 学术助手。功能包括论文总结，论文管理，数据统计，综述生成。此版本采用讯飞星火大模型接口。",
    "html_url": [
      "https://github.com/JayceNing/ChatBrain/blob/dbb33301cab6459022fe50cb8cd2e95054d9b4b0/chat_server/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 9566,
    "stars": 17
  },
  {
    "full_name": "simonw/llm",
    "name": "llm",
    "description": "Access large language models from the command-line",
    "html_url": [
      "https://github.com/simonw/llm/blob/000e984def983aa36384a24df42d4dbb558b5bb1/llm/default_plugins/openai_models.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 21486,
    "stars": 8444
  },
  {
    "full_name": "hehemagic/ragFlow",
    "name": "ragFlow",
    "description": null,
    "html_url": [
      "https://github.com/hehemagic/ragFlow/blob/c1f80af7dc39eab96aa9df543297f519cd585445/rag/llm/embedding_model.py",
      "https://github.com/hehemagic/ragFlow/blob/c1f80af7dc39eab96aa9df543297f519cd585445/rag/llm/cv_model.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 794187,
    "stars": 0
  },
  {
    "full_name": "Launchable-AI/llm-toolkit-backend",
    "name": "llm-toolkit-backend",
    "description": "Code to self-host your own backend for the LLM Toolkit Bubble Plugin",
    "html_url": [
      "https://github.com/Launchable-AI/llm-toolkit-backend/blob/be5a0f01707d774a8daf8ff11d9d3b0cf723a06f/streaming_service/src/router.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2096,
    "stars": 2
  },
  {
    "full_name": "ine-labs/AWSDefenderGPT",
    "name": "AWSDefenderGPT",
    "description": "AWSDefenderGPT : Leveraging OpenAI to Secure AWS Cloud",
    "html_url": [
      "https://github.com/ine-labs/AWSDefenderGPT/blob/b1298fc485b16c100653bcfea3dfd7299d0ff6f5/app/processor.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 6455,
    "stars": 6
  },
  {
    "full_name": "dannyvfilms/gptemailsummary",
    "name": "gptemailsummary",
    "description": "Uses Gmail and OpenAI's APIs to summarize emails",
    "html_url": [
      "https://github.com/dannyvfilms/gptemailsummary/blob/e1b955b0727b6b265d6332be1e6efb68deeebe44/gmailsummary.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1051,
    "stars": 22
  },
  {
    "full_name": "spidernic/AutogenDocGenerator",
    "name": "AutogenDocGenerator",
    "description": "This project use Microsoft Autogen Agents to analyze code repositories and generate comprehensive documentation, including purpose, functionalities, architecture, notable features, libraries used, and usage examples. It utilizes OpenAI's GPT-4o.",
    "html_url": [
      "https://github.com/spidernic/AutogenDocGenerator/blob/992e3e92c824bd6d41572e598239b23b40a2c4b2/src/code_documentation_generator.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1067,
    "stars": 3
  },
  {
    "full_name": "CLOVETHEDESTROYER/speech-assistant-openai",
    "name": "speech-assistant-openai",
    "description": "a voice assistant to make fun phone calls so you can get out of situations",
    "html_url": [
      "https://github.com/CLOVETHEDESTROYER/speech-assistant-openai/blob/81c44c814bc7a2dbcffaf6782eccd991895a49b3/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 608640,
    "stars": 0
  },
  {
    "full_name": "sgriggs3/SpotifyMate---personal-music-assistant-",
    "name": "SpotifyMate---personal-music-assistant-",
    "description": "Personal Spotify assistant that dynamically trains on your music over time using Spotipy. With recommendation engine using history, saved tracks and feedback to improve with machine learning. #1 goal to intergrate openai for further recommendation, analysis and generate music based on several audio features.",
    "html_url": [
      "https://github.com/sgriggs3/SpotifyMate---personal-music-assistant-/blob/26ea91ffb0aaf2bec67151452fec224b1a4d0b3b/.devcontainer/gpt-pilot/pilot/utils/llm_connection.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "ralphbutler/LLM_misc",
    "name": "LLM_misc",
    "description": "misc LLM code that did not go in the other repos",
    "html_url": [
      "https://github.com/ralphbutler/LLM_misc/blob/ce26957b5b09bd03a11b272d36a9e03a8f220d04/voice_assistants/sally_openai_realtime/realtime.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 28667,
    "stars": 3
  },
  {
    "full_name": "pittisl/PhyT2V",
    "name": "PhyT2V",
    "description": "repo of paper PhyT2V: LLM-Guided Iterative Self-Refinement for Physics-Grounded Text-to-Video Generation",
    "html_url": [
      "https://github.com/pittisl/PhyT2V/blob/bb4790d5ce75a0cb3ed78429cb92b80c54292f44/inference/gradio_composite_demo/app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 81826,
    "stars": 32
  },
  {
    "full_name": "Adri6336/gpt3-chatbot-exe-win",
    "name": "gpt3-chatbot-exe-win",
    "description": "This contains the files needed to run GPT-3 STTC on windows via an exe file.",
    "html_url": [
      "https://github.com/Adri6336/gpt3-chatbot-exe-win/blob/5f608a7738e6d62b6748b42f6d13f83b08476f1c/chatbot.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 26275,
    "stars": 3
  },
  {
    "full_name": "DngBack/Test_OpenAI_4o_Realtime",
    "name": "Test_OpenAI_4o_Realtime",
    "description": null,
    "html_url": [
      "https://github.com/DngBack/Test_OpenAI_4o_Realtime/blob/d3ce18b518758875cca2082b24e56d8b20a00db8/realtime/__init__.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3684,
    "stars": 0
  },
  {
    "full_name": "code-dot-org/aiproxy",
    "name": "aiproxy",
    "description": "Python Service to Proxy LLM API Calls",
    "html_url": [
      "https://github.com/code-dot-org/aiproxy/blob/8ece9d0888bcfc5105eae7d7934b8666c993b939/tests/routes/test_assessment_routes.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 8088,
    "stars": 6
  },
  {
    "full_name": "PantelisInsta/RecLLM",
    "name": "RecLLM",
    "description": "Recommendation system using an LLM as the orchestrator",
    "html_url": [
      "https://github.com/PantelisInsta/RecLLM/blob/e60cf754e6bf8d23f9a77761b669191d1ed1fcea/eval/user_simulator.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 6231,
    "stars": 1
  },
  {
    "full_name": "GrowthEngineAI/async-openai",
    "name": "async-openai",
    "description": "Unofficial Async Python client library for the OpenAI API",
    "html_url": [
      "https://github.com/GrowthEngineAI/async-openai/blob/cbe8525a6b8605729af5f14182dfdea8f656294f/async_openai/utils/config.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 9724,
    "stars": 39
  },
  {
    "full_name": "CurryTang/LLMGNN",
    "name": "LLMGNN",
    "description": "Label-free Node Classification on Graphs with Large Language Models (LLMS)",
    "html_url": [
      "https://github.com/CurryTang/LLMGNN/blob/1f60eedb1452cdd997be18b5dd932a02666ee57e/src/openail/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 7118,
    "stars": 80
  },
  {
    "full_name": "waltervanheuven/auto-alt-text",
    "name": "auto-alt-text",
    "description": "Automatically generate Alt Text for images and other objects in Powerpoint presentations using MLLM/VLM",
    "html_url": [
      "https://github.com/waltervanheuven/auto-alt-text/blob/8e0663e7f65d6b4ec0281708add298c0962309eb/aat/models.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2122,
    "stars": 4
  },
  {
    "full_name": "spotpan/CSA-LLM",
    "name": "CSA-LLM",
    "description": null,
    "html_url": [
      "https://github.com/spotpan/CSA-LLM/blob/6893785178a492d26b3b1bd59b857a8562884e29/src/openail/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 8111,
    "stars": 0
  },
  {
    "full_name": "monuminu/rag-voice-bot",
    "name": "rag-voice-bot",
    "description": null,
    "html_url": [
      "https://github.com/monuminu/rag-voice-bot/blob/c5153adfabcf4f68061387fa229d3f4bb670e1d8/realtime/__init__.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1186,
    "stars": 16
  },
  {
    "full_name": "ConnectAI-E/DataChat-API",
    "name": "DataChat-API",
    "description": "👨‍🌾 基于langchain实现的知识库对话引擎，DataChat的后端核心API接口  A knowledge base dialogue engine based on langchain,",
    "html_url": [
      "https://github.com/ConnectAI-E/DataChat-API/blob/54d4eafb48f434ddebed536cd6d7677fa7b7ac01/server/routes.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2295,
    "stars": 16
  },
  {
    "full_name": "madaliou/ragflow",
    "name": "ragflow",
    "description": null,
    "html_url": [
      "https://github.com/madaliou/ragflow/blob/aaad05d85059d7f50711ea72d80934294683330f/rag/llm/cv_model.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 759645,
    "stars": 0
  },
  {
    "full_name": "KristjanPikhof/CS2-Chatbot-with-GPT-Gemini-OpenRouter-integrations",
    "name": "CS2-Chatbot-with-GPT-Gemini-OpenRouter-integrations",
    "description": null,
    "html_url": [
      "https://github.com/KristjanPikhof/CS2-Chatbot-with-GPT-Gemini-OpenRouter-integrations/blob/927e0ce787a45e39ad475352d1e3fefe56223c88/chatbot.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 726,
    "stars": 1
  },
  {
    "full_name": "zyang-ur/idea2img",
    "name": "idea2img",
    "description": "Idea2Img: Iterative Self-Refinement with GPT-4V(ision) for Automatic Image Design and Generation, ECCV 2024",
    "html_url": [
      "https://github.com/zyang-ur/idea2img/blob/dd3a25e0ff2994f423616322cd9ab99d9e3ba024/idea2img_pipeline.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 378,
    "stars": 22
  },
  {
    "full_name": "microsoft/sammo",
    "name": "sammo",
    "description": "A library for prompt engineering and optimization (SAMMO = Structure-aware Multi-Objective Metaprompt Optimization)",
    "html_url": [
      "https://github.com/microsoft/sammo/blob/7ad76482f5776ed83f608f39ef9be4b96cab8329/sammo/runners.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 8331,
    "stars": 679
  },
  {
    "full_name": "shizhediao/Post-Training-Data-Flywheel",
    "name": "Post-Training-Data-Flywheel",
    "description": "We aim to provide the best references to search, select, and synthesize high-quality and large-quantity data for post-training your LLMs.",
    "html_url": [
      "https://github.com/shizhediao/Post-Training-Data-Flywheel/blob/1cfc1e96053d681732b7b461ed4eb02183d44e7a/IF-generation/code/api_request_parallel_processor.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2485,
    "stars": 56
  },
  {
    "full_name": "A-M-D-R-3-W/SmartSnip",
    "name": "SmartSnip",
    "description": "A simple Snipping Tool style program to interact with OpenAI's GPT-4 Vision (with text-to-speech!), written in Python using Customtkinter.",
    "html_url": [
      "https://github.com/A-M-D-R-3-W/SmartSnip/blob/c020469219354d8583d053cd498c54ef76ac5577/smartSnip.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1979,
    "stars": 3
  },
  {
    "full_name": "yiyihum/da-code",
    "name": "da-code",
    "description": "[EMNLP 2024] DA-Code: Agent Data Science Code Generation Benchmark for Large Language Models",
    "html_url": [
      "https://github.com/yiyihum/da-code/blob/eed36e91ef29ba6ea0cf75b0a09f5d4df6d389f6/da_agent/agent/models.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 10777734,
    "stars": 70
  },
  {
    "full_name": "pbberlin/llm-text-classifier",
    "name": "llm-text-classifier",
    "description": null,
    "html_url": [
      "https://github.com/pbberlin/llm-text-classifier/blob/ae0a65b6b221d0157e6ddcfde953a9ebf005261e/models/embeds.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 9121,
    "stars": 0
  },
  {
    "full_name": "chatchat-space/Langchain-Chatchat",
    "name": "Langchain-Chatchat",
    "description": "Langchain-Chatchat（原Langchain-ChatGLM）基于 Langchain 与 ChatGLM, Qwen 与 Llama 等语言模型的 RAG 与 Agent 应用 | Langchain-Chatchat (formerly langchain-ChatGLM), local knowledge based LLM (like ChatGLM, Qwen and Llama) RAG and Agent app with langchain ",
    "html_url": [
      "https://github.com/chatchat-space/Langchain-Chatchat/blob/40994eb6c3c8aeb9af4d52123abfb471a3f27b9c/libs/chatchat-server/chatchat/settings.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 110655,
    "stars": 35273
  },
  {
    "full_name": "cartermp/opentelemetry-instrument-openai-py",
    "name": "opentelemetry-instrument-openai-py",
    "description": "OpenTelemetry instrumentation for the OpenAI Python library",
    "html_url": [
      "https://github.com/cartermp/opentelemetry-instrument-openai-py/blob/5c863443ef7bb8ea40ce4f5d04c7b6e4065d4393/tests/test_openai_instrumentation.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1370,
    "stars": 19
  },
  {
    "full_name": "boyiwei/CoTaEval",
    "name": "CoTaEval",
    "description": "Official code for the paper: Evaluating Copyright Takedown Methods for Language Models",
    "html_url": [
      "https://github.com/boyiwei/CoTaEval/blob/e5aefd81f5c7b088b3a49e1961b461a87aee3ae5/eval/FastChat_new/fastchat/serve/api_provider.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1379938,
    "stars": 17
  },
  {
    "full_name": "DrishtiShrrrma/langchain-multiagent-projects",
    "name": "langchain-multiagent-projects",
    "description": null,
    "html_url": [
      "https://github.com/DrishtiShrrrma/langchain-multiagent-projects/blob/e232c02fd0cfc3c5686fe5f06bfa39ca2204b1ba/multiagent-debate/app.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1391,
    "stars": 0
  },
  {
    "full_name": "n3d1117/chatgpt-telegram-bot",
    "name": "chatgpt-telegram-bot",
    "description": "🤖 A Telegram bot that integrates with OpenAI's official ChatGPT APIs to provide answers, written in Python",
    "html_url": [
      "https://github.com/n3d1117/chatgpt-telegram-bot/blob/02b2b97e9dddfbe78e7f9dc6565ebf4d83b5d684/bot/openai_helper.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4008,
    "stars": 3295
  },
  {
    "full_name": "Vyshnav12/Nvidia-RAG-with-LLMs",
    "name": "Nvidia-RAG-with-LLMs",
    "description": "Building RAG agents with LLMs",
    "html_url": [
      "https://github.com/Vyshnav12/Nvidia-RAG-with-LLMs/blob/ee6ae9d8a4498c123e5a747bec5d7e53d9b949f7/llm_client/ai-endpoints/langchain_nvidia_ai_endpoints/_common.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 5012,
    "stars": 0
  },
  {
    "full_name": "mubbarikali/NVIDIA_Building_RAG_Agents_with_LLMs",
    "name": "NVIDIA_Building_RAG_Agents_with_LLMs",
    "description": null,
    "html_url": [
      "https://github.com/mubbarikali/NVIDIA_Building_RAG_Agents_with_LLMs/blob/9efd51401b2132a2dbe9479c03118fc4991483d4/notebooks/llm_client/ai-endpoints/langchain_nvidia_ai_endpoints/_common.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 6540,
    "stars": 0
  },
  {
    "full_name": "haotang1995/REx",
    "name": "REx",
    "description": "REx: Code Repair with LLMs gives an Exploration-Exploitation Tradeoff",
    "html_url": [
      "https://github.com/haotang1995/REx/blob/371e879da5b1fff0d32a695ad37dcac50f74721b/acr/domains/apps/from_jin/openai_utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 116605,
    "stars": 4
  },
  {
    "full_name": "Mindgard/cli",
    "name": "cli",
    "description": "Test your AI model's security through CLI",
    "html_url": [
      "https://github.com/Mindgard/cli/blob/c4930ca4b8c6e104f1b3d2d8a41c87167e489b8c/tests/unit/test_wrappers.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 7228,
    "stars": 26
  },
  {
    "full_name": "williamcfrancis/ai2ai-conversation-loop",
    "name": "ai2ai-conversation-loop",
    "description": "Endless conversations between GPT and Google Gemini with possible human interaction",
    "html_url": [
      "https://github.com/williamcfrancis/ai2ai-conversation-loop/blob/39a38e3ea4ea68220aa8f7a01a078e6334e5ae3c/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1306,
    "stars": 0
  },
  {
    "full_name": "ashvardanian/tinysemver",
    "name": "tinysemver",
    "description": "Tiny Semantic Versioning (SemVer) library with LLMs and GitHub CI, that doesn't depend on 300K lines of JavaScript code and fits in a single Python file",
    "html_url": [
      "https://github.com/ashvardanian/tinysemver/blob/48818c9da3c4d6da59efde64bce219bbd579903a/tinysemver/tinysemver.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1402,
    "stars": 22
  },
  {
    "full_name": "RUC-NLPIR/FlashRAG",
    "name": "FlashRAG",
    "description": "⚡FlashRAG: A Python Toolkit for Efficient RAG Research",
    "html_url": [
      "https://github.com/RUC-NLPIR/FlashRAG/blob/60493540cdc23487fb531b87e859c0bb4f9fa4bc/flashrag/refiner/llmlingua_compressor.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 42627,
    "stars": 2404
  },
  {
    "full_name": "Phantivia/SayRAG",
    "name": "SayRAG",
    "description": null,
    "html_url": [
      "https://github.com/Phantivia/SayRAG/blob/ee556a212fe373c4436c67022308d8daee438904/flashrag/refiner/llmlingua_compressor.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 11824,
    "stars": 0
  },
  {
    "full_name": "lm-sys/FastChat",
    "name": "FastChat",
    "description": "An open platform for training, serving, and evaluating large language models. Release repo for Vicuna and Chatbot Arena.",
    "html_url": [
      "https://github.com/lm-sys/FastChat/blob/7a912c70dd08bf5759d1e2d5af9aac6781fea263/fastchat/serve/api_provider.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 40112,
    "stars": 38725
  },
  {
    "full_name": "Antony-Zhang/PoetryChat",
    "name": "PoetryChat",
    "description": "一个面向不同年龄段的交互式LLM古诗学习助手",
    "html_url": [
      "https://github.com/Antony-Zhang/PoetryChat/blob/d99785d456956e669cf1b28ce286ac4d45bf8784/main_backup.py",
      "https://github.com/Antony-Zhang/PoetryChat/blob/d99785d456956e669cf1b28ce286ac4d45bf8784/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 10001,
    "stars": 7
  },
  {
    "full_name": "microsoft/promptbench",
    "name": "promptbench",
    "description": "A unified evaluation framework for large language models",
    "html_url": [
      "https://github.com/microsoft/promptbench/blob/fcda538bd779ad11612818e0645a387a462b5c3b/promptbench/models/models.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 27453,
    "stars": 2631
  },
  {
    "full_name": "spearsheep/APT-Architectural-Planning-LLM-Agent",
    "name": "APT-Architectural-Planning-LLM-Agent",
    "description": null,
    "html_url": [
      "https://github.com/spearsheep/APT-Architectural-Planning-LLM-Agent/blob/333d1f0cdb399b26fa5fede51e08bb413afc0cc9/llmAlgorithms.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1410,
    "stars": 5
  },
  {
    "full_name": "kaangiray26/raven",
    "name": "raven",
    "description": "LLM-powered workflows for your systematic literature reviews",
    "html_url": [
      "https://github.com/kaangiray26/raven/blob/d5f0ce0770d157eb9d6339189c3edcef9b9efdd0/lib/worker.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 138021,
    "stars": 1
  },
  {
    "full_name": "LiangYang666/ChatGPT-Web",
    "name": "ChatGPT-Web",
    "description": "使用GPT-3.5 API创建的ChatGPT聊天页面，支持云部署，多用户使用，多对话管理，公式显示，流式动态显示，windows和linux均可极简部署，网页版 html python flask",
    "html_url": [
      "https://github.com/LiangYang666/ChatGPT-Web/blob/e5f69e29b9d322df6789628a65e09fa15f16f3e3/main.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2507,
    "stars": 502
  },
  {
    "full_name": "paulgavrikov/vlm_shapebias",
    "name": "vlm_shapebias",
    "description": "Official code for \"Are Vision Language Models Texture or Shape Biased and Can We Steer Them?\".",
    "html_url": [
      "https://github.com/paulgavrikov/vlm_shapebias/blob/5eb10e4d7a46cec667419fd13f55109c87183b57/code/models.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 101176,
    "stars": 25
  },
  {
    "full_name": "Liang-Y-Yu/vvLLM",
    "name": "vvLLM",
    "description": "A research project",
    "html_url": [
      "https://github.com/Liang-Y-Yu/vvLLM/blob/c722804adb1b7cff9358e42cf9a59d83dbdc1a30/src/backend/utils.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 14883,
    "stars": 0
  },
  {
    "full_name": "libraryofcelsus/LLM_File_Parser",
    "name": "LLM_File_Parser",
    "description": "AutoML/Unstructured Data Processing for RAG and LLM Dataset Creation.  Current Database Options are: Qdrant or Marqo DB.",
    "html_url": [
      "https://github.com/libraryofcelsus/LLM_File_Parser/blob/49b2f8bfc7432df332606b93fae9c66d79dcdc52/File_Processor.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2116,
    "stars": 6
  },
  {
    "full_name": "DefamationStation/Retrochat",
    "name": "Retrochat",
    "description": "A simple light terminal style chat app that lets you use connect to your local llama.cpp server",
    "html_url": [
      "https://github.com/DefamationStation/Retrochat/blob/5e3f85a8104f4c718a72409c0807f770b2d486a3/retrochat.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "microsoft/CodePlan",
    "name": "CodePlan",
    "description": "Data and evaluation scripts for \"CodePlan: Repository-level Coding using LLMs and Planning\", FSE 2024",
    "html_url": [
      "https://github.com/microsoft/CodePlan/blob/e83f560a1e67c67f621fac9918f02f7016a49cbe/data/t3/pred/repair_strict/repo/server/awesome_chat.py",
      "https://github.com/microsoft/CodePlan/blob/e83f560a1e67c67f621fac9918f02f7016a49cbe/data/t3/pred/coeditor_repair/repo/server/awesome_chat.py",
      "https://github.com/microsoft/CodePlan/blob/e83f560a1e67c67f621fac9918f02f7016a49cbe/data/t3/pred/coeditor_repair_strict/repo/server/awesome_chat.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 237837,
    "stars": 70
  },
  {
    "full_name": "TensorBlast/LLMExplorer",
    "name": "LLMExplorer",
    "description": "LLM Explorer app",
    "html_url": [
      "https://github.com/TensorBlast/LLMExplorer/blob/f12a5aca20427c4b531cf96eeebc7ec29db62d79/GenAI_Explorer.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 895,
    "stars": 0
  },
  {
    "full_name": "irom-princeton/byovla",
    "name": "byovla",
    "description": "Repo for Bring Your Own Vision-Language-Action (VLA) model, arxiv 2024",
    "html_url": [
      "https://github.com/irom-princeton/byovla/blob/3cdbe1ce019edf5bfca87f3708a1e4f3bfb50e5a/byovla_outline.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2392,
    "stars": 28
  },
  {
    "full_name": "Adri6336/gpt-voice-conversation-chatbot",
    "name": "gpt-voice-conversation-chatbot",
    "description": "Allows you to have an engaging and safely emotive spoken / CLI conversation with the AI ChatGPT / GPT-4 while giving you the option to let it remember things discussed.",
    "html_url": [
      "https://github.com/Adri6336/gpt-voice-conversation-chatbot/blob/6b0cfaf3bc2b041b606789176c4e9cb85c110780/chatbot.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1758,
    "stars": 305
  },
  {
    "full_name": "ChenguangYang96UCR/LLM_PEH_Interface",
    "name": "LLM_PEH_Interface",
    "description": null,
    "html_url": [
      "https://github.com/ChenguangYang96UCR/LLM_PEH_Interface/blob/ac193bc9b7271919e50fbc2b04b01ed8931efe16/DREAM-KG_Chatbot.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 469317,
    "stars": 0
  },
  {
    "full_name": "researchcode001/Divide-and-Conquer-Attack",
    "name": "Divide-and-Conquer-Attack",
    "description": "Divide-and-Conquer Attack: Harnessing the Power of LLM to Bypass the Censorship of Text-to-Image Generation Mode",
    "html_url": [
      "https://github.com/researchcode001/Divide-and-Conquer-Attack/blob/d6861ca1382c1c09e292133251a6690cc975665f/DACADemo.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 848,
    "stars": 18
  },
  {
    "full_name": "mmjerge/llm_reliability_framework",
    "name": "llm_reliability_framework",
    "description": "LLM Reliability Framework",
    "html_url": [
      "https://github.com/mmjerge/llm_reliability_framework/blob/fedc8eb5738bcfa3da1ef94ac6c8aeabf755abf0/utils/util.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "AmbitYuki/metaCSRL",
    "name": "metaCSRL",
    "description": "Learning Expressive Task Embeddings and Sample-Efficient Exploration for Context Shift Reduction in Offline Meta-Reinforcement Learning",
    "html_url": [
      "https://github.com/AmbitYuki/metaCSRL/blob/bfa4b60375adc16e619b9d9c8a7956968838b34e/gym/scoreboard/__init__.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 13385,
    "stars": 4
  },
  {
    "full_name": "deepapaikar/CodeGen_Backend",
    "name": "CodeGen_Backend",
    "description": "Autogen+Llama implemented with React.js and Flask",
    "html_url": [
      "https://github.com/deepapaikar/CodeGen_Backend/blob/5cc2c8091b06145e4ef77cd98a1bb0c959f4e0ba/backend/autogen_modifi/autogen/oai/completion.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 26092,
    "stars": 8
  },
  {
    "full_name": "twy80/LangChain_llm_Agent",
    "name": "LangChain_llm_Agent",
    "description": "Text and image generator using OpenAI's API",
    "html_url": [
      "https://github.com/twy80/LangChain_llm_Agent/blob/3ef91492b7eeebceb60b4a7fa8d4d208d298a9e7/LangChain_llm_Agent.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1213,
    "stars": 11
  },
  {
    "full_name": "DeepInsight-AI/DeepBI",
    "name": "DeepBI",
    "description": "LLM based data scientist, AI native data application.  AI-driven infinite thinking redefines BI.",
    "html_url": [
      "https://github.com/DeepInsight-AI/DeepBI/blob/5fca6ef36bc4e0500ad195f775d86c1c8cf09fbc/ai/agents/oai/completion.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 109528,
    "stars": 2159
  },
  {
    "full_name": "sincekmori/gpru",
    "name": "gpru",
    "description": "Unofficial Python client library for the OpenAI and Azure OpenAI APIs",
    "html_url": [
      "https://github.com/sincekmori/gpru/blob/4c1e4d762b58512fc6f981978bd1c3d12061ef4f/src/gpru/openai/api.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 5116,
    "stars": 0
  },
  {
    "full_name": "xlinx/sd-webui-decadetw-auto-prompt-llm",
    "name": "sd-webui-decadetw-auto-prompt-llm",
    "description": "sd-webui-auto-prompt-llm",
    "html_url": [
      "https://github.com/xlinx/sd-webui-decadetw-auto-prompt-llm/blob/556937bd25223d4e58cbb0e89a98964be9ebd5e8/scripts/auto_prompt_llm.py"
    ],
    "model": [
      "openai"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1437,
    "stars": 65
  },
  {
    "full_name": "SmallTeddy/tongyi-llm",
    "name": "tongyi-llm",
    "description": "使用终端调用通义千问实现会话问答",
    "html_url": [
      "https://github.com/SmallTeddy/tongyi-llm/blob/6af78102da4db053234e51d6967a8d8112998386/index.js"
    ],
    "model": [
      "qwen"
    ],
    "language": [
      "javascript"
    ],
    "fork": false,
    "loc": 234,
    "stars": 1
  },
  {
    "full_name": "Devin-XYW/LLMAgents",
    "name": "LLMAgents",
    "description": "The LLM Agents for Android",
    "html_url": [
      "https://github.com/Devin-XYW/LLMAgents/blob/933e587ad30ab11d80884fc633a198bf38505b6e/llm-agents-cloud/llm-Qwen/src/main/java/com/llm/qwen/QwenLLmConfig.java"
    ],
    "model": [
      "qwen"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 7997,
    "stars": 5
  },
  {
    "full_name": "pig-mesh/langchain4j-course",
    "name": "langchain4j-course",
    "description": null,
    "html_url": [
      "https://github.com/pig-mesh/langchain4j-course/blob/eedd2806cad4e806c2007b1eb6a66cbb7f95af10/langchain4j-12graalvm/src/main/java/com/pig4cloud/ai/langchain4j12graalvm/config/LLMConfig.java",
      "https://github.com/pig-mesh/langchain4j-course/blob/eedd2806cad4e806c2007b1eb6a66cbb7f95af10/langchain4j-16rag2/src/main/java/com/pig4cloud/ai/langchain4j16rag2/config/LLMConfig.java",
      "https://github.com/pig-mesh/langchain4j-course/blob/eedd2806cad4e806c2007b1eb6a66cbb7f95af10/langchain4j-15rag1/src/main/java/com/pig4cloud/ai/langchain4j15rag1/config/LLMConfig.java",
      "https://github.com/pig-mesh/langchain4j-course/blob/eedd2806cad4e806c2007b1eb6a66cbb7f95af10/langchain4j-09function/src/main/java/com/pig4cloud/ai/langchain4j09function/config/LLMConfig.java",
      "https://github.com/pig-mesh/langchain4j-course/blob/eedd2806cad4e806c2007b1eb6a66cbb7f95af10/langchain4j-11embedding2/src/main/java/com/pig4cloud/ai/langchain4j12graalvm/config/LLMConfig.java"
    ],
    "model": [
      "qwen"
    ],
    "language": [
      "java"
    ],
    "fork": false,
    "loc": 2236,
    "stars": 84
  },
  {
    "full_name": "TechNinja-Sun/SmartReportv1.0",
    "name": "SmartReportv1.0",
    "description": "Intelligent generation reporting system based on RAG technology",
    "html_url": [
      "https://github.com/TechNinja-Sun/SmartReportv1.0/blob/bd945aa4e4d2fb378c25e551d3804e139662394b/my_llm.py"
    ],
    "model": [
      "qwen"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 627,
    "stars": 3
  },
  {
    "full_name": "franlin1860/llm",
    "name": "llm",
    "description": null,
    "html_url": [
      "https://github.com/franlin1860/llm/blob/fc0ca31470eaf183760c06d8b550cfe9d505a5d6/openailike_qwen.py",
      "https://github.com/franlin1860/llm/blob/fc0ca31470eaf183760c06d8b550cfe9d505a5d6/pdf_example.py",
      "https://github.com/franlin1860/llm/blob/fc0ca31470eaf183760c06d8b550cfe9d505a5d6/query_graph.py",
      "https://github.com/franlin1860/llm/blob/fc0ca31470eaf183760c06d8b550cfe9d505a5d6/kg_index/kg_index_store.py",
      "https://github.com/franlin1860/llm/blob/fc0ca31470eaf183760c06d8b550cfe9d505a5d6/kg_schema/generate_schema_kg.py"
    ],
    "model": [
      "qwen"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 17133,
    "stars": 2
  },
  {
    "full_name": "poppanda/LLM_PDF_Translator",
    "name": "LLM_PDF_Translator",
    "description": "Use LLM (ollama, QWEN, ChatGPT) to translate the pdf inplacely",
    "html_url": [
      "https://github.com/poppanda/LLM_PDF_Translator/blob/a54e6e6fb07b66f617a61b9f5e87e3036bead3a8/modules/translate/qwen_translate.py"
    ],
    "model": [
      "qwen"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 42219,
    "stars": 45
  },
  {
    "full_name": "BloodLotusqwq/LLM_EduChat",
    "name": "LLM_EduChat",
    "description": "与大模型对话的教学工程",
    "html_url": [
      "https://github.com/BloodLotusqwq/LLM_EduChat/blob/d417cbddecf49782ad52e5ec110a4769b67e5947/config.py"
    ],
    "model": [
      "qwen"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 601,
    "stars": 0
  },
  {
    "full_name": "AI4Finance-Foundation/FinRAG",
    "name": "FinRAG",
    "description": "FinRAG: Financial Retrieval Augmented Generation",
    "html_url": [
      "https://github.com/AI4Finance-Foundation/FinRAG/blob/790c6158596747a3ea58ea1dae7972ac0f18d3dd/app/core/chat/rag_chat.py",
      "https://github.com/AI4Finance-Foundation/FinRAG/blob/790c6158596747a3ea58ea1dae7972ac0f18d3dd/app/core/chat/open_chat.py"
    ],
    "model": [
      "qwen"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 3465,
    "stars": 28
  },
  {
    "full_name": "Plumess/MimirFW",
    "name": "MimirFW",
    "description": "（制作中）本项目旨在开发一个基于大语言模型（LLM）的对话游戏主持框架，支持类似DND（龙与地下城）、狼人杀等对话类游戏的自动化主持。",
    "html_url": [
      "https://github.com/Plumess/MimirFW/blob/ffb0b86158e8d32d72d871d97c3c54537d40799a/config/__init__.py"
    ],
    "model": [
      "qwen"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 146,
    "stars": 13
  },
  {
    "full_name": "tangent95/Comforter-LLMJudger",
    "name": "Comforter-LLMJudger",
    "description": "Comforter项目下的大模型判断模块，用来判断一个人的发言是否需要被安慰/温暖",
    "html_url": [
      "https://github.com/tangent95/Comforter-LLMJudger/blob/5f54faada512912221da887e563bb3e16945ea5b/LLMJudger/__init__.py"
    ],
    "model": [
      "qwen"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "toke648/AI-Interactive-LLM-VTuber",
    "name": "AI-Interactive-LLM-VTuber",
    "description": null,
    "html_url": [
      "https://github.com/toke648/AI-Interactive-LLM-VTuber/blob/0480e1f2cc1ed5ee5bb1f23684a97f0cf89a90a8/text_program/language_generate.py"
    ],
    "model": [
      "qwen"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 23015,
    "stars": 6
  },
  {
    "full_name": "HarderThenHarder/AgentLife",
    "name": "AgentLife",
    "description": "A small open source 3D agent simulator based on LLM.",
    "html_url": [
      "https://github.com/HarderThenHarder/AgentLife/blob/1541e81b1f988b4aa47414080c0a754eb8f966f8/server/llm_utils.py"
    ],
    "model": [
      "qwen"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 10527,
    "stars": 66
  },
  {
    "full_name": "NewToolAI/docapi",
    "name": "docapi",
    "description": "DocAPI is a Python package that automatically generates API documentation using LLMs. It currently supports Flask and Django frameworks.",
    "html_url": [
      "https://github.com/NewToolAI/docapi/blob/b5c770b2fd38c10b1ed0ba7036112bc422e46a6f/docapi/llm/llm_builder.py"
    ],
    "model": [
      "qwen"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2041,
    "stars": 9
  },
  {
    "full_name": "ThomasXIONG151215/RABBIT-Multi-Agents",
    "name": "RABBIT-Multi-Agents",
    "description": "探索如何用LLM Agent自动化种植工作流",
    "html_url": [
      "https://github.com/ThomasXIONG151215/RABBIT-Multi-Agents/blob/ad2aa9382d99e061828d5a0e75ea6d584b5281c8/main_versions/main711.py",
      "https://github.com/ThomasXIONG151215/RABBIT-Multi-Agents/blob/ad2aa9382d99e061828d5a0e75ea6d584b5281c8/main_versions/main712.py"
    ],
    "model": [
      "qwen"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2228,
    "stars": 8
  },
  {
    "full_name": "HzaCode/LLM",
    "name": "LLM",
    "description": null,
    "html_url": [
      "https://github.com/HzaCode/LLM/blob/3f056acd19b5e2d00c8cc3914cd997ad8cf9d7b7/qwen_long_stepwise_extract_drug_info_to_json.py"
    ],
    "model": [
      "qwen"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 703,
    "stars": 1
  },
  {
    "full_name": "underwoodnoble/SPAGF",
    "name": "SPAGF",
    "description": "SPAG for finance llm.",
    "html_url": [
      "https://github.com/underwoodnoble/SPAGF/blob/66557a8fe8fba68f737c44b0fd15cee4b3999903/tools/imitation_leaning_data_collection.py"
    ],
    "model": [
      "qwen"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 11179,
    "stars": 0
  },
  {
    "full_name": "injet-zhou/cofreq",
    "name": "cofreq",
    "description": "cofreq makes public LLM APIs compatible with open-webui",
    "html_url": [
      "https://github.com/injet-zhou/cofreq/blob/048222882f67b9585dbfa45c34fa7a5b41274a01/cofreq/api/qwen.py"
    ],
    "model": [
      "qwen"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 597,
    "stars": 0
  },
  {
    "full_name": "Anionex/RAG-QA-Assistant",
    "name": "RAG-QA-Assistant",
    "description": "数据结构个人期末作业。实现一个尽量高效的近邻向量检索，并基于此实现基于语义的近似文段检索，进一步做成一个基础的问答助手应用。",
    "html_url": [
      "https://github.com/Anionex/RAG-QA-Assistant/blob/32163de0e2ecf6ba4d75f3e8e9ac2dc9a011346b/chat_model.py"
    ],
    "model": [
      "qwen"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1237,
    "stars": 1
  },
  {
    "full_name": "shidu-xie/ChatLLM",
    "name": "ChatLLM",
    "description": null,
    "html_url": [
      "https://github.com/shidu-xie/ChatLLM/blob/48f956d42c30f9294aee128a2a5d61fa0e59719b/service/LLMs/langchainllm/imgchatllm.py"
    ],
    "model": [
      "qwen"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1140,
    "stars": 0
  },
  {
    "full_name": "xyhzhlove/a-langchain-generate-data-demo",
    "name": "a-langchain-generate-data-demo",
    "description": "a-langchain-generate-data-dem",
    "html_url": [
      "https://github.com/xyhzhlove/a-langchain-generate-data-demo/blob/68e21bcf2f213e6888bb51e9c390090235f4d280/src/text_generation/data_generator/core/use_llm_chain.py"
    ],
    "model": [
      "qwen"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 318,
    "stars": 1
  },
  {
    "full_name": "Metisyolo/Qwen-Agent",
    "name": "Qwen-Agent",
    "description": "LLM-Agent",
    "html_url": [
      "https://github.com/Metisyolo/Qwen-Agent/blob/9127da3eb8f419468e2d66341617e122af606fe8/qwen_agent/llm/__init__.py"
    ],
    "model": [
      "qwen"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 6908,
    "stars": 0
  },
  {
    "full_name": "Cao1014/Full_Stack_LLM_Project",
    "name": "Full_Stack_LLM_Project",
    "description": "《基于AI大模型的前后端应用开发》课程仓库",
    "html_url": [
      "https://github.com/Cao1014/Full_Stack_LLM_Project/blob/809fa17dbb498accad2a5548de357ec3df9e4fee/Lecture3/RAG_HTTP_Service.py",
      "https://github.com/Cao1014/Full_Stack_LLM_Project/blob/809fa17dbb498accad2a5548de357ec3df9e4fee/Lecture1/Qwen_ChatBot_Homework_DemoV4.py"
    ],
    "model": [
      "qwen"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 4288,
    "stars": 3
  },
  {
    "full_name": "libinpg/AI-group-files",
    "name": "AI-group-files",
    "description": "An innovative file organization system powered by advanced AI algorithms. This tool leverages the OpenAI GPT-3.5 model and Baidu qianfan models to intelligently categorize and organize files based on their content. With a focus on ease of use and automation",
    "html_url": [
      "https://github.com/libinpg/AI-group-files/blob/8bf8c8dbb88b162df6f69246a344c8bfe30fdaf1/src/classifiers/baichuan2_13b_classifier.py"
    ],
    "model": [
      "qwen"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 635,
    "stars": 9
  },
  {
    "full_name": "dekumylove/llm_agent",
    "name": "llm_agent",
    "description": null,
    "html_url": [
      "https://github.com/dekumylove/llm_agent/blob/0cf0a24640aac631e600506002e0c1d50e3243c7/demo/model_provider.py"
    ],
    "model": [
      "qwen"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 326,
    "stars": 0
  },
  {
    "full_name": "Pommissarzhu/vpsm-llm",
    "name": "vpsm-llm",
    "description": "A Visual Parsing System for Menus Based on Large Language Modeling",
    "html_url": [
      "https://github.com/Pommissarzhu/vpsm-llm/blob/f90ba983c108ad4c6fe92f451fb5a9d2c8d9c875/parsing_menu.py"
    ],
    "model": [
      "qwen"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 132,
    "stars": 2
  },
  {
    "full_name": "OrchardUniverse/basket",
    "name": "basket",
    "description": "The common toolkit for all MaaS with OpenAI API",
    "html_url": [
      "https://github.com/OrchardUniverse/basket/blob/d1c4567f197e70892e1148a7e20b260680e762cb/basket/basket_config/maas_config.py"
    ],
    "model": [
      "qwen"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2134,
    "stars": 0
  },
  {
    "full_name": "vanna-ai/vanna",
    "name": "vanna",
    "description": "🤖 Chat with your SQL database 📊. Accurate Text-to-SQL Generation via LLMs using RAG 🔄.",
    "html_url": [
      "https://github.com/vanna-ai/vanna/blob/ad014c44a4bf5bd15ffb576ffd85578ad17e1a2f/src/vanna/qianwen/QianwenAI_chat.py"
    ],
    "model": [
      "qwen"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 10732,
    "stars": 18081
  },
  {
    "full_name": "SmartAG-Team/CDIP-ChatGLM3",
    "name": "CDIP-ChatGLM3",
    "description": "crop disease identification and prescription with CNN and LLMs",
    "html_url": [
      "https://github.com/SmartAG-Team/CDIP-ChatGLM3/blob/fd6bc535d635b6616c8600d76a0d05c2ef921c46/src/LLM/Specialized-Abilities-Test/Dateset-create/Generate-Specialised-Abilities-Test-Dataset.py"
    ],
    "model": [
      "qwen"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2524603,
    "stars": 12
  },
  {
    "full_name": "huaxlin/lmconf",
    "name": "lmconf",
    "description": "Support for multiple LLM configurations in one application settings",
    "html_url": [
      "https://github.com/huaxlin/lmconf/blob/b5f6a1a856ac9a2b2b2f87b5e763bccd44e5e918/tests/test_settings.py"
    ],
    "model": [
      "qwen"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 758,
    "stars": 0
  },
  {
    "full_name": "q2wxec/lang2openai",
    "name": "lang2openai",
    "description": "lang2openai",
    "html_url": [
      "https://github.com/q2wxec/lang2openai/blob/5e440aa43e01d761c494af1a9ffe1f55ab329e81/direct/direct_request.py"
    ],
    "model": [
      "qwen"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 1054,
    "stars": 71
  },
  {
    "full_name": "time1527/teach-chat",
    "name": "teach-chat",
    "description": "tool+memory+rag",
    "html_url": [
      "https://github.com/time1527/teach-chat/blob/f09a839afa87f6dc6b6812b8c1c7b1034f35332c/modelscope_agent/tools/dashscope_tools/wordart_tool.py",
      "https://github.com/time1527/teach-chat/blob/f09a839afa87f6dc6b6812b8c1c7b1034f35332c/modelscope_agent/tools/dashscope_tools/style_repaint.py"
    ],
    "model": [
      "qwen"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 5230,
    "stars": 0
  },
  {
    "full_name": "BlackBearCC/CharacterAgent",
    "name": "CharacterAgent",
    "description": "用于角色扮演代理开发，解决单一角色模仿深度不够的问题。正在开发中",
    "html_url": [
      "https://github.com/BlackBearCC/CharacterAgent/blob/4ee574b5cacc7c16a74c59d6cc889ef2edf50504/ai/models/qianwen.py"
    ],
    "model": [
      "qwen"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2340,
    "stars": 1
  },
  {
    "full_name": "flybywind/llm-wechat",
    "name": "llm-wechat",
    "description": "llm-wechat",
    "html_url": [
      "https://github.com/flybywind/llm-wechat/blob/d3dc417934302be0267dc15516ea513e5ef35749/llmagent/llmapi/llm.py"
    ],
    "model": [
      "qwen"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 0,
    "stars": -1
  },
  {
    "full_name": "MGzhou/modelscope-agent-with-local-llm",
    "name": "modelscope-agent-with-local-llm",
    "description": "本项目基于modelscope-agent-v0.3和 api-for-open-llm 或 llamacpp 组件共同实现了一个AI Agent，能够利用本地的大模型（LLM）实现使用自定义工具功能。使用了Qwen1.5大模型。",
    "html_url": [
      "https://github.com/MGzhou/modelscope-agent-with-local-llm/blob/48296560d38f76aaf2a41fbdaaf36d95e09f8f1c/modelscope_agent/tools/dashscope_tools/style_repaint.py"
    ],
    "model": [
      "qwen"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 5009,
    "stars": 17
  },
  {
    "full_name": "LATQAQ/LLM",
    "name": "LLM",
    "description": null,
    "html_url": [
      "https://github.com/LATQAQ/LLM/blob/3da8053817a3b0e7f88b9e5fb9b508444d671361/LLM-preprocess.py"
    ],
    "model": [
      "qwen"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 2241981,
    "stars": 0
  },
  {
    "full_name": "cbdb-project/processing-prompts-by-batch",
    "name": "processing-prompts-by-batch",
    "description": "This project provides a Python script to interact with multiple Large Language Models (LLMs) from various APIs. The script allows batch processing of prompts, splitting lengthy inputs into manageable chunks, and retrieving responses from the specified LLM.",
    "html_url": [
      "https://github.com/cbdb-project/processing-prompts-by-batch/blob/770c055aa027b2f0fa3b2246145fadbb0e9c7840/probat.py"
    ],
    "model": [
      "qwen"
    ],
    "language": [
      "python"
    ],
    "fork": false,
    "loc": 410,
    "stars": 5
  }
]